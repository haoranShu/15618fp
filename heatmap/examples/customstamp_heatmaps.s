GAS LISTING /tmp/ccKUqHDa.s 			page 1


   1              		.file	"customstamp_heatmaps.cpp"
   2              		.text
   3              	.Ltext0:
   4              		.section	.text.unlikely,"ax",@progbits
   5              		.align 2
   6              	.LCOLDB0:
   7              		.text
   8              	.LHOTB0:
   9              		.align 2
  10              		.p2align 4,,15
  11              		.section	.text.unlikely
  12              	.Ltext_cold0:
  13              		.text
  14              		.type	_ZZ4mainENUlfE_4_FUNEf, @function
  15              	_ZZ4mainENUlfE_4_FUNEf:
  16              	.LFB5507:
  17              		.file 1 "examples/customstamp_heatmaps.cpp"
   0:examples/customstamp_heatmaps.cpp **** /* heatmap - High performance heatmap creation in C.
   1:examples/customstamp_heatmaps.cpp ****  *
   2:examples/customstamp_heatmaps.cpp ****  * The MIT License (MIT)
   3:examples/customstamp_heatmaps.cpp ****  *
   4:examples/customstamp_heatmaps.cpp ****  * Copyright (c) 2013 Lucas Beyer
   5:examples/customstamp_heatmaps.cpp ****  *
   6:examples/customstamp_heatmaps.cpp ****  * Permission is hereby granted, free of charge, to any person obtaining a copy of
   7:examples/customstamp_heatmaps.cpp ****  * this software and associated documentation files (the "Software"), to deal in
   8:examples/customstamp_heatmaps.cpp ****  * the Software without restriction, including without limitation the rights to
   9:examples/customstamp_heatmaps.cpp ****  * use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of
  10:examples/customstamp_heatmaps.cpp ****  * the Software, and to permit persons to whom the Software is furnished to do so,
  11:examples/customstamp_heatmaps.cpp ****  * subject to the following conditions:
  12:examples/customstamp_heatmaps.cpp ****  *
  13:examples/customstamp_heatmaps.cpp ****  * The above copyright notice and this permission notice shall be included in all
  14:examples/customstamp_heatmaps.cpp ****  * copies or substantial portions of the Software.
  15:examples/customstamp_heatmaps.cpp ****  *
  16:examples/customstamp_heatmaps.cpp ****  * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
  17:examples/customstamp_heatmaps.cpp ****  * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS
  18:examples/customstamp_heatmaps.cpp ****  * FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR
  19:examples/customstamp_heatmaps.cpp ****  * COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER
  20:examples/customstamp_heatmaps.cpp ****  * IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN
  21:examples/customstamp_heatmaps.cpp ****  * CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  22:examples/customstamp_heatmaps.cpp ****  */
  23:examples/customstamp_heatmaps.cpp **** 
  24:examples/customstamp_heatmaps.cpp **** #include <algorithm>
  25:examples/customstamp_heatmaps.cpp **** #include <iostream>
  26:examples/customstamp_heatmaps.cpp **** #include <iomanip>
  27:examples/customstamp_heatmaps.cpp **** #include <random>
  28:examples/customstamp_heatmaps.cpp **** #include <vector>
  29:examples/customstamp_heatmaps.cpp **** #include <cmath>
  30:examples/customstamp_heatmaps.cpp **** #include <array>
  31:examples/customstamp_heatmaps.cpp **** 
  32:examples/customstamp_heatmaps.cpp **** #include "lodepng.h"
  33:examples/customstamp_heatmaps.cpp **** #include "heatmap.h"
  34:examples/customstamp_heatmaps.cpp **** #include "colorschemes/gray.h"
  35:examples/customstamp_heatmaps.cpp **** 
  36:examples/customstamp_heatmaps.cpp **** using namespace std;
  37:examples/customstamp_heatmaps.cpp **** 
  38:examples/customstamp_heatmaps.cpp **** int main(int argc, char* argv[])
  39:examples/customstamp_heatmaps.cpp **** {
GAS LISTING /tmp/ccKUqHDa.s 			page 2


  40:examples/customstamp_heatmaps.cpp ****     if(argc != 2) {
  41:examples/customstamp_heatmaps.cpp ****         cerr << "Invalid number of arguments!" << endl;
  42:examples/customstamp_heatmaps.cpp ****         cout << "Usage:" << endl;
  43:examples/customstamp_heatmaps.cpp ****         cout << "  " << argv[0] << " RADIUS" << endl;
  44:examples/customstamp_heatmaps.cpp ****         cout << endl;
  45:examples/customstamp_heatmaps.cpp ****         cout << "  Will generate some stamps of given RADIUS and render" << endl;
  46:examples/customstamp_heatmaps.cpp ****         cout << "  them next to eachother into `stamps.png`." << endl;
  47:examples/customstamp_heatmaps.cpp **** 
  48:examples/customstamp_heatmaps.cpp ****         return 1;
  49:examples/customstamp_heatmaps.cpp ****     }
  50:examples/customstamp_heatmaps.cpp **** 
  51:examples/customstamp_heatmaps.cpp ****     const size_t r = atoi(argv[1]), d = 2*r+1;
  52:examples/customstamp_heatmaps.cpp **** 
  53:examples/customstamp_heatmaps.cpp ****     vector<float> rhomboidal(d*d, 0.0f);
  54:examples/customstamp_heatmaps.cpp ****     for(long y = 0 ; y < (int)d ; ++y) {
  55:examples/customstamp_heatmaps.cpp ****         for(long x = 0 ; x < (int)d ; ++x) {
  56:examples/customstamp_heatmaps.cpp ****             rhomboidal[y*d+x] = 1.0f - min(1.0f, (float)(abs(x-(long)r)+abs(y-(long)r))/(r+1));
  57:examples/customstamp_heatmaps.cpp ****         }
  58:examples/customstamp_heatmaps.cpp ****     }
  59:examples/customstamp_heatmaps.cpp **** 
  60:examples/customstamp_heatmaps.cpp ****     heatmap_stamp_t* stamps[] = {
  61:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen(r),
  62:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return d*d*d*d*d*d;}),
  18              		.loc 1 63 0
  19              		.cfi_startproc
  20              	.LVL0:
  21              	.LBB1820:
  22              	.LBB1821:
  23              		.loc 1 63 0
  24 0000 0F28C8   		movaps	%xmm0, %xmm1
  25 0003 F30F59C8 		mulss	%xmm0, %xmm1
  26 0007 F30F59C8 		mulss	%xmm0, %xmm1
  27 000b F30F59C8 		mulss	%xmm0, %xmm1
  28 000f F30F59C8 		mulss	%xmm0, %xmm1
  29 0013 F30F59C1 		mulss	%xmm1, %xmm0
  30              	.LVL1:
  31              	.LBE1821:
  32              	.LBE1820:
  33 0017 C3       		ret
  34              		.cfi_endproc
  35              	.LFE5507:
  36              		.size	_ZZ4mainENUlfE_4_FUNEf, .-_ZZ4mainENUlfE_4_FUNEf
  37              		.section	.text.unlikely
  38              	.LCOLDE0:
  39              		.text
  40              	.LHOTE0:
  41              		.section	.text.unlikely
  42              		.align 2
  43              	.LCOLDB1:
  44              		.text
  45              	.LHOTB1:
  46              		.align 2
  47 0018 0F1F8400 		.p2align 4,,15
  47      00000000 
  48              		.type	_ZZ4mainENUlfE1_4_FUNEf, @function
  49              	_ZZ4mainENUlfE1_4_FUNEf:
  50              	.LFB5513:
GAS LISTING /tmp/ccKUqHDa.s 			page 3


  63:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return sqrtf(d);}),
  64:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return sqrtf(sqrtf(sqrtf(d)));}),
  51              		.loc 1 65 0
  52              		.cfi_startproc
  53              	.LVL2:
  54 0020 4883EC08 		subq	$8, %rsp
  55              		.cfi_def_cfa_offset 16
  56              	.LBB1822:
  57              	.LBB1823:
  58              		.loc 1 65 0
  59 0024 F30F51D0 		sqrtss	%xmm0, %xmm2
  60 0028 0F2ED2   		ucomiss	%xmm2, %xmm2
  61 002b 7A17     		jp	.L11
  62              	.LVL3:
  63              	.L3:
  64 002d F30F51CA 		sqrtss	%xmm2, %xmm1
  65 0031 0F2EC9   		ucomiss	%xmm1, %xmm1
  66 0034 7A22     		jp	.L12
  67              	.L5:
  68 0036 F30F51C1 		sqrtss	%xmm1, %xmm0
  69 003a 0F2EC0   		ucomiss	%xmm0, %xmm0
  70 003d 7A0F     		jp	.L13
  71              	.L7:
  72              	.LBE1823:
  73              	.LBE1822:
  74 003f 4883C408 		addq	$8, %rsp
  75              		.cfi_remember_state
  76              		.cfi_def_cfa_offset 8
  77 0043 C3       		ret
  78              	.LVL4:
  79              	.L11:
  80              		.cfi_restore_state
  81              	.LBB1825:
  82              	.LBB1824:
  83 0044 E8000000 		call	sqrtf@PLT
  83      00
  84              	.LVL5:
  85 0049 0F28D0   		movaps	%xmm0, %xmm2
  86 004c EBDF     		jmp	.L3
  87              	.L13:
  88 004e 0F28C1   		movaps	%xmm1, %xmm0
  89 0051 E8000000 		call	sqrtf@PLT
  89      00
  90              	.LVL6:
  91 0056 EBE7     		jmp	.L7
  92              	.L12:
  93 0058 0F28C2   		movaps	%xmm2, %xmm0
  94 005b E8000000 		call	sqrtf@PLT
  94      00
  95              	.LVL7:
  96 0060 0F28C8   		movaps	%xmm0, %xmm1
  97 0063 EBD1     		jmp	.L5
  98              	.LBE1824:
  99              	.LBE1825:
 100              		.cfi_endproc
 101              	.LFE5513:
 102              		.size	_ZZ4mainENUlfE1_4_FUNEf, .-_ZZ4mainENUlfE1_4_FUNEf
GAS LISTING /tmp/ccKUqHDa.s 			page 4


 103              		.section	.text.unlikely
 104              	.LCOLDE1:
 105              		.text
 106              	.LHOTE1:
 107              		.section	.text.unlikely
 108              		.align 2
 109              	.LCOLDB2:
 110              		.text
 111              	.LHOTB2:
 112 0065 90       		.align 2
 113 0066 662E0F1F 		.p2align 4,,15
 113      84000000 
 113      0000
 114              		.type	_ZZ4mainENUlfE0_4_FUNEf, @function
 115              	_ZZ4mainENUlfE0_4_FUNEf:
 116              	.LFB5510:
  64:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return sqrtf(sqrtf(sqrtf(d)));}),
 117              		.loc 1 64 0
 118              		.cfi_startproc
 119              	.LVL8:
 120              	.LBB1826:
 121              	.LBB1827:
 122 0070 F30F51C8 		sqrtss	%xmm0, %xmm1
 123 0074 0F2EC9   		ucomiss	%xmm1, %xmm1
 124 0077 7A04     		jp	.L19
 125              	.LBE1827:
 126              	.LBE1826:
 127 0079 0F28C1   		movaps	%xmm1, %xmm0
 128              	.LVL9:
 129 007c C3       		ret
 130              	.LVL10:
 131              	.L19:
 132 007d 4883EC08 		subq	$8, %rsp
 133              		.cfi_def_cfa_offset 16
 134              	.LBB1829:
 135              	.LBB1828:
  64:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return sqrtf(sqrtf(sqrtf(d)));}),
 136              		.loc 1 64 0
 137 0081 E8000000 		call	sqrtf@PLT
 137      00
 138              	.LVL11:
 139              	.LBE1828:
 140              	.LBE1829:
 141 0086 4883C408 		addq	$8, %rsp
 142              		.cfi_def_cfa_offset 8
 143 008a C3       		ret
 144              		.cfi_endproc
 145              	.LFE5510:
 146              		.size	_ZZ4mainENUlfE0_4_FUNEf, .-_ZZ4mainENUlfE0_4_FUNEf
 147              		.section	.text.unlikely
 148              	.LCOLDE2:
 149              		.text
 150              	.LHOTE2:
 151              		.section	.text.unlikely
 152              		.align 2
 153              	.LCOLDB3:
 154              		.text
GAS LISTING /tmp/ccKUqHDa.s 			page 5


 155              	.LHOTB3:
 156 008b 90       		.align 2
 157 008c 0F1F4000 		.p2align 4,,15
 158              		.type	_ZNSs4_Rep10_M_disposeERKSaIcE.part.7, @function
 159              	_ZNSs4_Rep10_M_disposeERKSaIcE.part.7:
 160              	.LFB5946:
 161              		.file 2 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Components for manipulating sequences of characters -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** /** @file bits/basic_string.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****  *  Do not attempt to use it directly. @headername{string}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** //
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** // ISO C++ 14882: 21 Strings library
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** //
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #ifndef _BASIC_STRING_H
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #define _BASIC_STRING_H 1
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #pragma GCC system_header
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #include <ext/atomicity.h>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #include <debug/debug.h>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if __cplusplus >= 201103L
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #include <initializer_list>
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** namespace std _GLIBCXX_VISIBILITY(default)
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** {
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   /**
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @class basic_string basic_string.h <string>
GAS LISTING /tmp/ccKUqHDa.s 			page 6


  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @brief  Managing sequences of characters and character-like objects.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @ingroup strings
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @ingroup sequences
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @tparam _CharT  Type of character
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @tparam _Traits  Traits for character type, defaults to
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *                   char_traits<_CharT>.
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_CharT>.
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  <a href="tables.html#66">reversible container</a>, and a
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  <a href="tables.html#67">sequence</a>.  Of the
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  <a href="tables.html#68">optional sequence requirements</a>, only
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @c push_back, @c at, and @c %array access are supported.
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @doctodo
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Documentation?  What's that?
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Nathan Myers <ncm@cantrip.org>.
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  A string looks like this:
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @code
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *                                        [_Rep]
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *                                        _M_length
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *   [basic_string<char_type>]            _M_capacity
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *   _M_dataplus                          _M_refcount
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *   _M_p ---------------->               unnamed array of char_type
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  @endcode
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Where the _M_p points to the first character in the string, and
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  you cast it to a pointer-to-_Rep and subtract 1 to get a
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  pointer to the header.
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  This approach has the enormous advantage that a string object
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  requires only one allocation.  All the ugliness is confined
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  within a single %pair of inline functions, which each compile to
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  a single @a add instruction: _Rep::_M_data(), and
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  string::_M_rep(); and the allocation function which gets a
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  block of raw bytes and with room enough and constructs a _Rep
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  object at the front.
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  The reason you want _M_data pointing to the character %array and
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  not the _Rep is so that the debugger can see the string
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  contents. (Probably we should add a non-inline member to get
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  the _Rep for the debugger to use, so users can check the actual
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  string length.)
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  Note that the _Rep object is a POD so that you can have a
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  static <em>empty string</em> _Rep object already @a constructed before
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  static constructors have run.  The reference-count encoding is
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  chosen so that a 0 indicates one reference, so you never try to
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  destroy the empty-string _Rep object.
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  All but the last paragraph is considered pretty conventional
GAS LISTING /tmp/ccKUqHDa.s 			page 7


 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****    *  for a C++ string implementation.
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   */
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   // 21.3  Template class basic_string
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****   template<typename _CharT, typename _Traits, typename _Alloc>
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     class basic_string
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     {
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _Alloc::template rebind<_CharT>::other _CharT_alloc_type;
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Types:
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     public:
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef _Traits					    traits_type;
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _Traits::char_type		    value_type;
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef _Alloc					    allocator_type;
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::size_type	    size_type;
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::difference_type   difference_type;
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::reference	    reference;
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_reference   const_reference;
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::pointer	    pointer;
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef typename _CharT_alloc_type::const_pointer	    const_pointer;
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<pointer, basic_string>  iterator;
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, basic_string>
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****                                                             const_iterator;
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef std::reverse_iterator<const_iterator>	const_reverse_iterator;
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       typedef std::reverse_iterator<iterator>		    reverse_iterator;
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     private:
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // _Rep: string representation
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   Invariants:
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   1. String really contains _M_length + 1 characters: due to 21.3.4
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      must be kept null-terminated.
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   2. _M_capacity >= _M_length
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      Allocated memory is always (_M_capacity + 1) * sizeof(_CharT).
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   3. _M_refcount has three states:
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      -1: leaked, one reference, no ref-copies allowed, non-const.
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //       0: one reference, non-const.
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //     n>0: n + 1 references, operations require a lock, const.
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //   4. All fields==0 is an empty string, given the extra storage
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      beyond-the-end for a null terminator; thus, the shared
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       //      empty string representation needs no constructor.
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       struct _Rep_base
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       {
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	size_type		_M_length;
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	size_type		_M_capacity;
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_Atomic_word		_M_refcount;
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       };
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       struct _Rep : _Rep_base
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       {
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// Types:
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	typedef typename _Alloc::template rebind<char>::other _Raw_bytes_alloc;
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// (Public) Data members:
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// The maximum number of individual char_type elements of an
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// individual string is determined by _S_max_size. This is the
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// value that will be returned by max_size().  (Whereas npos
GAS LISTING /tmp/ccKUqHDa.s 			page 8


 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// is the maximum number of bytes the allocator can allocate.)
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// If one was to divvy up the theoretical largest size string,
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// with a terminating character and m _CharT elements, it'd
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// look like this:
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// npos = sizeof(_Rep) + (m * sizeof(_CharT)) + sizeof(_CharT)
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// Solving for m:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// m = ((npos - sizeof(_Rep))/sizeof(CharT)) - 1
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// In addition, this implementation quarters this amount.
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	static const size_type	_S_max_size;
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	static const _CharT	_S_terminal;
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// The following storage is init'd to 0 by the linker, resulting
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         // (carefully) in an empty string with one reference.
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         static size_type _S_empty_rep_storage[];
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         static _Rep&
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         _S_empty_rep() _GLIBCXX_NOEXCEPT
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { 
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  // NB: Mild hack to avoid strict-aliasing warnings.  Note that
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  // _S_empty_rep_storage is never modified and the punning should
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  // be reasonably safe in this case.
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  void* __p = reinterpret_cast<void*>(&_S_empty_rep_storage);
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  return *reinterpret_cast<_Rep*>(__p);
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         bool
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_is_leaked() const _GLIBCXX_NOEXCEPT
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { return this->_M_refcount < 0; }
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         bool
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_is_shared() const _GLIBCXX_NOEXCEPT
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { return this->_M_refcount > 0; }
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         void
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_set_leaked() _GLIBCXX_NOEXCEPT
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { this->_M_refcount = -1; }
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         void
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_set_sharable() _GLIBCXX_NOEXCEPT
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****         { this->_M_refcount = 0; }
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	void
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_set_length_and_sharable(size_type __n) _GLIBCXX_NOEXCEPT
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    {
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      this->_M_set_sharable();  // One reference.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      this->_M_length = __n;
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      traits_type::assign(this->_M_refdata()[__n], _S_terminal);
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      // grrr. (per 21.3.4)
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      // You cannot leave those LWG people alone for a second.
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    }
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
GAS LISTING /tmp/ccKUqHDa.s 			page 9


 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_refdata() throw()
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{ return reinterpret_cast<_CharT*>(this + 1); }
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_grab(const _Alloc& __alloc1, const _Alloc& __alloc2)
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  return (!_M_is_leaked() && __alloc1 == __alloc2)
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	          ? _M_refcopy() : _M_clone(__alloc1);
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	// Create & Destroy
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	static _Rep*
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_S_create(size_type, size_type, const _Alloc&);
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	void
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_dispose(const _Alloc& __a) _GLIBCXX_NOEXCEPT
 162              		.loc 2 237 0
 163              		.cfi_startproc
 164              	.LVL12:
 165              	.LBB1830:
 166              	.LBB1831:
 167              		.file 3 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Support for atomic operations -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Copyright (C) 2004-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** /** @file ext/atomicity.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****  *  This file is a GNU extension to the Standard C++ Library.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #ifndef _GLIBCXX_ATOMICITY_H
  29:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #define _GLIBCXX_ATOMICITY_H	1
  30:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  31:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #pragma GCC system_header
  32:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #include <bits/c++config.h>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #include <bits/gthr.h>
GAS LISTING /tmp/ccKUqHDa.s 			page 10


  35:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #include <bits/atomic_word.h>
  36:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  38:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** {
  39:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  40:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // Functions for portable atomic access.
  42:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // To abstract locking primitives across all thread policies, use:
  43:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // __exchange_and_add_dispatch
  44:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   // __atomic_add_dispatch
  45:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #ifdef _GLIBCXX_ATOMIC_BUILTINS
  46:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline _Atomic_word 
  47:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add(volatile _Atomic_word* __mem, int __val)
  48:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline void
  51:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __atomic_add(volatile _Atomic_word* __mem, int __val)
  52:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
  53:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #else
  54:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   _Atomic_word
  55:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __attribute__ ((__unused__))
  56:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add(volatile _Atomic_word*, int) throw ();
  57:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   void
  59:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __attribute__ ((__unused__))
  60:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __atomic_add(volatile _Atomic_word*, int) throw ();
  61:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #endif
  62:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  63:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline _Atomic_word
  64:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add_single(_Atomic_word* __mem, int __val)
  65:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     _Atomic_word __result = *__mem;
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     *__mem += __val;
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     return __result;
  69:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   }
  70:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  71:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline void
  72:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __atomic_add_single(_Atomic_word* __mem, int __val)
  73:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { *__mem += __val; }
  74:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** 
  75:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   static inline _Atomic_word
  76:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __attribute__ ((__unused__))
  77:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   __exchange_and_add_dispatch(_Atomic_word* __mem, int __val)
  78:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   {
  79:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h **** #ifdef __GTHREADS
  80:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     if (__gthread_active_p())
 168              		.loc 3 81 0
 169 0090 48833D00 		cmpq	$0, _ZL28__gthrw___pthread_key_createPjPFvPvE@GOTPCREL(%rip)
 169      00000000 
 170 0098 7416     		je	.L21
 171              	.LVL13:
 172              	.LBB1832:
 173              	.LBB1833:
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****   { return __atomic_fetch_add(__mem, __val, __ATOMIC_ACQ_REL); }
 174              		.loc 3 49 0
 175 009a B8FFFFFF 		movl	$-1, %eax
 175      FF
GAS LISTING /tmp/ccKUqHDa.s 			page 11


 176 009f F00FC147 		lock; xaddl	%eax, 16(%rdi)
 176      10
 177              	.LBE1833:
 178              	.LBE1832:
 179              	.LBE1831:
 180              	.LBE1830:
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    {
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      // Be race-detector-friendly.  For more info see bits/c++config.
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      _GLIBCXX_SYNCHRONIZATION_HAPPENS_BEFORE(&this->_M_refcount);
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	      if (__gnu_cxx::__exchange_and_add_dispatch(&this->_M_refcount,
 181              		.loc 2 245 0
 182 00a4 85C0     		testl	%eax, %eax
 183 00a6 7E15     		jle	.L24
 184              	.LVL14:
 185              	.L20:
 186 00a8 F3C3     		rep; ret
 187 00aa 660F1F44 		.p2align 4,,10
 187      0000
 188              		.p2align 3
 189              	.L21:
 190              	.LVL15:
 191              	.LBB1840:
 192              	.LBB1838:
 193              	.LBB1834:
 194              	.LBB1835:
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     _Atomic_word __result = *__mem;
 195              		.loc 3 67 0
 196 00b0 8B4710   		movl	16(%rdi), %eax
 197              	.LVL16:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     *__mem += __val;
 198              		.loc 3 68 0
 199 00b3 8D50FF   		leal	-1(%rax), %edx
 200              	.LBE1835:
 201              	.LBE1834:
 202              	.LBE1838:
 203              	.LBE1840:
 204              		.loc 2 245 0
 205 00b6 85C0     		testl	%eax, %eax
 206              	.LBB1841:
 207              	.LBB1839:
 208              	.LBB1837:
 209              	.LBB1836:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/atomicity.h ****     *__mem += __val;
 210              		.loc 3 68 0
 211 00b8 895710   		movl	%edx, 16(%rdi)
 212              	.LBE1836:
 213              	.LBE1837:
 214              	.LBE1839:
 215              	.LBE1841:
 216              		.loc 2 245 0
 217 00bb 7FEB     		jg	.L20
 218              	.LVL17:
 219              	.L24:
GAS LISTING /tmp/ccKUqHDa.s 			page 12


 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 							 -1) <= 0)
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		{
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		  _GLIBCXX_SYNCHRONIZATION_HAPPENS_AFTER(&this->_M_refcount);
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		  _M_destroy(__a);
 220              		.loc 2 249 0
 221 00bd E9000000 		jmp	_ZNSs4_Rep10_M_destroyERKSaIcE@PLT
 221      00
 222              	.LVL18:
 223              		.cfi_endproc
 224              	.LFE5946:
 225              		.size	_ZNSs4_Rep10_M_disposeERKSaIcE.part.7, .-_ZNSs4_Rep10_M_disposeERKSaIcE.part.7
 226              		.section	.text.unlikely
 227              	.LCOLDE3:
 228              		.text
 229              	.LHOTE3:
 230              		.section	.text.unlikely._ZNSt6vectorIhSaIhEEC2EmRKS0_,"axG",@progbits,_ZNSt6vectorIhSaIhEEC5EmRKS0
 231              		.align 2
 232              	.LCOLDB4:
 233              		.section	.text._ZNSt6vectorIhSaIhEEC2EmRKS0_,"axG",@progbits,_ZNSt6vectorIhSaIhEEC5EmRKS0_,comdat
 234              	.LHOTB4:
 235              		.align 2
 236              		.p2align 4,,15
 237              		.weak	_ZNSt6vectorIhSaIhEEC2EmRKS0_
 238              		.type	_ZNSt6vectorIhSaIhEEC2EmRKS0_, @function
 239              	_ZNSt6vectorIhSaIhEEC2EmRKS0_:
 240              	.LFB5607:
 241              		.file 4 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Vector implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
GAS LISTING /tmp/ccKUqHDa.s 			page 13


  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Copyright (c) 1996
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * representations about the suitability of this  software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** /** @file bits/stl_vector.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  *  Do not attempt to use it directly. @headername{vector}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #ifndef _STL_VECTOR_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #define _STL_VECTOR_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <bits/stl_iterator_base_funcs.h>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <bits/functexcept.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <bits/concept_check.h>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #include <initializer_list>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** namespace std _GLIBCXX_VISIBILITY(default)
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** {
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** _GLIBCXX_BEGIN_NAMESPACE_CONTAINER
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   /// See bits/stl_deque.h's _Deque_base for an explanation.
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc>
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     struct _Vector_base
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     {
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Alloc>::template
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         rebind<_Tp>::other _Tp_alloc_type;
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename __gnu_cxx::__alloc_traits<_Tp_alloc_type>::pointer
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        	pointer;
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       struct _Vector_impl 
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : public _Tp_alloc_type
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	pointer _M_start;
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	pointer _M_finish;
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	pointer _M_end_of_storage;
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Vector_impl()
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(), _M_start(0), _M_finish(0), _M_end_of_storage(0)
GAS LISTING /tmp/ccKUqHDa.s 			page 14


  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{ }
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type const& __a) _GLIBCXX_NOEXCEPT
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{ }
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Vector_impl(_Tp_alloc_type&& __a) noexcept
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(std::move(__a)),
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_start(0), _M_finish(0), _M_end_of_storage(0)
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{ }
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	void _M_swap_data(_Vector_impl& __x) _GLIBCXX_NOEXCEPT
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	{
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::swap(_M_start, __x._M_start);
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::swap(_M_finish, __x._M_finish);
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::swap(_M_end_of_storage, __x._M_end_of_storage);
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       };
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Alloc allocator_type;
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Tp_alloc_type&
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_get_Tp_allocator() _GLIBCXX_NOEXCEPT
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *static_cast<_Tp_alloc_type*>(&this->_M_impl); }
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const _Tp_alloc_type&
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_get_Tp_allocator() const _GLIBCXX_NOEXCEPT
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *static_cast<const _Tp_alloc_type*>(&this->_M_impl); }
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       allocator_type
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       get_allocator() const _GLIBCXX_NOEXCEPT
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return allocator_type(_M_get_Tp_allocator()); }
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base()
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl() { }
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(__a) { }
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(size_t __n)
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl()
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_create_storage(__n); }
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(size_t __n, const allocator_type& __a)
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(__a)
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_create_storage(__n); }
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(_Tp_alloc_type&& __a) noexcept
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(std::move(__a)) { }
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x) noexcept
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(std::move(__x._M_get_Tp_allocator()))
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->_M_impl._M_swap_data(__x._M_impl); }
GAS LISTING /tmp/ccKUqHDa.s 			page 15


 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_base(_Vector_base&& __x, const allocator_type& __a)
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _M_impl(__a)
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__x.get_allocator() == __a)
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_swap_data(__x._M_impl);
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  {
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    size_t __n = __x._M_impl._M_finish - __x._M_impl._M_start;
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    _M_create_storage(__n);
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  }
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       ~_Vector_base() _GLIBCXX_NOEXCEPT
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_deallocate(this->_M_impl._M_start, this->_M_impl._M_end_of_storage
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Vector_impl _M_impl;
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       pointer
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_allocate(size_t __n)
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : 0;
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_deallocate(pointer __p, size_t __n)
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type> _Tr;
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _Tr::deallocate(_M_impl, __p, __n);
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     private:
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_create_storage(size_t __n)
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     };
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   /**
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @brief A standard container which offers fixed time access to
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  individual elements in any order.
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @ingroup sequences
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @tparam _Tp  Type of element.
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  @tparam _Alloc  Allocator type, defaults to allocator<_Tp>.
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  Meets the requirements of a <a href="tables.html#65">container</a>, a
GAS LISTING /tmp/ccKUqHDa.s 			page 16


 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  <a href="tables.html#66">reversible container</a>, and a
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  <a href="tables.html#67">sequence</a>, including the
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  <a href="tables.html#68">optional sequence requirements</a> with the
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  %exception of @c push_front and @c pop_front.
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  In some terminology a %vector can be described as a dynamic
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  C-style array, it offers fast and efficient access to individual
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  elements in any order and saves the user from worrying about
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  memory and size allocation.  Subscripting ( @c [] ) access is
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****    *  also provided as with C-style arrays.
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   */
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****   template<typename _Tp, typename _Alloc = std::allocator<_Tp> >
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     class vector : protected _Vector_base<_Tp, _Alloc>
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     {
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Concept requirements.
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc::value_type                _Alloc_value_type;
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       __glibcxx_class_requires(_Tp, _SGIAssignableConcept)
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       __glibcxx_class_requires2(_Tp, _Alloc_value_type, _SameTypeConcept)
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Vector_base<_Tp, _Alloc>			 _Base;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Base::_Tp_alloc_type		 _Tp_alloc_type;
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef __gnu_cxx::__alloc_traits<_Tp_alloc_type>  _Alloc_traits;
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Tp					 value_type;
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Base::pointer                    pointer;
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_pointer      const_pointer;
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc_traits::reference          reference;
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef typename _Alloc_traits::const_reference    const_reference;
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<pointer, vector> iterator;
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef __gnu_cxx::__normal_iterator<const_pointer, vector>
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator;
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef std::reverse_iterator<const_iterator>  const_reverse_iterator;
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef std::reverse_iterator<iterator>		 reverse_iterator;
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef size_t					 size_type;
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef ptrdiff_t					 difference_type;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       typedef _Alloc                        		 allocator_type;
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     protected:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_allocate;
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_deallocate;
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_impl;
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::_M_get_Tp_allocator;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // [23.2.4.1] construct/copy/destroy
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // (assign() and get_allocator() are also listed in this section)
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector()
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       noexcept(is_nothrow_default_constructible<_Alloc>::value)
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base() { }
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 17


 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with no elements.
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator object.
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       explicit
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(const allocator_type& __a) _GLIBCXX_NOEXCEPT
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__a) { }
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with default constructed elements.
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n default
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  constructed elements.
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       explicit
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(size_type __n, const allocator_type& __a = allocator_type())
 242              		.loc 4 277 0
 243              		.cfi_startproc
 244              	.LVL19:
 245 0000 55       		pushq	%rbp
 246              		.cfi_def_cfa_offset 16
 247              		.cfi_offset 6, -16
 248 0001 53       		pushq	%rbx
 249              		.cfi_def_cfa_offset 24
 250              		.cfi_offset 3, -24
 251 0002 4889FB   		movq	%rdi, %rbx
 252 0005 4889F5   		movq	%rsi, %rbp
 253 0008 4883EC08 		subq	$8, %rsp
 254              		.cfi_def_cfa_offset 32
 255              	.LBB1842:
 256              	.LBB1843:
 257              	.LBB1844:
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Tp_alloc_type(__a), _M_start(0), _M_finish(0), _M_end_of_storage(0)
 258              		.loc 4 91 0
 259 000c 48C70700 		movq	$0, (%rdi)
 259      000000
 260 0013 48C74708 		movq	$0, 8(%rdi)
 260      00000000 
 261 001b 48C74710 		movq	$0, 16(%rdi)
 261      00000000 
 262              	.LVL20:
 263              	.LBE1844:
 264              	.LBE1843:
 265              	.LBB1845:
 266              	.LBB1846:
 267              	.LBB1847:
 268              	.LBB1848:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : 0;
 269              		.loc 4 170 0
 270 0023 31FF     		xorl	%edi, %edi
 271              	.LVL21:
 272 0025 4885F6   		testq	%rsi, %rsi
 273 0028 740B     		je	.L26
 274              	.LVL22:
GAS LISTING /tmp/ccKUqHDa.s 			page 18


 275              	.LBB1849:
 276              	.LBB1850:
 277              	.LBB1851:
 278              		.file 5 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Allocator that wraps operator new -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** /** @file ext/new_allocator.h
  25:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****  *  This file is a GNU extension to the Standard C++ Library.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #ifndef _NEW_ALLOCATOR_H
  29:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #define _NEW_ALLOCATOR_H 1
  30:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  31:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <bits/c++config.h>
  32:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <new>
  33:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <bits/functexcept.h>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <bits/move.h>
  35:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #if __cplusplus >= 201103L
  36:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #include <type_traits>
  37:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #endif
  38:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** namespace __gnu_cxx _GLIBCXX_VISIBILITY(default)
  40:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** {
  41:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  43:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   using std::size_t;
  44:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   using std::ptrdiff_t;
  45:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  46:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   /**
  47:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  @brief  An allocator that uses global new, as per [20.4].
  48:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  @ingroup allocators
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *
  50:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  This is precisely the allocator defined in the C++ Standard. 
  51:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *    - all allocation calls operator new
  52:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *    - all deallocation calls operator delete
GAS LISTING /tmp/ccKUqHDa.s 			page 19


  53:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *
  54:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    *  @tparam  _Tp  Type of allocated object.
  55:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****    */
  56:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****   template<typename _Tp>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****     class new_allocator
  58:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****     {
  59:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****     public:
  60:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef size_t     size_type;
  61:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef ptrdiff_t  difference_type;
  62:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef _Tp*       pointer;
  63:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef const _Tp* const_pointer;
  64:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef _Tp&       reference;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef const _Tp& const_reference;
  66:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef _Tp        value_type;
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       template<typename _Tp1>
  69:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****         struct rebind
  70:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****         { typedef new_allocator<_Tp1> other; };
  71:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  72:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #if __cplusplus >= 201103L
  73:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
  74:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // 2103. propagate_on_container_move_assignment
  75:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       typedef std::true_type propagate_on_container_move_assignment;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** #endif
  77:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  79:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       new_allocator(const new_allocator&) _GLIBCXX_USE_NOEXCEPT { }
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  82:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       template<typename _Tp1>
  83:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****         new_allocator(const new_allocator<_Tp1>&) _GLIBCXX_USE_NOEXCEPT { }
  84:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  85:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       ~new_allocator() _GLIBCXX_USE_NOEXCEPT { }
  86:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  87:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       pointer
  88:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       address(reference __x) const _GLIBCXX_NOEXCEPT
  89:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { return std::__addressof(__x); }
  90:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  91:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       const_pointer
  92:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       address(const_reference __x) const _GLIBCXX_NOEXCEPT
  93:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { return std::__addressof(__x); }
  94:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
  95:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // NB: __n is permitted to be 0.  The C++ standard says nothing
  96:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // about what the return value is when __n == 0.
  97:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       pointer
  98:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       allocate(size_type __n, const void* = 0)
  99:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	if (__n > this->max_size())
 101:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 102:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
 103:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 279              		.loc 5 104 0
 280 002a 4889F7   		movq	%rsi, %rdi
 281 002d E8000000 		call	_Znwm@PLT
 281      00
 282              	.LVL23:
 283 0032 4889C7   		movq	%rax, %rdi
GAS LISTING /tmp/ccKUqHDa.s 			page 20


 284              	.LVL24:
 285              	.L26:
 286              	.LBE1851:
 287              	.LBE1850:
 288              	.LBE1849:
 289              	.LBE1848:
 290              	.LBE1847:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 291              		.loc 4 187 0
 292 0035 488D042F 		leaq	(%rdi,%rbp), %rax
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_start = this->_M_allocate(__n);
 293              		.loc 4 185 0
 294 0039 48893B   		movq	%rdi, (%rbx)
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_start;
 295              		.loc 4 186 0
 296 003c 48897B08 		movq	%rdi, 8(%rbx)
 297              	.LBE1846:
 298              	.LBE1845:
 299              	.LBE1842:
 300              	.LBB1854:
 301              	.LBB1855:
 302              	.LBB1856:
 303              	.LBB1857:
 304              	.LBB1858:
 305              	.LBB1859:
 306              	.LBB1860:
 307              	.LBB1861:
 308              	.LBB1862:
 309              	.LBB1863:
 310              	.LBB1864:
 311              		.file 6 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Core algorithmic facilities -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
GAS LISTING /tmp/ccKUqHDa.s 			page 21


  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Copyright (c) 1996-1998
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** /** @file bits/stl_algobase.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #ifndef _STL_ALGOBASE_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _STL_ALGOBASE_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/c++config.h>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/functexcept.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/cpp_type_traits.h>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <ext/type_traits.h>
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <ext/numeric_traits.h>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_pair.h>
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_iterator_base_types.h>
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_iterator_base_funcs.h>
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/stl_iterator.h>
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/concept_check.h>
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <debug/debug.h>
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/move.h> // For std::swap and _GLIBCXX_MOVE
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #include <bits/predefined_ops.h>
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** namespace std _GLIBCXX_VISIBILITY(default)
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** {
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus < 201103L
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // See http://gcc.gnu.org/ml/libstdc++/2004-08/msg00167.html: in a
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // nutshell, we are partially implementing the resolution of DR 187,
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // when it's safe, i.e., the value_types are equal.
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _BoolType>
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __iter_swap
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
GAS LISTING /tmp/ccKUqHDa.s 			page 22


  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static void
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           typedef typename iterator_traits<_ForwardIterator1>::value_type
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****             _ValueType1;
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           _ValueType1 __tmp = _GLIBCXX_MOVE(*__a);
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           *__a = _GLIBCXX_MOVE(*__b);
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           *__b = _GLIBCXX_MOVE(__tmp);
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __iter_swap<true>
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _ForwardIterator1, typename _ForwardIterator2>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static void 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****           swap(*__a, *__b);
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         }
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Swaps the contents of two iterators.
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  An iterator.
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another iterator.
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   Nothing.
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This function swaps the values pointed to by two iterators, not the
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  iterators themselves.
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline void
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     iter_swap(_ForwardIterator1 __a, _ForwardIterator2 __b)
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus < 201103L
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::value_type
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ValueType1;
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::value_type
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ValueType2;
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType1,
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ValueType2>)
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<_ValueType2,
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ValueType1>)
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator1>::reference
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ReferenceType1;
GAS LISTING /tmp/ccKUqHDa.s 			page 23


 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_ForwardIterator2>::reference
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	_ReferenceType2;
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       std::__iter_swap<__are_same<_ValueType1, _ValueType2>::__value
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	&& __are_same<_ValueType1&, _ReferenceType1>::__value
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	&& __are_same<_ValueType2&, _ReferenceType2>::__value>::
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	iter_swap(__a, __b);
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #else
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       swap(*__a, *__b);
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Swap the elements of two sequences.
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first1  A forward iterator.
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last1   A forward iterator.
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first2  A forward iterator.
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   An iterator equal to @p first2+(last1-first1).
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Swaps each element in the range @p [first1,last1) with the
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  corresponding element in the range @p [first2,(last1-first1)).
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  The ranges must not overlap.
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     _ForwardIterator2
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     swap_ranges(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		_ForwardIterator2 __first2)
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator1>)
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				  _ForwardIterator2>)
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	std::iter_swap(__first1, __first2);
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __first2;
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  preprocessor macro.
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp>
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b)
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
GAS LISTING /tmp/ccKUqHDa.s 			page 24


 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return __b < __a ? __b : __a;
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__b < __a)
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This is the simple classic generic implementation.  It will work on
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  temporary expressions, since they are only evaluated once, unlike a
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  preprocessor macro.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp>
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b)
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return  __a < __b ? __b : __a;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__a < __b)
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The lesser of the parameters.
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     min(const _Tp& __a, const _Tp& __b, _Compare __comp)
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return __comp(__b, __a) ? __b : __a;
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__comp(__b, __a))
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief This does what you think it does.
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup sorting_algorithms
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __a  A thing of arbitrary type.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __b  Another thing of arbitrary type.
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __comp  A @link comparison_functors comparison functor@endlink.
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   The greater of the parameters.
GAS LISTING /tmp/ccKUqHDa.s 			page 25


 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This will work on temporary expressions, since they are only evaluated
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  once, unlike a preprocessor macro.
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp, typename _Compare>
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline const _Tp&
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     max(const _Tp& __a, const _Tp& __b, _Compare __comp)
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       //return __comp(__a, __b) ? __b : __a;
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__comp(__a, __b))
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	return __b;
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return __a;
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // If _Iterator is a __normal_iterator return its base (a plain pointer,
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // normally) otherwise return it untouched.  See copy, fill, ... 
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct _Niter_base
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_normal_iterator<_Iterator>::__value>
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { };
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename _Niter_base<_Iterator>::iterator_type
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __niter_base(_Iterator __it)
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { return std::_Niter_base<_Iterator>::_S_base(__it); }
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // Likewise, for move_iterator.
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct _Miter_base
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     : _Iter_base<_Iterator, __is_move_iterator<_Iterator>::__value>
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { };
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Iterator>
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename _Miter_base<_Iterator>::iterator_type
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __miter_base(_Iterator __it)
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     { return std::_Miter_base<_Iterator>::_S_base(__it); }
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // All of these auxiliary structs serve two purposes.  (1) Replace
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // calls to copy with memmove whenever possible.  (Memmove, not memcpy,
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // because the input and output ranges are permitted to overlap.)
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // (2) If we're using random access iterators, then write the loop as
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // a for loop with an explicit count.
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool, bool, typename>
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *__result = *__first;
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
GAS LISTING /tmp/ccKUqHDa.s 			page 26


 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Category>
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<true, false, _Category>
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (; __first != __last; ++__result, ++__first)
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *__result = std::move(*__first);
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<false, false, random_access_iterator_tag>
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    {
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      *__result = *__first;
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__first;
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__result;
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    }
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<true, false, random_access_iterator_tag>
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _II, typename _OI>
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _OI
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(_II __first, _II __last, _OI __result)
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         { 
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typedef typename iterator_traits<_II>::difference_type _Distance;
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for(_Distance __n = __last - __first; __n > 0; --__n)
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    {
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      *__result = std::move(*__first);
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__first;
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      ++__result;
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    }
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove>
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move<_IsMove, true, random_access_iterator_tag>
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _Tp>
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _Tp*
GAS LISTING /tmp/ccKUqHDa.s 			page 27


 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_m(const _Tp* __first, const _Tp* __last, _Tp* __result)
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  static_assert( is_copy_assignable<_Tp>::value,
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                 "type is not assignable" );
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result, __first, sizeof(_Tp) * _Num);
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result + _Num;
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a(_II __first, _II __last, _OI __result)
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::value_type _ValueTypeI;
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_OI>::value_type _ValueTypeO;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_II>::iterator_category _Category;
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueTypeI)
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_II>::__value
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_OI>::__value
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 			     && __are_same<_ValueTypeI, _ValueTypeO>::__value);
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move<_IsMove, __simple,
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                      _Category>::__copy_m(__first, __last, __result);
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // Helpers for streambuf iterators (either istream or ostream).
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // NB: avoid including <iosfwd>, relatively large.
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _CharT>
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct char_traits;
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     class istreambuf_iterator;
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _CharT, typename _Traits>
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     class ostreambuf_iterator;
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(_CharT*, _CharT*,
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value, 
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     ostreambuf_iterator<_CharT, char_traits<_CharT> > >::__type
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(const _CharT*, const _CharT*,
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   ostreambuf_iterator<_CharT, char_traits<_CharT> >);
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _CharT>
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     typename __gnu_cxx::__enable_if<__is_char<_CharT>::__value,
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				    _CharT*>::__type
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(istreambuf_iterator<_CharT, char_traits<_CharT> >,
GAS LISTING /tmp/ccKUqHDa.s 			page 28


 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   istreambuf_iterator<_CharT, char_traits<_CharT> >, _CharT*);
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _II, typename _OI>
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_a2(_II __first, _II __last, _OI __result)
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return _OI(std::__copy_move_a<_IsMove>(std::__niter_base(__first),
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 					     std::__niter_base(__last),
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 					     std::__niter_base(__result)));
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result + (first - last)
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  [first,last); the copy_backward function should be used instead.
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  within [first,last).
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     copy(_II __first, _II __last, _OI __result)
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return (std::__copy_move_a2<__is_move_iterator<_II>::__value>
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	       __result));
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  An input iterator.
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   An input iterator.
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result An output iterator.
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result + (first - last)
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).  Result may not be contained within
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  [first,last); the move_backward function should be used instead.
GAS LISTING /tmp/ccKUqHDa.s 			page 29


 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Note that the end of the output range is permitted to be contained
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  within [first,last).
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _II, typename _OI>
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _OI
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     move(_II __first, _II __last, _OI __result)
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_InputIteratorConcept<_II>)
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OI,
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_II>::value_type>)
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move_a2<true>(std::__miter_base(__first),
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 				       std::__miter_base(__last), __result);
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::move(_Tp, _Up, _Vp)
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #else
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE3(_Tp, _Up, _Vp) std::copy(_Tp, _Up, _Vp)
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool, bool, typename>
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  while (__first != __last)
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = *--__last;
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Category>
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, _Category>
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  while (__first != __last)
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<false, false, random_access_iterator_tag>
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
GAS LISTING /tmp/ccKUqHDa.s 			page 30


 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = *--__last;
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<>
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<true, false, random_access_iterator_tag>
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _BI1, typename _BI2>
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _BI2
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(_BI1 __first, _BI1 __last, _BI2 __result)
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  typename iterator_traits<_BI1>::difference_type __n;
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  for (__n = __last - __first; __n > 0; --__n)
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    *--__result = std::move(*--__last);
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result;
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove>
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     struct __copy_move_backward<_IsMove, true, random_access_iterator_tag>
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       template<typename _Tp>
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         static _Tp*
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         __copy_move_b(const _Tp* __first, const _Tp* __last, _Tp* __result)
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****         {
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  // trivial types can have deleted assignment
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  static_assert( is_copy_assignable<_Tp>::value,
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                 "type is not assignable" );
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  const ptrdiff_t _Num = __last - __first;
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  if (_Num)
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    __builtin_memmove(__result - _Num, __first, sizeof(_Tp) * _Num);
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	  return __result - _Num;
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	}
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     };
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_backward_a(_BI1 __first, _BI1 __last, _BI2 __result)
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::value_type _ValueType1;
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI2>::value_type _ValueType2;
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       typedef typename iterator_traits<_BI1>::iterator_category _Category;
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const bool __simple = (__is_trivial(_ValueType1)
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_BI1>::__value
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                     && __is_pointer<_BI2>::__value
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 			     && __are_same<_ValueType1, _ValueType2>::__value);
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move_backward<_IsMove, __simple,
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	                               _Category>::__copy_move_b(__first,
GAS LISTING /tmp/ccKUqHDa.s 			page 31


 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 								 __last,
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 								 __result);
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<bool _IsMove, typename _BI1, typename _BI2>
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __copy_move_backward_a2(_BI1 __first, _BI1 __last, _BI2 __result)
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return _BI2(std::__copy_move_backward_a<_IsMove>
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		  (std::__niter_base(__first), std::__niter_base(__last),
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 		   std::__niter_base(__result)));
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Copies the range [first,last) into result.
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result - (first - last)
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  The function has the same effect as copy, but starts at the end of the
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use copy instead.  Note
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     copy_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return (std::__copy_move_backward_a2<__is_move_iterator<_BI1>::__value>
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	      (std::__miter_base(__first), std::__miter_base(__last),
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	       __result));
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #if __cplusplus >= 201103L
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   /**
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @brief Moves the range [first,last) into result.
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @ingroup mutating_algorithms
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __first  A bidirectional iterator.
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __last   A bidirectional iterator.
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @param  __result A bidirectional iterator.
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  @return   result - (first - last)
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
GAS LISTING /tmp/ccKUqHDa.s 			page 32


 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  The function has the same effect as move, but starts at the end of the
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  range and works its way to the start, returning the start of the result.
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  This inline function will boil down to a call to @c memmove whenever
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  loop count will be known (and therefore a candidate for compiler
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  optimizations such as unrolling).
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  Result may not be in the range (first,last].  Use move instead.  Note
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****    *  that the start of the output range may overlap [first,last).
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   */
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _BI1, typename _BI2>
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline _BI2
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     move_backward(_BI1 __first, _BI1 __last, _BI2 __result)
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       // concept requirements
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<_BI1>)
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<_BI2>)
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_function_requires(_ConvertibleConcept<
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI1>::value_type,
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	    typename iterator_traits<_BI2>::value_type>)
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __glibcxx_requires_valid_range(__first, __last);
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       return std::__copy_move_backward_a2<true>(std::__miter_base(__first),
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 						std::__miter_base(__last),
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 						__result);
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::move_backward(_Tp, _Up, _Vp)
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #else
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #define _GLIBCXX_MOVE_BACKWARD3(_Tp, _Up, _Vp) std::copy_backward(_Tp, _Up, _Vp)
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** #endif
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<!__is_scalar<_Tp>::__value, void>::__type
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****  	     const _Tp& __value)
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __value;
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _ForwardIterator, typename _Tp>
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_scalar<_Tp>::__value, void>::__type
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_a(_ForwardIterator __first, _ForwardIterator __last,
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	     const _Tp& __value)
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const _Tp __tmp = __value;
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       for (; __first != __last; ++__first)
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 	*__first = __tmp;
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     }
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h **** 
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   // Specialization: for char types we can use memset.
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****   template<typename _Tp>
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     inline typename
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __gnu_cxx::__enable_if<__is_byte<_Tp>::__value, void>::__type
GAS LISTING /tmp/ccKUqHDa.s 			page 33


 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     __fill_a(_Tp* __first, _Tp* __last, const _Tp& __c)
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****     {
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       const _Tp __tmp = __c;
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       __builtin_memset(__first, static_cast<unsigned char>(__tmp),
 312              		.loc 6 714 0
 313 0040 4889EA   		movq	%rbp, %rdx
 314 0043 31F6     		xorl	%esi, %esi
 315              	.LBE1864:
 316              	.LBE1863:
 317              	.LBE1862:
 318              	.LBE1861:
 319              	.LBE1860:
 320              	.LBE1859:
 321              	.LBE1858:
 322              	.LBE1857:
 323              	.LBE1856:
 324              	.LBE1855:
 325              	.LBE1854:
 326              	.LBB1875:
 327              	.LBB1853:
 328              	.LBB1852:
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
 329              		.loc 4 187 0
 330 0045 48894310 		movq	%rax, 16(%rbx)
 331              	.LVL25:
 332              	.LBE1852:
 333              	.LBE1853:
 334              	.LBE1875:
 335              	.LBB1876:
 336              	.LBB1874:
 337              	.LBB1873:
 338              	.LBB1872:
 339              	.LBB1871:
 340              	.LBB1870:
 341              	.LBB1869:
 342              	.LBB1868:
 343              	.LBB1867:
 344              	.LBB1866:
 345              	.LBB1865:
 346              		.loc 6 714 0
 347 0049 E8000000 		call	memset@PLT
 347      00
 348              	.LVL26:
 349              	.LBE1865:
 350              	.LBE1866:
 351              	.LBE1867:
 352              	.LBE1868:
 353              	.LBE1869:
 354              	.LBE1870:
 355              	.LBE1871:
 356              	.LBE1872:
 357              	.LBE1873:
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__n, __a)
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
GAS LISTING /tmp/ccKUqHDa.s 			page 34


 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value,
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__n, __a)
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Creates a %vector with copies of an exemplar element.
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  The number of elements to initially create.
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __value  An element to copy.
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This constructor fills the %vector with @a __n copies of @a __value.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       explicit
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(size_type __n, const value_type& __value = value_type(),
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__n, __a)
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_initialize(__n, __value); }
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector copy constructor.
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The newly-created %vector uses a copy of the allocation
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  object used by @a __x.  All the elements of @a __x are copied,
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  but any extra memory in
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(const vector& __x)
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__x.size(),
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _Alloc_traits::_S_select_on_copy(__x._M_get_Tp_allocator()))
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector move constructor.
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The newly-created %vector contains the exact contents of @a __x.
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The contents of @a __x are a valid, but unspecified %vector.
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(vector&& __x) noexcept
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(std::move(__x)) { }
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Copy constructor with alternative allocator
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(const vector& __x, const allocator_type& __a)
GAS LISTING /tmp/ccKUqHDa.s 			page 35


 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__x.size(), __a)
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->_M_impl._M_finish =
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  std::__uninitialized_copy_a(__x.begin(), __x.end(),
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      this->_M_impl._M_start,
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Move constructor with alternative allocator
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(vector&& __rv, const allocator_type& __m)
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_always_equal())
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(std::move(__rv), __m)
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__rv.get_allocator() != __m)
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  {
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    this->_M_impl._M_finish =
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      std::__uninitialized_move_a(__rv.begin(), __rv.end(),
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					  this->_M_impl._M_start,
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    __rv.clear();
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  }
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Builds a %vector from an initializer list.
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements in the
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer_list @a __l.
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This will call the element type's copy constructor N times
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  (where N is @a __l.size()) and do no memory reallocation.
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector(initializer_list<value_type> __l,
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	     const allocator_type& __a = allocator_type())
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       : _Base(__a)
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_range_initialize(__l.begin(), __l.end(),
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			    random_access_iterator_tag());
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Builds a %vector from a range.
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last  An input iterator.
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __a  An allocator.
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Create a %vector consisting of copies of the elements from
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [first,last).
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  If the iterators are forward, bidirectional, or
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  random-access, then this will call the elements' copy
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  constructor N times (where N is distance(first,last)) and do
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  no memory reallocation.  But if only input iterators are
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used, then this will do at most 2N calls to the copy
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  constructor, and logN memory reallocations.
GAS LISTING /tmp/ccKUqHDa.s 			page 36


 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator,
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Base(__a)
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         { _M_initialize_dispatch(__first, __last, __false_type()); }
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         vector(_InputIterator __first, _InputIterator __last,
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       const allocator_type& __a = allocator_type())
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	: _Base(__a)
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_initialize_dispatch(__first, __last, _Integral());
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The dtor only erases the elements, and note that if the
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  elements themselves are pointers, the pointed-to memory is
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  not touched in any way.  Managing the pointer is the user's
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  responsibility.
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       ~vector() _GLIBCXX_NOEXCEPT
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { std::_Destroy(this->_M_impl._M_start, this->_M_impl._M_finish,
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      _M_get_Tp_allocator()); }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector assignment operator.
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  All the elements of @a __x are copied, but any extra memory in
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @a __x (for fast expansion) will not be copied.  Unlike the
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  copy constructor, the allocator object is not copied.
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector&
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator=(const vector& __x);
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector move assignment operator.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of identical element and allocator types.
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The contents of @a __x are moved into this %vector (without copying,
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  if the allocators permit it).
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @a __x is a valid, but unspecified %vector.
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector&
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator=(vector&& __x) noexcept(_Alloc_traits::_S_nothrow_move())
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         constexpr bool __move_storage =
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****           _Alloc_traits::_S_propagate_on_move_assign()
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****           || _Alloc_traits::_S_always_equal();
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_move_assign(std::move(__x),
GAS LISTING /tmp/ccKUqHDa.s 			page 37


 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****                        integral_constant<bool, __move_storage>());
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return *this;
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  %Vector list assignment operator.
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer list @a __l.
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       vector&
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator=(initializer_list<value_type> __l)
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->assign(__l.begin(), __l.end());
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return *this;
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Assigns a given value to a %vector.
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements to be assigned.
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __val  Value to be assigned.
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with @a __n copies of the given
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  value.  Note that the assignment completely changes the
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and that the resulting %vector's size is the same as
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the number of elements assigned.  Old data may be lost.
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       assign(size_type __n, const value_type& __val)
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_assign(__n, __val); }
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Assigns a range to a %vector.
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last   An input iterator.
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  range [__first,__last).
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator,
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         { _M_assign_dispatch(__first, __last, __false_type()); }
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
GAS LISTING /tmp/ccKUqHDa.s 			page 38


 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         assign(_InputIterator __first, _InputIterator __last)
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_assign_dispatch(__first, __last, _Integral());
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Assigns an initializer list to a %vector.
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function fills a %vector with copies of the elements in the
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer list @a __l.
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the assignment completely changes the %vector and
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that the resulting %vector's size is the same as the number
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  of elements assigned.  Old data may be lost.
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       assign(initializer_list<value_type> __l)
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { this->assign(__l.begin(), __l.end()); }
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Get a copy of the memory allocation object.
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       using _Base::get_allocator;
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // iterators
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write iterator that points to the first
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       begin() _GLIBCXX_NOEXCEPT
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_start); }
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       begin() const _GLIBCXX_NOEXCEPT
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write iterator that points one past the last
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element in the %vector.  Iteration is done in ordinary
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       end() _GLIBCXX_NOEXCEPT
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return iterator(this->_M_impl._M_finish); }
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 39


 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  ordinary element order.
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       end() const _GLIBCXX_NOEXCEPT
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to the
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  last element in the %vector.  Iteration is done in reverse
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reverse_iterator
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rbegin() _GLIBCXX_NOEXCEPT
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return reverse_iterator(end()); }
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  reverse element order.
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rbegin() const _GLIBCXX_NOEXCEPT
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reverse iterator that points to one
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  before the first element in the %vector.  Iteration is done
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  in reverse element order.
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reverse_iterator
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rend() _GLIBCXX_NOEXCEPT
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return reverse_iterator(begin()); }
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is done in reverse element order.
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       rend() const _GLIBCXX_NOEXCEPT
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points to the
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  first element in the %vector.  Iteration is done in ordinary
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element order.
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       cbegin() const noexcept
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_start); }
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) iterator that points one past
GAS LISTING /tmp/ccKUqHDa.s 			page 40


 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the last element in the %vector.  Iteration is done in
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  ordinary element order.
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_iterator
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       cend() const noexcept
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_iterator(this->_M_impl._M_finish); }
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to the last element in the %vector.  Iteration is done in
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  reverse element order.
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       crbegin() const noexcept
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(end()); }
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reverse iterator that points
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to one before the first element in the %vector.  Iteration
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is done in reverse element order.
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reverse_iterator
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       crend() const noexcept
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return const_reverse_iterator(begin()); }
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // [23.2.4.2] capacity
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**  Returns the number of elements in the %vector.  */
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size_type
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size() const _GLIBCXX_NOEXCEPT
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_finish - this->_M_impl._M_start); }
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**  Returns the size() of the largest possible %vector.  */
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size_type
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       max_size() const _GLIBCXX_NOEXCEPT
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _Alloc_traits::max_size(_M_get_Tp_allocator()); }
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  default constructed elements are appended.
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       resize(size_type __new_size)
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__new_size > size())
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_default_append(__new_size - size());
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else if (__new_size < size())
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
GAS LISTING /tmp/ccKUqHDa.s 			page 41


 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  given data.
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       resize(size_type __new_size, const value_type& __x)
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__new_size > size())
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else if (__new_size < size())
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Resizes the %vector to the specified number of elements.
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __new_size  Number of elements the %vector should contain.
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data with which new elements should be populated.
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will %resize the %vector to the specified
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number of elements.  If the number is smaller than the
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector's current size the %vector is truncated, otherwise
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the %vector is extended and new elements are populated with
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  given data.
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       resize(size_type __new_size, value_type __x = value_type())
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__new_size > size())
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  insert(end(), __new_size - size(), __x);
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else if (__new_size < size())
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_erase_at_end(this->_M_impl._M_start + __new_size);
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**  A non-binding request to reduce capacity() to size().  */
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       shrink_to_fit()
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_shrink_to_fit(); }
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns the total number of elements that the %vector can
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  hold before needing to allocate more memory.
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       size_type
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       capacity() const _GLIBCXX_NOEXCEPT
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return size_type(this->_M_impl._M_end_of_storage
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			 - this->_M_impl._M_start); }
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
GAS LISTING /tmp/ccKUqHDa.s 			page 42


 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns true if the %vector is empty.  (Thus begin() would
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  equal end().)
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       bool
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       empty() const _GLIBCXX_NOEXCEPT
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return begin() == end(); }
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Attempt to preallocate enough memory for specified number of
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *          elements.
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements required.
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @throw  std::length_error  If @a n exceeds @c max_size().
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function attempts to reserve enough memory for the
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector to hold the specified number of elements.  If the
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  number requested is more than max_size(), length_error is
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  thrown.
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The advantage of this function is that if optimal code is a
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  necessity and the user can determine the number of elements
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  that will be required, the user can reserve the memory in
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %advance, and thus prevent a possible reallocation of memory
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  and copying of %vector data.
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reserve(size_type __n);
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // element access
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  see at().)
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator[](size_type __n) _GLIBCXX_NOEXCEPT
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Subscript access to the data contained in the %vector.
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This operator allows for easy, array-style, data access.
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that data access with this operator is unchecked and
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  out_of_range lookups are not defined. (For checked lookups
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  see at().)
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       operator[](size_type __n) const _GLIBCXX_NOEXCEPT
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(this->_M_impl._M_start + __n); }
GAS LISTING /tmp/ccKUqHDa.s 			page 43


 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     protected:
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /// Safety check used only from at().
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_range_check(size_type __n) const
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__n >= this->size())
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  __throw_out_of_range_fmt(__N("vector::_M_range_check: __n "
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				       "(which is %zu) >= this->size() "
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				       "(which is %zu)"),
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				   __n, this->size());
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     public:
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read/write reference to data.
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       at(size_type __n)
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_range_check(__n);
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return (*this)[__n]; 
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Provides access to the data contained in the %vector.
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param __n The index of the element for which data should be
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  accessed.
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  Read-only (constant) reference to data.
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @throw  std::out_of_range  If @a __n is an invalid index.
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function provides for safer data access.  The parameter
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  is first checked that it is in the range of the vector.  The
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  function throws out_of_range if the check fails.
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       at(size_type __n) const
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_range_check(__n);
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return (*this)[__n];
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the first
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element of the %vector.
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       front() _GLIBCXX_NOEXCEPT
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *begin(); }
GAS LISTING /tmp/ccKUqHDa.s 			page 44


 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the first
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element of the %vector.
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       front() const _GLIBCXX_NOEXCEPT
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *begin(); }
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read/write reference to the data at the last
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element of the %vector.
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       reference
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       back() _GLIBCXX_NOEXCEPT
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(end() - 1); }
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Returns a read-only (constant) reference to the data at the
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  last element of the %vector.
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_reference
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       back() const _GLIBCXX_NOEXCEPT
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return *(end() - 1); }
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // DR 464. Suggestion for new member functions in standard containers.
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // data access
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *   Returns a pointer such that [data(), data() + size()) is a valid
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *   range.  For a non-empty %vector, data() == &front().
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _Tp*
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       pointer
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       data() _GLIBCXX_NOEXCEPT
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const _Tp*
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       const_pointer
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       data() const _GLIBCXX_NOEXCEPT
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_data_ptr(this->_M_impl._M_start); }
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // [23.2.4.3] modifiers
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Add data to the end of the %vector.
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be added.
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This is a typical stack operation.  The function creates an
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  element at the end of the %vector and assigns the given data
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  to it.  Due to the nature of a %vector this operation can be
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  done in constant time if the %vector has preallocated space
GAS LISTING /tmp/ccKUqHDa.s 			page 45


 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  available.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       push_back(const value_type& __x)
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (this->_M_impl._M_finish != this->_M_impl._M_end_of_storage)
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  {
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    _Alloc_traits::construct(this->_M_impl, this->_M_impl._M_finish,
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	                             __x);
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    ++this->_M_impl._M_finish;
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  }
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	else
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_emplace_back_aux(__x);
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_insert_aux(end(), __x);
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       push_back(value_type&& __x)
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { emplace_back(std::move(__x)); }
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename... _Args>
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         emplace_back(_Args&&... __args);
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Removes last element.
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This is a typical stack operation. It shrinks the %vector by one.
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that no data is returned, and if the last element's
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  data is needed, it should be retrieved before pop_back() is
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  called.
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       pop_back() _GLIBCXX_NOEXCEPT
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	--this->_M_impl._M_finish;
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Alloc_traits::destroy(this->_M_impl, this->_M_impl._M_finish);
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts an object in %vector before specified iterator.
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __args  Arguments.
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert an object of type T constructed
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  with T(std::forward<Args>(args)...) before the specified location.
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a %vector
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  and if it is frequently used the user should consider using
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  std::list.
GAS LISTING /tmp/ccKUqHDa.s 			page 46


 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename... _Args>
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         iterator
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         emplace(const_iterator __position, _Args&&... __args);
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used the user should consider using std::list.
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, const value_type& __x);
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts given value into %vector before specified iterator.
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a copy of the given value before
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used the user should consider using std::list.
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(iterator __position, const value_type& __x);
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts given rvalue into %vector before specified iterator.
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a copy of the given rvalue before
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the specified location.  Note that this kind of operation
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  could be expensive for a %vector and if it is frequently
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  used the user should consider using std::list.
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, value_type&& __x)
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return emplace(__position, std::move(__x)); }
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts an initializer_list into the %vector.
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __l  An initializer_list.
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert copies of the data in the 
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  initializer_list @a l into the %vector before the location
GAS LISTING /tmp/ccKUqHDa.s 			page 47


1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  specified by @a position.
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, initializer_list<value_type> __l)
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return this->insert(__position, __l.begin(), __l.end()); }
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(const_iterator __position, size_type __n, const value_type& __x)
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	difference_type __offset = __position - cbegin();
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_M_fill_insert(begin() + __offset, __n, __x);
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return begin() + __offset;
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a number of copies of given data into the %vector.
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __n  Number of elements to be inserted.
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  Data to be inserted.
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert a specified number of copies of
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the given data before the location specified by @a position.
1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       insert(iterator __position, size_type __n, const value_type& __x)
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_fill_insert(__position, __n, __x); }
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  A const_iterator into the %vector.
1079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
GAS LISTING /tmp/ccKUqHDa.s 			page 48


1080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator that points to the inserted data.
1082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  by @a pos.
1086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator,
1092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       typename = std::_RequireInputIter<_InputIterator>>
1093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         iterator
1094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         insert(const_iterator __position, _InputIterator __first,
1095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       _InputIterator __last)
1096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  difference_type __offset = __position - cbegin();
1098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_insert_dispatch(begin() + __offset,
1099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			     __first, __last, __false_type());
1100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  return begin() + __offset;
1101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Inserts a range into the %vector.
1105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  An iterator into the %vector.
1106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  An input iterator.
1107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last   An input iterator.
1108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will insert copies of the data in the range
1110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [__first,__last) into the %vector before the location specified
1111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  by @a pos.
1112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that this kind of operation could be expensive for a
1114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  %vector and if it is frequently used the user should
1115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  consider using std::list.
1116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
1118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         insert(iterator __position, _InputIterator __first,
1120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	       _InputIterator __last)
1121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  // Check whether it's an integral type.  If so, it's not an iterator.
1123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::__is_integer<_InputIterator>::__type _Integral;
1124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_insert_dispatch(__position, __first, __last, _Integral());
1125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Remove element at given position.
1130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __position  Iterator pointing to element to be erased.
1131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator pointing to the next element (or end()).
1132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will erase the element at the given position and thus
1134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  shorten the %vector by one.
1135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
GAS LISTING /tmp/ccKUqHDa.s 			page 49


1137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the element, and that if the element is itself a pointer,
1140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the pointed-to memory is not touched in any way.  Managing
1141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the pointer is the user's responsibility.
1142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(const_iterator __position)
1146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_erase(begin() + (__position - cbegin())); }
1147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(iterator __position)
1149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_erase(__position); }
1150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Remove a range of elements.
1154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __first  Iterator pointing to the first element to be erased.
1155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __last  Iterator pointing to one past the last element to be
1156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *                  erased.
1157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @return  An iterator pointing to the element pointed to by @a __last
1158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *           prior to erasing (or end()).
1159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This function will erase the elements in the range
1161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  [__first,__last) and shorten the %vector accordingly.
1162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note This operation could be expensive and if it is
1164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  frequently used the user should consider using std::list.
1165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  The user is also cautioned that this function only erases
1166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the elements, and that if the elements themselves are
1167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  pointers, the pointed-to memory is not touched in any way.
1168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Managing the pointer is the user's responsibility.
1169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       iterator
1171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(const_iterator __first, const_iterator __last)
1173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	const auto __beg = begin();
1175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	const auto __cbeg = cbegin();
1176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return _M_erase(__beg + (__first - __cbeg), __beg + (__last - __cbeg));
1177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       erase(iterator __first, iterator __last)
1180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { return _M_erase(__first, __last); }
1181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @brief  Swaps data with another %vector.
1185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  @param  __x  A %vector of the same element and allocator types.
1186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *
1187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  This exchanges the elements between two vectors in constant time.
1188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  (Three pointers, so it should be quite fast.)
1189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Note that the global std::swap() function is specialized such that
1190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  std::swap(v1,v2) will feed to this function.
1191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       swap(vector& __x)
GAS LISTING /tmp/ccKUqHDa.s 			page 50


1194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       noexcept(_Alloc_traits::_S_nothrow_swap())
1196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_swap_data(__x._M_impl);
1199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	_Alloc_traits::_S_on_swap(_M_get_Tp_allocator(),
1200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	                          __x._M_get_Tp_allocator());
1201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Erases all the elements.  Note that this function only erases the
1205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  elements, and that if the elements themselves are pointers, the
1206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  pointed-to memory is not touched in any way.  Managing the pointer is
1207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  the user's responsibility.
1208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       clear() _GLIBCXX_NOEXCEPT
1211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_erase_at_end(this->_M_impl._M_start); }
1212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****     protected:
1214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       /**
1215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  Memory expansion handler.  Uses the member allocation function to
1216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        *  obtain @a n bytes of memory, and then copies [first,last) into it.
1217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****        */
1218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _ForwardIterator>
1219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         pointer
1220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_allocate_and_copy(size_type __n,
1221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			     _ForwardIterator __first, _ForwardIterator __last)
1222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  pointer __result = this->_M_allocate(__n);
1224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  __try
1225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    {
1226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      std::__uninitialized_copy_a(__first, __last, __result,
1227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					  _M_get_Tp_allocator());
1228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      return __result;
1229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    }
1230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  __catch(...)
1231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    {
1232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      _M_deallocate(__result, __n);
1233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	      __throw_exception_again;
1234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    }
1235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Internal constructor functions follow.
1239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
1243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // 438. Ambiguity in the "do the right thing" clause
1244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _Integer>
1245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_initialize_dispatch(_Integer __n, _Integer __value, __true_type)
1247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_start = _M_allocate(static_cast<size_type>(__n));
1249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage =
1250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    this->_M_impl._M_start + static_cast<size_type>(__n);
GAS LISTING /tmp/ccKUqHDa.s 			page 51


1251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_fill_initialize(static_cast<size_type>(__n), __value);
1252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the range constructor to implement [23.1.1]/9
1255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
1256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_initialize_dispatch(_InputIterator __first, _InputIterator __last,
1258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			       __false_type)
1259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  typedef typename std::iterator_traits<_InputIterator>::
1261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    iterator_category _IterCategory;
1262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  _M_range_initialize(__first, __last, _IterCategory());
1263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _InputIterator>
1267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_range_initialize(_InputIterator __first,
1269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			    _InputIterator __last, std::input_iterator_tag)
1270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  for (; __first != __last; ++__first)
1272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    emplace_back(*__first);
1274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #else
1275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    push_back(*__first);
1276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #endif
1277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the second initialize_dispatch above
1280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       template<typename _ForwardIterator>
1281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         void
1282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         _M_range_initialize(_ForwardIterator __first,
1283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 			    _ForwardIterator __last, std::forward_iterator_tag)
1284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****         {
1285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  const size_type __n = std::distance(__first, __last);
1286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_start = this->_M_allocate(__n);
1287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_end_of_storage = this->_M_impl._M_start + __n;
1288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	  this->_M_impl._M_finish =
1289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	    std::__uninitialized_copy_a(__first, __last,
1290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					this->_M_impl._M_start,
1291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					_M_get_Tp_allocator());
1292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	}
1293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the first initialize_dispatch above and by the
1295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // vector(n,value,a) constructor.
1296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_fill_initialize(size_type __n, const value_type& __value)
1298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	std::__uninitialized_fill_n_a(this->_M_impl._M_start, __n, __value, 
1300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 				      _M_get_Tp_allocator());
1301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
1302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       }
1303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 
1304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** #if __cplusplus >= 201103L
1305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       // Called by the vector(n) constructor.
1306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       void
1307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       _M_default_initialize(size_type __n)
GAS LISTING /tmp/ccKUqHDa.s 			page 52


1308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       {
1309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	std::__uninitialized_default_n_a(this->_M_impl._M_start, __n, 
1310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 					 _M_get_Tp_allocator());
1311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	this->_M_impl._M_finish = this->_M_impl._M_end_of_storage;
 358              		.loc 4 1312 0
 359 004e 488B4310 		movq	16(%rbx), %rax
 360 0052 48894308 		movq	%rax, 8(%rbx)
 361              	.LBE1874:
 362              	.LBE1876:
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h ****       { _M_default_initialize(__n); }
 363              		.loc 4 279 0
 364 0056 4883C408 		addq	$8, %rsp
 365              		.cfi_def_cfa_offset 24
 366 005a 5B       		popq	%rbx
 367              		.cfi_def_cfa_offset 16
 368              	.LVL27:
 369 005b 5D       		popq	%rbp
 370              		.cfi_def_cfa_offset 8
 371              	.LVL28:
 372 005c C3       		ret
 373              		.cfi_endproc
 374              	.LFE5607:
 375              		.size	_ZNSt6vectorIhSaIhEEC2EmRKS0_, .-_ZNSt6vectorIhSaIhEEC2EmRKS0_
 376              		.section	.text.unlikely._ZNSt6vectorIhSaIhEEC2EmRKS0_,"axG",@progbits,_ZNSt6vectorIhSaIhEEC5EmRKS0
 377              	.LCOLDE4:
 378              		.section	.text._ZNSt6vectorIhSaIhEEC2EmRKS0_,"axG",@progbits,_ZNSt6vectorIhSaIhEEC5EmRKS0_,comdat
 379              	.LHOTE4:
 380              		.weak	_ZNSt6vectorIhSaIhEEC1EmRKS0_
 381              		.set	_ZNSt6vectorIhSaIhEEC1EmRKS0_,_ZNSt6vectorIhSaIhEEC2EmRKS0_
 382              		.section	.text.unlikely._ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm3
 383              	.LCOLDB7:
 384              		.section	.text._ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31EL
 385              	.LHOTB7:
 386              		.p2align 4,,15
 387              		.weak	_ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm25674836
 388              		.type	_ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm25674836
 389              	_ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11
 390              	.LFB5868:
 391              		.file 7 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // random number generation (out of line) -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // Copyright (C) 2009-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // 3.1, as published by the Free Software Foundation.
GAS LISTING /tmp/ccKUqHDa.s 			page 53


  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** /** @file bits/random.tcc
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****  *  This is an internal header file, included by other library headers.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****  *  Do not attempt to use it directly. @headername{random}
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****  */
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #ifndef _RANDOM_TCC
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #define _RANDOM_TCC 1
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #include <numeric> // std::accumulate and std::partial_sum
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** namespace std _GLIBCXX_VISIBILITY(default)
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** {
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /*
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * (Further) implementation-space details.
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   namespace __detail
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   {
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // General case for x = (ax + c) mod m -- use Schrage's algorithm
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // to avoid integer overflow.
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     //
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // Preconditions:  a > 0, m > 0.
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     //
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     // Note: only works correctly for __m % __a < __m / __a.
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _Tp
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _Mod<_Tp, __m, __a, __c, false, true>::
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __calc(_Tp __x)
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__a == 1)
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x %= __m;
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    static const _Tp __q = __m / __a;
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    static const _Tp __r = __m % __a;
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _Tp __t1 = __a * (__x % __q);
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _Tp __t2 = __r * (__x / __q);
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__t1 >= __t2)
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x = __t1 - __t2;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    else
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x = __m - __t2 + __t1;
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__c != 0)
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const _Tp __d = __m - __x;
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__d > __c)
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x += __c;
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    else
GAS LISTING /tmp/ccKUqHDa.s 			page 54


  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __x = __c - __d;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __x;
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _InputIterator, typename _OutputIterator,
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _Tp>
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _OutputIterator
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __normalize(_InputIterator __first, _InputIterator __last,
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  _OutputIterator __result, const _Tp& __factor)
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (; __first != __last; ++__first, ++__result)
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__result = *__first / __factor;
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __result;
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   _GLIBCXX_END_NAMESPACE_VERSION
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   } // namespace __detail
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::multiplier;
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::increment;
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::modulus;
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::default_seed;
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /**
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Seeds the LCR with integral value @p __s, adjusted so that the
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * ring identity is never a member of the convergence set.
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     linear_congruential_engine<_UIntType, __a, __c, __m>::
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed(result_type __s)
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if ((__detail::__mod<_UIntType, __m>(__c) == 0)
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  && (__detail::__mod<_UIntType, __m>(__s) == 0))
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_x = 1;
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       else
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_x = __detail::__mod<_UIntType, __m>(__s);
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /**
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Seeds the LCR engine with a value generated by @p __q.
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
GAS LISTING /tmp/ccKUqHDa.s 			page 55


 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Sseq>
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename std::enable_if<std::is_class<_Sseq>::value>::type
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       linear_congruential_engine<_UIntType, __a, __c, __m>::
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       seed(_Sseq& __q)
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _UIntType __k0 = __m == 0 ? std::numeric_limits<_UIntType>::digits
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	                                : std::__lg(__m);
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _UIntType __k = (__k0 + 31) / 32;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	uint_least32_t __arr[__k + 3];
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__q.generate(__arr + 0, __arr + __k + 3);
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_UIntType __factor = 1u;
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_UIntType __sum = 0u;
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __j = 0; __j < __k; ++__j)
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __sum += __arr[__j + 3] * __factor;
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __factor *= __detail::_Shift<_UIntType, 32>::__value;
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	seed(__sum);
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m,
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const linear_congruential_engine<_UIntType,
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 						__a, __c, __m>& __lcr)
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__os.widen(' '));
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __lcr._M_x;
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m,
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       linear_congruential_engine<_UIntType, __a, __c, __m>& __lcr)
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec);
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __lcr._M_x;
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
GAS LISTING /tmp/ccKUqHDa.s 			page 56


 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::word_size;
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::state_size;
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::shift_size;
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::mask_bits;
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::xor_mask;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_u;
GAS LISTING /tmp/ccKUqHDa.s 			page 57


 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_d;
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_s;
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_b;
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_t;
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_c;
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::tempering_l;
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
GAS LISTING /tmp/ccKUqHDa.s 			page 58


 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****                                               initialization_multiplier;
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::default_seed;
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed(result_type __sd)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[0] = __detail::__mod<_UIntType,
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Shift<_UIntType, __w>::__value>(__sd);
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __x = _M_x[__i - 1];
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x *= __f;
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x += __detail::__mod<_UIntType, __n>(__i);
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __detail::_Shift<_UIntType, __w>::__value>(__x);
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p = state_size;
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType,
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __w, size_t __n, size_t __m, size_t __r,
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Sseq>
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename std::enable_if<std::is_class<_Sseq>::value>::type
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			      __s, __b, __t, __c, __l, __f>::
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       seed(_Sseq& __q)
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _UIntType __upper_mask = (~_UIntType()) << __r;
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __k = (__w + 31) / 32;
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	uint_least32_t __arr[__n * __k];
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__q.generate(__arr + 0, __arr + __n * __k);
GAS LISTING /tmp/ccKUqHDa.s 			page 59


 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	bool __zero = true;
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __i = 0; __i < state_size; ++__i)
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __factor = 1u;
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __sum = 0u;
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    for (size_t __j = 0; __j < __k; ++__j)
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__sum += __arr[__k * __i + __j] * __factor;
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__factor *= __detail::_Shift<_UIntType, 32>::__value;
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_x[__i] = __detail::__mod<_UIntType,
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __detail::_Shift<_UIntType, __w>::__value>(__sum);
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__zero)
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		if (__i == 0)
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    if ((_M_x[0] & __upper_mask) != 0u)
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      __zero = false;
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else if (_M_x[__i] != 0u)
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  __zero = false;
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         if (__zero)
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****           _M_x[0] = __detail::_Shift<_UIntType, __w - 1>::__value;
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_p = state_size;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     _M_gen_rand(void)
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _UIntType __upper_mask = (~_UIntType()) << __r;
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _UIntType __lower_mask = ~__upper_mask;
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < (__n - __m); ++__k)
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         {
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         }
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __y = ((_M_x[__k] & __upper_mask)
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
GAS LISTING /tmp/ccKUqHDa.s 			page 60


 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _UIntType __y = ((_M_x[__n - 1] & __upper_mask)
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       | (_M_x[0] & __lower_mask));
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       ^ ((__y & 0x01) ? __a : 0));
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p = 0;
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard(unsigned long long __z)
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       while (__z > state_size - _M_p)
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __z -= state_size - _M_p;
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_gen_rand();
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p += __z;
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f>
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::result_type
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     mersenne_twister_engine<_UIntType, __w, __n, __m, __r, __a, __u, __d,
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __s, __b, __t, __c, __l, __f>::
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Reload the vector - cost is O(n) amortized over n calls.
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_p >= state_size)
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_gen_rand();
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Calculate o(x(i)).
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       result_type __z = _M_x[_M_p++];
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z >> __u) & __d;
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z << __s) & __b;
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z << __t) & __c;
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z >> __l);
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __z;
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
GAS LISTING /tmp/ccKUqHDa.s 			page 61


 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f, typename _CharT, typename _Traits>
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const mersenne_twister_engine<_UIntType, __w, __n, __m,
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __x)
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __n; ++__i)
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __x._M_x[__i] << __space;
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x._M_p;
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w,
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   size_t __n, size_t __m, size_t __r,
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __b, size_t __t, _UIntType __c, size_t __l,
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   _UIntType __f, typename _CharT, typename _Traits>
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       mersenne_twister_engine<_UIntType, __w, __n, __m,
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __x)
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __n; ++__i)
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__is >> __x._M_x[__i];
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_p;
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::word_size;
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::short_lag;
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 62


 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::long_lag;
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr _UIntType
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::default_seed;
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed(result_type __value)
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::linear_congruential_engine<result_type, 40014u, 0u, 2147483563u>
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__lcg(__value == 0u ? default_seed : __value);
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __n = (__w + 31) / 32;
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < long_lag; ++__i)
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __sum = 0u;
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _UIntType __factor = 1u;
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  for (size_t __j = 0; __j < __n; ++__j)
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __sum += __detail::__mod<uint_least32_t,
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       __detail::_Shift<uint_least32_t, 32>::__value>
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 (__lcg()) * __factor;
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __factor *= __detail::_Shift<_UIntType, 32>::__value;
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __detail::_Shift<_UIntType, __w>::__value>(__sum);
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_carry = (_M_x[long_lag - 1] == 0) ? 1 : 0;
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p = 0;
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Sseq>
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename std::enable_if<std::is_class<_Sseq>::value>::type
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       seed(_Sseq& __q)
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __k = (__w + 31) / 32;
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	uint_least32_t __arr[__r * __k];
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__q.generate(__arr + 0, __arr + __r * __k);
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __i = 0; __i < long_lag; ++__i)
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __sum = 0u;
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _UIntType __factor = 1u;
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    for (size_t __j = 0; __j < __k; ++__j)
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__sum += __arr[__k * __i + __j] * __factor;
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__factor *= __detail::_Shift<_UIntType, 32>::__value;
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_x[__i] = __detail::__mod<_UIntType,
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __detail::_Shift<_UIntType, __w>::__value>(__sum);
GAS LISTING /tmp/ccKUqHDa.s 			page 63


 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_carry = (_M_x[long_lag - 1] == 0) ? 1 : 0;
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_p = 0;
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     result_type
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     subtract_with_carry_engine<_UIntType, __w, __s, __r>::
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Derive short lag index from current index.
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       long __ps = _M_p - short_lag;
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (__ps < 0)
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ps += long_lag;
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Calculate new x(i) without overflow or division.
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // NB: Thanks to the requirements for _UIntType, _M_x[_M_p] + _M_carry
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // cannot overflow.
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _UIntType __xi;
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_x[__ps] >= _M_x[_M_p] + _M_carry)
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __xi = _M_x[__ps] - _M_x[_M_p] - _M_carry;
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_carry = 0;
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       else
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __xi = (__detail::_Shift<_UIntType, __w>::__value
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  - _M_x[_M_p] - _M_carry + _M_x[__ps]);
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_carry = 1;
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[_M_p] = __xi;
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Adjust current index to loop around in ring buffer.
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (++_M_p >= long_lag)
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_p = 0;
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __xi;
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r,
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const subtract_with_carry_engine<_UIntType,
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 						__w, __s, __r>& __x)
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __r; ++__i)
GAS LISTING /tmp/ccKUqHDa.s 			page 64


 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __x._M_x[__i] << __space;
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x._M_carry << __space << __x._M_p;
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r,
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       subtract_with_carry_engine<_UIntType, __w, __s, __r>& __x)
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __istream_type;
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __r; ++__i)
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__is >> __x._M_x[__i];
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_carry;
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_p;
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::block_size;
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::used_block;
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename discard_block_engine<_RandomNumberEngine,
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   __p, __r>::result_type
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discard_block_engine<_RandomNumberEngine, __p, __r>::
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_n >= used_block)
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_b.discard(block_size - _M_n);
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_n = 0;
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       ++_M_n;
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return _M_b();
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r,
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
GAS LISTING /tmp/ccKUqHDa.s 			page 65


 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const discard_block_engine<_RandomNumberEngine,
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       __p, __r>& __x)
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.base() << __space << __x._M_n;
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __p, size_t __r,
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       discard_block_engine<_RandomNumberEngine, __p, __r>& __x)
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_b >> __x._M_n;
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename independent_bits_engine<_RandomNumberEngine, __w, _UIntType>::
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       result_type
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     independent_bits_engine<_RandomNumberEngine, __w, _UIntType>::
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename _RandomNumberEngine::result_type _Eresult_type;
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _Eresult_type __r
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	= (_M_b.max() - _M_b.min() < std::numeric_limits<_Eresult_type>::max()
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   ? _M_b.max() - _M_b.min() + 1 : 0);
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const unsigned __edig = std::numeric_limits<_Eresult_type>::digits;
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const unsigned __m = __r ? std::__lg(__r) : __edig;
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename std::common_type<_Eresult_type, result_type>::type
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ctype;
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const unsigned __cdig = std::numeric_limits<__ctype>::digits;
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       unsigned __n, __n0;
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __ctype __s0, __s1, __y0, __y1;
GAS LISTING /tmp/ccKUqHDa.s 			page 66


 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < 2; ++__i)
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __n = (__w + __m - 1) / __m + __i;
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __n0 = __n - __w % __n;
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const unsigned __w0 = __w / __n;  // __w0 <= __m
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __s0 = 0;
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __s1 = 0;
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  if (__w0 < __cdig)
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __s0 = __ctype(1) << __w0;
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __s1 = __s0 << 1;
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __y0 = 0;
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __y1 = 0;
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  if (__r)
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __y0 = __s0 * (__r / __s0);
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      if (__s1)
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__y1 = __s1 * (__r / __s1);
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      if (__r - __y0 <= __y0 / __n)
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		break;
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  else
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    break;
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       result_type __sum = 0;
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < __n0; ++__k)
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ctype __u;
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  do
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __u = _M_b() - _M_b.min();
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  while (__y0 && __u >= __y0);
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __sum = __s0 * __sum + (__s0 ? __u % __s0 : __u);
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = __n0; __k < __n; ++__k)
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ctype __u;
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  do
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __u = _M_b() - _M_b.min();
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  while (__y1 && __u >= __y1);
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __sum = __s1 * __sum + (__s1 ? __u % __s1 : __u);
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __sum;
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k>
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     constexpr size_t
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     shuffle_order_engine<_RandomNumberEngine, __k>::table_size;
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k>
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     typename shuffle_order_engine<_RandomNumberEngine, __k>::result_type
GAS LISTING /tmp/ccKUqHDa.s 			page 67


 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     shuffle_order_engine<_RandomNumberEngine, __k>::
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator()()
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       size_t __j = __k * ((_M_y - _M_b.min())
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			  / (_M_b.max() - _M_b.min() + 1.0L));
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_y = _M_v[__j];
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_v[__j] = _M_b();
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return _M_y;
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k,
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const shuffle_order_engine<_RandomNumberEngine, __k>& __x)
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::dec | __ios_base::fixed | __ios_base::left);
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.base();
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __k; ++__i)
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __space << __x._M_v[__i];
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __space << __x._M_y;
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomNumberEngine, size_t __k,
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       shuffle_order_engine<_RandomNumberEngine, __k>& __x)
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_b;
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __k; ++__i)
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__is >> __x._M_v[__i];
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __x._M_y;
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 68


 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename uniform_int_distribution<_IntType>::result_type
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       uniform_int_distribution<_IntType>::
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename _UniformRandomNumberGenerator::result_type
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _Gresult_type;
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename std::make_unsigned<result_type>::type __utype;
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename std::common_type<_Gresult_type, __utype>::type
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __uctype;
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngmin = __urng.min();
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngmax = __urng.max();
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngrange = __urngmax - __urngmin;
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urange
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  = __uctype(__param.b()) - __uctype(__param.a());
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__uctype __ret;
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // downscaling
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __uerange = __urange + 1; // __urange can be zero
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __scaling = __urngrange / __uerange;
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const __uctype __past = __uerange * __scaling;
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __ret = __uctype(__urng()) - __urngmin;
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__ret >= __past);
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret /= __scaling;
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else if (__urngrange < __urange)
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // upscaling
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    /*
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      Note that every value in [0, urange]
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      can be written uniquely as
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      (urngrange + 1) * high + low
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      where
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      high in [0, urange / (urngrange + 1)]
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      and
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      low in [0, urngrange].
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    */
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __uctype __tmp; // wraparound control
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		const __uctype __uerngrange = __urngrange + 1;
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__tmp = (__uerngrange * operator()
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 (__urng, param_type(0, __urange / __uerngrange)));
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__ret = __tmp + (__uctype(__urng()) - __urngmin);
GAS LISTING /tmp/ccKUqHDa.s 			page 69


 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__ret > __urange || __ret < __tmp);
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ret = __uctype(__urng()) - __urngmin;
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __ret + __param.a();
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       uniform_int_distribution<_IntType>::
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __param)
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename _UniformRandomNumberGenerator::result_type
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _Gresult_type;
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename std::make_unsigned<result_type>::type __utype;
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename std::common_type<_Gresult_type, __utype>::type
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __uctype;
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngmin = __urng.min();
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngmax = __urng.max();
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urngrange = __urngmax - __urngmin;
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const __uctype __urange
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  = __uctype(__param.b()) - __uctype(__param.a());
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__uctype __ret;
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__urngrange > __urange)
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__detail::_Power_of_2(__urngrange + 1)
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		&& __detail::_Power_of_2(__urange + 1))
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		while (__f != __t)
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __ret = __uctype(__urng()) - __urngmin;
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    *__f++ = (__ret & __urange) + __param.a();
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    else
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		// downscaling
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		const __uctype __uerange = __urange + 1; // __urange can be zero
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		const __uctype __scaling = __urngrange / __uerange;
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		const __uctype __past = __uerange * __scaling;
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		while (__f != __t)
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    do
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      __ret = __uctype(__urng()) - __urngmin;
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    while (__ret >= __past);
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    *__f++ = __ret / __scaling + __param.a();
GAS LISTING /tmp/ccKUqHDa.s 			page 70


 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else if (__urngrange < __urange)
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // upscaling
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    /*
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      Note that every value in [0, urange]
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      can be written uniquely as
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      (urngrange + 1) * high + low
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      where
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      high in [0, urange / (urngrange + 1)]
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      and
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      low in [0, urngrange].
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    */
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __uctype __tmp; // wraparound control
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__f != __t)
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		do
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const __uctype __uerngrange = __urngrange + 1;
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __tmp = (__uerngrange * operator()
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			     (__urng, param_type(0, __urange / __uerngrange)));
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __ret = __tmp + (__uctype(__urng()) - __urngmin);
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		while (__ret > __urange || __ret < __tmp);
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		*__f++ = __ret;
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  while (__f != __t)
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = __uctype(__urng()) - __urngmin + __param.a();
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const uniform_int_distribution<_IntType>& __x)
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.a() << __space << __x.b();
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
GAS LISTING /tmp/ccKUqHDa.s 			page 71


1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       uniform_int_distribution<_IntType>& __x)
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _IntType __a, __b;
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __a >> __b;
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename uniform_int_distribution<_IntType>::
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__a, __b));
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       uniform_real_distribution<_RealType>::
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __p)
1076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
1079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
1080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	auto __range = __p.b() - __p.a();
1081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
1082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = __aurng() * __range + __p.a();
1083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
1086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const uniform_real_distribution<_RealType>& __x)
1089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
1091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
1092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
1095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
1096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
1097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
1099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
1100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 72


1101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.a() << __space << __x.b();
1102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
1104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
1105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
1106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
1107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
1110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
1111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       uniform_real_distribution<_RealType>& __x)
1113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
1115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
1116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::skipws);
1119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __a, __b;
1121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __a >> __b;
1122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename uniform_real_distribution<_RealType>::
1123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__a, __b));
1124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
1126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
1127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _ForwardIterator,
1131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _UniformRandomNumberGenerator>
1132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
1133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::bernoulli_distribution::
1134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    _UniformRandomNumberGenerator& __urng,
1136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const param_type& __p)
1137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __detail::_Adaptor<_UniformRandomNumberGenerator, double>
1140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__aurng(__urng);
1141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       auto __limit = __p.p() * (__aurng.max() - __aurng.min());
1142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       while (__f != __t)
1144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	*__f++ = (__aurng() - __aurng.min()) < __limit;
1145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _CharT, typename _Traits>
1148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const bernoulli_distribution& __x)
1151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
1153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
1154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
1157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
GAS LISTING /tmp/ccKUqHDa.s 			page 73


1158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__os.widen(' '));
1160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
1161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.p();
1163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
1165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
1166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
1167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
1168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
1173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename geometric_distribution<_IntType>::result_type
1174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       geometric_distribution<_IntType>::
1175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
1176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
1177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	// About the epsilon thing see this thread:
1179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	// http://gcc.gnu.org/ml/gcc-patches/2006-10/msg00971.html
1180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __naf =
1181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  (1 - std::numeric_limits<double>::epsilon()) / 2;
1182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	// The largest _RealType convertible to _IntType.
1183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __thr =
1184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  std::numeric_limits<_IntType>::max() + __naf;
1185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
1186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
1187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	double __cand;
1189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	do
1190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __cand = std::floor(std::log(1.0 - __aurng()) / __param._M_log_1_p);
1191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__cand >= __thr);
1192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return result_type(__cand + __naf);
1194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
1198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
1199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
1200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       geometric_distribution<_IntType>::
1201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __param)
1204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	// About the epsilon thing see this thread:
1207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	// http://gcc.gnu.org/ml/gcc-patches/2006-10/msg00971.html
1208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __naf =
1209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  (1 - std::numeric_limits<double>::epsilon()) / 2;
1210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	// The largest _RealType convertible to _IntType.
1211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __thr =
1212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  std::numeric_limits<_IntType>::max() + __naf;
1213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
1214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
GAS LISTING /tmp/ccKUqHDa.s 			page 74


1215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
1217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
1218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    double __cand;
1219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
1220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __cand = std::floor(std::log(1.0 - __aurng())
1221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				  / __param._M_log_1_p);
1222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__cand >= __thr);
1223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = __cand + __naf;
1225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType,
1229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
1230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const geometric_distribution<_IntType>& __x)
1233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
1235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
1236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
1239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
1240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__os.widen(' '));
1242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
1243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.p();
1245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
1247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
1248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
1249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
1250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType,
1253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
1254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
1255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       geometric_distribution<_IntType>& __x)
1257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
1259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
1260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::skipws);
1263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       double __p;
1265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __p;
1266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename geometric_distribution<_IntType>::param_type(__p));
1267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
1269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
1270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 75


1272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   // This is Leger's algorithm, also in Devroye, Ch. X, Example 1.5.
1273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
1275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename negative_binomial_distribution<_IntType>::result_type
1276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       negative_binomial_distribution<_IntType>::
1277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng)
1278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __y = _M_gd(__urng);
1280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	// XXX Is the constructor too slow?
1282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	std::poisson_distribution<result_type> __poisson(__y);
1283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __poisson(__urng);
1284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
1288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename negative_binomial_distribution<_IntType>::result_type
1289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       negative_binomial_distribution<_IntType>::
1290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
1291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __p)
1292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename std::gamma_distribution<double>::param_type
1294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  param_type;
1295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	
1296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __y =
1297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_gd(__urng, param_type(__p.k(), (1.0 - __p.p()) / __p.p()));
1298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	std::poisson_distribution<result_type> __poisson(__y);
1300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __poisson(__urng);
1301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
1305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
1306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
1307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       negative_binomial_distribution<_IntType>::
1308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng)
1310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
1313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
1314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __y = _M_gd(__urng);
1315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // XXX Is the constructor too slow?
1317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    std::poisson_distribution<result_type> __poisson(__y);
1318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = __poisson(__urng);
1319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
1324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
1325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
1326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       negative_binomial_distribution<_IntType>::
1327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
GAS LISTING /tmp/ccKUqHDa.s 			page 76


1329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __p)
1330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typename std::gamma_distribution<result_type>::param_type
1333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __p2(__p.k(), (1.0 - __p.p()) / __p.p());
1334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
1336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
1337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __y = _M_gd(__urng, __p2);
1338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    std::poisson_distribution<result_type> __poisson(__y);
1340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = __poisson(__urng);
1341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
1345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const negative_binomial_distribution<_IntType>& __x)
1348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
1350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
1351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
1354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
1355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
1356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__os.widen(' '));
1358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
1359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.k() << __space << __x.p()
1361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   << __space << __x._M_gd;
1362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
1364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
1365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
1366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
1367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
1370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
1371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       negative_binomial_distribution<_IntType>& __x)
1373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
1375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
1376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::skipws);
1379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _IntType __k;
1381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       double __p;
1382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __k >> __p >> __x._M_gd;
1383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename negative_binomial_distribution<_IntType>::
1384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__k, __p));
1385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 77


1386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
1387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
1388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
1393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     poisson_distribution<_IntType>::param_type::
1394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     _M_initialize()
1395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #if _GLIBCXX_USE_C99_MATH_TR1
1397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_mean >= 12)
1398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
1399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __m = std::floor(_M_mean);
1400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_lm_thr = std::log(_M_mean);
1401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_lfm = std::lgamma(__m + 1);
1402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_sm = std::sqrt(__m);
1403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __pi_4 = 0.7853981633974483096156608458198757L;
1405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __dx = std::sqrt(2 * __m * std::log(32 * __m
1406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 							      / __pi_4));
1407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_d = std::round(std::max(6.0, std::min(__m, __dx)));
1408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __cx = 2 * __m + _M_d;
1409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_scx = std::sqrt(__cx / 2);
1410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_1cx = 1 / __cx;
1411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_c2b = std::sqrt(__pi_4 * __cx) * std::exp(_M_1cx);
1413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_cb = 2 * __cx * std::exp(-_M_d * _M_1cx * (1 + _M_d / 2))
1414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		/ _M_d;
1415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
1416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       else
1417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #endif
1418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_lm_thr = std::exp(-_M_mean);
1419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /**
1422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * A rejection algorithm when mean >= 12 and a simple method based
1423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * upon the multiplication of uniform random variates otherwise.
1424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * NB: The former is available only if _GLIBCXX_USE_C99_MATH_TR1
1425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * is defined.
1426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    *
1427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Reference:
1428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Devroye, L. Non-Uniform Random Variates Generation. Springer-Verlag,
1429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * New York, 1986, Ch. X, Sects. 3.3 & 3.4 (+ Errata!).
1430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
1431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
1433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename poisson_distribution<_IntType>::result_type
1434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       poisson_distribution<_IntType>::
1435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
1436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
1437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
1439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
1440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #if _GLIBCXX_USE_C99_MATH_TR1
1441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__param.mean() >= 12)
1442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
GAS LISTING /tmp/ccKUqHDa.s 			page 78


1443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    double __x;
1444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // See comments above...
1446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __naf =
1447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      (1 - std::numeric_limits<double>::epsilon()) / 2;
1448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __thr =
1449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      std::numeric_limits<_IntType>::max() + __naf;
1450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __m = std::floor(__param.mean());
1452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // sqrt(pi / 2)
1453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __spi_2 = 1.2533141373155002512078826424055226L;
1454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __c1 = __param._M_sm * __spi_2;
1455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __c2 = __param._M_c2b + __c1;
1456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __c3 = __c2 + 1;
1457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __c4 = __c3 + 1;
1458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // e^(1 / 78)
1459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __e178 = 1.0129030479320018583185514777512983L;
1460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __c5 = __c4 + __e178;
1461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __c = __param._M_cb + __c5;
1462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __2cx = 2 * (2 * __m + __param._M_d);
1463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    bool __reject = true;
1465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
1466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
1467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		const double __u = __c * __aurng();
1468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		const double __e = -std::log(1.0 - __aurng());
1469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		double __w = 0.0;
1471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		if (__u <= __c1)
1473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
1474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __n = _M_nd(__urng);
1475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __y = -std::abs(__n) * __param._M_sm - 1;
1476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __x = std::floor(__y);
1477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __w = -__n * __n / 2;
1478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    if (__x < -__m)
1479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      continue;
1480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
1481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else if (__u <= __c2)
1482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
1483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __n = _M_nd(__urng);
1484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __y = 1 + std::abs(__n) * __param._M_scx;
1485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __x = std::ceil(__y);
1486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __w = __y * (2 - __y) * __param._M_1cx;
1487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    if (__x > __param._M_d)
1488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      continue;
1489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
1490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else if (__u <= __c3)
1491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  // NB: This case not in the book, nor in the Errata,
1492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  // but should be ok...
1493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  __x = -1;
1494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else if (__u <= __c4)
1495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  __x = 0;
1496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else if (__u <= __c5)
1497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  __x = 1;
1498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else
1499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
GAS LISTING /tmp/ccKUqHDa.s 			page 79


1500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __v = -std::log(1.0 - __aurng());
1501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __y = __param._M_d
1502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				     + __v * __2cx / __param._M_d;
1503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __x = std::ceil(__y);
1504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __w = -__param._M_d * __param._M_1cx * (1 + __y / 2);
1505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
1506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__reject = (__w - __e - __x * __param._M_lm_thr
1508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    > __param._M_lfm - std::lgamma(__x + __m + 1));
1509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__reject |= __x + __m >= __thr;
1511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      } while (__reject);
1513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    return result_type(__x + __m + __naf);
1515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
1517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #endif
1518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
1519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _IntType     __x = 0;
1520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    double __prod = 1.0;
1521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
1523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
1524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__prod *= __aurng();
1525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__x += 1;
1526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
1527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__prod > __param._M_lm_thr);
1528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    return __x - 1;
1530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
1535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
1536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
1537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       poisson_distribution<_IntType>::
1538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __param)
1541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	// We could duplicate everything from operator()...
1544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
1545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = this->operator()(__urng, __param);
1546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType,
1549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
1550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const poisson_distribution<_IntType>& __x)
1553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
1555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
1556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 80


1557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
1559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
1560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
1561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
1563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
1564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.mean() << __space << __x._M_nd;
1566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
1568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
1569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
1570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
1571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType,
1574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
1575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
1576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       poisson_distribution<_IntType>& __x)
1578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
1580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
1581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::skipws);
1584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       double __mean;
1586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __mean >> __x._M_nd;
1587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename poisson_distribution<_IntType>::param_type(__mean));
1588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
1590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
1591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
1596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     binomial_distribution<_IntType>::param_type::
1597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     _M_initialize()
1598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const double __p12 = _M_p <= 0.5 ? _M_p : 1.0 - _M_p;
1600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_easy = true;
1602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #if _GLIBCXX_USE_C99_MATH_TR1
1604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_t * __p12 >= 8)
1605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
1606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_easy = false;
1607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __np = std::floor(_M_t * __p12);
1608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __pa = __np / _M_t;
1609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __1p = 1 - __pa;
1610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __pi_4 = 0.7853981633974483096156608458198757L;
1612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __d1x =
1613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    std::sqrt(__np * __1p * std::log(32 * __np
GAS LISTING /tmp/ccKUqHDa.s 			page 81


1614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 					     / (81 * __pi_4 * __1p)));
1615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_d1 = std::round(std::max(1.0, __d1x));
1616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __d2x =
1617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    std::sqrt(__np * __1p * std::log(32 * _M_t * __1p
1618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 					     / (__pi_4 * __pa)));
1619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_d2 = std::round(std::max(1.0, __d2x));
1620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  // sqrt(pi / 2)
1622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __spi_2 = 1.2533141373155002512078826424055226L;
1623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_s1 = std::sqrt(__np * __1p) * (1 + _M_d1 / (4 * __np));
1624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_s2 = std::sqrt(__np * __1p) * (1 + _M_d2 / (4 * _M_t * __1p));
1625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_c = 2 * _M_d1 / __np;
1626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_a1 = std::exp(_M_c) * _M_s1 * __spi_2;
1627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __a12 = _M_a1 + _M_s2 * __spi_2;
1628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __s1s = _M_s1 * _M_s1;
1629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_a123 = __a12 + (std::exp(_M_d1 / (_M_t * __1p))
1630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			     * 2 * __s1s / _M_d1
1631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			     * std::exp(-_M_d1 * _M_d1 / (2 * __s1s)));
1632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const double __s2s = _M_s2 * _M_s2;
1633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_s = (_M_a123 + 2 * __s2s / _M_d2
1634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  * std::exp(-_M_d2 * _M_d2 / (2 * __s2s)));
1635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_lf = (std::lgamma(__np + 1)
1636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		   + std::lgamma(_M_t - __np + 1));
1637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_lp1p = std::log(__pa / __1p);
1638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_q = -std::log(1 - (__p12 - __pa) / __1p);
1640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
1641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       else
1642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #endif
1643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_q = -std::log(1 - __p12);
1644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
1648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename binomial_distribution<_IntType>::result_type
1649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       binomial_distribution<_IntType>::
1650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_waiting(_UniformRandomNumberGenerator& __urng,
1651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 _IntType __t, double __q)
1652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_IntType __x = 0;
1654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	double __sum = 0.0;
1655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
1656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
1657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	do
1659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
1660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__t == __x)
1661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      return __x;
1662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __e = -std::log(1.0 - __aurng());
1663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __sum += __e / (__t - __x);
1664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __x += 1;
1665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__sum <= __q);
1667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __x - 1;
1669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 82


1671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /**
1672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * A rejection algorithm when t * p >= 8 and a simple waiting time
1673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * method - the second in the referenced book - otherwise.
1674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * NB: The former is available only if _GLIBCXX_USE_C99_MATH_TR1
1675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * is defined.
1676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    *
1677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Reference:
1678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Devroye, L. Non-Uniform Random Variates Generation. Springer-Verlag,
1679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * New York, 1986, Ch. X, Sect. 4 (+ Errata!).
1680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
1681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
1683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename binomial_distribution<_IntType>::result_type
1684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       binomial_distribution<_IntType>::
1685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
1686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
1687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	result_type __ret;
1689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _IntType __t = __param.t();
1690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __p = __param.p();
1691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __p12 = __p <= 0.5 ? __p : 1.0 - __p;
1692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
1693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
1694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #if _GLIBCXX_USE_C99_MATH_TR1
1696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (!__param._M_easy)
1697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
1698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    double __x;
1699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // See comments above...
1701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __naf =
1702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      (1 - std::numeric_limits<double>::epsilon()) / 2;
1703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __thr =
1704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      std::numeric_limits<_IntType>::max() + __naf;
1705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __np = std::floor(__t * __p12);
1707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    // sqrt(pi / 2)
1709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __spi_2 = 1.2533141373155002512078826424055226L;
1710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __a1 = __param._M_a1;
1711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __a12 = __a1 + __param._M_s2 * __spi_2;
1712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __a123 = __param._M_a123;
1713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __s1s = __param._M_s1 * __param._M_s1;
1714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __s2s = __param._M_s2 * __param._M_s2;
1715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    bool __reject;
1717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
1718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
1719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		const double __u = __param._M_s * __aurng();
1720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		double __v;
1722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		if (__u <= __a1)
1724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
1725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __n = _M_nd(__urng);
1726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __y = __param._M_s1 * std::abs(__n);
1727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __reject = __y >= __param._M_d1;
GAS LISTING /tmp/ccKUqHDa.s 			page 83


1728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    if (!__reject)
1729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      {
1730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			const double __e = -std::log(1.0 - __aurng());
1731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			__x = std::floor(__y);
1732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			__v = -__e - __n * __n / 2 + __param._M_c;
1733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      }
1734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
1735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else if (__u <= __a12)
1736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
1737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __n = _M_nd(__urng);
1738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __y = __param._M_s2 * std::abs(__n);
1739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __reject = __y >= __param._M_d2;
1740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    if (!__reject)
1741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      {
1742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			const double __e = -std::log(1.0 - __aurng());
1743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			__x = std::floor(-__y);
1744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			__v = -__e - __n * __n / 2;
1745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      }
1746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
1747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else if (__u <= __a123)
1748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
1749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __e1 = -std::log(1.0 - __aurng());
1750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __e2 = -std::log(1.0 - __aurng());
1751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __y = __param._M_d1
1753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				     + 2 * __s1s * __e1 / __param._M_d1;
1754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __x = std::floor(__y);
1755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __v = (-__e2 + __param._M_d1 * (1 / (__t - __np)
1756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 						    -__y / (2 * __s1s)));
1757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __reject = false;
1758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
1759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		else
1760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
1761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __e1 = -std::log(1.0 - __aurng());
1762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __e2 = -std::log(1.0 - __aurng());
1763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __y = __param._M_d2
1765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				     + 2 * __s2s * __e1 / __param._M_d2;
1766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __x = std::floor(-__y);
1767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __v = -__e2 - __param._M_d2 * __y / (2 * __s2s);
1768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __reject = false;
1769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
1770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__reject = __reject || __x < -__np || __x > __t - __np;
1772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		if (!__reject)
1773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  {
1774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    const double __lfx =
1775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      std::lgamma(__np + __x + 1)
1776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      + std::lgamma(__t - (__np + __x) + 1);
1777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __reject = __v > __param._M_lf - __lfx
1778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			     + __x * __param._M_lp1p;
1779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  }
1780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__reject |= __x + __np >= __thr;
1782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
1783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__reject);
1784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 84


1785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __x += __np + __naf;
1786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const _IntType __z = _M_waiting(__urng, __t - _IntType(__x),
1788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 					    __param._M_q);
1789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret = _IntType(__x) + __z;
1790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
1792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** #endif
1793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ret = _M_waiting(__urng, __t, __param._M_q);
1794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__p12 != __p)
1796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __ret = __t - __ret;
1797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __ret;
1798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
1801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
1802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
1803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
1804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       binomial_distribution<_IntType>::
1805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __param)
1808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	// We could duplicate everything from operator()...
1811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
1812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = this->operator()(__urng, __param);
1813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType,
1816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
1817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const binomial_distribution<_IntType>& __x)
1820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
1822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
1823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
1826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
1828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
1830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
1831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.t() << __space << __x.p()
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   << __space << __x._M_nd;
1834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
1836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
1837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
1838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
1839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType,
GAS LISTING /tmp/ccKUqHDa.s 			page 85


1842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _CharT, typename _Traits>
1843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       binomial_distribution<_IntType>& __x)
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
1848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
1849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
1852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _IntType __t;
1854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       double __p;
1855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __t >> __p >> __x._M_nd;
1856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename binomial_distribution<_IntType>::
1857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__t, __p));
1858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
1860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
1861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
1866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
1867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
1868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::exponential_distribution<_RealType>::
1869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __p)
1872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
1875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
1876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
1877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = -std::log(result_type(1) - __aurng()) / __p.lambda();
1878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
1881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
1882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const exponential_distribution<_RealType>& __x)
1884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
1886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
1887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
1889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
1890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
1891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
1892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__os.widen(' '));
1893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
1894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.lambda();
1896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
1898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
GAS LISTING /tmp/ccKUqHDa.s 			page 86


1899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
1900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
1905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
1906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       exponential_distribution<_RealType>& __x)
1907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
1908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
1909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
1910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
1912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
1913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __lambda;
1915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __lambda;
1916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename exponential_distribution<_RealType>::
1917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__lambda));
1918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
1920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
1921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
1922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /**
1925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Polar method due to Marsaglia.
1926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    *
1927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Devroye, L. Non-Uniform Random Variates Generation. Springer-Verlag,
1928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * New York, 1986, Ch. V, Sect. 4.4.
1929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
1930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
1931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
1932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename normal_distribution<_RealType>::result_type
1933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       normal_distribution<_RealType>::
1934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
1935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
1936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	result_type __ret;
1938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
1939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
1940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (_M_saved_available)
1942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
1943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_saved_available = false;
1944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret = _M_saved;
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
1947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
1948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    result_type __x, __y, __r2;
1949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
1950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
1951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__x = result_type(2.0) * __aurng() - 1.0;
1952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__y = result_type(2.0) * __aurng() - 1.0;
1953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__r2 = __x * __x + __y * __y;
1954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
1955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__r2 > 1.0 || __r2 == 0.0);
GAS LISTING /tmp/ccKUqHDa.s 			page 87


1956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
1958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_saved = __x * __mult;
1959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_saved_available = true;
1960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret = __y * __mult;
1961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ret = __ret * __param.stddev() + __param.mean();
1964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __ret;
1965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
1966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
1968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
1969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
1970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
1971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       normal_distribution<_RealType>::
1972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
1973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
1974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __param)
1975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
1976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__f == __t)
1979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  return;
1980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (_M_saved_available)
1982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
1983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_saved_available = false;
1984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = _M_saved * __param.stddev() + __param.mean();
1985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    if (__f == __t)
1987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      return;
1988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
1989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
1991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
1992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
1993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f + 1 < __t)
1994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
1995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    result_type __x, __y, __r2;
1996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
1997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
1998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__x = result_type(2.0) * __aurng() - 1.0;
1999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__y = result_type(2.0) * __aurng() - 1.0;
2000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__r2 = __x * __x + __y * __y;
2001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
2002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__r2 > 1.0 || __r2 == 0.0);
2003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
2005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = __y * __mult * __param.stddev() + __param.mean();
2006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = __x * __mult * __param.stddev() + __param.mean();
2007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
2008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__f != __t)
2010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
2011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    result_type __x, __y, __r2;
2012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
GAS LISTING /tmp/ccKUqHDa.s 			page 88


2013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
2014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__x = result_type(2.0) * __aurng() - 1.0;
2015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__y = result_type(2.0) * __aurng() - 1.0;
2016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__r2 = __x * __x + __y * __y;
2017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
2018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__r2 > 1.0 || __r2 == 0.0);
2019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
2021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_saved = __x * __mult;
2022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_saved_available = true;
2023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f = __y * __mult * __param.stddev() + __param.mean();
2024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
2025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     bool
2029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator==(const std::normal_distribution<_RealType>& __d1,
2030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const std::normal_distribution<_RealType>& __d2)
2031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (__d1._M_param == __d2._M_param
2033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  && __d1._M_saved_available == __d2._M_saved_available)
2034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
2035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  if (__d1._M_saved_available
2036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      && __d1._M_saved == __d2._M_saved)
2037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    return true;
2038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  else if(!__d1._M_saved_available)
2039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    return true;
2040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  else
2041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    return false;
2042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
2043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       else
2044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return false;
2045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const normal_distribution<_RealType>& __x)
2051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
2053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
2054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
2057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
2058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
2059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
2061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.mean() << __space << __x.stddev()
2064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   << __space << __x._M_saved_available;
2065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (__x._M_saved_available)
2066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __space << __x._M_saved;
2067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
2069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
GAS LISTING /tmp/ccKUqHDa.s 			page 89


2070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
2071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
2072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
2076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       normal_distribution<_RealType>& __x)
2078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
2080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
2081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       double __mean, __stddev;
2086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __mean >> __stddev
2087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   >> __x._M_saved_available;
2088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (__x._M_saved_available)
2089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__is >> __x._M_saved;
2090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename normal_distribution<_RealType>::
2091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__mean, __stddev));
2092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
2094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
2095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       lognormal_distribution<_RealType>::
2103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __p)
2106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  while (__f != __t)
2109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = std::exp(__p.s() * _M_nd(__urng) + __p.m());
2110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const lognormal_distribution<_RealType>& __x)
2116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
2118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
2119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
2122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
2123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
2124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
2126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
GAS LISTING /tmp/ccKUqHDa.s 			page 90


2127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.m() << __space << __x.s()
2129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   << __space << __x._M_nd;
2130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
2132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
2133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
2134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
2135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
2139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       lognormal_distribution<_RealType>& __x)
2141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
2143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
2144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __m, __s;
2149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __m >> __s >> __x._M_nd;
2150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename lognormal_distribution<_RealType>::
2151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__m, __s));
2152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
2154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
2155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::chi_squared_distribution<_RealType>::
2162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng)
2164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
2167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = 2 * _M_gd(__urng);
2168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::chi_squared_distribution<_RealType>::
2175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const typename
2178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      std::gamma_distribution<result_type>::param_type& __p)
2179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
2182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = 2 * _M_gd(__urng, __p);
2183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
GAS LISTING /tmp/ccKUqHDa.s 			page 91


2184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const chi_squared_distribution<_RealType>& __x)
2189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
2191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
2192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
2195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
2196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
2197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
2199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.n() << __space << __x._M_gd;
2202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
2204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
2205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
2206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
2207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
2211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       chi_squared_distribution<_RealType>& __x)
2213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
2215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
2216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __n;
2221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __n >> __x._M_gd;
2222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename chi_squared_distribution<_RealType>::
2223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__n));
2224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
2226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
2227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
2232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename cauchy_distribution<_RealType>::result_type
2233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       cauchy_distribution<_RealType>::
2234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __p)
2236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
2239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_RealType __u;
2240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	do
GAS LISTING /tmp/ccKUqHDa.s 			page 92


2241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __u = __aurng();
2242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__u == 0.5);
2243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _RealType __pi = 3.1415926535897932384626433832795029L;
2245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __p.a() + __p.b() * std::tan(__pi * __u);
2246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       cauchy_distribution<_RealType>::
2253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __p)
2256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _RealType __pi = 3.1415926535897932384626433832795029L;
2259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
2261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
2262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
2263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _RealType __u;
2264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
2265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __u = __aurng();
2266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__u == 0.5);
2267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = __p.a() + __p.b() * std::tan(__pi * __u);
2269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
2270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const cauchy_distribution<_RealType>& __x)
2276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
2278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
2279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
2282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
2283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
2284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
2286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.a() << __space << __x.b();
2289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
2291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
2292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
2293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
2294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
GAS LISTING /tmp/ccKUqHDa.s 			page 93


2298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       cauchy_distribution<_RealType>& __x)
2300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
2302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
2303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __a, __b;
2308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __a >> __b;
2309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename cauchy_distribution<_RealType>::
2310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__a, __b));
2311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
2313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
2314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::fisher_f_distribution<_RealType>::
2322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng)
2324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
2327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = ((_M_gd_x(__urng) * n()) / (_M_gd_y(__urng) * m()));
2328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::fisher_f_distribution<_RealType>::
2335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __p)
2338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typedef typename std::gamma_distribution<result_type>::param_type
2341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  param_type;
2342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	param_type __p1(__p.m() / 2);
2343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	param_type __p2(__p.n() / 2);
2344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
2345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = ((_M_gd_x(__urng, __p1) * n())
2346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    / (_M_gd_y(__urng, __p2) * m()));
2347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const fisher_f_distribution<_RealType>& __x)
2353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
GAS LISTING /tmp/ccKUqHDa.s 			page 94


2355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
2356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
2359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
2360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
2361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
2363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.m() << __space << __x.n()
2366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   << __space << __x._M_gd_x << __space << __x._M_gd_y;
2367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
2369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
2370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
2371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
2372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
2376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       fisher_f_distribution<_RealType>& __x)
2378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
2380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
2381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __m, __n;
2386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __m >> __n >> __x._M_gd_x >> __x._M_gd_y;
2387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename fisher_f_distribution<_RealType>::
2388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__m, __n));
2389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
2391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
2392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::student_t_distribution<_RealType>::
2400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng)
2402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
2405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = _M_nd(__urng) * std::sqrt(n() / _M_gd(__urng));
2406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
GAS LISTING /tmp/ccKUqHDa.s 			page 95


2412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::student_t_distribution<_RealType>::
2413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __p)
2416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	typename std::gamma_distribution<result_type>::param_type
2419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __p2(__p.n() / 2, 2);
2420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
2421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ =  _M_nd(__urng) * std::sqrt(__p.n() / _M_gd(__urng, __p2));
2422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const student_t_distribution<_RealType>& __x)
2428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
2430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
2431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
2434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
2435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
2436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
2438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.n() << __space << __x._M_nd << __space << __x._M_gd;
2441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
2443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
2444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
2445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
2446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
2450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       student_t_distribution<_RealType>& __x)
2452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
2454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
2455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __n;
2460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __n >> __x._M_nd >> __x._M_gd;
2461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename student_t_distribution<_RealType>::param_type(__n));
2462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
2464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
2465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
GAS LISTING /tmp/ccKUqHDa.s 			page 96


2469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
2470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     gamma_distribution<_RealType>::param_type::
2471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     _M_initialize()
2472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_malpha = _M_alpha < 1.0 ? _M_alpha + _RealType(1.0) : _M_alpha;
2474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _RealType __a1 = _M_malpha - _RealType(1.0) / _RealType(3.0);
2476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_a2 = _RealType(1.0) / std::sqrt(_RealType(9.0) * __a1);
2477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   /**
2480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * Marsaglia, G. and Tsang, W. W.
2481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * "A Simple Method for Generating Gamma Variables"
2482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    * ACM Transactions on Mathematical Software, 26, 3, 363-372, 2000.
2483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****    */
2484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
2486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename gamma_distribution<_RealType>::result_type
2487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       gamma_distribution<_RealType>::
2488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
2490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
2493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	result_type __u, __v, __n;
2495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const result_type __a1 = (__param._M_malpha
2496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				  - _RealType(1.0) / _RealType(3.0));
2497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	do
2499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
2500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
2501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
2502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__n = _M_nd(__urng);
2503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__v = result_type(1.0) + __param._M_a2 * __n; 
2504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
2505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__v <= 0.0);
2506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __v = __v * __v * __v;
2508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __u = __aurng();
2509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
2510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__u > result_type(1.0) - 0.331 * __n * __n * __n * __n
2511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       && (std::log(__u) > (0.5 * __n * __n + __a1
2512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				    * (1.0 - __v + std::log(__v)))));
2513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__param.alpha() == __param._M_malpha)
2515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  return __a1 * __v * __param.beta();
2516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
2517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
2518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
2519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      __u = __aurng();
2520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__u == 0.0);
2521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    
2522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    return (std::pow(__u, result_type(1.0) / __param.alpha())
2523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    * __a1 * __v * __param.beta());
2524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
2525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
GAS LISTING /tmp/ccKUqHDa.s 			page 97


2526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       gamma_distribution<_RealType>::
2532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __param)
2535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
2539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	result_type __u, __v, __n;
2541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const result_type __a1 = (__param._M_malpha
2542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				  - _RealType(1.0) / _RealType(3.0));
2543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__param.alpha() == __param._M_malpha)
2545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  while (__f != __t)
2546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
2547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      do
2548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		{
2549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  do
2550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    {
2551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      __n = _M_nd(__urng);
2552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      __v = result_type(1.0) + __param._M_a2 * __n;
2553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    }
2554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  while (__v <= 0.0);
2555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  __v = __v * __v * __v;
2557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  __u = __aurng();
2558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		}
2559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      while (__u > result_type(1.0) - 0.331 * __n * __n * __n * __n
2560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		     && (std::log(__u) > (0.5 * __n * __n + __a1
2561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 					  * (1.0 - __v + std::log(__v)))));
2562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      *__f++ = __a1 * __v * __param.beta();
2564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
2565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
2566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  while (__f != __t)
2567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    {
2568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      do
2569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		{
2570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  do
2571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    {
2572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      __n = _M_nd(__urng);
2573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      __v = result_type(1.0) + __param._M_a2 * __n;
2574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    }
2575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  while (__v <= 0.0);
2576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  __v = __v * __v * __v;
2578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  __u = __aurng();
2579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		}
2580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      while (__u > result_type(1.0) - 0.331 * __n * __n * __n * __n
2581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		     && (std::log(__u) > (0.5 * __n * __n + __a1
2582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 					  * (1.0 - __v + std::log(__v)))));
GAS LISTING /tmp/ccKUqHDa.s 			page 98


2583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      do
2585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__u = __aurng();
2586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      while (__u == 0.0);
2587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      *__f++ = (std::pow(__u, result_type(1.0) / __param.alpha())
2589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			* __a1 * __v * __param.beta());
2590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    }
2591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const gamma_distribution<_RealType>& __x)
2597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
2599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
2600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
2603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
2604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
2605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
2607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.alpha() << __space << __x.beta()
2610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   << __space << __x._M_nd;
2611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
2613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
2614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
2615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
2616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
2620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       gamma_distribution<_RealType>& __x)
2622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
2624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
2625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __alpha_val, __beta_val;
2630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __alpha_val >> __beta_val >> __x._M_nd;
2631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename gamma_distribution<_RealType>::
2632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__alpha_val, __beta_val));
2633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
2635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
2636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
GAS LISTING /tmp/ccKUqHDa.s 			page 99


2640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
2641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename weibull_distribution<_RealType>::result_type
2642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       weibull_distribution<_RealType>::
2643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __p)
2645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
2648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __p.b() * std::pow(-std::log(result_type(1) - __aurng()),
2649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				  result_type(1) / __p.a());
2650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       weibull_distribution<_RealType>::
2657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __p)
2660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
2664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	auto __inv_a = result_type(1) / __p.a();
2665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
2667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = __p.b() * std::pow(-std::log(result_type(1) - __aurng()),
2668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				      __inv_a);
2669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const weibull_distribution<_RealType>& __x)
2675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
2677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
2678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
2681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
2682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
2683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
2685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.a() << __space << __x.b();
2688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
2690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
2691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
2692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
2693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
GAS LISTING /tmp/ccKUqHDa.s 			page 100


2697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       weibull_distribution<_RealType>& __x)
2699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
2701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
2702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __a, __b;
2707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __a >> __b;
2708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename weibull_distribution<_RealType>::
2709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__a, __b));
2710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
2712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
2713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
2718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename extreme_value_distribution<_RealType>::result_type
2719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       extreme_value_distribution<_RealType>::
2720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __p)
2722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
2725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __p.a() - __p.b() * std::log(-std::log(result_type(1)
2726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 						      - __aurng()));
2727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       extreme_value_distribution<_RealType>::
2734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __p)
2737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, result_type>
2740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
2741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
2743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = __p.a() - __p.b() * std::log(-std::log(result_type(1)
2744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 							  - __aurng()));
2745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const extreme_value_distribution<_RealType>& __x)
2751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
2753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
GAS LISTING /tmp/ccKUqHDa.s 			page 101


2754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
2757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
2758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
2759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
2761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
2762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __x.a() << __space << __x.b();
2764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
2766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
2767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
2768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
2769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
2772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
2773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       extreme_value_distribution<_RealType>& __x)
2775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
2777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
2778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __a, __b;
2783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __a >> __b;
2784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename extreme_value_distribution<_RealType>::
2785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__a, __b));
2786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
2788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
2789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
2793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
2794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     discrete_distribution<_IntType>::param_type::
2795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     _M_initialize()
2796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_prob.size() < 2)
2798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
2799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_prob.clear();
2800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  return;
2801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
2802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const double __sum = std::accumulate(_M_prob.begin(),
2804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 					   _M_prob.end(), 0.0);
2805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Now normalize the probabilites.
2806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __detail::__normalize(_M_prob.begin(), _M_prob.end(), _M_prob.begin(),
2807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __sum);
2808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Accumulate partial sums.
2809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_cp.reserve(_M_prob.size());
2810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::partial_sum(_M_prob.begin(), _M_prob.end(),
GAS LISTING /tmp/ccKUqHDa.s 			page 102


2811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       std::back_inserter(_M_cp));
2812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Make sure the last cumulative probability is one.
2813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_cp[_M_cp.size() - 1] = 1.0;
2814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
2817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Func>
2818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       discrete_distribution<_IntType>::param_type::
2819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       param_type(size_t __nw, double __xmin, double __xmax, _Func __fw)
2820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       : _M_prob(), _M_cp()
2821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __n = __nw == 0 ? 1 : __nw;
2823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __delta = (__xmax - __xmin) / __n;
2824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_prob.reserve(__n);
2826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __k = 0; __k < __nw; ++__k)
2827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_prob.push_back(__fw(__xmin + __k * __delta + 0.5 * __delta));
2828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_initialize();
2830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
2833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
2834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename discrete_distribution<_IntType>::result_type
2835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       discrete_distribution<_IntType>::
2836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
2837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
2838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__param._M_cp.empty())
2840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  return result_type(0);
2841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
2843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
2844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __p = __aurng();
2846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	auto __pos = std::lower_bound(__param._M_cp.begin(),
2847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				      __param._M_cp.end(), __p);
2848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __pos - __param._M_cp.begin();
2850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
2853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
2854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
2855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
2856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       discrete_distribution<_IntType>::
2857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
2858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
2859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __param)
2860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__param._M_cp.empty())
2864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
2865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__f != __t)
2866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      *__f++ = result_type(0);
2867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    return;
GAS LISTING /tmp/ccKUqHDa.s 			page 103


2868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
2869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
2871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
2872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
2874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
2875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __p = __aurng();
2876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    auto __pos = std::lower_bound(__param._M_cp.begin(),
2877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 					  __param._M_cp.end(), __p);
2878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = __pos - __param._M_cp.begin();
2880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
2881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
2884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
2885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
2886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const discrete_distribution<_IntType>& __x)
2887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
2889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
2890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
2892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
2893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
2894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
2895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
2896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
2897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<double>::max_digits10);
2898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::vector<double> __prob = __x.probabilities();
2900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __prob.size();
2901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (auto __dit = __prob.begin(); __dit != __prob.end(); ++__dit)
2902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __space << *__dit;
2903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
2905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
2906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
2907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
2908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType, typename _CharT, typename _Traits>
2911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
2912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
2913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       discrete_distribution<_IntType>& __x)
2914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
2916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
2917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
2919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
2920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       size_t __n;
2922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __n;
2923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::vector<double> __prob_vec;
GAS LISTING /tmp/ccKUqHDa.s 			page 104


2925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __prob_vec.reserve(__n);
2926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (; __n != 0; --__n)
2927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
2928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  double __prob;
2929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __is >> __prob;
2930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __prob_vec.push_back(__prob);
2931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
2932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename discrete_distribution<_IntType>::
2934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		param_type(__prob_vec.begin(), __prob_vec.end()));
2935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
2937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
2938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
2943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     piecewise_constant_distribution<_RealType>::param_type::
2944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     _M_initialize()
2945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
2946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_int.size() < 2
2947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  || (_M_int.size() == 2
2948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      && _M_int[0] == _RealType(0)
2949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      && _M_int[1] == _RealType(1)))
2950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
2951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_int.clear();
2952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_den.clear();
2953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  return;
2954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
2955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const double __sum = std::accumulate(_M_den.begin(),
2957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 					   _M_den.end(), 0.0);
2958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __detail::__normalize(_M_den.begin(), _M_den.end(), _M_den.begin(),
2960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __sum);
2961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_cp.reserve(_M_den.size());
2963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::partial_sum(_M_den.begin(), _M_den.end(),
2964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       std::back_inserter(_M_cp));
2965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       // Make sure the last cumulative probability is one.
2967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_cp[_M_cp.size() - 1] = 1.0;
2968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < _M_den.size(); ++__k)
2970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_den[__k] /= _M_int[__k + 1] - _M_int[__k];
2971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
2972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _InputIteratorB, typename _InputIteratorW>
2975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       piecewise_constant_distribution<_RealType>::param_type::
2976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       param_type(_InputIteratorB __bbegin,
2977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 _InputIteratorB __bend,
2978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 _InputIteratorW __wbegin)
2979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       : _M_int(), _M_den(), _M_cp()
2980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
2981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__bbegin != __bend)
GAS LISTING /tmp/ccKUqHDa.s 			page 105


2982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
2983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    for (;;)
2984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      {
2985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		_M_int.push_back(*__bbegin);
2986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		++__bbegin;
2987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		if (__bbegin == __bend)
2988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		  break;
2989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		_M_den.push_back(*__wbegin);
2991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		++__wbegin;
2992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      }
2993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
2994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_initialize();
2996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
2997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
2998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
2999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Func>
3000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       piecewise_constant_distribution<_RealType>::param_type::
3001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       param_type(initializer_list<_RealType> __bl, _Func __fw)
3002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       : _M_int(), _M_den(), _M_cp()
3003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
3004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_int.reserve(__bl.size());
3005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (auto __biter = __bl.begin(); __biter != __bl.end(); ++__biter)
3006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_int.push_back(*__biter);
3007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_den.reserve(_M_int.size() - 1);
3009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __k = 0; __k < _M_int.size() - 1; ++__k)
3010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_den.push_back(__fw(0.5 * (_M_int[__k + 1] + _M_int[__k])));
3011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_initialize();
3013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
3014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
3016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Func>
3017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       piecewise_constant_distribution<_RealType>::param_type::
3018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       param_type(size_t __nw, _RealType __xmin, _RealType __xmax, _Func __fw)
3019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       : _M_int(), _M_den(), _M_cp()
3020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
3021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __n = __nw == 0 ? 1 : __nw;
3022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _RealType __delta = (__xmax - __xmin) / __n;
3023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_int.reserve(__n + 1);
3025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __k = 0; __k <= __nw; ++__k)
3026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_int.push_back(__xmin + __k * __delta);
3027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_den.reserve(__n);
3029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __k = 0; __k < __nw; ++__k)
3030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_den.push_back(__fw(_M_int[__k] + 0.5 * __delta));
3031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_initialize();
3033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
3034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
3036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
3037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename piecewise_constant_distribution<_RealType>::result_type
3038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       piecewise_constant_distribution<_RealType>::
GAS LISTING /tmp/ccKUqHDa.s 			page 106


3039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
3040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
3041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
3042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
3043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
3044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __p = __aurng();
3046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__param._M_cp.empty())
3047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  return __p;
3048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	auto __pos = std::lower_bound(__param._M_cp.begin(),
3050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				      __param._M_cp.end(), __p);
3051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __i = __pos - __param._M_cp.begin();
3052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __pref = __i > 0 ? __param._M_cp[__i - 1] : 0.0;
3054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return __param._M_int[__i] + (__p - __pref) / __param._M_den[__i];
3056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
3057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
3059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
3060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
3061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
3062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       piecewise_constant_distribution<_RealType>::
3063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
3064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
3065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __param)
3066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
3067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
3069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
3070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__param._M_cp.empty())
3072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
3073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    while (__f != __t)
3074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      *__f++ = __aurng();
3075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    return;
3076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
3077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
3079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
3080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __p = __aurng();
3081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    auto __pos = std::lower_bound(__param._M_cp.begin(),
3083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 					  __param._M_cp.end(), __p);
3084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const size_t __i = __pos - __param._M_cp.begin();
3085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __pref = __i > 0 ? __param._M_cp[__i - 1] : 0.0;
3087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    *__f++ = (__param._M_int[__i]
3089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      + (__p - __pref) / __param._M_den[__i]);
3090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
3091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
3092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
3094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
3095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
GAS LISTING /tmp/ccKUqHDa.s 			page 107


3096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const piecewise_constant_distribution<_RealType>& __x)
3097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
3098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
3099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
3100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
3102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
3103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
3104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
3105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
3106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
3107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
3108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::vector<_RealType> __int = __x.intervals();
3110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __int.size() - 1;
3111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (auto __xit = __int.begin(); __xit != __int.end(); ++__xit)
3113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __space << *__xit;
3114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::vector<double> __den = __x.densities();
3116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (auto __dit = __den.begin(); __dit != __den.end(); ++__dit)
3117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __space << *__dit;
3118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
3120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
3121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
3122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
3123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
3124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
3126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
3127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
3128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       piecewise_constant_distribution<_RealType>& __x)
3129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
3130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
3131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
3132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
3134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
3135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       size_t __n;
3137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __n;
3138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::vector<_RealType> __int_vec;
3140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __int_vec.reserve(__n + 1);
3141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i <= __n; ++__i)
3142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
3143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _RealType __int;
3144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __is >> __int;
3145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __int_vec.push_back(__int);
3146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
3147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::vector<double> __den_vec;
3149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __den_vec.reserve(__n);
3150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i < __n; ++__i)
3151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
3152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  double __den;
GAS LISTING /tmp/ccKUqHDa.s 			page 108


3153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __is >> __den;
3154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __den_vec.push_back(__den);
3155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
3156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename piecewise_constant_distribution<_RealType>::
3158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  param_type(__int_vec.begin(), __int_vec.end(), __den_vec.begin()));
3159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
3161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
3162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
3163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
3166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
3167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     piecewise_linear_distribution<_RealType>::param_type::
3168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     _M_initialize()
3169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
3170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_int.size() < 2
3171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  || (_M_int.size() == 2
3172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      && _M_int[0] == _RealType(0)
3173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      && _M_int[1] == _RealType(1)
3174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	      && _M_den[0] == _M_den[1]))
3175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
3176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_int.clear();
3177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_den.clear();
3178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  return;
3179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
3180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       double __sum = 0.0;
3182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_cp.reserve(_M_int.size() - 1);
3183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_m.reserve(_M_int.size() - 1);
3184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < _M_int.size() - 1; ++__k)
3185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
3186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  const _RealType __delta = _M_int[__k + 1] - _M_int[__k];
3187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __sum += 0.5 * (_M_den[__k + 1] + _M_den[__k]) * __delta;
3188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_cp.push_back(__sum);
3189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_m.push_back((_M_den[__k + 1] - _M_den[__k]) / __delta);
3190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
3191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       //  Now normalize the densities...
3193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __detail::__normalize(_M_den.begin(), _M_den.end(), _M_den.begin(),
3194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    __sum);
3195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       //  ... and partial sums... 
3196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __detail::__normalize(_M_cp.begin(), _M_cp.end(), _M_cp.begin(), __sum);
3197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       //  ... and slopes.
3198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __detail::__normalize(_M_m.begin(), _M_m.end(), _M_m.begin(), __sum);
3199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       //  Make sure the last cumulative probablility is one.
3201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_cp[_M_cp.size() - 1] = 1.0;
3202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****      }
3203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
3205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _InputIteratorB, typename _InputIteratorW>
3206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       piecewise_linear_distribution<_RealType>::param_type::
3207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       param_type(_InputIteratorB __bbegin,
3208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 _InputIteratorB __bend,
3209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 _InputIteratorW __wbegin)
GAS LISTING /tmp/ccKUqHDa.s 			page 109


3210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       : _M_int(), _M_den(), _M_cp(), _M_m()
3211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
3212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (; __bbegin != __bend; ++__bbegin, ++__wbegin)
3213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
3214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_int.push_back(*__bbegin);
3215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_den.push_back(*__wbegin);
3216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
3217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_initialize();
3219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
3220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
3222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Func>
3223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       piecewise_linear_distribution<_RealType>::param_type::
3224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       param_type(initializer_list<_RealType> __bl, _Func __fw)
3225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       : _M_int(), _M_den(), _M_cp(), _M_m()
3226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
3227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_int.reserve(__bl.size());
3228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_den.reserve(__bl.size());
3229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (auto __biter = __bl.begin(); __biter != __bl.end(); ++__biter)
3230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
3231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_int.push_back(*__biter);
3232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_den.push_back(__fw(*__biter));
3233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
3234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_initialize();
3236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
3237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
3239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _Func>
3240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       piecewise_linear_distribution<_RealType>::param_type::
3241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       param_type(size_t __nw, _RealType __xmin, _RealType __xmax, _Func __fw)
3242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       : _M_int(), _M_den(), _M_cp(), _M_m()
3243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
3244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __n = __nw == 0 ? 1 : __nw;
3245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const _RealType __delta = (__xmax - __xmin) / __n;
3246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_int.reserve(__n + 1);
3248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_den.reserve(__n + 1);
3249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	for (size_t __k = 0; __k <= __nw; ++__k)
3250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
3251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_int.push_back(__xmin + __k * __delta);
3252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_den.push_back(__fw(_M_int[__k] + __delta));
3253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  }
3254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_initialize();
3256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
3257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
3259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _UniformRandomNumberGenerator>
3260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typename piecewise_linear_distribution<_RealType>::result_type
3261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       piecewise_linear_distribution<_RealType>::
3262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       operator()(_UniformRandomNumberGenerator& __urng,
3263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		 const param_type& __param)
3264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
3265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__detail::_Adaptor<_UniformRandomNumberGenerator, double>
3266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __aurng(__urng);
GAS LISTING /tmp/ccKUqHDa.s 			page 110


3267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __p = __aurng();
3269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__param._M_cp.empty())
3270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  return __p;
3271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	auto __pos = std::lower_bound(__param._M_cp.begin(),
3273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 				      __param._M_cp.end(), __p);
3274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const size_t __i = __pos - __param._M_cp.begin();
3275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __pref = __i > 0 ? __param._M_cp[__i - 1] : 0.0;
3277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __a = 0.5 * __param._M_m[__i];
3279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __b = __param._M_den[__i];
3280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	const double __cm = __p - __pref;
3281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_RealType __x = __param._M_int[__i];
3283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (__a == 0)
3284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x += __cm / __b;
3285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	else
3286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  {
3287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const double __d = __b * __b + 4.0 * __a * __cm;
3288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __x += 0.5 * (std::sqrt(__d) - __b) / __a;
3289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****           }
3290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         return __x;
3292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
3293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType>
3295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     template<typename _ForwardIterator,
3296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	     typename _UniformRandomNumberGenerator>
3297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       void
3298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       piecewise_linear_distribution<_RealType>::
3299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __generate_impl(_ForwardIterator __f, _ForwardIterator __t,
3300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      _UniformRandomNumberGenerator& __urng,
3301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		      const param_type& __param)
3302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       {
3303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	// We could duplicate everything from operator()...
3305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	while (__f != __t)
3306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  *__f++ = this->operator()(__urng, __param);
3307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       }
3308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
3310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_ostream<_CharT, _Traits>&
3311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
3312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       const piecewise_linear_distribution<_RealType>& __x)
3313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
3314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_ostream<_CharT, _Traits>  __ostream_type;
3315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __ostream_type::ios_base    __ios_base;
3316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __os.flags();
3318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __fill = __os.fill();
3319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const std::streamsize __precision = __os.precision();
3320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const _CharT __space = __os.widen(' ');
3321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__ios_base::scientific | __ios_base::left);
3322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__space);
3323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(std::numeric_limits<_RealType>::max_digits10);
GAS LISTING /tmp/ccKUqHDa.s 			page 111


3324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::vector<_RealType> __int = __x.intervals();
3326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os << __int.size() - 1;
3327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (auto __xit = __int.begin(); __xit != __int.end(); ++__xit)
3329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __space << *__xit;
3330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::vector<double> __den = __x.densities();
3332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (auto __dit = __den.begin(); __dit != __den.end(); ++__dit)
3333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__os << __space << *__dit;
3334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.flags(__flags);
3336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.fill(__fill);
3337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __os.precision(__precision);
3338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __os;
3339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
3340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, typename _CharT, typename _Traits>
3342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     std::basic_istream<_CharT, _Traits>&
3343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     operator>>(std::basic_istream<_CharT, _Traits>& __is,
3344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	       piecewise_linear_distribution<_RealType>& __x)
3345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
3346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef std::basic_istream<_CharT, _Traits>  __istream_type;
3347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename __istream_type::ios_base    __ios_base;
3348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const typename __ios_base::fmtflags __flags = __is.flags();
3350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__ios_base::dec | __ios_base::skipws);
3351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       size_t __n;
3353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is >> __n;
3354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::vector<_RealType> __int_vec;
3356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __int_vec.reserve(__n + 1);
3357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i <= __n; ++__i)
3358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
3359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _RealType __int;
3360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __is >> __int;
3361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __int_vec.push_back(__int);
3362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
3363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::vector<double> __den_vec;
3365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __den_vec.reserve(__n + 1);
3366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 0; __i <= __n; ++__i)
3367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
3368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  double __den;
3369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __is >> __den;
3370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __den_vec.push_back(__den);
3371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
3372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __x.param(typename piecewise_linear_distribution<_RealType>::
3374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  param_type(__int_vec.begin(), __int_vec.end(), __den_vec.begin()));
3375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __is.flags(__flags);
3377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __is;
3378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
3379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 112


3381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _IntType>
3382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed_seq::seed_seq(std::initializer_list<_IntType> __il)
3383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
3384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (auto __iter = __il.begin(); __iter != __il.end(); ++__iter)
3385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_v.push_back(__detail::__mod<result_type,
3386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       __detail::_Shift<result_type, 32>::__value>(*__iter));
3387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
3388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _InputIterator>
3390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed_seq::seed_seq(_InputIterator __begin, _InputIterator __end)
3391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
3392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (_InputIterator __iter = __begin; __iter != __end; ++__iter)
3393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	_M_v.push_back(__detail::__mod<result_type,
3394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       __detail::_Shift<result_type, 32>::__value>(*__iter));
3395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
3396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RandomAccessIterator>
3398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     void
3399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     seed_seq::generate(_RandomAccessIterator __begin,
3400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       _RandomAccessIterator __end)
3401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
3402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
3403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****         _Type;
3404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (__begin == __end)
3406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	return;
3407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       std::fill(__begin, __end, _Type(0x8b8b8b8bu));
3409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __n = __end - __begin;
3411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __s = _M_v.size();
3412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __t = (__n >= 623) ? 11
3413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       : (__n >=  68) ? 7
3414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       : (__n >=  39) ? 5
3415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       : (__n >=   7) ? 3
3416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       : (__n - 1) / 2;
3417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __p = (__n - __t) / 2;
3418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __q = __p + __t;
3419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __m = std::max(size_t(__s + 1), __n);
3420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < __m; ++__k)
3422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
3423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _Type __arg = (__begin[__k % __n]
3424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 ^ __begin[(__k + __p) % __n]
3425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 ^ __begin[(__k - 1) % __n]);
3426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _Type __r1 = __arg ^ (__arg >> 27);
3427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __r1 = __detail::__mod<_Type,
3428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    __detail::_Shift<_Type, 32>::__value>(1664525u * __r1);
3429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _Type __r2 = __r1;
3430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  if (__k == 0)
3431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __r2 += __s;
3432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  else if (__k <= __s)
3433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __r2 += __k % __n + _M_v[__k - 1];
3434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  else
3435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __r2 += __k % __n;
3436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __r2 = __detail::__mod<_Type,
3437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	           __detail::_Shift<_Type, 32>::__value>(__r2);
GAS LISTING /tmp/ccKUqHDa.s 			page 113


3438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __begin[(__k + __p) % __n] += __r1;
3439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __begin[(__k + __q) % __n] += __r2;
3440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __begin[__k % __n] = __r2;
3441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
3442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = __m; __k < __m + __n; ++__k)
3444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
3445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _Type __arg = (__begin[__k % __n]
3446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 + __begin[(__k + __p) % __n]
3447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			 + __begin[(__k - 1) % __n]);
3448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _Type __r3 = __arg ^ (__arg >> 27);
3449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __r3 = __detail::__mod<_Type,
3450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		   __detail::_Shift<_Type, 32>::__value>(1566083941u * __r3);
3451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _Type __r4 = __r3 - __k % __n;
3452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __r4 = __detail::__mod<_Type,
3453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	           __detail::_Shift<_Type, 32>::__value>(__r4);
3454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __begin[(__k + __p) % __n] ^= __r3;
3455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __begin[(__k + __q) % __n] ^= __r4;
3456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __begin[__k % __n] = __r4;
3457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
3458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
3459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****   template<typename _RealType, size_t __bits,
3461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	   typename _UniformRandomNumberGenerator>
3462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     _RealType
3463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     generate_canonical(_UniformRandomNumberGenerator& __urng)
 392              		.loc 7 3464 0
 393              		.cfi_startproc
 394              	.LVL29:
 395              	.LBB1877:
 396              	.LBB1878:
 397              	.LBB1879:
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       if (_M_p >= state_size)
 398              		.loc 7 458 0
 399 0000 488B8780 		movq	4992(%rdi), %rax
 399      130000
 400 0007 483D6F02 		cmpq	$623, %rax
 400      0000
 401 000d 0F877F00 		ja	.L31
 401      0000
 402 0013 488D5001 		leaq	1(%rax), %rdx
 403 0017 488B04C7 		movq	(%rdi,%rax,8), %rax
 404 001b 0F1F4400 		.p2align 4,,10
 404      00
 405              		.p2align 3
 406              	.L32:
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       result_type __z = _M_x[_M_p++];
 407              		.loc 7 462 0
 408 0020 48899780 		movq	%rdx, 4992(%rdi)
 408      130000
 409              	.LVL30:
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z >> __u) & __d;
 410              		.loc 7 463 0
 411 0027 4889C2   		movq	%rax, %rdx
 412 002a 48C1EA0B 		shrq	$11, %rdx
 413 002e 89D2     		movl	%edx, %edx
 414 0030 4831C2   		xorq	%rax, %rdx
GAS LISTING /tmp/ccKUqHDa.s 			page 114


 415              	.LVL31:
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z << __s) & __b;
 416              		.loc 7 464 0
 417 0033 4889D0   		movq	%rdx, %rax
 418 0036 48C1E007 		salq	$7, %rax
 419 003a 2580562C 		andl	$2636928640, %eax
 419      9D
 420 003f 4831D0   		xorq	%rdx, %rax
 421 0042 4889C2   		movq	%rax, %rdx
 422              	.LVL32:
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z << __t) & __c;
 423              		.loc 7 465 0
 424 0045 48C1E00F 		salq	$15, %rax
 425              	.LVL33:
 426 0049 250000C6 		andl	$4022730752, %eax
 426      EF
 427 004e 4831D0   		xorq	%rdx, %rax
 428              	.LVL34:
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       __z ^= (__z >> __l);
 429              		.loc 7 466 0
 430 0051 4889C2   		movq	%rax, %rdx
 431 0054 48C1EA12 		shrq	$18, %rdx
 432              	.LVL35:
 433              	.LBE1879:
 434              	.LBE1878:
3464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     {
3465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       static_assert(std::is_floating_point<_RealType>::value,
3466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		    "template argument not a floating point type");
3467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 
3468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __b
3469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	= std::min(static_cast<size_t>(std::numeric_limits<_RealType>::digits),
3470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****                    __bits);
3471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const long double __r = static_cast<long double>(__urng.max())
3472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			    - static_cast<long double>(__urng.min()) + 1.0L;
3473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       const size_t __log2r = std::log(__r) / std::log(2.0L);
3474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       size_t __k = std::max<size_t>(1UL, (__b + __log2r - 1UL) / __log2r);
3475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __sum = _RealType(0);
3476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _RealType __tmp = _RealType(1);
3477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (; __k != 0; --__k)
3478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	{
3479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __sum += _RealType(__urng() - __urng.min()) * __tmp;
 435              		.loc 7 3480 0
 436 0058 4831D0   		xorq	%rdx, %rax
 437              	.LVL36:
 438 005b 781A     		js	.L36
 439 005d 660FEFC0 		pxor	%xmm0, %xmm0
 440 0061 F3480F2A 		cvtsi2ssq	%rax, %xmm0
 440      C0
 441              	.LVL37:
 442              	.L37:
 443 0066 F30F5805 		addss	.LC5(%rip), %xmm0
 443      00000000 
3480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __tmp *= __r;
3481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	}
3482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       return __sum / __tmp;
 444              		.loc 7 3483 0
 445 006e F30F5905 		mulss	.LC6(%rip), %xmm0
GAS LISTING /tmp/ccKUqHDa.s 			page 115


 445      00000000 
 446              	.LBE1877:
3483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****     }
 447              		.loc 7 3484 0
 448 0076 C3       		ret
 449              	.LVL38:
 450              	.L36:
 451              	.LBB1888:
3480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __tmp *= __r;
 452              		.loc 7 3480 0
 453 0077 4889C2   		movq	%rax, %rdx
 454 007a 660FEFC0 		pxor	%xmm0, %xmm0
 455 007e 48D1EA   		shrq	%rdx
 456 0081 83E001   		andl	$1, %eax
 457              	.LVL39:
 458 0084 4809C2   		orq	%rax, %rdx
 459 0087 F3480F2A 		cvtsi2ssq	%rdx, %xmm0
 459      C2
 460 008c F30F58C0 		addss	%xmm0, %xmm0
 461 0090 EBD4     		jmp	.L37
 462              	.LVL40:
 463              	.L31:
 464 0092 4C8B07   		movq	(%rdi), %r8
 465 0095 488D4F08 		leaq	8(%rdi), %rcx
 466 0099 488D9720 		leaq	1824(%rdi), %rdx
 466      070000
 467 00a0 41BADFB0 		movl	$2567483615, %r10d
 467      0899
 468 00a6 4531C9   		xorl	%r9d, %r9d
 469 00a9 0F1F8000 		.p2align 4,,10
 469      000000
 470              		.p2align 3
 471              	.L33:
 472              	.LBB1887:
 473              	.LBB1886:
 474              	.LBB1880:
 475              	.LBB1881:
 476              	.LBB1882:
 477              	.LBB1883:
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 478              		.loc 7 407 0
 479 00b0 4C89C0   		movq	%r8, %rax
 480 00b3 4C8B01   		movq	(%rcx), %r8
 481 00b6 48250000 		andq	$-2147483648, %rax
 481      0080
 482 00bc 4C89C6   		movq	%r8, %rsi
 483 00bf 81E6FFFF 		andl	$2147483647, %esi
 483      FF7F
 484 00c5 4809F0   		orq	%rsi, %rax
 485 00c8 4C89CE   		movq	%r9, %rsi
 486 00cb A801     		testb	$1, %al
 487 00cd 490F45F2 		cmovne	%r10, %rsi
 488 00d1 4833B160 		xorq	3168(%rcx), %rsi
 488      0C0000
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + __m] ^ (__y >> 1)
 489              		.loc 7 408 0
 490 00d8 48D1E8   		shrq	%rax
GAS LISTING /tmp/ccKUqHDa.s 			page 116


 491 00db 4883C108 		addq	$8, %rcx
 492 00df 4831F0   		xorq	%rsi, %rax
 493 00e2 488941F0 		movq	%rax, -16(%rcx)
 494              	.LVL41:
 495              	.LBE1883:
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = 0; __k < (__n - __m); ++__k)
 496              		.loc 7 404 0
 497 00e6 4839D1   		cmpq	%rdx, %rcx
 498 00e9 75C5     		jne	.L33
 499 00eb 488BB718 		movq	1816(%rdi), %rsi
 499      070000
 500 00f2 4C8D9780 		leaq	4992(%rdi), %r10
 500      130000
 501 00f9 41B9DFB0 		movl	$2567483615, %r9d
 501      0899
 502 00ff 4531C0   		xorl	%r8d, %r8d
 503              		.p2align 4,,10
 504 0102 660F1F44 		.p2align 3
 504      0000
 505              	.L34:
 506              	.LBE1882:
 507              	.LBB1884:
 508              	.LBB1885:
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 			   | (_M_x[__k + 1] & __lower_mask));
 509              		.loc 7 415 0
 510 0108 4889F0   		movq	%rsi, %rax
 511 010b 488B32   		movq	(%rdx), %rsi
 512 010e 48250000 		andq	$-2147483648, %rax
 512      0080
 513 0114 4889F1   		movq	%rsi, %rcx
 514 0117 81E1FFFF 		andl	$2147483647, %ecx
 514      FF7F
 515 011d 4809C8   		orq	%rcx, %rax
 516 0120 4C89C1   		movq	%r8, %rcx
 517 0123 A801     		testb	$1, %al
 518 0125 490F45C9 		cmovne	%r9, %rcx
 519 0129 48338AE0 		xorq	-1824(%rdx), %rcx
 519      F8FFFF
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__k] = (_M_x[__k + (__m - __n)] ^ (__y >> 1)
 520              		.loc 7 416 0
 521 0130 48D1E8   		shrq	%rax
 522 0133 4883C208 		addq	$8, %rdx
 523 0137 4831C8   		xorq	%rcx, %rax
 524 013a 488942F0 		movq	%rax, -16(%rdx)
 525              	.LVL42:
 526              	.LBE1885:
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __k = (__n - __m); __k < (__n - 1); ++__k)
 527              		.loc 7 412 0
 528 013e 4C39D2   		cmpq	%r10, %rdx
 529 0141 75C5     		jne	.L34
 530              	.LBE1884:
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       | (_M_x[0] & __lower_mask));
 531              		.loc 7 421 0
 532 0143 488B07   		movq	(%rdi), %rax
 533 0146 488B9778 		movq	4984(%rdi), %rdx
 533      130000
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
GAS LISTING /tmp/ccKUqHDa.s 			page 117


 534              		.loc 7 422 0
 535 014d BEDFB008 		movl	$2567483615, %esi
 535      99
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		       | (_M_x[0] & __lower_mask));
 536              		.loc 7 421 0
 537 0152 4889C1   		movq	%rax, %rcx
 538 0155 4881E200 		andq	$-2147483648, %rdx
 538      000080
 539 015c 81E1FFFF 		andl	$2147483647, %ecx
 539      FF7F
 540 0162 4809CA   		orq	%rcx, %rdx
 541              	.LVL43:
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_x[__n - 1] = (_M_x[__m - 1] ^ (__y >> 1)
 542              		.loc 7 422 0
 543 0165 4889D1   		movq	%rdx, %rcx
 544 0168 48D1E9   		shrq	%rcx
 545 016b 48338F60 		xorq	3168(%rdi), %rcx
 545      0C0000
 546 0172 83E201   		andl	$1, %edx
 547              	.LVL44:
 548 0175 480F45D6 		cmovne	%rsi, %rdx
 549 0179 4831CA   		xorq	%rcx, %rdx
 550 017c 48899778 		movq	%rdx, 4984(%rdi)
 550      130000
 551              	.LVL45:
 552 0183 BA010000 		movl	$1, %edx
 552      00
 553 0188 E993FEFF 		jmp	.L32
 553      FF
 554              	.LBE1881:
 555              	.LBE1880:
 556              	.LBE1886:
 557              	.LBE1887:
 558              	.LBE1888:
 559              		.cfi_endproc
 560              	.LFE5868:
 561              		.size	_ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm25674836
 562              		.section	.text.unlikely._ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm3
 563              	.LCOLDE7:
 564              		.section	.text._ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31EL
 565              	.LHOTE7:
 566              		.section	.rodata.str1.1,"aMS",@progbits,1
 567              	.LC8:
 568 0000 496E7661 		.string	"Invalid number of arguments!"
 568      6C696420 
 568      6E756D62 
 568      6572206F 
 568      66206172 
 569              	.LC9:
 570 001d 55736167 		.string	"Usage:"
 570      653A00
 571              	.LC10:
 572 0024 202000   		.string	"  "
 573              	.LC11:
 574 0027 20524144 		.string	" RADIUS"
 574      49555300 
 575              		.section	.rodata.str1.8,"aMS",@progbits,1
GAS LISTING /tmp/ccKUqHDa.s 			page 118


 576              		.align 8
 577              	.LC12:
 578 0000 20205769 		.string	"  Will generate some stamps of given RADIUS and render"
 578      6C6C2067 
 578      656E6572 
 578      61746520 
 578      736F6D65 
 579 0037 00       		.align 8
 580              	.LC13:
 581 0038 20207468 		.string	"  them next to eachother into `stamps.png`."
 581      656D206E 
 581      65787420 
 581      746F2065 
 581      6163686F 
 582              		.section	.rodata.str1.1
 583              	.LC15:
 584 002f 7374616D 		.string	"stamps.png"
 584      70732E70 
 584      6E6700
 585              	.LC16:
 586 003a 656E636F 		.string	"encoder error "
 586      64657220 
 586      6572726F 
 586      722000
 587              	.LC17:
 588 0049 3A2000   		.string	": "
 589              	.LC18:
 590 004c 64656661 		.string	"default"
 590      756C7400 
 591              	.LC23:
 592 0054 7374616D 		.string	"stamps_heatmapA.png"
 592      70735F68 
 592      6561746D 
 592      6170412E 
 592      706E6700 
 593              		.section	.text.unlikely
 594              	.LCOLDB24:
 595              		.section	.text.startup,"ax",@progbits
 596              	.LHOTB24:
 597              		.p2align 4,,15
 598              		.globl	main
 599              		.type	main, @function
 600              	main:
 601              	.LFB5505:
  40:examples/customstamp_heatmaps.cpp **** {
 602              		.loc 1 40 0
 603              		.cfi_startproc
 604              		.cfi_personality 0x9b,DW.ref.__gxx_personality_v0
 605              		.cfi_lsda 0x1b,.LLSDA5505
 606              	.LVL46:
 607 0000 4157     		pushq	%r15
 608              		.cfi_def_cfa_offset 16
 609              		.cfi_offset 15, -16
 610 0002 4156     		pushq	%r14
 611              		.cfi_def_cfa_offset 24
 612              		.cfi_offset 14, -24
 613 0004 4155     		pushq	%r13
GAS LISTING /tmp/ccKUqHDa.s 			page 119


 614              		.cfi_def_cfa_offset 32
 615              		.cfi_offset 13, -32
 616 0006 4154     		pushq	%r12
 617              		.cfi_def_cfa_offset 40
 618              		.cfi_offset 12, -40
 619 0008 55       		pushq	%rbp
 620              		.cfi_def_cfa_offset 48
 621              		.cfi_offset 6, -48
 622 0009 53       		pushq	%rbx
 623              		.cfi_def_cfa_offset 56
 624              		.cfi_offset 3, -56
 625 000a 4889F5   		movq	%rsi, %rbp
 626 000d 4881EC68 		subq	$10344, %rsp
 626      280000
 627              		.cfi_def_cfa_offset 10400
 628              	.LBB1889:
  41:examples/customstamp_heatmaps.cpp ****     if(argc != 2) {
 629              		.loc 1 41 0
 630 0014 83FF02   		cmpl	$2, %edi
 631 0017 0F84BB00 		je	.L42
 631      0000
  42:examples/customstamp_heatmaps.cpp ****         cerr << "Invalid number of arguments!" << endl;
 632              		.loc 1 42 0
 633 001d 488B3D00 		movq	_ZSt4cerr@GOTPCREL(%rip), %rdi
 633      000000
 634              	.LVL47:
 635 0024 488D3500 		leaq	.LC8(%rip), %rsi
 635      000000
 636              	.LVL48:
 637              	.LEHB0:
 638 002b E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 638      00
 639              	.LVL49:
 640              	.LBB1890:
 641              	.LBB1891:
 642              		.file 8 "/opt/gcc/4.9.2/include/c++/4.9.2/ostream"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Output streams -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // a copy of the GCC Runtime Library Exception along with this program;
GAS LISTING /tmp/ccKUqHDa.s 			page 120


  21:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** /** @file include/ostream
  25:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****  *  This is a Standard C++ Library header.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
  29:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** // ISO C++ 14882: 27.6.2  Output streams
  30:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** //
  31:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #ifndef _GLIBCXX_OSTREAM
  33:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #define _GLIBCXX_OSTREAM 1
  34:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #pragma GCC system_header
  36:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #include <ios>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** #include <bits/ostream_insert.h>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  40:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** namespace std _GLIBCXX_VISIBILITY(default)
  41:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** {
  42:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  43:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  44:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   /**
  45:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @brief  Template class basic_ostream.
  46:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @ingroup io
  47:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
  48:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @tparam _CharT  Type of character stream.
  49:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  @tparam _Traits  Traits for character type, defaults to
  50:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *                   char_traits<_CharT>.
  51:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *
  52:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  This is the base class for all output streams.  It provides text
  53:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  formatting of all builtin types, and communicates with any class
  54:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****    *  derived from basic_streambuf to do the actual output.
  55:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   */
  56:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****   template<typename _CharT, typename _Traits>
  57:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     class basic_ostream : virtual public basic_ios<_CharT, _Traits>
  58:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     {
  59:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****     public:
  60:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Types (inherited from basic_ios):
  61:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef _CharT			 		char_type;
  62:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::int_type 		int_type;
  63:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::pos_type 		pos_type;
  64:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef typename _Traits::off_type 		off_type;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef _Traits			 		traits_type;
  66:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  67:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       // Non-standard Types:
  68:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_streambuf<_CharT, _Traits> 		__streambuf_type;
  69:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_ios<_CharT, _Traits>		__ios_type;
  70:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef basic_ostream<_CharT, _Traits>		__ostream_type;
  71:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef num_put<_CharT, ostreambuf_iterator<_CharT, _Traits> >
  72:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       							__num_put_type;
  73:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       typedef ctype<_CharT>	      			__ctype_type;
  74:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  75:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
  76:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Base constructor.
  77:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
GAS LISTING /tmp/ccKUqHDa.s 			page 121


  78:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This ctor is almost never called by the user directly, rather from
  79:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  derived classes' initialization lists, which pass a pointer to
  80:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  their own stream buffer.
  81:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
  82:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       explicit
  83:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       basic_ostream(__streambuf_type* __sb)
  84:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { this->init(__sb); }
  85:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  86:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
  87:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Base destructor.
  88:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
  89:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This does very little apart from providing a virtual base dtor.
  90:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
  91:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       virtual
  92:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       ~basic_ostream() { }
  93:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /// Safe prefix/suffix operations.
  95:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       class sentry;
  96:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       friend class sentry;
  97:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
  98:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
  99:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 100:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief  Interface for manipulators.
 101:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 102:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  Manipulators such as @c std::endl and @c std::hex use these
 103:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  functions in constructs like "std::cout << std::endl".  For more
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  information, see the iomanip header.
 105:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 106:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 107:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__ostream_type& (*__pf)(__ostream_type&))
 108:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 109:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 110:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 111:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 112:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 643              		.loc 8 113 0
 644 0030 4889C7   		movq	%rax, %rdi
 645 0033 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 645      00
 646              	.LVL50:
 647              	.LBE1891:
 648              	.LBE1890:
  43:examples/customstamp_heatmaps.cpp ****         cout << "Usage:" << endl;
 649              		.loc 1 43 0
 650 0038 488B1D00 		movq	_ZSt4cout@GOTPCREL(%rip), %rbx
 650      000000
 651 003f 488D3500 		leaq	.LC9(%rip), %rsi
 651      000000
 652 0046 4889DF   		movq	%rbx, %rdi
 653 0049 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 653      00
 654              	.LVL51:
 655              	.LBB1892:
 656              	.LBB1893:
 657              		.loc 8 113 0
 658 004e 4889C7   		movq	%rax, %rdi
 659 0051 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
GAS LISTING /tmp/ccKUqHDa.s 			page 122


 659      00
 660              	.LVL52:
 661              	.LBE1893:
 662              	.LBE1892:
  44:examples/customstamp_heatmaps.cpp ****         cout << "  " << argv[0] << " RADIUS" << endl;
 663              		.loc 1 44 0
 664 0056 488B6D00 		movq	0(%rbp), %rbp
 665              	.LVL53:
 666 005a 488D3500 		leaq	.LC10(%rip), %rsi
 666      000000
 667 0061 4889DF   		movq	%rbx, %rdi
 668 0064 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 668      00
 669              	.LVL54:
 670 0069 4889EE   		movq	%rbp, %rsi
 671 006c 4889C7   		movq	%rax, %rdi
 672 006f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 672      00
 673              	.LVL55:
 674 0074 488D3500 		leaq	.LC11(%rip), %rsi
 674      000000
 675 007b 4889C7   		movq	%rax, %rdi
 676 007e E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 676      00
 677              	.LVL56:
 678              	.LBB1894:
 679              	.LBB1895:
 680              		.loc 8 113 0
 681 0083 4889C7   		movq	%rax, %rdi
 682 0086 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 682      00
 683              	.LVL57:
 684              	.LBE1895:
 685              	.LBE1894:
 686              	.LBB1896:
 687              	.LBB1897:
 688 008b 4889DF   		movq	%rbx, %rdi
 689 008e E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 689      00
 690              	.LVL58:
 691              	.LBE1897:
 692              	.LBE1896:
  46:examples/customstamp_heatmaps.cpp ****         cout << "  Will generate some stamps of given RADIUS and render" << endl;
 693              		.loc 1 46 0
 694 0093 488D3500 		leaq	.LC12(%rip), %rsi
 694      000000
 695 009a 4889DF   		movq	%rbx, %rdi
 696 009d E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 696      00
 697              	.LVL59:
 698              	.LBB1898:
 699              	.LBB1899:
 700              		.loc 8 113 0
 701 00a2 4889C7   		movq	%rax, %rdi
 702 00a5 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 702      00
 703              	.LVL60:
GAS LISTING /tmp/ccKUqHDa.s 			page 123


 704              	.LBE1899:
 705              	.LBE1898:
  47:examples/customstamp_heatmaps.cpp ****         cout << "  them next to eachother into `stamps.png`." << endl;
 706              		.loc 1 47 0
 707 00aa 488D3500 		leaq	.LC13(%rip), %rsi
 707      000000
 708 00b1 4889DF   		movq	%rbx, %rdi
 709 00b4 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 709      00
 710              	.LVL61:
 711              	.LBB1900:
 712              	.LBB1901:
 713              		.loc 8 113 0
 714 00b9 4889C7   		movq	%rax, %rdi
 715 00bc E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 715      00
 716              	.LEHE0:
 717              	.LVL62:
 718              	.LBE1901:
 719              	.LBE1900:
  49:examples/customstamp_heatmaps.cpp ****         return 1;
 720              		.loc 1 49 0
 721 00c1 B8010000 		movl	$1, %eax
 721      00
 722              	.LVL63:
 723              	.L125:
 724              	.LBE1889:
  65:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_load(d, d, &rhomboidal[0]),
  66:examples/customstamp_heatmaps.cpp ****     };
  67:examples/customstamp_heatmaps.cpp **** 
  68:examples/customstamp_heatmaps.cpp ****     const size_t nstamps = sizeof(stamps)/sizeof(stamps[0]);
  69:examples/customstamp_heatmaps.cpp **** 
  70:examples/customstamp_heatmaps.cpp ****     // First, draw a picture containing all of the stamps.
  71:examples/customstamp_heatmaps.cpp ****     {
  72:examples/customstamp_heatmaps.cpp ****         const size_t w = nstamps*d, h = d;
  73:examples/customstamp_heatmaps.cpp ****         heatmap_t* hm = heatmap_new(w, h);
  74:examples/customstamp_heatmaps.cpp **** 
  75:examples/customstamp_heatmaps.cpp ****         for(size_t i = 0 ; i < nstamps ; ++i)
  76:examples/customstamp_heatmaps.cpp ****             heatmap_add_point_with_stamp(hm, i*d+r, r, stamps[i]);
  77:examples/customstamp_heatmaps.cpp **** 
  78:examples/customstamp_heatmaps.cpp ****         vector<unsigned char> image(w*h*4);
  79:examples/customstamp_heatmaps.cpp ****         heatmap_render_to(hm, heatmap_cs_b2w_opaque, &image[0]);
  80:examples/customstamp_heatmaps.cpp ****         heatmap_free(hm);
  81:examples/customstamp_heatmaps.cpp **** 
  82:examples/customstamp_heatmaps.cpp ****         if(unsigned error = lodepng::encode("stamps.png", image, w, h)) {
  83:examples/customstamp_heatmaps.cpp ****             std::cerr << "encoder error " << error << ": "<< lodepng_error_text(error) << std::endl
  84:examples/customstamp_heatmaps.cpp ****             return 1;
  85:examples/customstamp_heatmaps.cpp ****         }
  86:examples/customstamp_heatmaps.cpp ****     }
  87:examples/customstamp_heatmaps.cpp **** 
  88:examples/customstamp_heatmaps.cpp ****     // Then, draw actual heatmaps using these stamps.
  89:examples/customstamp_heatmaps.cpp ****     // We draw each heatmap individually because we want each of them to be
  90:examples/customstamp_heatmaps.cpp ****     // normalized independently.
  91:examples/customstamp_heatmaps.cpp ****     {
  92:examples/customstamp_heatmaps.cpp ****         const size_t w = d*20, h = w, npoints = 1000;
  93:examples/customstamp_heatmaps.cpp ****         array<heatmap_t*, nstamps> hms;
  94:examples/customstamp_heatmaps.cpp ****         for(auto& hm : hms) {
GAS LISTING /tmp/ccKUqHDa.s 			page 124


  95:examples/customstamp_heatmaps.cpp ****             hm = heatmap_new(w, h);
  96:examples/customstamp_heatmaps.cpp ****         }
  97:examples/customstamp_heatmaps.cpp **** 
  98:examples/customstamp_heatmaps.cpp ****         // This creates two normal random distributions...
  99:examples/customstamp_heatmaps.cpp ****         random_device rd;
 100:examples/customstamp_heatmaps.cpp ****         mt19937 prng(rd());
 101:examples/customstamp_heatmaps.cpp ****         normal_distribution<float> x_distr(0.5f*w, 0.5f/3.0f*w), y_distr(0.5f*h, 0.25f*h);
 102:examples/customstamp_heatmaps.cpp ****         // ...which are then used to generate the random points.
 103:examples/customstamp_heatmaps.cpp ****         vector<pair<float,float>> points(npoints);
 104:examples/customstamp_heatmaps.cpp ****         generate(points.begin(), points.end(), [&](){return make_pair(x_distr(prng), y_distr(prng))
 105:examples/customstamp_heatmaps.cpp **** 
 106:examples/customstamp_heatmaps.cpp ****         char filename[] = "stamps_heatmapA.png";
 107:examples/customstamp_heatmaps.cpp ****         for(size_t i = 0 ; i < nstamps ; ++i) {
 108:examples/customstamp_heatmaps.cpp ****             auto* hm = hms[i];
 109:examples/customstamp_heatmaps.cpp **** 
 110:examples/customstamp_heatmaps.cpp ****             for(auto point : points) {
 111:examples/customstamp_heatmaps.cpp ****                 heatmap_add_point_with_stamp(hm, point.first, point.second, stamps[i]);
 112:examples/customstamp_heatmaps.cpp ****             }
 113:examples/customstamp_heatmaps.cpp **** 
 114:examples/customstamp_heatmaps.cpp ****             vector<unsigned char> image(w*h*4);
 115:examples/customstamp_heatmaps.cpp ****             heatmap_render_default_to(hm, &image[0]);
 116:examples/customstamp_heatmaps.cpp ****             heatmap_free(hm);
 117:examples/customstamp_heatmaps.cpp **** 
 118:examples/customstamp_heatmaps.cpp ****             if(unsigned error = lodepng::encode(filename, image, w, h)) {
 119:examples/customstamp_heatmaps.cpp ****                 cerr << "encoder error " << error << ": "<< lodepng_error_text(error) << endl;
 120:examples/customstamp_heatmaps.cpp ****                 return 1;
 121:examples/customstamp_heatmaps.cpp ****             }
 122:examples/customstamp_heatmaps.cpp **** 
 123:examples/customstamp_heatmaps.cpp ****             // INSANE hack :)
 124:examples/customstamp_heatmaps.cpp ****             filename[14]++;
 125:examples/customstamp_heatmaps.cpp ****         }
 126:examples/customstamp_heatmaps.cpp ****     }
 127:examples/customstamp_heatmaps.cpp **** 
 128:examples/customstamp_heatmaps.cpp ****     for(auto stamp : stamps)
 129:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_free(stamp);
 130:examples/customstamp_heatmaps.cpp **** 
 131:examples/customstamp_heatmaps.cpp ****     return 0;
 132:examples/customstamp_heatmaps.cpp **** }
 725              		.loc 1 133 0
 726 00c6 4881C468 		addq	$10344, %rsp
 726      280000
 727              		.cfi_remember_state
 728              		.cfi_def_cfa_offset 56
 729 00cd 5B       		popq	%rbx
 730              		.cfi_def_cfa_offset 48
 731 00ce 5D       		popq	%rbp
 732              		.cfi_def_cfa_offset 40
 733 00cf 415C     		popq	%r12
 734              		.cfi_def_cfa_offset 32
 735 00d1 415D     		popq	%r13
 736              		.cfi_def_cfa_offset 24
 737 00d3 415E     		popq	%r14
 738              		.cfi_def_cfa_offset 16
 739 00d5 415F     		popq	%r15
 740              		.cfi_def_cfa_offset 8
 741 00d7 C3       		ret
 742              	.LVL64:
GAS LISTING /tmp/ccKUqHDa.s 			page 125


 743              	.L42:
 744              		.cfi_restore_state
 745              	.LBB2293:
 746              	.LBB1902:
 747              	.LBB1903:
 748              		.file 9 "/usr/include/stdlib.h"
   0:/usr/include/stdlib.h **** /* Copyright (C) 1991-2007, 2009, 2010 Free Software Foundation, Inc.
   1:/usr/include/stdlib.h ****    This file is part of the GNU C Library.
   2:/usr/include/stdlib.h **** 
   3:/usr/include/stdlib.h ****    The GNU C Library is free software; you can redistribute it and/or
   4:/usr/include/stdlib.h ****    modify it under the terms of the GNU Lesser General Public
   5:/usr/include/stdlib.h ****    License as published by the Free Software Foundation; either
   6:/usr/include/stdlib.h ****    version 2.1 of the License, or (at your option) any later version.
   7:/usr/include/stdlib.h **** 
   8:/usr/include/stdlib.h ****    The GNU C Library is distributed in the hope that it will be useful,
   9:/usr/include/stdlib.h ****    but WITHOUT ANY WARRANTY; without even the implied warranty of
  10:/usr/include/stdlib.h ****    MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the GNU
  11:/usr/include/stdlib.h ****    Lesser General Public License for more details.
  12:/usr/include/stdlib.h **** 
  13:/usr/include/stdlib.h ****    You should have received a copy of the GNU Lesser General Public
  14:/usr/include/stdlib.h ****    License along with the GNU C Library; if not, write to the Free
  15:/usr/include/stdlib.h ****    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston, MA
  16:/usr/include/stdlib.h ****    02111-1307 USA.  */
  17:/usr/include/stdlib.h **** 
  18:/usr/include/stdlib.h **** /*
  19:/usr/include/stdlib.h ****  *	ISO C99 Standard: 7.20 General utilities	<stdlib.h>
  20:/usr/include/stdlib.h ****  */
  21:/usr/include/stdlib.h **** 
  22:/usr/include/stdlib.h **** #ifndef	_STDLIB_H
  23:/usr/include/stdlib.h **** 
  24:/usr/include/stdlib.h **** #include <features.h>
  25:/usr/include/stdlib.h **** 
  26:/usr/include/stdlib.h **** /* Get size_t, wchar_t and NULL from <stddef.h>.  */
  27:/usr/include/stdlib.h **** #define		__need_size_t
  28:/usr/include/stdlib.h **** #ifndef __need_malloc_and_calloc
  29:/usr/include/stdlib.h **** # define	__need_wchar_t
  30:/usr/include/stdlib.h **** # define	__need_NULL
  31:/usr/include/stdlib.h **** #endif
  32:/usr/include/stdlib.h **** #include <stddef.h>
  33:/usr/include/stdlib.h **** 
  34:/usr/include/stdlib.h **** __BEGIN_DECLS
  35:/usr/include/stdlib.h **** 
  36:/usr/include/stdlib.h **** #ifndef __need_malloc_and_calloc
  37:/usr/include/stdlib.h **** #define	_STDLIB_H	1
  38:/usr/include/stdlib.h **** 
  39:/usr/include/stdlib.h **** #if (defined __USE_XOPEN || defined __USE_XOPEN2K8) && !defined _SYS_WAIT_H
  40:/usr/include/stdlib.h **** /* XPG requires a few symbols from <sys/wait.h> being defined.  */
  41:/usr/include/stdlib.h **** # include <bits/waitflags.h>
  42:/usr/include/stdlib.h **** # include <bits/waitstatus.h>
  43:/usr/include/stdlib.h **** 
  44:/usr/include/stdlib.h **** # ifdef __USE_BSD
  45:/usr/include/stdlib.h **** 
  46:/usr/include/stdlib.h **** /* Lots of hair to allow traditional BSD use of `union wait'
  47:/usr/include/stdlib.h ****    as well as POSIX.1 use of `int' for the status word.  */
  48:/usr/include/stdlib.h **** 
  49:/usr/include/stdlib.h **** #  if defined __GNUC__ && !defined __cplusplus
  50:/usr/include/stdlib.h **** #   define __WAIT_INT(status) \
GAS LISTING /tmp/ccKUqHDa.s 			page 126


  51:/usr/include/stdlib.h ****   (__extension__ (((union { __typeof(status) __in; int __i; }) \
  52:/usr/include/stdlib.h **** 		   { .__in = (status) }).__i))
  53:/usr/include/stdlib.h **** #  else
  54:/usr/include/stdlib.h **** #   define __WAIT_INT(status)	(*(int *) &(status))
  55:/usr/include/stdlib.h **** #  endif
  56:/usr/include/stdlib.h **** 
  57:/usr/include/stdlib.h **** /* This is the type of the argument to `wait'.  The funky union
  58:/usr/include/stdlib.h ****    causes redeclarations with either `int *' or `union wait *' to be
  59:/usr/include/stdlib.h ****    allowed without complaint.  __WAIT_STATUS_DEFN is the type used in
  60:/usr/include/stdlib.h ****    the actual function definitions.  */
  61:/usr/include/stdlib.h **** 
  62:/usr/include/stdlib.h **** #  if !defined __GNUC__ || __GNUC__ < 2 || defined __cplusplus
  63:/usr/include/stdlib.h **** #   define __WAIT_STATUS	void *
  64:/usr/include/stdlib.h **** #   define __WAIT_STATUS_DEFN	void *
  65:/usr/include/stdlib.h **** #  else
  66:/usr/include/stdlib.h **** /* This works in GCC 2.6.1 and later.  */
  67:/usr/include/stdlib.h **** typedef union
  68:/usr/include/stdlib.h ****   {
  69:/usr/include/stdlib.h ****     union wait *__uptr;
  70:/usr/include/stdlib.h ****     int *__iptr;
  71:/usr/include/stdlib.h ****   } __WAIT_STATUS __attribute__ ((__transparent_union__));
  72:/usr/include/stdlib.h **** #   define __WAIT_STATUS_DEFN	int *
  73:/usr/include/stdlib.h **** #  endif
  74:/usr/include/stdlib.h **** 
  75:/usr/include/stdlib.h **** # else /* Don't use BSD.  */
  76:/usr/include/stdlib.h **** 
  77:/usr/include/stdlib.h **** #  define __WAIT_INT(status)	(status)
  78:/usr/include/stdlib.h **** #  define __WAIT_STATUS		int *
  79:/usr/include/stdlib.h **** #  define __WAIT_STATUS_DEFN	int *
  80:/usr/include/stdlib.h **** 
  81:/usr/include/stdlib.h **** # endif /* Use BSD.  */
  82:/usr/include/stdlib.h **** 
  83:/usr/include/stdlib.h **** /* Define the macros <sys/wait.h> also would define this way.  */
  84:/usr/include/stdlib.h **** # define WEXITSTATUS(status)	__WEXITSTATUS (__WAIT_INT (status))
  85:/usr/include/stdlib.h **** # define WTERMSIG(status)	__WTERMSIG (__WAIT_INT (status))
  86:/usr/include/stdlib.h **** # define WSTOPSIG(status)	__WSTOPSIG (__WAIT_INT (status))
  87:/usr/include/stdlib.h **** # define WIFEXITED(status)	__WIFEXITED (__WAIT_INT (status))
  88:/usr/include/stdlib.h **** # define WIFSIGNALED(status)	__WIFSIGNALED (__WAIT_INT (status))
  89:/usr/include/stdlib.h **** # define WIFSTOPPED(status)	__WIFSTOPPED (__WAIT_INT (status))
  90:/usr/include/stdlib.h **** # ifdef __WIFCONTINUED
  91:/usr/include/stdlib.h **** #  define WIFCONTINUED(status)	__WIFCONTINUED (__WAIT_INT (status))
  92:/usr/include/stdlib.h **** # endif
  93:/usr/include/stdlib.h **** #endif	/* X/Open or XPG7 and <sys/wait.h> not included.  */
  94:/usr/include/stdlib.h **** 
  95:/usr/include/stdlib.h **** __BEGIN_NAMESPACE_STD
  96:/usr/include/stdlib.h **** /* Returned by `div'.  */
  97:/usr/include/stdlib.h **** typedef struct
  98:/usr/include/stdlib.h ****   {
  99:/usr/include/stdlib.h ****     int quot;			/* Quotient.  */
 100:/usr/include/stdlib.h ****     int rem;			/* Remainder.  */
 101:/usr/include/stdlib.h ****   } div_t;
 102:/usr/include/stdlib.h **** 
 103:/usr/include/stdlib.h **** /* Returned by `ldiv'.  */
 104:/usr/include/stdlib.h **** #ifndef __ldiv_t_defined
 105:/usr/include/stdlib.h **** typedef struct
 106:/usr/include/stdlib.h ****   {
 107:/usr/include/stdlib.h ****     long int quot;		/* Quotient.  */
GAS LISTING /tmp/ccKUqHDa.s 			page 127


 108:/usr/include/stdlib.h ****     long int rem;		/* Remainder.  */
 109:/usr/include/stdlib.h ****   } ldiv_t;
 110:/usr/include/stdlib.h **** # define __ldiv_t_defined	1
 111:/usr/include/stdlib.h **** #endif
 112:/usr/include/stdlib.h **** __END_NAMESPACE_STD
 113:/usr/include/stdlib.h **** 
 114:/usr/include/stdlib.h **** #if defined __USE_ISOC99 && !defined __lldiv_t_defined
 115:/usr/include/stdlib.h **** __BEGIN_NAMESPACE_C99
 116:/usr/include/stdlib.h **** /* Returned by `lldiv'.  */
 117:/usr/include/stdlib.h **** __extension__ typedef struct
 118:/usr/include/stdlib.h ****   {
 119:/usr/include/stdlib.h ****     long long int quot;		/* Quotient.  */
 120:/usr/include/stdlib.h ****     long long int rem;		/* Remainder.  */
 121:/usr/include/stdlib.h ****   } lldiv_t;
 122:/usr/include/stdlib.h **** # define __lldiv_t_defined	1
 123:/usr/include/stdlib.h **** __END_NAMESPACE_C99
 124:/usr/include/stdlib.h **** #endif
 125:/usr/include/stdlib.h **** 
 126:/usr/include/stdlib.h **** 
 127:/usr/include/stdlib.h **** /* The largest number rand will return (same as INT_MAX).  */
 128:/usr/include/stdlib.h **** #define	RAND_MAX	2147483647
 129:/usr/include/stdlib.h **** 
 130:/usr/include/stdlib.h **** 
 131:/usr/include/stdlib.h **** /* We define these the same for all machines.
 132:/usr/include/stdlib.h ****    Changes from this to the outside world should be done in `_exit'.  */
 133:/usr/include/stdlib.h **** #define	EXIT_FAILURE	1	/* Failing exit status.  */
 134:/usr/include/stdlib.h **** #define	EXIT_SUCCESS	0	/* Successful exit status.  */
 135:/usr/include/stdlib.h **** 
 136:/usr/include/stdlib.h **** 
 137:/usr/include/stdlib.h **** /* Maximum length of a multibyte character in the current locale.  */
 138:/usr/include/stdlib.h **** #define	MB_CUR_MAX	(__ctype_get_mb_cur_max ())
 139:/usr/include/stdlib.h **** extern size_t __ctype_get_mb_cur_max (void) __THROW __wur;
 140:/usr/include/stdlib.h **** 
 141:/usr/include/stdlib.h **** 
 142:/usr/include/stdlib.h **** __BEGIN_NAMESPACE_STD
 143:/usr/include/stdlib.h **** /* Convert a string to a floating-point number.  */
 144:/usr/include/stdlib.h **** extern double atof (__const char *__nptr)
 145:/usr/include/stdlib.h ****      __THROW __attribute_pure__ __nonnull ((1)) __wur;
 146:/usr/include/stdlib.h **** /* Convert a string to an integer.  */
 147:/usr/include/stdlib.h **** extern int atoi (__const char *__nptr)
 148:/usr/include/stdlib.h ****      __THROW __attribute_pure__ __nonnull ((1)) __wur;
 149:/usr/include/stdlib.h **** /* Convert a string to a long integer.  */
 150:/usr/include/stdlib.h **** extern long int atol (__const char *__nptr)
 151:/usr/include/stdlib.h ****      __THROW __attribute_pure__ __nonnull ((1)) __wur;
 152:/usr/include/stdlib.h **** __END_NAMESPACE_STD
 153:/usr/include/stdlib.h **** 
 154:/usr/include/stdlib.h **** #if defined __USE_ISOC99 || (defined __GLIBC_HAVE_LONG_LONG && defined __USE_MISC)
 155:/usr/include/stdlib.h **** __BEGIN_NAMESPACE_C99
 156:/usr/include/stdlib.h **** /* Convert a string to a long long integer.  */
 157:/usr/include/stdlib.h **** __extension__ extern long long int atoll (__const char *__nptr)
 158:/usr/include/stdlib.h ****      __THROW __attribute_pure__ __nonnull ((1)) __wur;
 159:/usr/include/stdlib.h **** __END_NAMESPACE_C99
 160:/usr/include/stdlib.h **** #endif
 161:/usr/include/stdlib.h **** 
 162:/usr/include/stdlib.h **** __BEGIN_NAMESPACE_STD
 163:/usr/include/stdlib.h **** /* Convert a string to a floating-point number.  */
 164:/usr/include/stdlib.h **** extern double strtod (__const char *__restrict __nptr,
GAS LISTING /tmp/ccKUqHDa.s 			page 128


 165:/usr/include/stdlib.h **** 		      char **__restrict __endptr)
 166:/usr/include/stdlib.h ****      __THROW __nonnull ((1)) __wur;
 167:/usr/include/stdlib.h **** __END_NAMESPACE_STD
 168:/usr/include/stdlib.h **** 
 169:/usr/include/stdlib.h **** #ifdef	__USE_ISOC99
 170:/usr/include/stdlib.h **** __BEGIN_NAMESPACE_C99
 171:/usr/include/stdlib.h **** /* Likewise for `float' and `long double' sizes of floating-point numbers.  */
 172:/usr/include/stdlib.h **** extern float strtof (__const char *__restrict __nptr,
 173:/usr/include/stdlib.h **** 		     char **__restrict __endptr) __THROW __nonnull ((1)) __wur;
 174:/usr/include/stdlib.h **** 
 175:/usr/include/stdlib.h **** extern long double strtold (__const char *__restrict __nptr,
 176:/usr/include/stdlib.h **** 			    char **__restrict __endptr)
 177:/usr/include/stdlib.h ****      __THROW __nonnull ((1)) __wur;
 178:/usr/include/stdlib.h **** __END_NAMESPACE_C99
 179:/usr/include/stdlib.h **** #endif
 180:/usr/include/stdlib.h **** 
 181:/usr/include/stdlib.h **** __BEGIN_NAMESPACE_STD
 182:/usr/include/stdlib.h **** /* Convert a string to a long integer.  */
 183:/usr/include/stdlib.h **** extern long int strtol (__const char *__restrict __nptr,
 184:/usr/include/stdlib.h **** 			char **__restrict __endptr, int __base)
 185:/usr/include/stdlib.h ****      __THROW __nonnull ((1)) __wur;
 186:/usr/include/stdlib.h **** /* Convert a string to an unsigned long integer.  */
 187:/usr/include/stdlib.h **** extern unsigned long int strtoul (__const char *__restrict __nptr,
 188:/usr/include/stdlib.h **** 				  char **__restrict __endptr, int __base)
 189:/usr/include/stdlib.h ****      __THROW __nonnull ((1)) __wur;
 190:/usr/include/stdlib.h **** __END_NAMESPACE_STD
 191:/usr/include/stdlib.h **** 
 192:/usr/include/stdlib.h **** #if defined __GLIBC_HAVE_LONG_LONG && defined __USE_BSD
 193:/usr/include/stdlib.h **** /* Convert a string to a quadword integer.  */
 194:/usr/include/stdlib.h **** __extension__
 195:/usr/include/stdlib.h **** extern long long int strtoq (__const char *__restrict __nptr,
 196:/usr/include/stdlib.h **** 			     char **__restrict __endptr, int __base)
 197:/usr/include/stdlib.h ****      __THROW __nonnull ((1)) __wur;
 198:/usr/include/stdlib.h **** /* Convert a string to an unsigned quadword integer.  */
 199:/usr/include/stdlib.h **** __extension__
 200:/usr/include/stdlib.h **** extern unsigned long long int strtouq (__const char *__restrict __nptr,
 201:/usr/include/stdlib.h **** 				       char **__restrict __endptr, int __base)
 202:/usr/include/stdlib.h ****      __THROW __nonnull ((1)) __wur;
 203:/usr/include/stdlib.h **** #endif /* GCC and use BSD.  */
 204:/usr/include/stdlib.h **** 
 205:/usr/include/stdlib.h **** #if defined __USE_ISOC99 || (defined __GLIBC_HAVE_LONG_LONG && defined __USE_MISC)
 206:/usr/include/stdlib.h **** __BEGIN_NAMESPACE_C99
 207:/usr/include/stdlib.h **** /* Convert a string to a quadword integer.  */
 208:/usr/include/stdlib.h **** __extension__
 209:/usr/include/stdlib.h **** extern long long int strtoll (__const char *__restrict __nptr,
 210:/usr/include/stdlib.h **** 			      char **__restrict __endptr, int __base)
 211:/usr/include/stdlib.h ****      __THROW __nonnull ((1)) __wur;
 212:/usr/include/stdlib.h **** /* Convert a string to an unsigned quadword integer.  */
 213:/usr/include/stdlib.h **** __extension__
 214:/usr/include/stdlib.h **** extern unsigned long long int strtoull (__const char *__restrict __nptr,
 215:/usr/include/stdlib.h **** 					char **__restrict __endptr, int __base)
 216:/usr/include/stdlib.h ****      __THROW __nonnull ((1)) __wur;
 217:/usr/include/stdlib.h **** __END_NAMESPACE_C99
 218:/usr/include/stdlib.h **** #endif /* ISO C99 or GCC and use MISC.  */
 219:/usr/include/stdlib.h **** 
 220:/usr/include/stdlib.h **** 
 221:/usr/include/stdlib.h **** #ifdef __USE_GNU
GAS LISTING /tmp/ccKUqHDa.s 			page 129


 222:/usr/include/stdlib.h **** /* The concept of one static locale per category is not very well
 223:/usr/include/stdlib.h ****    thought out.  Many applications will need to process its data using
 224:/usr/include/stdlib.h ****    information from several different locales.  Another problem is
 225:/usr/include/stdlib.h ****    the implementation of the internationalization handling in the
 226:/usr/include/stdlib.h ****    ISO C++ standard library.  To support this another set of
 227:/usr/include/stdlib.h ****    the functions using locale data exist which take an additional
 228:/usr/include/stdlib.h ****    argument.
 229:/usr/include/stdlib.h **** 
 230:/usr/include/stdlib.h ****    Attention: even though several *_l interfaces are part of POSIX:2008,
 231:/usr/include/stdlib.h ****    these are not.  */
 232:/usr/include/stdlib.h **** 
 233:/usr/include/stdlib.h **** /* Structure for reentrant locale using functions.  This is an
 234:/usr/include/stdlib.h ****    (almost) opaque type for the user level programs.  */
 235:/usr/include/stdlib.h **** # include <xlocale.h>
 236:/usr/include/stdlib.h **** 
 237:/usr/include/stdlib.h **** /* Special versions of the functions above which take the locale to
 238:/usr/include/stdlib.h ****    use as an additional parameter.  */
 239:/usr/include/stdlib.h **** extern long int strtol_l (__const char *__restrict __nptr,
 240:/usr/include/stdlib.h **** 			  char **__restrict __endptr, int __base,
 241:/usr/include/stdlib.h **** 			  __locale_t __loc) __THROW __nonnull ((1, 4)) __wur;
 242:/usr/include/stdlib.h **** 
 243:/usr/include/stdlib.h **** extern unsigned long int strtoul_l (__const char *__restrict __nptr,
 244:/usr/include/stdlib.h **** 				    char **__restrict __endptr,
 245:/usr/include/stdlib.h **** 				    int __base, __locale_t __loc)
 246:/usr/include/stdlib.h ****      __THROW __nonnull ((1, 4)) __wur;
 247:/usr/include/stdlib.h **** 
 248:/usr/include/stdlib.h **** __extension__
 249:/usr/include/stdlib.h **** extern long long int strtoll_l (__const char *__restrict __nptr,
 250:/usr/include/stdlib.h **** 				char **__restrict __endptr, int __base,
 251:/usr/include/stdlib.h **** 				__locale_t __loc)
 252:/usr/include/stdlib.h ****      __THROW __nonnull ((1, 4)) __wur;
 253:/usr/include/stdlib.h **** 
 254:/usr/include/stdlib.h **** __extension__
 255:/usr/include/stdlib.h **** extern unsigned long long int strtoull_l (__const char *__restrict __nptr,
 256:/usr/include/stdlib.h **** 					  char **__restrict __endptr,
 257:/usr/include/stdlib.h **** 					  int __base, __locale_t __loc)
 258:/usr/include/stdlib.h ****      __THROW __nonnull ((1, 4)) __wur;
 259:/usr/include/stdlib.h **** 
 260:/usr/include/stdlib.h **** extern double strtod_l (__const char *__restrict __nptr,
 261:/usr/include/stdlib.h **** 			char **__restrict __endptr, __locale_t __loc)
 262:/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3)) __wur;
 263:/usr/include/stdlib.h **** 
 264:/usr/include/stdlib.h **** extern float strtof_l (__const char *__restrict __nptr,
 265:/usr/include/stdlib.h **** 		       char **__restrict __endptr, __locale_t __loc)
 266:/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3)) __wur;
 267:/usr/include/stdlib.h **** 
 268:/usr/include/stdlib.h **** extern long double strtold_l (__const char *__restrict __nptr,
 269:/usr/include/stdlib.h **** 			      char **__restrict __endptr,
 270:/usr/include/stdlib.h **** 			      __locale_t __loc)
 271:/usr/include/stdlib.h ****      __THROW __nonnull ((1, 3)) __wur;
 272:/usr/include/stdlib.h **** #endif /* GNU */
 273:/usr/include/stdlib.h **** 
 274:/usr/include/stdlib.h **** 
 275:/usr/include/stdlib.h **** #ifdef __USE_EXTERN_INLINES
 276:/usr/include/stdlib.h **** __BEGIN_NAMESPACE_STD
 277:/usr/include/stdlib.h **** __extern_inline double
 278:/usr/include/stdlib.h **** __NTH (atof (__const char *__nptr))
GAS LISTING /tmp/ccKUqHDa.s 			page 130


 279:/usr/include/stdlib.h **** {
 280:/usr/include/stdlib.h ****   return strtod (__nptr, (char **) NULL);
 281:/usr/include/stdlib.h **** }
 282:/usr/include/stdlib.h **** __extern_inline int
 283:/usr/include/stdlib.h **** __NTH (atoi (__const char *__nptr))
 284:/usr/include/stdlib.h **** {
 285:/usr/include/stdlib.h ****   return (int) strtol (__nptr, (char **) NULL, 10);
 749              		.loc 9 286 0
 750 00d8 488B7E08 		movq	8(%rsi), %rdi
 751              	.LVL65:
 752 00dc BA0A0000 		movl	$10, %edx
 752      00
 753 00e1 31F6     		xorl	%esi, %esi
 754              	.LVL66:
 755 00e3 E8000000 		call	strtol@PLT
 755      00
 756              	.LVL67:
 757              	.LBE1903:
 758              	.LBE1902:
  52:examples/customstamp_heatmaps.cpp ****     const size_t r = atoi(argv[1]), d = 2*r+1;
 759              		.loc 1 52 0
 760 00e8 4863D8   		movslq	%eax, %rbx
 761              	.LVL68:
 762              	.LBB1904:
 763              	.LBB1905:
 764              	.LBB1906:
 765              	.LBB1907:
 766              	.LBB1908:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : 0;
 767              		.loc 4 170 0
 768 00eb 48C74424 		movq	$0, 88(%rsp)
 768      58000000 
 768      00
 769              	.LBE1908:
 770              	.LBE1907:
 771              	.LBE1906:
 772              	.LBE1905:
 773              	.LBE1904:
  52:examples/customstamp_heatmaps.cpp ****     const size_t r = atoi(argv[1]), d = 2*r+1;
 774              		.loc 1 52 0
 775 00f4 4C8D641B 		leaq	1(%rbx,%rbx), %r12
 775      01
 776              	.LVL69:
  54:examples/customstamp_heatmaps.cpp ****     vector<float> rhomboidal(d*d, 0.0f);
 777              		.loc 1 54 0
 778 00f9 4C89E0   		movq	%r12, %rax
 779 00fc 490FAFC4 		imulq	%r12, %rax
 780              	.LVL70:
 781              	.LBB1931:
 782              	.LBB1927:
 783              	.LBB1923:
 784              	.LBB1919:
 785              	.LBB1915:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : 0;
 786              		.loc 4 170 0
 787 0100 4885C0   		testq	%rax, %rax
 788 0103 0F858107 		jne	.L164
GAS LISTING /tmp/ccKUqHDa.s 			page 131


 788      0000
 789              	.LVL71:
 790              	.L44:
 791              	.LBE1915:
 792              	.LBE1919:
 793              	.LBE1923:
 794              	.LBE1927:
 795              	.LBE1931:
 796              	.LBB1932:
  55:examples/customstamp_heatmaps.cpp ****     for(long y = 0 ; y < (int)d ; ++y) {
 797              		.loc 1 55 0
 798 0109 4963FC   		movslq	%r12d, %rdi
 799 010c 4885FF   		testq	%rdi, %rdi
 800 010f 0F8EB000 		jle	.L52
 800      0000
 801 0115 4889DA   		movq	%rbx, %rdx
 802 0118 4883C201 		addq	$1, %rdx
 803 011c 0F881608 		js	.L99
 803      0000
 804 0122 660FEFD2 		pxor	%xmm2, %xmm2
 805 0126 F3480F2A 		cvtsi2ssq	%rdx, %xmm2
 805      D2
 806              	.L100:
 807 012b 488B7424 		movq	88(%rsp), %rsi
 807      58
 808 0130 4989D8   		movq	%rbx, %r8
 809 0133 4989F9   		movq	%rdi, %r9
 810              	.LBB1933:
 811              	.LBB1934:
 812              	.LBB1935:
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__b < __a)
 813              		.loc 6 199 0
 814 0136 660FEFDB 		pxor	%xmm3, %xmm3
 815 013a 4E8D14A5 		leaq	0(,%r12,4), %r10
 815      00000000 
 816 0142 49F7D8   		negq	%r8
 817 0145 4929D9   		subq	%rbx, %r9
 818 0148 F30F100D 		movss	.LC14(%rip), %xmm1
 818      00000000 
 819              	.LVL72:
 820              		.p2align 4,,10
 821              		.p2align 3
 822              	.L51:
 823 0150 4C89C0   		movq	%r8, %rax
 824              	.LBE1935:
 825              	.LBE1934:
 826              	.LBE1933:
 827              	.LBE1932:
 828              	.LBB1943:
 829              	.LBB1928:
 830              	.LBB1924:
 831              	.LBB1920:
 832              	.LBB1916:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	return __n != 0 ? _Tr::allocate(_M_impl, __n) : 0;
 833              		.loc 4 170 0
 834 0153 31D2     		xorl	%edx, %edx
 835 0155 48C1F83F 		sarq	$63, %rax
GAS LISTING /tmp/ccKUqHDa.s 			page 132


 836 0159 4989C3   		movq	%rax, %r11
 837 015c 4D31C3   		xorq	%r8, %r11
 838 015f 4929C3   		subq	%rax, %r11
 839 0162 EB15     		jmp	.L50
 840              	.LVL73:
 841              		.p2align 4,,10
 842 0164 0F1F4000 		.p2align 3
 843              	.L158:
 844              	.LBE1916:
 845              	.LBE1920:
 846              	.LBE1924:
 847              	.LBE1928:
 848              	.LBE1943:
 849              	.LBB1944:
 850              	.LBB1942:
 851              	.LBB1938:
 852              	.LBB1936:
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__b < __a)
 853              		.loc 6 199 0
 854 0168 0F28C3   		movaps	%xmm3, %xmm0
 855              	.LBE1936:
 856              	.LBE1938:
  57:examples/customstamp_heatmaps.cpp ****             rhomboidal[y*d+x] = 1.0f - min(1.0f, (float)(abs(x-(long)r)+abs(y-(long)r))/(r+1));
 857              		.loc 1 57 0
 858 016b F30F1104 		movss	%xmm0, (%rsi,%rdx,4)
 858      96
  56:examples/customstamp_heatmaps.cpp ****         for(long x = 0 ; x < (int)d ; ++x) {
 859              		.loc 1 56 0
 860 0170 4883C201 		addq	$1, %rdx
 861              	.LVL74:
 862 0174 4839FA   		cmpq	%rdi, %rdx
 863 0177 7D40     		jge	.L165
 864              	.LVL75:
 865              	.L50:
 866 0179 4889D0   		movq	%rdx, %rax
  57:examples/customstamp_heatmaps.cpp ****             rhomboidal[y*d+x] = 1.0f - min(1.0f, (float)(abs(x-(long)r)+abs(y-(long)r))/(r+1));
 867              		.loc 1 57 0
 868 017c 660FEFC0 		pxor	%xmm0, %xmm0
 869 0180 4829D8   		subq	%rbx, %rax
 870              	.LVL76:
 871              	.LBB1939:
 872              	.LBB1940:
 873              		.file 10 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // -*- C++ -*- forwarding header.
   1:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // GNU General Public License for more details.
GAS LISTING /tmp/ccKUqHDa.s 			page 133


  14:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** /** @file include/cstdlib
  25:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  26:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****  *  in your programs, rather than any of the @a *.h implementation files.
  27:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****  *
  28:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****  *  This is the C++ version of the Standard C Library header @c stdlib.h,
  29:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****  *  and its contents are (mostly) the same as that header, but are all
  30:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****  *  contained in the namespace @c std (except for names which are defined
  31:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****  *  as macros in C).
  32:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****  */
  33:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  34:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** //
  35:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // ISO C++ 14882: 20.4.6  C library
  36:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** //
  37:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #pragma GCC system_header
  39:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  40:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #include <bits/c++config.h>
  41:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  42:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #ifndef _GLIBCXX_CSTDLIB
  43:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #define _GLIBCXX_CSTDLIB 1
  44:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  45:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #if !_GLIBCXX_HOSTED
  46:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // The C standard does not require a freestanding implementation to
  47:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // provide <stdlib.h>.  However, the C++ standard does still require
  48:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // <cstdlib> -- but only the functionality mentioned in
  49:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // [lib.support.start.term].
  50:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  51:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #define EXIT_SUCCESS 0
  52:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #define EXIT_FAILURE 1
  53:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  54:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** namespace std
  55:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** {
  56:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   extern "C" void abort(void) throw () _GLIBCXX_NORETURN;
  57:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   extern "C" int atexit(void (*)(void)) throw ();
  58:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   extern "C" void exit(int) throw () _GLIBCXX_NORETURN;
  59:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #if __cplusplus >= 201103L
  60:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT
  61:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   extern "C" int at_quick_exit(void (*)(void)) throw ();
  62:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # endif
  63:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # ifdef _GLIBCXX_HAVE_QUICK_EXIT
  64:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   extern "C" void quick_exit(int) throw() _GLIBCXX_NORETURN;
  65:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # endif
  66:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #endif
  67:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** } // namespace std
  68:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  69:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #else
  70:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 134


  71:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #include <stdlib.h>
  72:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
  73:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** // Get rid of those macros defined in <stdlib.h> in lieu of real functions.
  74:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef abort
  75:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef abs
  76:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef atexit
  77:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #if __cplusplus >= 201103L
  78:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT
  79:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #  undef at_quick_exit
  80:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # endif
  81:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #endif
  82:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef atof
  83:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef atoi
  84:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef atol
  85:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef bsearch
  86:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef calloc
  87:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef div
  88:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef exit
  89:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef free
  90:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef getenv
  91:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef labs
  92:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef ldiv
  93:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef malloc
  94:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef mblen
  95:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef mbstowcs
  96:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef mbtowc
  97:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef qsort
  98:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #if __cplusplus >= 201103L
  99:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # ifdef _GLIBCXX_HAVE_QUICK_EXIT
 100:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #  undef quick_exit
 101:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # endif
 102:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #endif
 103:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef rand
 104:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef realloc
 105:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef srand
 106:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef strtod
 107:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef strtol
 108:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef strtoul
 109:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef system
 110:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef wcstombs
 111:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #undef wctomb
 112:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
 113:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** namespace std _GLIBCXX_VISIBILITY(default)
 114:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** {
 115:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 116:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::div_t;
 118:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::ldiv_t;
 119:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
 120:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::abort;
 121:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::abs;
 122:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::atexit;
 123:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #if __cplusplus >= 201103L
 124:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # ifdef _GLIBCXX_HAVE_AT_QUICK_EXIT
 125:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::at_quick_exit;
 126:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # endif
 127:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #endif
GAS LISTING /tmp/ccKUqHDa.s 			page 135


 128:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::atof;
 129:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::atoi;
 130:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::atol;
 131:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::bsearch;
 132:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::calloc;
 133:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::div;
 134:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::exit;
 135:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::free;
 136:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::getenv;
 137:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::labs;
 138:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::ldiv;
 139:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::malloc;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #ifdef _GLIBCXX_HAVE_MBSTATE_T
 141:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::mblen;
 142:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::mbstowcs;
 143:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::mbtowc;
 144:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #endif // _GLIBCXX_HAVE_MBSTATE_T
 145:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::qsort;
 146:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #if __cplusplus >= 201103L
 147:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # ifdef _GLIBCXX_HAVE_QUICK_EXIT
 148:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::quick_exit;
 149:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** # endif
 150:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #endif
 151:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::rand;
 152:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::realloc;
 153:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::srand;
 154:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::strtod;
 155:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::strtol;
 156:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::strtoul;
 157:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::system;
 158:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #ifdef _GLIBCXX_USE_WCHAR_T
 159:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::wcstombs;
 160:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   using ::wctomb;
 161:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #endif // _GLIBCXX_USE_WCHAR_T
 162:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** 
 163:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib **** #ifndef __CORRECT_ISO_CPP_STDLIB_H_PROTO
 164:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   inline long
 165:/opt/gcc/4.9.2/include/c++/4.9.2/cstdlib ****   abs(long __i) { return __builtin_labs(__i); }
 874              		.loc 10 166 0
 875 0183 4889C1   		movq	%rax, %rcx
 876 0186 48C1F93F 		sarq	$63, %rcx
 877 018a 4831C8   		xorq	%rcx, %rax
 878              	.LVL77:
 879 018d 4829C8   		subq	%rcx, %rax
 880              	.LBE1940:
 881              	.LBE1939:
  57:examples/customstamp_heatmaps.cpp ****             rhomboidal[y*d+x] = 1.0f - min(1.0f, (float)(abs(x-(long)r)+abs(y-(long)r))/(r+1));
 882              		.loc 1 57 0
 883 0190 4C01D8   		addq	%r11, %rax
 884 0193 F3480F2A 		cvtsi2ssq	%rax, %xmm0
 884      C0
 885 0198 F30F5EC2 		divss	%xmm2, %xmm0
 886              	.LVL78:
 887              	.LBB1941:
 888              	.LBB1937:
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algobase.h ****       if (__b < __a)
 889              		.loc 6 199 0
GAS LISTING /tmp/ccKUqHDa.s 			page 136


 890 019c 0F2EC8   		ucomiss	%xmm0, %xmm1
 891 019f 76C7     		jbe	.L158
 892 01a1 0F28E9   		movaps	%xmm1, %xmm5
 893 01a4 F30F5CE8 		subss	%xmm0, %xmm5
 894 01a8 0F28C5   		movaps	%xmm5, %xmm0
 895              	.LBE1937:
 896              	.LBE1941:
  57:examples/customstamp_heatmaps.cpp ****             rhomboidal[y*d+x] = 1.0f - min(1.0f, (float)(abs(x-(long)r)+abs(y-(long)r))/(r+1));
 897              		.loc 1 57 0
 898 01ab F30F1104 		movss	%xmm0, (%rsi,%rdx,4)
 898      96
  56:examples/customstamp_heatmaps.cpp ****         for(long x = 0 ; x < (int)d ; ++x) {
 899              		.loc 1 56 0
 900 01b0 4883C201 		addq	$1, %rdx
 901              	.LVL79:
 902 01b4 4839FA   		cmpq	%rdi, %rdx
 903 01b7 7CC0     		jl	.L50
 904              	.LVL80:
 905              	.L165:
 906 01b9 4983C001 		addq	$1, %r8
 907 01bd 4C01D6   		addq	%r10, %rsi
 908              	.LBE1942:
  55:examples/customstamp_heatmaps.cpp ****     for(long y = 0 ; y < (int)d ; ++y) {
 909              		.loc 1 55 0 discriminator 2
 910 01c0 4D39C8   		cmpq	%r9, %r8
 911 01c3 758B     		jne	.L51
 912              	.LVL81:
 913              	.L52:
 914              	.LBE1944:
  62:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen(r),
 915              		.loc 1 62 0
 916 01c5 89DF     		movl	%ebx, %edi
 917 01c7 895C2408 		movl	%ebx, 8(%rsp)
 918              	.LEHB1:
 919 01cb E8000000 		call	heatmap_stamp_gen@PLT
 919      00
 920              	.LVL82:
  63:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return d*d*d*d*d*d;}),
 921              		.loc 1 63 0
 922 01d0 488D3500 		leaq	_ZZ4mainENUlfE_4_FUNEf(%rip), %rsi
 922      000000
 923 01d7 89DF     		movl	%ebx, %edi
  67:examples/customstamp_heatmaps.cpp ****     };
 924              		.loc 1 67 0
 925 01d9 48898424 		movq	%rax, 224(%rsp)
 925      E0000000 
 926              	.LVL83:
  63:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return d*d*d*d*d*d;}),
 927              		.loc 1 63 0
 928 01e1 E8000000 		call	heatmap_stamp_gen_nonlinear@PLT
 928      00
 929              	.LVL84:
  64:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return sqrtf(d);}),
 930              		.loc 1 64 0 discriminator 1
 931 01e6 488D3500 		leaq	_ZZ4mainENUlfE0_4_FUNEf(%rip), %rsi
 931      000000
 932 01ed 89DF     		movl	%ebx, %edi
GAS LISTING /tmp/ccKUqHDa.s 			page 137


  67:examples/customstamp_heatmaps.cpp ****     };
 933              		.loc 1 67 0 discriminator 1
 934 01ef 48898424 		movq	%rax, 232(%rsp)
 934      E8000000 
 935              	.LVL85:
  64:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return sqrtf(d);}),
 936              		.loc 1 64 0 discriminator 1
 937 01f7 E8000000 		call	heatmap_stamp_gen_nonlinear@PLT
 937      00
 938              	.LVL86:
  65:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return sqrtf(sqrtf(sqrtf(d)));}),
 939              		.loc 1 65 0 discriminator 2
 940 01fc 488D3500 		leaq	_ZZ4mainENUlfE1_4_FUNEf(%rip), %rsi
 940      000000
 941 0203 89DF     		movl	%ebx, %edi
  67:examples/customstamp_heatmaps.cpp ****     };
 942              		.loc 1 67 0 discriminator 2
 943 0205 48898424 		movq	%rax, 240(%rsp)
 943      F0000000 
 944              	.LVL87:
  65:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_gen_nonlinear(r, [](float d){return sqrtf(sqrtf(sqrtf(d)));}),
 945              		.loc 1 65 0 discriminator 2
 946 020d E8000000 		call	heatmap_stamp_gen_nonlinear@PLT
 946      00
 947              	.LVL88:
  66:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_load(d, d, &rhomboidal[0]),
 948              		.loc 1 66 0 discriminator 2
 949 0212 488B5424 		movq	88(%rsp), %rdx
 949      58
 950 0217 4489E6   		movl	%r12d, %esi
 951 021a 4489E7   		movl	%r12d, %edi
  67:examples/customstamp_heatmaps.cpp ****     };
 952              		.loc 1 67 0 discriminator 2
 953 021d 48898424 		movq	%rax, 248(%rsp)
 953      F8000000 
 954              	.LVL89:
  66:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_load(d, d, &rhomboidal[0]),
 955              		.loc 1 66 0 discriminator 2
 956 0225 E8000000 		call	heatmap_stamp_load@PLT
 956      00
 957              	.LVL90:
  67:examples/customstamp_heatmaps.cpp ****     };
 958              		.loc 1 67 0 discriminator 2
 959 022a 48898424 		movq	%rax, 256(%rsp)
 959      00010000 
 960              	.LVL91:
 961              	.LBB1945:
  73:examples/customstamp_heatmaps.cpp ****         const size_t w = nstamps*d, h = d;
 962              		.loc 1 73 0 discriminator 2
 963 0232 4B8D04A4 		leaq	(%r12,%r12,4), %rax
  74:examples/customstamp_heatmaps.cpp ****         heatmap_t* hm = heatmap_new(w, h);
 964              		.loc 1 74 0 discriminator 2
 965 0236 4489E6   		movl	%r12d, %esi
 966 0239 89C7     		movl	%eax, %edi
  73:examples/customstamp_heatmaps.cpp ****         const size_t w = nstamps*d, h = d;
 967              		.loc 1 73 0 discriminator 2
 968 023b 48894424 		movq	%rax, 16(%rsp)
GAS LISTING /tmp/ccKUqHDa.s 			page 138


 968      10
 969              	.LVL92:
  74:examples/customstamp_heatmaps.cpp ****         heatmap_t* hm = heatmap_new(w, h);
 970              		.loc 1 74 0 discriminator 2
 971 0240 E8000000 		call	heatmap_new@PLT
 971      00
 972              	.LVL93:
  74:examples/customstamp_heatmaps.cpp ****         heatmap_t* hm = heatmap_new(w, h);
 973              		.loc 1 74 0 is_stmt 0 discriminator 1
 974 0245 4989C5   		movq	%rax, %r13
 975 0248 488D8424 		leaq	224(%rsp), %rax
 975      E0000000 
 976 0250 4589E6   		movl	%r12d, %r14d
 977 0253 31ED     		xorl	%ebp, %ebp
 978 0255 48894424 		movq	%rax, 32(%rsp)
 978      20
 979              	.LVL94:
 980 025a 660F1F44 		.p2align 4,,10
 980      0000
 981              		.p2align 3
 982              	.L53:
 983              	.LBB1946:
  77:examples/customstamp_heatmaps.cpp ****             heatmap_add_point_with_stamp(hm, i*d+r, r, stamps[i]);
 984              		.loc 1 77 0 is_stmt 1
 985 0260 488B4424 		movq	32(%rsp), %rax
 985      20
 986 0265 8B542408 		movl	8(%rsp), %edx
 987 0269 89DE     		movl	%ebx, %esi
 988 026b 4C89EF   		movq	%r13, %rdi
 989 026e 488B0CE8 		movq	(%rax,%rbp,8), %rcx
 990 0272 E8000000 		call	heatmap_add_point_with_stamp@PLT
 990      00
 991              	.LVL95:
  76:examples/customstamp_heatmaps.cpp ****         for(size_t i = 0 ; i < nstamps ; ++i)
 992              		.loc 1 76 0 discriminator 2
 993 0277 4883C501 		addq	$1, %rbp
 994              	.LVL96:
 995 027b 4401F3   		addl	%r14d, %ebx
 996 027e 4883FD05 		cmpq	$5, %rbp
 997 0282 75DC     		jne	.L53
 998              	.LVL97:
 999              	.LBE1946:
  79:examples/customstamp_heatmaps.cpp ****         vector<unsigned char> image(w*h*4);
 1000              		.loc 1 79 0
 1001 0284 488B6C24 		movq	16(%rsp), %rbp
 1001      10
 1002              	.LVL98:
 1003 0289 4A8D34A5 		leaq	0(,%r12,4), %rsi
 1003      00000000 
 1004 0291 488D8424 		leaq	320(%rsp), %rax
 1004      40010000 
 1005              	.LVL99:
 1006 0299 488D9C24 		leaq	5328(%rsp), %rbx
 1006      D0140000 
 1007 02a1 4989C6   		movq	%rax, %r14
 1008 02a4 48894424 		movq	%rax, 112(%rsp)
 1008      70
GAS LISTING /tmp/ccKUqHDa.s 			page 139


 1009 02a9 480FAFF5 		imulq	%rbp, %rsi
 1010 02ad 4C89F2   		movq	%r14, %rdx
 1011 02b0 4889DF   		movq	%rbx, %rdi
 1012 02b3 E8000000 		call	_ZNSt6vectorIhSaIhEEC1EmRKS0_@PLT
 1012      00
 1013              	.LEHE1:
 1014              	.LVL100:
  80:examples/customstamp_heatmaps.cpp ****         heatmap_render_to(hm, heatmap_cs_b2w_opaque, &image[0]);
 1015              		.loc 1 80 0
 1016 02b8 488B0500 		movq	heatmap_cs_b2w_opaque@GOTPCREL(%rip), %rax
 1016      000000
 1017 02bf 488B9424 		movq	5328(%rsp), %rdx
 1017      D0140000 
 1018 02c7 4C89EF   		movq	%r13, %rdi
 1019 02ca 488B30   		movq	(%rax), %rsi
 1020              	.LEHB2:
 1021 02cd E8000000 		call	heatmap_render_to@PLT
 1021      00
 1022              	.LVL101:
  81:examples/customstamp_heatmaps.cpp ****         heatmap_free(hm);
 1023              		.loc 1 81 0
 1024 02d2 4C89EF   		movq	%r13, %rdi
 1025 02d5 E8000000 		call	heatmap_free@PLT
 1025      00
 1026              	.LVL102:
 1027              	.LBB1947:
  83:examples/customstamp_heatmaps.cpp ****         if(unsigned error = lodepng::encode("stamps.png", image, w, h)) {
 1028              		.loc 1 83 0
 1029 02da 488D8424 		leaq	192(%rsp), %rax
 1029      C0000000 
 1030              	.LVL103:
 1031 02e2 488D3500 		leaq	.LC15(%rip), %rsi
 1031      000000
 1032 02e9 4C89F7   		movq	%r14, %rdi
 1033 02ec 4889C2   		movq	%rax, %rdx
 1034 02ef 48894424 		movq	%rax, 80(%rsp)
 1034      50
 1035 02f4 E8000000 		call	_ZNSsC1EPKcRKSaIcE@PLT
 1035      00
 1036              	.LEHE2:
 1037              	.LVL104:
  83:examples/customstamp_heatmaps.cpp ****         if(unsigned error = lodepng::encode("stamps.png", image, w, h)) {
 1038              		.loc 1 83 0 is_stmt 0 discriminator 2
 1039 02f9 41B90800 		movl	$8, %r9d
 1039      0000
 1040 02ff 41B80600 		movl	$6, %r8d
 1040      0000
 1041 0305 4489E1   		movl	%r12d, %ecx
 1042 0308 89EA     		movl	%ebp, %edx
 1043 030a 4889DE   		movq	%rbx, %rsi
 1044 030d 4C89F7   		movq	%r14, %rdi
 1045              	.LEHB3:
 1046 0310 E8000000 		call	_ZN7lodepng6encodeERKSsRKSt6vectorIhSaIhEEjj16LodePNGColorTypej@PLT
 1046      00
 1047              	.LEHE3:
 1048              	.LVL105:
 1049 0315 89C5     		movl	%eax, %ebp
GAS LISTING /tmp/ccKUqHDa.s 			page 140


 1050              	.LVL106:
 1051              	.LBB1948:
 1052              	.LBB1949:
 1053              	.LBB1950:
 1054              	.LBB1951:
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 		}
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	    }
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}  // XXX MT
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	void
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_destroy(const _Alloc&) throw();
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_refcopy() throw()
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	{
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #if _GLIBCXX_FULLY_DYNAMIC_STRING == 0
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** #endif
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****             __gnu_cxx::__atomic_add_dispatch(&this->_M_refcount, 1);
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  return _M_refdata();
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	}  // XXX MT
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT*
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_M_clone(const _Alloc&, size_type __res = 0);
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       };
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Use empty-base optimization: http://www.cantrip.org/emptyopt.html
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       struct _Alloc_hider : _Alloc
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       {
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_Alloc_hider(_CharT* __dat, const _Alloc& __a) _GLIBCXX_NOEXCEPT
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	: _Alloc(__a), _M_p(__dat) { }
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	_CharT* _M_p; // The actual data.
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       };
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     public:
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Data Members (public):
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // NB: This is an unsigned type, and thus represents the maximum
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // size that the allocator can hold.
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       ///  Value returned by various member functions when they fail.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       static const size_type	npos = static_cast<size_type>(-1);
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****     private:
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       // Data Members (private):
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       mutable _Alloc_hider	_M_dataplus;
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _CharT*
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _M_data() const _GLIBCXX_NOEXCEPT
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return  _M_dataplus._M_p; }
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _CharT*
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _M_data(_CharT* __p) _GLIBCXX_NOEXCEPT
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return (_M_dataplus._M_p = __p); }
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _Rep*
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       _M_rep() const _GLIBCXX_NOEXCEPT
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h ****       { return &((reinterpret_cast<_Rep*> (_M_data()))[-1]); }
GAS LISTING /tmp/ccKUqHDa.s 			page 141


 1055              		.loc 2 301 0 is_stmt 1 discriminator 2
 1056 0317 488B8424 		movq	320(%rsp), %rax
 1056      40010000 
 1057              	.LVL107:
 1058 031f 488D78E8 		leaq	-24(%rax), %rdi
 1059              	.LVL108:
 1060              	.LBE1951:
 1061              	.LBE1950:
 1062              	.LBB1952:
 1063              	.LBB1953:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 1064              		.loc 2 240 0 discriminator 2
 1065 0323 483B3D00 		cmpq	_ZNSs4_Rep20_S_empty_rep_storageE@GOTPCREL(%rip), %rdi
 1065      000000
 1066 032a 0F854006 		jne	.L166
 1066      0000
 1067              	.LVL109:
 1068              	.L54:
 1069              	.LBE1953:
 1070              	.LBE1952:
 1071              	.LBE1949:
 1072              	.LBE1948:
  83:examples/customstamp_heatmaps.cpp ****         if(unsigned error = lodepng::encode("stamps.png", image, w, h)) {
 1073              		.loc 1 83 0
 1074 0330 85ED     		testl	%ebp, %ebp
 1075 0332 0F859B05 		jne	.L167
 1075      0000
 1076              	.LVL110:
 1077              	.LBE1947:
 1078              	.LBB1968:
 1079              	.LBB1969:
 1080              	.LBB1970:
 1081              	.LBB1971:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 1082              		.loc 4 161 0
 1083 0338 488BBC24 		movq	5328(%rsp), %rdi
 1083      D0140000 
 1084              	.LVL111:
 1085              	.LBB1972:
 1086              	.LBB1973:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 1087              		.loc 4 177 0
 1088 0340 4885FF   		testq	%rdi, %rdi
 1089 0343 7405     		je	.L58
 1090              	.LVL112:
 1091              	.LBB1974:
 1092              	.LBB1975:
 1093              	.LBB1976:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       }
 105:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 
 106:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       // __p is not permitted to be a null pointer.
 107:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       void
 108:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       deallocate(pointer __p, size_type)
 109:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h ****       { ::operator delete(__p); }
 1094              		.loc 5 110 0
 1095 0345 E8000000 		call	_ZdlPv@PLT
 1095      00
GAS LISTING /tmp/ccKUqHDa.s 			page 142


 1096              	.LVL113:
 1097              	.L58:
 1098              	.LBE1976:
 1099              	.LBE1975:
 1100              	.LBE1974:
 1101              	.LBE1973:
 1102              	.LBE1972:
 1103              	.LBE1971:
 1104              	.LBE1970:
 1105              	.LBE1969:
 1106              	.LBE1968:
 1107              	.LBE1945:
 1108              	.LBB1998:
  93:examples/customstamp_heatmaps.cpp ****         const size_t w = d*20, h = w, npoints = 1000;
 1109              		.loc 1 93 0
 1110 034a 496BC414 		imulq	$20, %r12, %rax
 1111 034e 48894424 		movq	%rax, 120(%rsp)
 1111      78
 1112              	.LVL114:
 1113 0353 89442444 		movl	%eax, 68(%rsp)
 1114 0357 488D8424 		leaq	272(%rsp), %rax
 1114      10010000 
 1115              	.LVL115:
 1116              	.LBB1999:
  95:examples/customstamp_heatmaps.cpp ****         for(auto& hm : hms) {
 1117              		.loc 1 95 0
 1118 035f 4C8D6028 		leaq	40(%rax), %r12
 1119              	.LVL116:
 1120 0363 48894424 		movq	%rax, 104(%rsp)
 1120      68
 1121 0368 4889C5   		movq	%rax, %rbp
 1122              	.LVL117:
 1123 036b 0F1F4400 		.p2align 4,,10
 1123      00
 1124              		.p2align 3
 1125              	.L59:
  96:examples/customstamp_heatmaps.cpp ****             hm = heatmap_new(w, h);
 1126              		.loc 1 96 0 discriminator 3
 1127 0370 8B7C2444 		movl	68(%rsp), %edi
 1128 0374 89FE     		movl	%edi, %esi
 1129              	.LEHB4:
 1130 0376 E8000000 		call	heatmap_new@PLT
 1130      00
 1131              	.LVL118:
 1132 037b 48894500 		movq	%rax, 0(%rbp)
 1133              	.LVL119:
 1134 037f 4883C508 		addq	$8, %rbp
 1135              	.LVL120:
  95:examples/customstamp_heatmaps.cpp ****         for(auto& hm : hms) {
 1136              		.loc 1 95 0 discriminator 3
 1137 0383 4939EC   		cmpq	%rbp, %r12
 1138 0386 75E8     		jne	.L59
 1139              	.LVL121:
 1140              	.LBE1999:
 100:examples/customstamp_heatmaps.cpp ****         random_device rd;
 1141              		.loc 1 100 0
 1142 0388 488D8424 		leaq	160(%rsp), %rax
GAS LISTING /tmp/ccKUqHDa.s 			page 143


 1142      A0000000 
 1143              	.LVL122:
 1144 0390 488D3500 		leaq	.LC18(%rip), %rsi
 1144      000000
 1145 0397 4889DF   		movq	%rbx, %rdi
 1146 039a 4889C2   		movq	%rax, %rdx
 1147 039d 48894424 		movq	%rax, 96(%rsp)
 1147      60
 1148 03a2 E8000000 		call	_ZNSsC1EPKcRKSaIcE@PLT
 1148      00
 1149              	.LEHE4:
 1150              	.LVL123:
 1151              	.LBB2000:
 1152              	.LBB2001:
 1153              		.file 11 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // random number generation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // Copyright (C) 2009-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** /**
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  * @file bits/random.h
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  *  This is an internal header file, included by other library headers.
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  *  Do not attempt to use it directly. @headername{random}
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****  */
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifndef _RANDOM_H
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #define _RANDOM_H 1
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #include <vector>
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** namespace std _GLIBCXX_VISIBILITY(default)
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** {
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   // [26.4] Random number generation
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
GAS LISTING /tmp/ccKUqHDa.s 			page 144


  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @defgroup random Random Number Generation
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @ingroup numerics
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A facility for generating random numbers on selected distributions.
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @{
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief A function template for converting the output of a (integral)
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * uniform random number generator to a floatng point result in the range
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * [0-1).
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RealType, size_t __bits,
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   typename _UniformRandomNumberGenerator>
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     _RealType
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     generate_canonical(_UniformRandomNumberGenerator& __g);
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** _GLIBCXX_END_NAMESPACE_VERSION
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /*
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Implementation-space details.
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   namespace __detail
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   _GLIBCXX_BEGIN_NAMESPACE_VERSION
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _UIntType, size_t __w,
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	     bool = __w < static_cast<size_t>
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			  (std::numeric_limits<_UIntType>::digits)>
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Shift
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { static const _UIntType __value = 0; };
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _UIntType, size_t __w>
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Shift<_UIntType, __w, true>
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { static const _UIntType __value = _UIntType(1) << __w; };
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s,
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	     int __which = ((__s <= __CHAR_BIT__ * sizeof (int))
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long))
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    + (__s <= __CHAR_BIT__ * sizeof (long long))
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    /* assume long long no bigger than __int128 */
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 			    + (__s <= 128))>
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static_assert(__which < 0, /* needs to be dependent */
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		      "sorry, would be too much trouble for a slow result");
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 4>
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned int type; };
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 3>
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned long type; };
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
GAS LISTING /tmp/ccKUqHDa.s 			page 145


  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 2>
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned long long type; };
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifdef _GLIBCXX_USE_INT128
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<int __s>
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Select_uint_least_t<__s, 1>
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { typedef unsigned __int128 type; };
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #endif
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // Assume a != 0, a < m, c < m, x < m.
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c,
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	     bool __big_enough = (!(__m & (__m - 1))
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 				  || (_Tp(-1) - __c) / __a >= __m - 1),
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****              bool __schrage_ok = __m % __a < __m / __a>
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Mod
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typedef typename _Select_uint_least_t<std::__lg(__a)
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 					      + std::__lg(__m) + 2>::type _Tp2;
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static _Tp
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	__calc(_Tp __x)
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return static_cast<_Tp>((_Tp2(__a) * __x + __c) % __m); }
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // Schrage.
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c>
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Mod<_Tp, __m, __a, __c, false, true>
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static _Tp
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	__calc(_Tp __x);
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // Special cases:
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // - for m == 2^n or m == 0, unsigned integer overflow is safe.
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // - a * (m - 1) + c fits in _Tp, there is no overflow.
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a, _Tp __c, bool __s>
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Mod<_Tp, __m, __a, __c, true, __s>
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static _Tp
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	__calc(_Tp __x)
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _Tp __res = __a * __x + __c;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  if (__m)
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  return __res;
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp, _Tp __m, _Tp __a = 1, _Tp __c = 0>
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       inline _Tp
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       __mod(_Tp __x)
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _Mod<_Tp, __m, __a, __c>::__calc(__x); }
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     /* Determine whether number is a power of 2.  */
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Tp>
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       inline bool
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _Power_of_2(_Tp __x)
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
GAS LISTING /tmp/ccKUqHDa.s 			page 146


 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	return ((__x - 1) & __x) == 0;
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     /*
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****      * An adaptor class for converting the output of any Generator into
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****      * the input for a specific Distribution.
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****      */
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     template<typename _Engine, typename _DInputType>
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       struct _Adaptor
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	static_assert(std::is_floating_point<_DInputType>::value,
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		      "template argument not a floating point type");
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       public:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_Adaptor(_Engine& __g)
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	: _M_g(__g) { }
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_DInputType
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	min() const
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return _DInputType(0); }
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_DInputType
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	max() const
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{ return _DInputType(1); }
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	/*
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 * Converts a value generated by the adapted random number generator
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 * into a value in the input domain for the dependent random number
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 * distribution.
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	 */
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_DInputType
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator()()
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  return std::generate_canonical<_DInputType,
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            std::numeric_limits<_DInputType>::digits,
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            _Engine>(_M_g);
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       private:
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_Engine& _M_g;
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       };
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   _GLIBCXX_END_NAMESPACE_VERSION
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   } // namespace __detail
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @addtogroup random_generators Random Number Generators
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @ingroup random
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * These classes define objects which provide random or pseudorandom
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * numbers, either from a discrete or a continuous interval.  The
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * random number generator supplied as a part of this library are
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * all uniform random number generators which provide a sequence of
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * random number uniformly distributed over their range.
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
GAS LISTING /tmp/ccKUqHDa.s 			page 147


 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A number generator is a function object with an operator() that
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * takes zero arguments and returns a number.
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A compliant random number generator must satisfy the following
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * requirements.  <table border=1 cellpadding=10 cellspacing=0>
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * <caption align=top>Random Number Generator Requirements</caption>
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * <tr><td>To be documented.</td></tr> </table>
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @{
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief A model of a linear congruential random number generator.
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A random number generator that produces pseudorandom numbers via
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * linear function:
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f[
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *     x_{i+1}\leftarrow(ax_{i} + c) \bmod m 
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f]
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The template parameter @p _UIntType must be an unsigned integral type
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * large enough to store values up to (__m-1). If the template parameter
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @p __m is 0, the modulus @p __m used is
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * std::numeric_limits<_UIntType>::max() plus 1. Otherwise, the template
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * parameters @p __a and @p __c must be less than @p __m.
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The size of the state is @f$1@f$.
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class linear_congruential_engine
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__m == 0u || (__a < __m && __c < __m),
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __m out of bounds");
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The multiplier. */
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type multiplier   = __a;
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** An increment. */
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type increment    = __c;
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The modulus. */
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type modulus      = __m;
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type default_seed = 1u;
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %linear_congruential_engine random number
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator engine with seed @p __s.  The default seed value
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        is 1.
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s The initial seed value.
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       linear_congruential_engine(result_type __s = default_seed)
GAS LISTING /tmp/ccKUqHDa.s 			page 148


 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { seed(__s); }
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %linear_congruential_engine random number
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator engine seeded from the seed sequence @p __q.
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, linear_congruential_engine>::value>
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         linear_congruential_engine(_Sseq& __q)
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { seed(__q); }
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        engine sequence to the seed @p __s.
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s The new seed.
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s = default_seed);
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %linear_congruential_engine random number generator
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        engine
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * sequence using values from the seed sequence @p __q.
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         typename std::enable_if<std::is_class<_Sseq>::value>::type
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q);
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the smallest possible value in the output range.
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The minimum depends on the @p __c parameter: if it is zero, the
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * minimum generated must be > 0, otherwise 0 is allowed.
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __c == 0u ? 1u : 0u; }
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the largest possible value in the output range.
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __m - 1u; }
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
GAS LISTING /tmp/ccKUqHDa.s 			page 149


 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next random number in the sequence.
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()()
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_x = __detail::__mod<_UIntType, __m, __a, __c>(_M_x);
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	return _M_x;
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two linear congruential random number generator
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * objects of the same type for equality.
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A linear congruential random number generator object.
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another linear congruential random number generator
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const linear_congruential_engine& __lhs,
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const linear_congruential_engine& __rhs)
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __lhs._M_x == __rhs._M_x; }
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Writes the textual representation of the state x(i) of x to
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os  The output stream.
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns __os.
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::linear_congruential_engine<_UIntType1,
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __a1, __c1, __m1>& __lcr);
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Sets the state of the engine by reading its textual
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        representation from @p __is.
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The textual representation must have been previously written using
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an output stream whose imbued locale and whose type's template
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * specialization arguments _CharT and _Traits were the same as those
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * of @p __is.
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is  The input stream.
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lcr A % linear_congruential_engine random number generator.
GAS LISTING /tmp/ccKUqHDa.s 			page 150


 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns __is.
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, _UIntType1 __a1, _UIntType1 __c1,
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __m1, typename _CharT, typename _Traits>
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::linear_congruential_engine<_UIntType1, __a1,
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __c1, __m1>& __lcr);
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType _M_x;
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two linear congruential random number generator
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * objects of the same type for inequality.
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A linear congruential random number generator object.
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another linear congruential random number generator
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, _UIntType __a, _UIntType __c, _UIntType __m>
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::linear_congruential_engine<_UIntType, __a,
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __c, __m>& __lhs,
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::linear_congruential_engine<_UIntType, __a,
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __c, __m>& __rhs)
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A generalized feedback shift register discrete random number generator.
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * This algorithm avoids multiplication and division and is designed to be
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * friendly to a pipelined architecture.  If the parameters are chosen
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * correctly, this generator will produce numbers with a very long period and
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * fairly good apparent entropy, although still not cryptographically strong.
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The best way to use this generator is with the predefined mt19937 class.
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * This algorithm was originally invented by Makoto Matsumoto and
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Takuji Nishimura.
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __w  Word size, the number of bits in each element of 
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              the state vector.
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __n  The degree of recursion.
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __m  The period parameter.
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __r  The separation point bit index.
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __a  The last row of the twist matrix.
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __u  The first right-shift tempering matrix parameter.
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __d  The first right-shift tempering matrix mask.
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __s  The first left-shift tempering matrix parameter.
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __b  The first left-shift tempering matrix mask.
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __t  The second left-shift tempering matrix parameter.
GAS LISTING /tmp/ccKUqHDa.s 			page 151


 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __c  The second left-shift tempering matrix mask.
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __l  The second right-shift tempering matrix parameter.
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @tparam __f  Initialization multiplier.
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w,
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   size_t __n, size_t __m, size_t __r,
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __b, size_t __t,
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class mersenne_twister_engine
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(1u <= __m && __m <= __n,
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __m out of bounds");
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__r <= __w, "template argument substituting "
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__r out of bound");
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__u <= __w, "template argument substituting "
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__u out of bound");
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__s <= __w, "template argument substituting "
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__s out of bound");
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__t <= __w, "template argument substituting "
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__t out of bound");
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__l <= __w, "template argument substituting "
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__l out of bound");
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__w <= std::numeric_limits<_UIntType>::digits,
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __w out of bound");
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__a <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __a out of bound");
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__b <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __b out of bound");
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__c <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __c out of bound");
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__d <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __d out of bound");
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(__f <= (__detail::_Shift<_UIntType, __w>::__value - 1),
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __f out of bound");
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // parameter values
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      word_size                 = __w;
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      state_size                = __n;
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      shift_size                = __m;
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      mask_bits                 = __r;
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type xor_mask                  = __a;
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_u               = __u;
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type tempering_d               = __d;
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_s               = __s;
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type tempering_b               = __b;
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_t               = __t;
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type tempering_c               = __c;
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      tempering_l               = __l;
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type initialization_multiplier = __f;
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type default_seed = 5489u;
GAS LISTING /tmp/ccKUqHDa.s 			page 152


 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // constructors and member function
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       mersenne_twister_engine(result_type __sd = default_seed)
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { seed(__sd); }
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %mersenne_twister_engine random number generator
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        engine seeded from the seed sequence @p __q.
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         std::enable_if<!std::is_same<_Sseq, mersenne_twister_engine>::value>
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         mersenne_twister_engine(_Sseq& __q)
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { seed(__q); }
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __sd = default_seed);
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typename std::enable_if<std::is_class<_Sseq>::value>::type
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q);
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the smallest possible value in the output range.
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return 0; };
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the largest possible value in the output range.
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z);
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two % mersenne_twister_engine random number generator
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        objects of the same type for equality.
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A % mersenne_twister_engine random number generator
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another % mersenne_twister_engine random number
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              generator object.
GAS LISTING /tmp/ccKUqHDa.s 			page 153


 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const mersenne_twister_engine& __lhs,
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const mersenne_twister_engine& __rhs)
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + state_size, __rhs._M_x)
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a % mersenne_twister_engine
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x into the output stream
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1,
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __w1, size_t __n1,
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __m1, size_t __r1,
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __a1, size_t __u1,
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __d1, size_t __s1,
 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __b1, size_t __t1,
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::mersenne_twister_engine<_UIntType1, __w1, __n1,
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __m1, __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __l1, __f1>& __x);
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % mersenne_twister_engine
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % mersenne_twister_engine random number generator
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1,
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __w1, size_t __n1,
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       size_t __m1, size_t __r1,
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __a1, size_t __u1,
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __d1, size_t __s1,
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __b1, size_t __t1,
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType1 __c1, size_t __l1, _UIntType1 __f1,
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
GAS LISTING /tmp/ccKUqHDa.s 			page 154


 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::mersenne_twister_engine<_UIntType1, __w1, __n1, __m1,
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __r1, __a1, __u1, __d1, __s1, __b1, __t1, __c1,
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __l1, __f1>& __x);
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void _M_gen_rand();
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType _M_x[state_size];
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       size_t    _M_p;
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two % mersenne_twister_engine random number generator
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        objects of the same type for inequality.
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A % mersenne_twister_engine random number generator
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another % mersenne_twister_engine random number
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              generator object.
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w,
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   size_t __n, size_t __m, size_t __r,
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __a, size_t __u, _UIntType __d, size_t __s,
 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __b, size_t __t,
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   _UIntType __c, size_t __l, _UIntType __f>
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __lhs,
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::mersenne_twister_engine<_UIntType, __w, __n, __m,
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r, __a, __u, __d, __s, __b, __t, __c, __l, __f>& __rhs)
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief The Marsaglia-Zaman generator.
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * This is a model of a Generalized Fibonacci discrete random number
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * generator, sometimes referred to as the SWC generator.
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A discrete random number generator that produces pseudorandom
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * numbers using:
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f[
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *     x_{i}\leftarrow(x_{i - s} - x_{i - r} - carry_{i-1}) \bmod m 
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @f]
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The size of the state is @f$r@f$
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * and the maximum period of the generator is @f$(m^r - m^s - 1)@f$.
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @var _M_x     The state of the generator.  This is a ring buffer.
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @var _M_carry The carry.
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @var _M_p     Current index of x(i - r).
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
GAS LISTING /tmp/ccKUqHDa.s 			page 155


 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class subtract_with_carry_engine
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(0u < __s && __s < __r,
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __s out of bounds");
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __w out of bounds");
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // parameter values
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      word_size    = __w;
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      short_lag    = __s;
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t      long_lag     = __r;
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type default_seed = 19780503u;
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs an explicitly seeded % subtract_with_carry_engine
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator.
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       subtract_with_carry_engine(result_type __sd = default_seed)
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { seed(__sd); }
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a %subtract_with_carry_engine random number engine
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seeded from the seed sequence @p __q.
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q the seed sequence.
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         std::enable_if<!std::is_same<_Sseq, subtract_with_carry_engine>::value>
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         subtract_with_carry_engine(_Sseq& __q)
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { seed(__q); }
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the random number
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator.
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * N1688[4.19] modifies this as follows.  If @p __value == 0,
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * sets value to 19780503.  In any case, with a linear
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * congruential generator lcg(i) having parameters @f$ m_{lcg} =
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * 2147483563, a_{lcg} = 40014, c_{lcg} = 0, and lcg(0) = value
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @f$, sets @f$ x_{-r} \dots x_{-1} @f$ to @f$ lcg(1) \bmod m
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * \dots lcg(r) \bmod m @f$ respectively.  If @f$ x_{-1} = 0 @f$
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * set carry to 1, otherwise sets carry to 0.
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __sd = default_seed);
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seeds the initial state @f$x_0@f$ of the
GAS LISTING /tmp/ccKUqHDa.s 			page 156


 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * % subtract_with_carry_engine random number generator.
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	typename std::enable_if<std::is_class<_Sseq>::value>::type
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q);
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the inclusive minimum value of the range of random
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * integers returned by this generator.
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return 0; }
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the inclusive maximum value of the range of random
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * integers returned by this generator.
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next random number in the sequence.
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two % subtract_with_carry_engine random number
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        generator objects of the same type for equality.
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A % subtract_with_carry_engine random number generator
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another % subtract_with_carry_engine random number
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              generator object.
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       */
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const subtract_with_carry_engine& __lhs,
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const subtract_with_carry_engine& __rhs)
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return (std::equal(__lhs._M_x, __lhs._M_x + long_lag, __rhs._M_x)
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_carry == __rhs._M_carry
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_p == __rhs._M_p); }
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 157


 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a % subtract_with_carry_engine
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x into the output stream
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>&,
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::subtract_with_carry_engine<_UIntType1, __w1,
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __s1, __r1>&);
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A % subtract_with_carry_engine random number generator
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _UIntType1, size_t __w1, size_t __s1, size_t __r1,
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>&,
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::subtract_with_carry_engine<_UIntType1, __w1,
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __s1, __r1>&);
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType  _M_x[long_lag];
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _UIntType  _M_carry;
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       size_t     _M_p;
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two % subtract_with_carry_engine random number
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        generator objects of the same type for inequality.
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A % subtract_with_carry_engine random number generator
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another % subtract_with_carry_engine random number
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              generator object.
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _UIntType, size_t __w, size_t __s, size_t __r>
GAS LISTING /tmp/ccKUqHDa.s 			page 158


 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::subtract_with_carry_engine<_UIntType, __w,
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __s, __r>& __lhs,
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::subtract_with_carry_engine<_UIntType, __w,
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __s, __r>& __rhs)
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Produces random numbers from some base engine by discarding blocks of
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * data.
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * 0 <= @p __r <= @p __p
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class discard_block_engine
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(1 <= __r && __r <= __p,
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __r out of bounds");
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       // parameter values
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t block_size = __p;
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t used_block = __r;
 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a default %discard_block_engine engine.
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The underlying engine is default constructed as well.
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine()
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(), _M_n(0) { }
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Copy constructs a %discard_block_engine engine.
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine(const _RandomNumberEngine& __rng)
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__rng), _M_n(0) { }
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Move constructs a %discard_block_engine engine.
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine(_RandomNumberEngine&& __rng)
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(std::move(__rng)), _M_n(0) { }
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
GAS LISTING /tmp/ccKUqHDa.s 			page 159


 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seed constructs a %discard_block_engine engine.
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Constructs the underlying generator engine seeded with @p __s.
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s A seed value for the base class engine.
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard_block_engine(result_type __s)
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__s), _M_n(0) { }
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generator construct a %discard_block_engine engine.
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed sequence.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, discard_block_engine>::value
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		       && !std::is_same<_Sseq, _RandomNumberEngine>::value>
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         discard_block_engine(_Sseq& __q)
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	: _M_b(__q), _M_n(0)
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { }
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed()
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed();
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_n = 0;
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %discard_block_engine object with the default
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s)
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed(__s);
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_n = 0;
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %discard_block_engine object with the given seed
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        sequence.
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed generator function.
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         void
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q)
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         {
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_b.seed(__q);
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_n = 0;
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
GAS LISTING /tmp/ccKUqHDa.s 			page 160


 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets a const reference to the underlying generator engine
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        object.
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       const _RandomNumberEngine&
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       base() const noexcept
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_b; }
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the minimum value in the generated random number range.
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::min(); }
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the maximum value in the generated random number range.
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::max(); }
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next value in the generated random number sequence.
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two %discard_block_engine random number generator
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        objects of the same type for equality.
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A %discard_block_engine random number generator object.
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another %discard_block_engine random number generator
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const discard_block_engine& __lhs,
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const discard_block_engine& __rhs)
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __lhs._M_b == __rhs._M_b && __lhs._M_n == __rhs._M_n; }
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a %discard_block_engine random
GAS LISTING /tmp/ccKUqHDa.s 			page 161


1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        number generator engine @p __x into the output stream
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __os.
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::discard_block_engine<_RandomNumberEngine1,
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __p1, __r1>& __x);
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %discard_block_engine random number generator engine.
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __p1, size_t __r1,
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::discard_block_engine<_RandomNumberEngine1,
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __p1, __r1>& __x);
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _RandomNumberEngine _M_b;
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       size_t _M_n;
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two %discard_block_engine random number generator
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        objects of the same type for inequality.
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A %discard_block_engine random number generator object.
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another %discard_block_engine random number generator
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __p, size_t __r>
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::discard_block_engine<_RandomNumberEngine, __p,
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r>& __lhs,
1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::discard_block_engine<_RandomNumberEngine, __p,
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __r>& __rhs)
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
GAS LISTING /tmp/ccKUqHDa.s 			page 162


1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Produces random numbers by combining random numbers from some base
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * engine to produce random numbers with a specifies number of bits @p __w.
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class independent_bits_engine
1076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(std::is_unsigned<_UIntType>::value, "template argument "
1078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "substituting _UIntType not an unsigned integral type");
1079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(0u < __w && __w <= std::numeric_limits<_UIntType>::digits,
1080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "template argument substituting __w out of bounds");
1081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
1083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
1084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef _UIntType result_type;
1085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a default %independent_bits_engine engine.
1088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The underlying engine is default constructed as well.
1090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine()
1092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b() { }
1093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Copy constructs a %independent_bits_engine engine.
1096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine(const _RandomNumberEngine& __rng)
1102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__rng) { }
1103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Move constructs a %independent_bits_engine engine.
1106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine(_RandomNumberEngine&& __rng)
1112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(std::move(__rng)) { }
1113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seed constructs a %independent_bits_engine engine.
1116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s A seed value for the base class engine.
1119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       independent_bits_engine(result_type __s)
1122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__s) { }
1123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
GAS LISTING /tmp/ccKUqHDa.s 			page 163


1125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generator construct a %independent_bits_engine engine.
1126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed sequence.
1128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
1130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, independent_bits_engine>::value
1131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		       && !std::is_same<_Sseq, _RandomNumberEngine>::value>
1132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****                ::type>
1133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
1134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         independent_bits_engine(_Sseq& __q)
1135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         : _M_b(__q)
1136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { }
1137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
1141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed()
1144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_b.seed(); }
1145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %independent_bits_engine object with the default
1148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed for the underlying base class generator engine.
1149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s)
1152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_b.seed(__s); }
1153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %independent_bits_engine object with the given
1156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        seed sequence.
1157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed generator function.
1158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
1160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         void
1161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q)
1162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { _M_b.seed(__q); }
1163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets a const reference to the underlying generator engine
1166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        object.
1167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       const _RandomNumberEngine&
1169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       base() const noexcept
1170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_b; }
1171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the minimum value in the generated random number range.
1174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
1177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return 0U; }
1178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the maximum value in the generated random number range.
1181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
GAS LISTING /tmp/ccKUqHDa.s 			page 164


1182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
1184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __detail::_Shift<_UIntType, __w>::__value - 1; }
1185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Discard a sequence of random numbers.
1188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
1191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
1193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
1194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Gets the next value in the generated random number sequence.
1198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
1201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Compares two %independent_bits_engine random number generator
1204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * objects of the same type for equality.
1205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A %independent_bits_engine random number generator
1207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another %independent_bits_engine random number generator
1209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
1212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
1213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
1215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const independent_bits_engine& __lhs,
1216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const independent_bits_engine& __rhs)
1217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return __lhs._M_b == __rhs._M_b; }
1218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
1222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
1223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
1225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %independent_bits_engine random number generator
1226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *             engine.
1227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
1229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          an error state.
1230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _CharT, typename _Traits>
1232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::independent_bits_engine<_RandomNumberEngine,
1235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __w, _UIntType>& __x)
1236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	{
1237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  __is >> __x._M_b;
1238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  return __is;
GAS LISTING /tmp/ccKUqHDa.s 			page 165


1239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
1240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
1242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _RandomNumberEngine _M_b;
1243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Compares two %independent_bits_engine random number generator
1247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * objects of the same type for inequality.
1248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A %independent_bits_engine random number generator
1250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another %independent_bits_engine random number generator
1252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
1255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
1256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType>
1258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
1259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::independent_bits_engine<_RandomNumberEngine, __w,
1260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType>& __lhs,
1261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine, __w,
1262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       _UIntType>& __rhs)
1263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
1264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Inserts the current state of a %independent_bits_engine random
1267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *        number generator engine @p __x into the output stream @p __os.
1268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __os An output stream.
1270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __x  A %independent_bits_engine random number generator engine.
1271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns The output stream with the state of @p __x inserted or in
1273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          an error state.
1274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __w, typename _UIntType,
1276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	   typename _CharT, typename _Traits>
1277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     std::basic_ostream<_CharT, _Traits>&
1278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::independent_bits_engine<_RandomNumberEngine,
1280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __w, _UIntType>& __x)
1281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       __os << __x.base();
1283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       return __os;
1284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     }
1285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @brief Produces random numbers by combining random numbers from some
1289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * base engine to produce random numbers with a specifies number of bits
1290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @p __w.
1291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __k>
1293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     class shuffle_order_engine
1294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static_assert(1u <= __k, "template argument substituting "
GAS LISTING /tmp/ccKUqHDa.s 			page 166


1296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		    "__k out of bound");
1297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     public:
1299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /** The type of the generated random value. */
1300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       typedef typename _RandomNumberEngine::result_type result_type;
1301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr size_t table_size = __k;
1303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Constructs a default %shuffle_order_engine engine.
1306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * The underlying engine is default constructed as well.
1308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine()
1310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b()
1311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
1312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Copy constructs a %shuffle_order_engine engine.
1315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine(const _RandomNumberEngine& __rng)
1321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__rng)
1322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
1323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Move constructs a %shuffle_order_engine engine.
1326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Copies an existing base class random number generator.
1328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rng An existing (base class) engine object.
1329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine(_RandomNumberEngine&& __rng)
1332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(std::move(__rng))
1333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
1334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Seed constructs a %shuffle_order_engine engine.
1337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Constructs the underlying generator engine seeded with @p __s.
1339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __s A seed value for the base class engine.
1340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       explicit
1342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       shuffle_order_engine(result_type __s)
1343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       : _M_b(__s)
1344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { _M_initialize(); }
1345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Generator construct a %shuffle_order_engine engine.
1348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed sequence.
1350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq, typename = typename
1352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	std::enable_if<!std::is_same<_Sseq, shuffle_order_engine>::value
GAS LISTING /tmp/ccKUqHDa.s 			page 167


1353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		       && !std::is_same<_Sseq, _RandomNumberEngine>::value>
1354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       ::type>
1355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         explicit
1356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         shuffle_order_engine(_Sseq& __q)
1357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         : _M_b(__q)
1358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         { _M_initialize(); }
1359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****                 for the underlying base class generator engine.
1363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed()
1366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed();
1368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_initialize();
1369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %shuffle_order_engine object with the default seed
1373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        for the underlying base class generator engine.
1374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       seed(result_type __s)
1377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_b.seed(__s);
1379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_initialize();
1380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Reseeds the %shuffle_order_engine object with the given seed
1384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        sequence.
1385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __q A seed generator function.
1386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _Sseq>
1388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         void
1389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         seed(_Sseq& __q)
1390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****         {
1391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_b.seed(__q);
1392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_initialize();
1393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	}
1394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets a const reference to the underlying generator engine object.
1397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       const _RandomNumberEngine&
1399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       base() const noexcept
1400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _M_b; }
1401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets the minimum value in the generated random number range.
1404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       min()
1407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::min(); }
1408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
GAS LISTING /tmp/ccKUqHDa.s 			page 168


1410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets the maximum value in the generated random number range.
1411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       static constexpr result_type
1413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       max()
1414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return _RandomNumberEngine::max(); }
1415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Discard a sequence of random numbers.
1418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void
1420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       discard(unsigned long long __z)
1421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (; __z != 0ULL; --__z)
1423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  (*this)();
1424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Gets the next value in the generated random number sequence.
1428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type
1430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator()();
1431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * Compares two %shuffle_order_engine random number generator objects
1434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * of the same type for equality.
1435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __lhs A %shuffle_order_engine random number generator object.
1437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __rhs Another %shuffle_order_engine random number generator
1438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *              object.
1439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns true if the infinite sequences of generated values
1441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *          would be equal, false otherwise.
1442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       */
1443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       friend bool
1444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       operator==(const shuffle_order_engine& __lhs,
1445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		 const shuffle_order_engine& __rhs)
1446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       { return (__lhs._M_b == __rhs._M_b
1447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& std::equal(__lhs._M_v, __lhs._M_v + __k, __rhs._M_v)
1448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		&& __lhs._M_y == __rhs._M_y); }
1449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Inserts the current state of a %shuffle_order_engine random
1452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        number generator engine @p __x into the output stream
1453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	@p __os.
1454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __os An output stream.
1456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The output stream with the state of @p __x inserted or in
1459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_ostream<_CharT, _Traits>&
1464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator<<(std::basic_ostream<_CharT, _Traits>& __os,
1465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   const std::shuffle_order_engine<_RandomNumberEngine1,
1466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   __k1>& __x);
GAS LISTING /tmp/ccKUqHDa.s 			page 169


1467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       /**
1469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @brief Extracts the current state of a % subtract_with_carry_engine
1470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        random number generator engine @p __x from the input stream
1471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *        @p __is.
1472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __is An input stream.
1474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @param __x  A %shuffle_order_engine random number generator engine.
1475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        *
1476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * @returns The input stream with the state of @p __x extracted or in
1477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        * an error state.
1478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****        */
1479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       template<typename _RandomNumberEngine1, size_t __k1,
1480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       typename _CharT, typename _Traits>
1481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	friend std::basic_istream<_CharT, _Traits>&
1482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	operator>>(std::basic_istream<_CharT, _Traits>& __is,
1483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 		   std::shuffle_order_engine<_RandomNumberEngine1, __k1>& __x);
1484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     private:
1486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       void _M_initialize()
1487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       {
1488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	for (size_t __i = 0; __i < __k; ++__i)
1489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	  _M_v[__i] = _M_b();
1490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	_M_y = _M_b();
1491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       }
1492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _RandomNumberEngine _M_b;
1494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type _M_v[__k];
1495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       result_type _M_y;
1496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     };
1497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Compares two %shuffle_order_engine random number generator objects
1500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * of the same type for inequality.
1501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __lhs A %shuffle_order_engine random number generator object.
1503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @param __rhs Another %shuffle_order_engine random number generator
1504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *              object.
1505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * @returns true if the infinite sequences of generated values
1507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *          would be different, false otherwise.
1508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   template<typename _RandomNumberEngine, size_t __k>
1510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     inline bool
1511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator!=(const std::shuffle_order_engine<_RandomNumberEngine,
1512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __k>& __lhs,
1513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       const std::shuffle_order_engine<_RandomNumberEngine,
1514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	       __k>& __rhs)
1515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return !(__lhs == __rhs); }
1516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The classic Minimum Standard rand0 of Lewis, Goodman, and Miller.
1520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef linear_congruential_engine<uint_fast32_t, 16807UL, 0UL, 2147483647UL>
1522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   minstd_rand0;
1523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 170


1524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * An alternative LCR (Lehmer Generator function).
1526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef linear_congruential_engine<uint_fast32_t, 48271UL, 0UL, 2147483647UL>
1528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   minstd_rand;
1529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * The classic Mersenne Twister.
1532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    *
1533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Reference:
1534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * M. Matsumoto and T. Nishimura, Mersenne Twister: A 623-Dimensionally
1535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * Equidistributed Uniform Pseudo-Random Number Generator, ACM Transactions
1536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * on Modeling and Computer Simulation, Vol. 8, No. 1, January 1998, pp 3-30.
1537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef mersenne_twister_engine<
1539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     uint_fast32_t,
1540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     32, 624, 397, 31,
1541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x9908b0dfUL, 11,
1542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xffffffffUL, 7,
1543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x9d2c5680UL, 15,
1544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xefc60000UL, 18, 1812433253UL> mt19937;
1545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * An alternative Mersenne Twister.
1548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef mersenne_twister_engine<
1550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     uint_fast64_t,
1551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     64, 312, 156, 31,
1552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xb5026f5aa96619e9ULL, 29,
1553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x5555555555555555ULL, 17,
1554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0x71d67fffeda60000ULL, 37,
1555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     0xfff7eee000000000ULL, 43,
1556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     6364136223846793005ULL> mt19937_64;
1557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef subtract_with_carry_engine<uint_fast32_t, 24, 10, 24>
1559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     ranlux24_base;
1560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef subtract_with_carry_engine<uint_fast64_t, 48, 5, 12>
1562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     ranlux48_base;
1563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef discard_block_engine<ranlux24_base, 223, 23> ranlux24;
1565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef discard_block_engine<ranlux48_base, 389, 11> ranlux48;
1567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef shuffle_order_engine<minstd_rand0, 256> knuth_b;
1569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   typedef minstd_rand0 default_random_engine;
1571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   /**
1573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * A standard interface to a platform-specific non-deterministic
1574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    * random number generator (if any are available).
1575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****    */
1576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   class random_device
1577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   {
1578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   public:
1579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     /** The type of the generated random value. */
1580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     typedef unsigned int result_type;
GAS LISTING /tmp/ccKUqHDa.s 			page 171


1581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     // constructors, destructors and member functions
1583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifdef _GLIBCXX_USE_RANDOM_TR1
1585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     explicit
1587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     random_device(const std::string& __token = "default")
1588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       _M_init(__token);
 1154              		.loc 11 1590 0
 1155 03a7 488B7C24 		movq	112(%rsp), %rdi
 1155      70
 1156 03ac 4889DE   		movq	%rbx, %rsi
 1157              	.LEHB5:
 1158 03af E8000000 		call	_ZNSt13random_device7_M_initERKSs@PLT
 1158      00
 1159              	.LEHE5:
 1160              	.LVL124:
 1161              	.LBE2001:
 1162              	.LBE2000:
 1163              	.LBB2002:
 1164              	.LBB2003:
 1165              	.LBB2004:
 1166              	.LBB2005:
 1167              		.loc 2 301 0
 1168 03b4 488B8424 		movq	5328(%rsp), %rax
 1168      D0140000 
 1169 03bc 488D78E8 		leaq	-24(%rax), %rdi
 1170              	.LVL125:
 1171              	.LBE2005:
 1172              	.LBE2004:
 1173              	.LBB2006:
 1174              	.LBB2007:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 1175              		.loc 2 240 0
 1176 03c0 483B3D00 		cmpq	_ZNSs4_Rep20_S_empty_rep_storageE@GOTPCREL(%rip), %rdi
 1176      000000
 1177 03c7 0F85B505 		jne	.L168
 1177      0000
 1178              	.LVL126:
 1179              	.L60:
 1180              	.LBE2007:
 1181              	.LBE2006:
 1182              	.LBE2003:
 1183              	.LBE2002:
 1184              	.LBB2011:
 1185              	.LBB2012:
1590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     }
1591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     ~random_device()
1593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_fini(); }
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #else
1596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     explicit
1598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     random_device(const std::string& __token = "mt19937")
1599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_init_pretr1(__token); }
GAS LISTING /tmp/ccKUqHDa.s 			page 172


1600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****   public:
1602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #endif
1604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     static constexpr result_type
1606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     min()
1607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return std::numeric_limits<result_type>::min(); }
1608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     static constexpr result_type
1610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     max()
1611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return std::numeric_limits<result_type>::max(); }
1612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     double
1614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     entropy() const noexcept
1615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { return 0.0; }
1616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 
1617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     result_type
1618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     operator()()
1619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     {
1620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** #ifdef _GLIBCXX_USE_RANDOM_TR1
1621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****       return this->_M_getval();
 1186              		.loc 11 1622 0
 1187 03cd 488B7C24 		movq	112(%rsp), %rdi
 1187      70
 1188              	.LEHB6:
 1189 03d2 E8000000 		call	_ZNSt13random_device9_M_getvalEv@PLT
 1189      00
 1190              	.LVL127:
 1191              	.LBE2012:
 1192              	.LBE2011:
 1193              	.LBB2013:
 1194              	.LBB2014:
 1195              	.LBB2015:
 1196              	.LBB2016:
 1197              	.LBB2017:
 1198              	.LBB2018:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1199              		.loc 11 142 0
 1200 03d7 89C6     		movl	%eax, %esi
 1201              	.LVL128:
 1202              	.LBE2018:
 1203              	.LBE2017:
 1204              	.LBE2016:
 1205              	.LBB2021:
 1206              	.LBB2022:
 1207              	.LBB2023:
 1208              	.LBB2024:
 1209              	.LBB2025:
 1210 03d9 48BF210D 		movabsq	$945986875574848801, %rdi
 1210      D2200DD2 
 1210      200D
 1211 03e3 89C0     		movl	%eax, %eax
 1212              	.LBE2025:
 1213              	.LBE2024:
 1214              	.LBE2023:
 1215              	.LBE2022:
GAS LISTING /tmp/ccKUqHDa.s 			page 173


 1216              	.LBE2021:
 1217              	.LBB2039:
 1218              	.LBB2020:
 1219              	.LBB2019:
 1220 03e5 4889B424 		movq	%rsi, 5328(%rsp)
 1220      D0140000 
 1221              	.LVL129:
 1222              	.LBE2019:
 1223              	.LBE2020:
 1224              	.LBE2039:
 1225              	.LBB2040:
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 1226              		.loc 7 334 0
 1227 03ed BE010000 		movl	$1, %esi
 1227      00
 1228              	.LVL130:
 1229              		.p2align 4,,10
 1230 03f2 660F1F44 		.p2align 3
 1230      0000
 1231              	.L61:
 1232              	.LBB2038:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 1233              		.loc 7 337 0
 1234 03f8 4889C1   		movq	%rax, %rcx
 1235              	.LBB2032:
 1236              	.LBB2029:
 1237              	.LBB2026:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1238              		.loc 11 142 0
 1239 03fb 4889F2   		movq	%rsi, %rdx
 1240              	.LBE2026:
 1241              	.LBE2029:
 1242              	.LBE2032:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 1243              		.loc 7 337 0
 1244 03fe 48C1E91E 		shrq	$30, %rcx
 1245              	.LBB2033:
 1246              	.LBB2030:
 1247              	.LBB2027:
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1248              		.loc 11 142 0
 1249 0402 48C1EA04 		shrq	$4, %rdx
 1250              	.LBE2027:
 1251              	.LBE2030:
 1252              	.LBE2033:
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x ^= __x >> (__w - 2);
 1253              		.loc 7 337 0
 1254 0406 4831C8   		xorq	%rcx, %rax
 1255              	.LVL131:
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  __x *= __f;
 1256              		.loc 7 338 0
 1257 0409 4869C865 		imulq	$1812433253, %rax, %rcx
 1257      89076C
 1258              	.LVL132:
 1259              	.LBB2034:
 1260              	.LBB2031:
 1261              	.LBB2028:
GAS LISTING /tmp/ccKUqHDa.s 			page 174


 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	    __res %= __m;
 1262              		.loc 11 142 0
 1263 0410 4889D0   		movq	%rdx, %rax
 1264 0413 48F7E7   		mulq	%rdi
 1265 0416 4889F0   		movq	%rsi, %rax
 1266 0419 48D1EA   		shrq	%rdx
 1267 041c 4869D270 		imulq	$624, %rdx, %rdx
 1267      020000
 1268 0423 4829D0   		subq	%rdx, %rax
 1269              	.LBE2028:
 1270              	.LBE2031:
 1271              	.LBE2034:
 1272              	.LBB2035:
 1273              	.LBB2036:
 1274              	.LBB2037:
 1275 0426 01C8     		addl	%ecx, %eax
 1276              	.LVL133:
 1277              	.LBE2037:
 1278              	.LBE2036:
 1279              	.LBE2035:
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	  _M_x[__i] = __detail::__mod<_UIntType,
 1280              		.loc 7 340 0
 1281 0428 488904F3 		movq	%rax, (%rbx,%rsi,8)
 1282              	.LBE2038:
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       for (size_t __i = 1; __i < state_size; ++__i)
 1283              		.loc 7 334 0
 1284 042c 4883C601 		addq	$1, %rsi
 1285              	.LVL134:
 1286 0430 4881FE70 		cmpq	$624, %rsi
 1286      020000
 1287 0437 75BF     		jne	.L61
 1288              	.LBE2040:
 1289              	.LBE2015:
 1290              	.LBE2014:
 1291              	.LBE2013:
 102:examples/customstamp_heatmaps.cpp ****         normal_distribution<float> x_distr(0.5f*w, 0.5f/3.0f*w), y_distr(0.5f*h, 0.25f*h);
 1292              		.loc 1 102 0
 1293 0439 48837C24 		cmpq	$0, 120(%rsp)
 1293      7800
 1294              	.LBB2043:
 1295              	.LBB2042:
 1296              	.LBB2041:
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc ****       _M_p = state_size;
 1297              		.loc 7 343 0
 1298 043f 48C78424 		movq	$624, 10320(%rsp)
 1298      50280000 
 1298      70020000 
 1299              	.LBE2041:
 1300              	.LBE2042:
 1301              	.LBE2043:
 102:examples/customstamp_heatmaps.cpp ****         normal_distribution<float> x_distr(0.5f*w, 0.5f/3.0f*w), y_distr(0.5f*h, 0.25f*h);
 1302              		.loc 1 102 0
 1303 044b 0F880505 		js	.L62
 1303      0000
 1304 0451 660FEFC0 		pxor	%xmm0, %xmm0
 1305 0455 F3480F2A 		cvtsi2ssq	120(%rsp), %xmm0
 1305      442478
GAS LISTING /tmp/ccKUqHDa.s 			page 175


 1306              	.LVL135:
 1307              	.L63:
 1308 045c F30F103D 		movss	.LC19(%rip), %xmm7
 1308      00000000 
 1309              	.LBB2044:
 1310              	.LBB2045:
 1311              	.LBB2046:
 1312              	.LBB2047:
 1313              	.LBB2048:
 1314              	.LBB2049:
 1315              	.LBB2050:
 1316              	.LBB2051:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 1317              		.loc 5 104 0
 1318 0464 BF401F00 		movl	$8000, %edi
 1318      00
 1319              	.LBE2051:
 1320              	.LBE2050:
 1321              	.LBE2049:
 1322              	.LBE2048:
 1323              	.LBE2047:
 1324              	.LBE2046:
 1325              	.LBE2045:
 1326              	.LBE2044:
 102:examples/customstamp_heatmaps.cpp ****         normal_distribution<float> x_distr(0.5f*w, 0.5f/3.0f*w), y_distr(0.5f*h, 0.25f*h);
 1327              		.loc 1 102 0
 1328 0469 F30F59F8 		mulss	%xmm0, %xmm7
 1329 046d F30F117C 		movss	%xmm7, 60(%rsp)
 1329      243C
 1330 0473 F30F103D 		movss	.LC20(%rip), %xmm7
 1330      00000000 
 1331 047b F30F59F8 		mulss	%xmm0, %xmm7
 1332 047f F30F5905 		mulss	.LC21(%rip), %xmm0
 1332      00000000 
 1333 0487 F30F117C 		movss	%xmm7, 16(%rsp)
 1333      2410
 1334              	.LVL136:
 1335 048d F30F1144 		movss	%xmm0, 64(%rsp)
 1335      2440
 1336              	.LVL137:
 1337              	.LBB2069:
 1338              	.LBB2058:
 1339              	.LBB2057:
 1340              	.LBB2056:
 1341              	.LBB2055:
 1342              	.LBB2054:
 1343              	.LBB2053:
 1344              	.LBB2052:
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 1345              		.loc 5 104 0
 1346 0493 E8000000 		call	_Znwm@PLT
 1346      00
 1347              	.LEHE6:
 1348              	.LVL138:
 1349 0498 488DA840 		leaq	8000(%rax), %rbp
 1349      1F0000
 1350              	.LVL139:
GAS LISTING /tmp/ccKUqHDa.s 			page 176


 1351 049f 48894424 		movq	%rax, 72(%rsp)
 1351      48
 1352              	.LVL140:
 1353              		.p2align 4,,10
 1354 04a4 0F1F4000 		.p2align 3
 1355              	.L65:
 1356              	.LBE2052:
 1357              	.LBE2053:
 1358              	.LBE2054:
 1359              	.LBE2055:
 1360              	.LBE2056:
 1361              	.LBE2057:
 1362              	.LBE2058:
 1363              	.LBB2059:
 1364              	.LBB2060:
 1365              	.LBB2061:
 1366              	.LBB2062:
 1367              	.LBB2063:
 1368              	.LBB2064:
 1369              	.LBB2065:
 1370              	.LBB2066:
 1371              		.file 12 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // nonstandard construct and destroy functions -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * representations about the suitability of this software for any
GAS LISTING /tmp/ccKUqHDa.s 			page 177


  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * Copyright (c) 1996,1997
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** /** @file bits/stl_construct.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  *  Do not attempt to use it directly. @headername{memory}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** #ifndef _STL_CONSTRUCT_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** #define _STL_CONSTRUCT_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** #include <new>
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** #include <bits/move.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** #include <ext/alloc_traits.h>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** 
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** namespace std _GLIBCXX_VISIBILITY(default)
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** {
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** 
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****   /**
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****    * Constructs an object in existing memory by invoking an allocated
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****    * object's constructor with an initializer.
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****    */
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h **** #if __cplusplus >= 201103L
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****   template<typename _T1, typename... _Args>
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****     inline void
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****     _Construct(_T1* __p, _Args&&... __args)
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_construct.h ****     { ::new(static_cast<void*>(__p)) _T1(std::forward<_Args>(__args)...); }
 1372              		.loc 12 75 0
 1373 04a8 4885C0   		testq	%rax, %rax
 1374 04ab 740D     		je	.L64
 1375              	.LVL141:
 1376              	.LBB2067:
 1377              	.LBB2068:
 1378              		.file 13 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // Pair implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 178


  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * Copyright (c) 1996,1997
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** /** @file bits/stl_pair.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  *  Do not attempt to use it directly. @headername{utility}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** #ifndef _STL_PAIR_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** #define _STL_PAIR_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** #include <bits/move.h> // for std::move / std::forward, and std::swap
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** #if __cplusplus >= 201103L
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** #include <type_traits> // for std::__decay_and_strip too
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** #endif
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** namespace std _GLIBCXX_VISIBILITY(default)
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** {
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
GAS LISTING /tmp/ccKUqHDa.s 			page 179


  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****   /**
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****    *  @addtogroup utilities
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****    *  @{
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****    */
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** #if __cplusplus >= 201103L
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****   /// piecewise_construct_t
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****   struct piecewise_construct_t { };
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****   /// piecewise_construct
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****   constexpr piecewise_construct_t piecewise_construct = piecewise_construct_t();
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****   // Forward declarations.
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****   template<typename...>
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****     class tuple;
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****   template<std::size_t...>
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****     struct _Index_tuple;
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** #endif
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****  /**
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****    *  @brief Struct holding two objects of arbitrary type.
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****    *
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****    *  @tparam _T1  Type of first object.
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****    *  @tparam _T2  Type of second object.
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****    */
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****   template<class _T1, class _T2>
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****     struct pair
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****     {
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       typedef _T1 first_type;    /// @c first_type is the first bound type
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       typedef _T2 second_type;   /// @c second_type is the second bound type
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       _T1 first;                 /// @c first is a copy of the first object
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       _T2 second;                /// @c second is a copy of the second object
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       // _GLIBCXX_RESOLVE_LIB_DEFECTS
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       // 265.  std::pair::pair() effects overly restrictive
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       /** The default constructor creates @c first and @c second using their
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****        *  respective default constructors.  */
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       _GLIBCXX_CONSTEXPR pair()
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       : first(), second() { }
 1379              		.loc 13 109 0
 1380 04ad C7000000 		movl	$0x00000000, (%rax)
 1380      0000
 1381 04b3 C7400400 		movl	$0x00000000, 4(%rax)
 1381      000000
 1382              	.LVL142:
 1383              	.L64:
 1384 04ba 4883C008 		addq	$8, %rax
 1385              	.LVL143:
 1386              	.LBE2068:
 1387              	.LBE2067:
 1388              	.LBE2066:
 1389              	.LBE2065:
 1390              		.file 14 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // Raw memory manipulators -*- C++ -*-
GAS LISTING /tmp/ccKUqHDa.s 			page 180


   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * Copyright (c) 1996,1997
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** /** @file bits/stl_uninitialized.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  *  Do not attempt to use it directly. @headername{memory}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #ifndef _STL_UNINITIALIZED_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #define _STL_UNINITIALIZED_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 181


  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** namespace std _GLIBCXX_VISIBILITY(default)
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** {
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<bool _TrivialValueTypes>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     struct __uninitialized_copy
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         static _ForwardIterator
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         {
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __result;
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __try
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    {
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      for (; __first != __last; ++__first, ++__cur)
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), *__first);
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      return __cur;
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    }
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __catch(...)
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    {
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      std::_Destroy(__result, __cur);
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      __throw_exception_again;
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    }
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     };
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<>
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     struct __uninitialized_copy<true>
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       template<typename _InputIterator, typename _ForwardIterator>
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         static _ForwardIterator
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         __uninit_copy(_InputIterator __first, _InputIterator __last,
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 		      _ForwardIterator __result)
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         { return std::copy(__first, __last, __result); }
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     };
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   /**
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @brief Copies the range [first,last) into result.
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @param  __result An output iterator.
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @return   __result + (__first - __last)
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  Like copy(), but does not require an initialized output range.
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   */
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator>
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline _ForwardIterator
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     uninitialized_copy(_InputIterator __first, _InputIterator __last,
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 		       _ForwardIterator __result)
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::value_type
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	_ValueType1;
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	_ValueType2;
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       const bool __assignable = true;
GAS LISTING /tmp/ccKUqHDa.s 			page 182


 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #else
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_InputIterator>::reference _RefType;
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       const bool __assignable = is_assignable<_ValueType1, _RefType>::value;
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #endif
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       return std::__uninitialized_copy<__is_trivial(_ValueType1)
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 				       && __is_trivial(_ValueType2)
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 				       && __assignable>::
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	__uninit_copy(__first, __last, __result);
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     struct __uninitialized_fill
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         static void
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         {
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __try
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    {
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    }
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __catch(...)
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    {
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    }
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     };
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<>
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     struct __uninitialized_fill<true>
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Tp>
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         static void
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         __uninit_fill(_ForwardIterator __first, _ForwardIterator __last,
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 		      const _Tp& __x)
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         { std::fill(__first, __last, __x); }
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     };
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   /**
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,last).
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @param  __last   An input iterator.
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @return   Nothing.
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  Like fill(), but does not require an initialized output range.
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   */
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp>
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline void
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     uninitialized_fill(_ForwardIterator __first, _ForwardIterator __last,
GAS LISTING /tmp/ccKUqHDa.s 			page 183


 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 		       const _Tp& __x)
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	_ValueType;
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       const bool __assignable = true;
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #else
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #endif
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       std::__uninitialized_fill<__is_trivial(_ValueType) && __assignable>::
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	__uninit_fill(__first, __last, __x);
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         static void
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			const _Tp& __x)
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         {
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __try
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    {
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, ++__cur)
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur), __x);
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    }
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __catch(...)
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    {
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    }
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     };
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<>
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     struct __uninitialized_fill_n<true>
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size, typename _Tp>
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         static void
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         __uninit_fill_n(_ForwardIterator __first, _Size __n,
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			const _Tp& __x)
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         { std::fill_n(__first, __n, __x); }
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     };
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   /**
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @brief Copies the value x into the range [first,first+n).
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @param  __first  An input iterator.
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @param  __n      The number of copies to make.
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @param  __x      The source value.
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  @return   Nothing.
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****    *  Like fill_n(), but does not require an initialized output range.
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   */
GAS LISTING /tmp/ccKUqHDa.s 			page 184


 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp>
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline void
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     uninitialized_fill_n(_ForwardIterator __first, _Size __n, const _Tp& __x)
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	_ValueType;
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #if __cplusplus < 201103L
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       const bool __assignable = true;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #else
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       // trivial types can have deleted assignment
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       const bool __assignable = is_copy_assignable<_ValueType>::value;
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #endif
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       std::__uninitialized_fill_n<__is_trivial(_ValueType) && __assignable>::
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	__uninit_fill_n(__first, __n, __x);
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // Extensions: versions of uninitialized_copy, uninitialized_fill,
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   //  and uninitialized_fill_n that take an allocator parameter.
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   //  We dispatch back to the standard versions when we're given the
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   //  default allocator.  For nondefault allocators we do not use 
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   //  any of the POD optimizations.
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	   typename _Allocator>
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     _ForwardIterator
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __result;
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __try
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  for (; __first != __last; ++__first, ++__cur)
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), *__first);
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  return __cur;
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __catch(...)
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __cur, __alloc);
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp>
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline _ForwardIterator
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_copy_a(_InputIterator __first, _InputIterator __last,
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, allocator<_Tp>&)
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     { return std::uninitialized_copy(__first, __last, __result); }
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	   typename _Allocator>
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline _ForwardIterator
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_move_a(_InputIterator __first, _InputIterator __last,
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			   _ForwardIterator __result, _Allocator& __alloc)
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a(_GLIBCXX_MAKE_MOVE_ITERATOR(__first),
GAS LISTING /tmp/ccKUqHDa.s 			page 185


 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 					 _GLIBCXX_MAKE_MOVE_ITERATOR(__last),
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 					 __result, __alloc);
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator,
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	   typename _Allocator>
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline _ForwardIterator
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_move_if_noexcept_a(_InputIterator __first,
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 				       _InputIterator __last,
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 				       _ForwardIterator __result,
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 				       _Allocator& __alloc)
 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       return std::__uninitialized_copy_a
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	(_GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__first),
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	 _GLIBCXX_MAKE_MOVE_IF_NOEXCEPT_ITERATOR(__last), __result, __alloc);
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Allocator>
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     void
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			   const _Tp& __x, _Allocator& __alloc)
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __try
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  for (; __cur != __last; ++__cur)
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __catch(...)
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _Tp2>
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline void
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_fill_a(_ForwardIterator __first, _ForwardIterator __last,
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			   const _Tp& __x, allocator<_Tp2>&)
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     { std::uninitialized_fill(__first, __last, __x); }
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	   typename _Allocator>
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     void
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			     const _Tp& __x, _Allocator& __alloc)
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       _ForwardIterator __cur = __first;
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __try
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  typedef __gnu_cxx::__alloc_traits<_Allocator> __traits;
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  for (; __n > 0; --__n, ++__cur)
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    __traits::construct(__alloc, std::__addressof(*__cur), __x);
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __catch(...)
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
GAS LISTING /tmp/ccKUqHDa.s 			page 186


 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  std::_Destroy(__first, __cur, __alloc);
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Size, typename _Tp,
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	   typename _Tp2>
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline void
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_fill_n_a(_ForwardIterator __first, _Size __n, 
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			     const _Tp& __x, allocator<_Tp2>&)
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     { std::uninitialized_fill_n(__first, __n, __x); }
 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // Extensions: __uninitialized_copy_move, __uninitialized_move_copy,
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // __uninitialized_fill_move, __uninitialized_move_fill.
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // All of these algorithms take a user-supplied allocator, which is used
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // for construction and destruction.
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // __uninitialized_copy_move
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // Copies [first1, last1) into [result, result + (last1 - first1)), and
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   //  move [first2, last2) into
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline _ForwardIterator
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_copy_move(_InputIterator1 __first1,
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _InputIterator1 __last1,
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _InputIterator2 __first2,
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _InputIterator2 __last2,
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _ForwardIterator __result,
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_copy_a(__first1, __last1,
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 							   __result,
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 							   __alloc);
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __try
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first2, __last2, __mid, __alloc);
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __catch(...)
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // __uninitialized_move_copy
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // Moves [first1, last1) into [result, result + (last1 - first1)), and
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   //  copies [first2, last2) into
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   //  [result, result + (last1 - first1) + (last2 - first2)).
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _InputIterator1, typename _InputIterator2,
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	   typename _ForwardIterator, typename _Allocator>
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline _ForwardIterator
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_move_copy(_InputIterator1 __first1,
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _InputIterator1 __last1,
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _InputIterator2 __first2,
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _InputIterator2 __last2,
GAS LISTING /tmp/ccKUqHDa.s 			page 187


 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _ForwardIterator __result,
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       _ForwardIterator __mid = std::__uninitialized_move_a(__first1, __last1,
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 							   __result,
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 							   __alloc);
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __try
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  return std::__uninitialized_copy_a(__first2, __last2, __mid, __alloc);
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __catch(...)
 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // __uninitialized_fill_move
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // Fills [result, mid) with x, and moves [first, last) into
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   //  [mid, mid + (last - first)).
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _ForwardIterator, typename _Tp, typename _InputIterator,
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	   typename _Allocator>
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline _ForwardIterator
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_fill_move(_ForwardIterator __result, _ForwardIterator __mid,
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      const _Tp& __x, _InputIterator __first,
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _InputIterator __last, _Allocator& __alloc)
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       std::__uninitialized_fill_a(__result, __mid, __x, __alloc);
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __try
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  return std::__uninitialized_move_a(__first, __last, __mid, __alloc);
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __catch(...)
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  std::_Destroy(__result, __mid, __alloc);
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // __uninitialized_move_fill
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // Moves [first1, last1) into [first2, first2 + (last1 - first1)), and
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   //  fills [first2 + (last1 - first1), last2) with x.
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<typename _InputIterator, typename _ForwardIterator, typename _Tp,
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	   typename _Allocator>
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     inline void
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     __uninitialized_move_fill(_InputIterator __first1, _InputIterator __last1,
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _ForwardIterator __first2,
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _ForwardIterator __last2, const _Tp& __x,
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 			      _Allocator& __alloc)
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       _ForwardIterator __mid2 = std::__uninitialized_move_a(__first1, __last1,
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 							    __first2,
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 							    __alloc);
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __try
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  std::__uninitialized_fill_a(__mid2, __last2, __x, __alloc);
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
GAS LISTING /tmp/ccKUqHDa.s 			page 188


 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       __catch(...)
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	{
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  std::_Destroy(__first2, __mid2, __alloc);
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __throw_exception_again;
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     }
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** #if __cplusplus >= 201103L
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // Extensions: __uninitialized_default, __uninitialized_default_n,
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   // __uninitialized_default_a, __uninitialized_default_n_a.
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     struct __uninitialized_default_1
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       template<typename _ForwardIterator>
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         static void
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         {
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __try
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    {
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      for (; __cur != __last; ++__cur)
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 		std::_Construct(std::__addressof(*__cur));
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    }
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __catch(...)
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    {
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      std::_Destroy(__first, __cur);
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      __throw_exception_again;
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    }
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     };
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<>
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     struct __uninitialized_default_1<true>
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       template<typename _ForwardIterator>
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         static void
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         __uninit_default(_ForwardIterator __first, _ForwardIterator __last)
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         {
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  typedef typename iterator_traits<_ForwardIterator>::value_type
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    _ValueType;
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  std::fill(__first, __last, _ValueType());
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	}
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     };
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****   template<bool _TrivialValueType>
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     struct __uninitialized_default_n_1
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****     {
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****       template<typename _ForwardIterator, typename _Size>
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         static void
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         __uninit_default_n(_ForwardIterator __first, _Size __n)
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h ****         {
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  _ForwardIterator __cur = __first;
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	  __try
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	    {
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_uninitialized.h **** 	      for (; __n > 0; --__n, ++__cur)
GAS LISTING /tmp/ccKUqHDa.s 			page 189


 1391              		.loc 14 514 0
 1392 04be 4839E8   		cmpq	%rbp, %rax
 1393 04c1 75E5     		jne	.L65
 1394 04c3 48896C24 		movq	%rbp, 48(%rsp)
 1394      30
 1395 04c8 4C8B6424 		movq	72(%rsp), %r12
 1395      48
 1396 04cd 4531F6   		xorl	%r14d, %r14d
 1397              	.LVL144:
 1398 04d0 488B6C24 		movq	24(%rsp), %rbp
 1398      18
 1399              	.LVL145:
 1400 04d5 4531ED   		xorl	%r13d, %r13d
 1401              	.LVL146:
 1402 04d8 0F1F8400 		.p2align 4,,10
 1402      00000000 
 1403              		.p2align 3
 1404              	.L76:
 1405              	.LBE2064:
 1406              	.LBE2063:
 1407              	.LBE2062:
 1408              	.LBE2061:
 1409              	.LBE2060:
 1410              	.LBE2059:
 1411              	.LBE2069:
 1412              	.LBB2070:
 1413              	.LBB2071:
 1414              	.LBB2072:
 1415              	.LBB2073:
 1416              	.LBB2074:
 1417              	.LBB2075:
 1418              	.LBB2076:
 1419              	.LBB2077:
1942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (_M_saved_available)
 1420              		.loc 7 1942 0
 1421 04e0 4584F6   		testb	%r14b, %r14b
 1422 04e3 0F858F03 		jne	.L169
 1422      0000
 1423 04e9 0F1F8000 		.p2align 4,,10
 1423      000000
 1424              		.p2align 3
 1425              	.L145:
 1426              	.LVL147:
 1427              	.LBB2078:
 1428              	.LBB2079:
 1429              	.LBB2080:
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            _Engine>(_M_g);
 1430              		.loc 11 192 0
 1431 04f0 4889DF   		movq	%rbx, %rdi
 1432 04f3 E8000000 		call	_ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm256748361
 1432      00
 1433              	.LVL148:
 1434              	.LBE2080:
 1435              	.LBE2079:
1952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__x = result_type(2.0) * __aurng() - 1.0;
 1436              		.loc 7 1952 0
 1437 04f8 F30F58C0 		addss	%xmm0, %xmm0
GAS LISTING /tmp/ccKUqHDa.s 			page 190


 1438              	.LBB2081:
 1439              	.LBB2082:
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            _Engine>(_M_g);
 1440              		.loc 11 192 0
 1441 04fc 4889DF   		movq	%rbx, %rdi
 1442              	.LBE2082:
 1443              	.LBE2081:
1952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__x = result_type(2.0) * __aurng() - 1.0;
 1444              		.loc 7 1952 0
 1445 04ff 0F28D8   		movaps	%xmm0, %xmm3
 1446 0502 F30F5C1D 		subss	.LC14(%rip), %xmm3
 1446      00000000 
 1447 050a F30F115C 		movss	%xmm3, 8(%rsp)
 1447      2408
 1448              	.LVL149:
 1449              	.LBB2084:
 1450              	.LBB2083:
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            _Engine>(_M_g);
 1451              		.loc 11 192 0
 1452 0510 E8000000 		call	_ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm256748361
 1452      00
 1453              	.LVL150:
 1454              	.LBE2083:
 1455              	.LBE2084:
1953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__y = result_type(2.0) * __aurng() - 1.0;
 1456              		.loc 7 1953 0
 1457 0515 F30F58C0 		addss	%xmm0, %xmm0
1954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__r2 = __x * __x + __y * __y;
 1458              		.loc 7 1954 0
 1459 0519 F30F105C 		movss	8(%rsp), %xmm3
 1459      2408
 1460 051f 0F28D3   		movaps	%xmm3, %xmm2
 1461 0522 F30F59D3 		mulss	%xmm3, %xmm2
1953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__y = result_type(2.0) * __aurng() - 1.0;
 1462              		.loc 7 1953 0
 1463 0526 0F28C8   		movaps	%xmm0, %xmm1
 1464 0529 F30F5C0D 		subss	.LC14(%rip), %xmm1
 1464      00000000 
 1465              	.LVL151:
1954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__r2 = __x * __x + __y * __y;
 1466              		.loc 7 1954 0
 1467 0531 0F28C1   		movaps	%xmm1, %xmm0
 1468 0534 F30F59C1 		mulss	%xmm1, %xmm0
 1469 0538 F30F58D0 		addss	%xmm0, %xmm2
 1470              	.LVL152:
1950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 1471              		.loc 7 1950 0
 1472 053c 0F2E1500 		ucomiss	.LC14(%rip), %xmm2
 1472      000000
 1473 0543 77AB     		ja	.L145
 1474 0545 660FEFE4 		pxor	%xmm4, %xmm4
 1475 0549 0F2ED4   		ucomiss	%xmm4, %xmm2
 1476 054c 7A02     		jp	.L112
 1477 054e 74A0     		je	.L145
 1478              	.L112:
 1479              	.LBB2085:
 1480              	.LBB2086:
GAS LISTING /tmp/ccKUqHDa.s 			page 191


 1481              		.file 15 "/opt/gcc/4.9.2/include/c++/4.9.2/cmath"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // -*- C++ -*- C forwarding header.
   1:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** /** @file include/cmath
  25:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  This is a Standard C++ Library file.  You should @c \#include this file
  26:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  in your programs, rather than any of the @a *.h implementation files.
  27:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *
  28:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  This is the C++ version of the Standard C Library header @c math.h,
  29:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  and its contents are (mostly) the same as that header, but are all
  30:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  contained in the namespace @c std (except for names which are defined
  31:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  *  as macros in C).
  32:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****  */
  33:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  34:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** //
  35:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // ISO C++ 14882: 26.5  C library
  36:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** //
  37:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  38:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #pragma GCC system_header
  39:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  40:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #include <bits/c++config.h>
  41:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #include <bits/cpp_type_traits.h>
  42:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #include <ext/type_traits.h>
  43:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #include <math.h>
  44:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  45:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef _GLIBCXX_CMATH
  46:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #define _GLIBCXX_CMATH 1
  47:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  48:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** // Get rid of those macros defined in <math.h> in lieu of real functions.
  49:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef abs
  50:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef div
  51:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef acos
  52:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef asin
  53:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef atan
  54:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef atan2
  55:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef ceil
GAS LISTING /tmp/ccKUqHDa.s 			page 192


  56:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef cos
  57:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef cosh
  58:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef exp
  59:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef fabs
  60:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef floor
  61:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef fmod
  62:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef frexp
  63:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef ldexp
  64:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef log
  65:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef log10
  66:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef modf
  67:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef pow
  68:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef sin
  69:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef sinh
  70:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef sqrt
  71:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef tan
  72:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #undef tanh
  73:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** namespace std _GLIBCXX_VISIBILITY(default)
  75:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** {
  76:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  77:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  78:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  79:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR double
  80:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   abs(double __x)
  81:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_fabs(__x); }
  82:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
  83:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  84:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
  85:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
  86:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   abs(float __x)
  87:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_fabsf(__x); }
  88:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  89:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
  90:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   abs(long double __x)
  91:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_fabsl(__x); }
  92:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
  93:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
  94:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
  95:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
  96:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
  97:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
  98:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     abs(_Tp __x)
  99:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_fabs(__x); }
 100:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 101:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::acos;
 102:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 103:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 104:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 105:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   acos(float __x)
 106:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_acosf(__x); }
 107:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 109:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   acos(long double __x)
 110:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_acosl(__x); }
 111:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 112:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 193


 113:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 114:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 115:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 116:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 117:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     acos(_Tp __x)
 118:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_acos(__x); }
 119:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 120:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::asin;
 121:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 122:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 123:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 124:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   asin(float __x)
 125:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_asinf(__x); }
 126:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 127:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 128:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   asin(long double __x)
 129:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_asinl(__x); }
 130:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 131:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 132:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 133:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 134:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 135:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 136:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     asin(_Tp __x)
 137:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_asin(__x); }
 138:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 139:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::atan;
 140:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 141:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 142:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 143:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   atan(float __x)
 144:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_atanf(__x); }
 145:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 146:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 147:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   atan(long double __x)
 148:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_atanl(__x); }
 149:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 150:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 151:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 152:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 153:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 154:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 155:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     atan(_Tp __x)
 156:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_atan(__x); }
 157:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 158:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::atan2;
 159:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 160:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 161:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 162:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   atan2(float __y, float __x)
 163:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_atan2f(__y, __x); }
 164:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 165:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 166:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   atan2(long double __y, long double __x)
 167:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_atan2l(__y, __x); }
 168:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 169:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 194


 170:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp, typename _Up>
 171:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 172:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 173:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     atan2(_Tp __y, _Up __x)
 174:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     {
 175:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 176:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****       return atan2(__type(__y), __type(__x));
 177:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     }
 178:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 179:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::ceil;
 180:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 181:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 182:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 183:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   ceil(float __x)
 184:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_ceilf(__x); }
 185:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 186:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 187:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   ceil(long double __x)
 188:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_ceill(__x); }
 189:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 190:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 191:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 192:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 193:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 194:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 195:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     ceil(_Tp __x)
 196:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_ceil(__x); }
 197:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 198:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::cos;
 199:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 200:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 201:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 202:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   cos(float __x)
 203:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_cosf(__x); }
 204:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 205:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 206:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   cos(long double __x)
 207:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_cosl(__x); }
 208:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 209:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 210:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 211:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 212:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 213:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 214:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     cos(_Tp __x)
 215:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_cos(__x); }
 216:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 217:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::cosh;
 218:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 219:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 220:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 221:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   cosh(float __x)
 222:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_coshf(__x); }
 223:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 224:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 225:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   cosh(long double __x)
 226:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_coshl(__x); }
GAS LISTING /tmp/ccKUqHDa.s 			page 195


 227:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 228:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 229:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 230:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 231:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 232:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 233:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     cosh(_Tp __x)
 234:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_cosh(__x); }
 235:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 236:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::exp;
 237:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 238:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 239:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 240:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   exp(float __x)
 241:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_expf(__x); }
 242:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 243:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 244:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   exp(long double __x)
 245:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_expl(__x); }
 246:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 247:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 248:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 249:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 250:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 251:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 252:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     exp(_Tp __x)
 253:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_exp(__x); }
 254:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 255:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::fabs;
 256:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 257:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 258:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 259:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   fabs(float __x)
 260:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_fabsf(__x); }
 261:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 262:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 263:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   fabs(long double __x)
 264:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_fabsl(__x); }
 265:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 266:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 267:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 268:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 269:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 270:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 271:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     fabs(_Tp __x)
 272:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_fabs(__x); }
 273:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 274:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::floor;
 275:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 276:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 277:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 278:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   floor(float __x)
 279:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_floorf(__x); }
 280:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 281:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 282:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   floor(long double __x)
 283:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_floorl(__x); }
GAS LISTING /tmp/ccKUqHDa.s 			page 196


 284:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 285:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 286:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 287:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 288:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 289:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 290:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     floor(_Tp __x)
 291:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_floor(__x); }
 292:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 293:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::fmod;
 294:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 295:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 296:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 297:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   fmod(float __x, float __y)
 298:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_fmodf(__x, __y); }
 299:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 300:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 301:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   fmod(long double __x, long double __y)
 302:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_fmodl(__x, __y); }
 303:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 304:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 305:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp, typename _Up>
 306:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 307:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 308:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     fmod(_Tp __x, _Up __y)
 309:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     {
 310:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 311:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****       return fmod(__type(__x), __type(__y));
 312:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     }
 313:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 314:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::frexp;
 315:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 316:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 317:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline float
 318:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   frexp(float __x, int* __exp)
 319:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_frexpf(__x, __exp); }
 320:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 321:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline long double
 322:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   frexp(long double __x, int* __exp)
 323:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_frexpl(__x, __exp); }
 324:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 325:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 326:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 327:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 328:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 329:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 330:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     frexp(_Tp __x, int* __exp)
 331:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_frexp(__x, __exp); }
 332:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 333:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::ldexp;
 334:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 335:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 336:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 337:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   ldexp(float __x, int __exp)
 338:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_ldexpf(__x, __exp); }
 339:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 340:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
GAS LISTING /tmp/ccKUqHDa.s 			page 197


 341:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   ldexp(long double __x, int __exp)
 342:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_ldexpl(__x, __exp); }
 343:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 344:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 345:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 346:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 347:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 348:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 349:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     ldexp(_Tp __x, int __exp)
 350:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_ldexp(__x, __exp); }
 351:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 352:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::log;
 353:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 354:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 355:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 356:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   log(float __x)
 357:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_logf(__x); }
 1482              		.loc 15 358 0
 1483 0550 0F28C2   		movaps	%xmm2, %xmm0
 1484 0553 F30F114C 		movss	%xmm1, 44(%rsp)
 1484      242C
 1485 0559 F30F115C 		movss	%xmm3, 24(%rsp)
 1485      2418
 1486              	.LVL153:
 1487 055f F30F1154 		movss	%xmm2, 8(%rsp)
 1487      2408
 1488              	.LVL154:
 1489 0565 E8000000 		call	logf@PLT
 1489      00
 1490              	.LVL155:
 1491              	.LBE2086:
 1492              	.LBE2085:
1958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
 1493              		.loc 7 1958 0
 1494 056a F30F5905 		mulss	.LC22(%rip), %xmm0
 1494      00000000 
 1495              	.LVL156:
 1496 0572 F30F1054 		movss	8(%rsp), %xmm2
 1496      2408
 1497              	.LBB2087:
 1498              	.LBB2088:
 358:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 359:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 360:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   log(long double __x)
 361:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_logl(__x); }
 362:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 363:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 364:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 365:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 366:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 367:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 368:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     log(_Tp __x)
 369:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_log(__x); }
 370:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 371:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::log10;
 372:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 373:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
GAS LISTING /tmp/ccKUqHDa.s 			page 198


 374:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 375:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   log10(float __x)
 376:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_log10f(__x); }
 377:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 378:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 379:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   log10(long double __x)
 380:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_log10l(__x); }
 381:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 382:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 383:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 384:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 385:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value,
 386:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 387:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     log10(_Tp __x)
 388:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_log10(__x); }
 389:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 390:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::modf;
 391:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 392:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 393:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline float
 394:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   modf(float __x, float* __iptr)
 395:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_modff(__x, __iptr); }
 396:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 397:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline long double
 398:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   modf(long double __x, long double* __iptr)
 399:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_modfl(__x, __iptr); }
 400:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 401:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 402:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::pow;
 403:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 404:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 405:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 406:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   pow(float __x, float __y)
 407:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_powf(__x, __y); }
 408:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 409:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 410:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   pow(long double __x, long double __y)
 411:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_powl(__x, __y); }
 412:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 413:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #if __cplusplus < 201103L
 414:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   // _GLIBCXX_RESOLVE_LIB_DEFECTS
 415:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   // DR 550. What should the return type of pow(float,int) be?
 416:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline double
 417:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   pow(double __x, int __i)
 418:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_powi(__x, __i); }
 419:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 420:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline float
 421:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   pow(float __x, int __n)
 422:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_powif(__x, __n); }
 423:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 424:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline long double
 425:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   pow(long double __x, int __n)
 426:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_powil(__x, __n); }
 427:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 428:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 429:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 430:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp, typename _Up>
GAS LISTING /tmp/ccKUqHDa.s 			page 199


 431:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 432:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__promote_2<_Tp, _Up>::__type
 433:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     pow(_Tp __x, _Up __y)
 434:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     {
 435:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****       typedef typename __gnu_cxx::__promote_2<_Tp, _Up>::__type __type;
 436:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****       return pow(__type(__x), __type(__y));
 437:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     }
 438:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 439:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::sin;
 440:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 441:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 442:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 443:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   sin(float __x)
 444:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_sinf(__x); }
 445:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 446:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 447:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   sin(long double __x)
 448:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_sinl(__x); }
 449:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 450:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 451:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 452:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 453:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 454:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 455:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     sin(_Tp __x)
 456:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_sin(__x); }
 457:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 458:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::sinh;
 459:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 460:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 461:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 462:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   sinh(float __x)
 463:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_sinhf(__x); }
 464:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 465:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR long double
 466:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   sinh(long double __x)
 467:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_sinhl(__x); }
 468:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #endif
 469:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 470:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   template<typename _Tp>
 471:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     inline _GLIBCXX_CONSTEXPR
 472:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     typename __gnu_cxx::__enable_if<__is_integer<_Tp>::__value, 
 473:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****                                     double>::__type
 474:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     sinh(_Tp __x)
 475:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****     { return __builtin_sinh(__x); }
 476:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 477:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   using ::sqrt;
 478:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** 
 479:/opt/gcc/4.9.2/include/c++/4.9.2/cmath **** #ifndef __CORRECT_ISO_CPP_MATH_H_PROTO
 480:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   inline _GLIBCXX_CONSTEXPR float
 481:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   sqrt(float __x)
 482:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_sqrtf(__x); }
 1499              		.loc 15 483 0
 1500 0578 F30F105C 		movss	24(%rsp), %xmm3
 1500      2418
 1501 057e F30F104C 		movss	44(%rsp), %xmm1
 1501      242C
GAS LISTING /tmp/ccKUqHDa.s 			page 200


 1502              	.LBE2088:
 1503              	.LBE2087:
1958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
 1504              		.loc 7 1958 0
 1505 0584 F30F5EC2 		divss	%xmm2, %xmm0
 1506              	.LVL157:
 1507              	.LBB2091:
 1508              	.LBB2089:
 1509              		.loc 15 483 0
 1510 0588 F30F51D0 		sqrtss	%xmm0, %xmm2
 1511 058c 0F2ED2   		ucomiss	%xmm2, %xmm2
 1512 058f 0F8A7004 		jp	.L170
 1512      0000
 1513              	.LVL158:
 1514              	.L69:
 1515              	.LBE2089:
 1516              	.LBE2091:
1959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_saved = __x * __mult;
 1517              		.loc 7 1959 0
 1518 0595 F30F59DA 		mulss	%xmm2, %xmm3
 1519 0599 48BA0000 		movabsq	$-4294967296, %rdx
 1519      0000FFFF 
 1519      FFFF
1961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret = __y * __mult;
 1520              		.loc 7 1961 0
 1521 05a3 41BE0100 		movl	$1, %r14d
 1521      0000
 1522 05a9 F30F59CA 		mulss	%xmm2, %xmm1
 1523              	.LVL159:
1959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_saved = __x * __mult;
 1524              		.loc 7 1959 0
 1525 05ad 4821EA   		andq	%rbp, %rdx
 1526 05b0 660F7ED8 		movd	%xmm3, %eax
 1527 05b4 4809C2   		orq	%rax, %rdx
 1528 05b7 4889D5   		movq	%rdx, %rbp
 1529              	.LVL160:
 1530              	.L67:
 1531              	.LBE2078:
 1532              	.LBE2077:
1964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ret = __ret * __param.stddev() + __param.mean();
 1533              		.loc 7 1964 0
 1534 05ba F30F594C 		mulss	64(%rsp), %xmm1
 1534      2440
 1535              	.LVL161:
 1536              	.LBE2076:
 1537              	.LBE2075:
 1538              	.LBE2074:
 1539              	.LBB2102:
 1540              	.LBB2103:
 1541              	.LBB2104:
 1542              	.LBB2105:
1942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (_M_saved_available)
 1543              		.loc 7 1942 0
 1544 05c0 4584ED   		testb	%r13b, %r13b
 1545              	.LBE2105:
 1546              	.LBE2104:
 1547              	.LBE2103:
GAS LISTING /tmp/ccKUqHDa.s 			page 201


 1548              	.LBE2102:
 1549              	.LBB2133:
 1550              	.LBB2099:
 1551              	.LBB2096:
1964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ret = __ret * __param.stddev() + __param.mean();
 1552              		.loc 7 1964 0
 1553 05c3 F30F584C 		addss	16(%rsp), %xmm1
 1553      2410
 1554 05c9 F30F114C 		movss	%xmm1, 24(%rsp)
 1554      2418
 1555              	.LVL162:
 1556              	.LBE2096:
 1557              	.LBE2099:
 1558              	.LBE2133:
 1559              	.LBB2134:
 1560              	.LBB2129:
 1561              	.LBB2125:
 1562              	.LBB2122:
1942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	if (_M_saved_available)
 1563              		.loc 7 1942 0
 1564 05cf 0F858B02 		jne	.L171
 1564      0000
 1565              	.LVL163:
 1566              		.p2align 4,,10
 1567 05d5 0F1F00   		.p2align 3
 1568              	.L146:
 1569              	.LBB2106:
 1570              	.LBB2107:
 1571              	.LBB2108:
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            _Engine>(_M_g);
 1572              		.loc 11 192 0
 1573 05d8 4889DF   		movq	%rbx, %rdi
 1574 05db E8000000 		call	_ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm256748361
 1574      00
 1575              	.LVL164:
 1576              	.LBE2108:
 1577              	.LBE2107:
1952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__x = result_type(2.0) * __aurng() - 1.0;
 1578              		.loc 7 1952 0
 1579 05e0 F30F58C0 		addss	%xmm0, %xmm0
 1580              	.LBB2109:
 1581              	.LBB2110:
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            _Engine>(_M_g);
 1582              		.loc 11 192 0
 1583 05e4 4889DF   		movq	%rbx, %rdi
 1584              	.LBE2110:
 1585              	.LBE2109:
1952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__x = result_type(2.0) * __aurng() - 1.0;
 1586              		.loc 7 1952 0
 1587 05e7 0F28D8   		movaps	%xmm0, %xmm3
 1588 05ea F30F5C1D 		subss	.LC14(%rip), %xmm3
 1588      00000000 
 1589 05f2 F30F115C 		movss	%xmm3, 8(%rsp)
 1589      2408
 1590              	.LVL165:
 1591              	.LBB2112:
 1592              	.LBB2111:
GAS LISTING /tmp/ccKUqHDa.s 			page 202


 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h **** 	                            _Engine>(_M_g);
 1593              		.loc 11 192 0
 1594 05f8 E8000000 		call	_ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm256748361
 1594      00
 1595              	.LVL166:
 1596              	.LBE2111:
 1597              	.LBE2112:
1953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__y = result_type(2.0) * __aurng() - 1.0;
 1598              		.loc 7 1953 0
 1599 05fd F30F58C0 		addss	%xmm0, %xmm0
1954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__r2 = __x * __x + __y * __y;
 1600              		.loc 7 1954 0
 1601 0601 F30F105C 		movss	8(%rsp), %xmm3
 1601      2408
 1602 0607 0F28D3   		movaps	%xmm3, %xmm2
 1603 060a F30F59D3 		mulss	%xmm3, %xmm2
1953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__y = result_type(2.0) * __aurng() - 1.0;
 1604              		.loc 7 1953 0
 1605 060e 0F28C8   		movaps	%xmm0, %xmm1
 1606 0611 F30F5C0D 		subss	.LC14(%rip), %xmm1
 1606      00000000 
 1607              	.LVL167:
1954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 		__r2 = __x * __x + __y * __y;
 1608              		.loc 7 1954 0
 1609 0619 0F28C1   		movaps	%xmm1, %xmm0
 1610 061c F30F59C1 		mulss	%xmm1, %xmm0
 1611 0620 F30F58D0 		addss	%xmm0, %xmm2
 1612              	.LVL168:
1950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    do
 1613              		.loc 7 1950 0
 1614 0624 0F2E1500 		ucomiss	.LC14(%rip), %xmm2
 1614      000000
 1615 062b 77AB     		ja	.L146
 1616 062d 0F2E1500 		ucomiss	.LC5(%rip), %xmm2
 1616      000000
 1617 0634 7A02     		jp	.L113
 1618 0636 74A0     		je	.L146
 1619              	.L113:
 1620              	.LBB2113:
 1621              	.LBB2114:
 358:/opt/gcc/4.9.2/include/c++/4.9.2/cmath ****   { return __builtin_logf(__x); }
 1622              		.loc 15 358 0
 1623 0638 0F28C2   		movaps	%xmm2, %xmm0
 1624 063b F30F114C 		movss	%xmm1, 56(%rsp)
 1624      2438
 1625 0641 F30F115C 		movss	%xmm3, 44(%rsp)
 1625      242C
 1626              	.LVL169:
 1627 0647 F30F1154 		movss	%xmm2, 8(%rsp)
 1627      2408
 1628              	.LVL170:
 1629 064d E8000000 		call	logf@PLT
 1629      00
 1630              	.LVL171:
 1631              	.LBE2114:
 1632              	.LBE2113:
1958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
GAS LISTING /tmp/ccKUqHDa.s 			page 203


 1633              		.loc 7 1958 0
 1634 0652 F30F5905 		mulss	.LC22(%rip), %xmm0
 1634      00000000 
 1635              	.LVL172:
 1636 065a F30F1054 		movss	8(%rsp), %xmm2
 1636      2408
 1637              	.LBB2115:
 1638              	.LBB2116:
 1639              		.loc 15 483 0
 1640 0660 F30F105C 		movss	44(%rsp), %xmm3
 1640      242C
 1641 0666 F30F104C 		movss	56(%rsp), %xmm1
 1641      2438
 1642              	.LBE2116:
 1643              	.LBE2115:
1958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    const result_type __mult = std::sqrt(-2 * std::log(__r2) / __r2);
 1644              		.loc 7 1958 0
 1645 066c F30F5EC2 		divss	%xmm2, %xmm0
 1646              	.LVL173:
 1647              	.LBB2119:
 1648              	.LBB2117:
 1649              		.loc 15 483 0
 1650 0670 F30F51D0 		sqrtss	%xmm0, %xmm2
 1651 0674 0F2ED2   		ucomiss	%xmm2, %xmm2
 1652 0677 0F8AAD03 		jp	.L172
 1652      0000
 1653              	.LVL174:
 1654              	.L74:
 1655              	.LBE2117:
 1656              	.LBE2119:
1959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_saved = __x * __mult;
 1657              		.loc 7 1959 0
 1658 067d F30F59DA 		mulss	%xmm2, %xmm3
 1659 0681 48BA0000 		movabsq	$-4294967296, %rdx
 1659      0000FFFF 
 1659      FFFF
1961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret = __y * __mult;
 1660              		.loc 7 1961 0
 1661 068b 41BD0100 		movl	$1, %r13d
 1661      0000
 1662 0691 F30F59CA 		mulss	%xmm2, %xmm1
 1663              	.LVL175:
1959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    _M_saved = __x * __mult;
 1664              		.loc 7 1959 0
 1665 0695 4921D7   		andq	%rdx, %r15
 1666 0698 660F7ED8 		movd	%xmm3, %eax
 1667 069c 4909C7   		orq	%rax, %r15
 1668              	.LVL176:
 1669              	.L72:
 1670              	.LBE2106:
 1671              	.LBE2122:
1964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ret = __ret * __param.stddev() + __param.mean();
 1672              		.loc 7 1964 0
 1673 069f F30F594C 		mulss	60(%rsp), %xmm1
 1673      243C
 1674              	.LVL177:
 1675              	.LBE2125:
GAS LISTING /tmp/ccKUqHDa.s 			page 204


 1676              	.LBE2129:
 1677              	.LBE2134:
 1678              	.LBE2073:
 1679              	.LBE2072:
 1680              	.LBB2143:
 1681              	.LBB2144:
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       /** Two objects may be passed to a @c pair constructor to be copied.  */
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       _GLIBCXX_CONSTEXPR pair(const _T1& __a, const _T2& __b)
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       : first(__a), second(__b) { }
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       /** There is also a templated copy ctor for the @c pair class itself.  */
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** #if __cplusplus < 201103L
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       template<class _U1, class _U2>
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	pair(const pair<_U1, _U2>& __p)
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** #else
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       template<class _U1, class _U2, class = typename
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	       enable_if<__and_<is_convertible<const _U1&, _T1>,
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 				is_convertible<const _U2&, _T2>>::value>::type>
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	constexpr pair(const pair<_U1, _U2>& __p)
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	: first(__p.first), second(__p.second) { }
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       constexpr pair(const pair&) = default;
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       constexpr pair(pair&&) = default;
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       // DR 811.
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       template<class _U1, class = typename
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	       enable_if<is_convertible<_U1, _T1>::value>::type>
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	constexpr pair(_U1&& __x, const _T2& __y)
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(__y) { }
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       template<class _U2, class = typename
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	       enable_if<is_convertible<_U2, _T2>::value>::type>
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	constexpr pair(const _T1& __x, _U2&& __y)
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	: first(__x), second(std::forward<_U2>(__y)) { }
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       template<class _U1, class _U2, class = typename
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	       enable_if<__and_<is_convertible<_U1, _T1>,
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 				is_convertible<_U2, _T2>>::value>::type>
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	constexpr pair(_U1&& __x, _U2&& __y)
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	: first(std::forward<_U1>(__x)), second(std::forward<_U2>(__y)) { }
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       template<class _U1, class _U2, class = typename
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	       enable_if<__and_<is_convertible<_U1, _T1>,
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 				is_convertible<_U2, _T2>>::value>::type>
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	constexpr pair(pair<_U1, _U2>&& __p)
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	: first(std::forward<_U1>(__p.first)),
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	  second(std::forward<_U2>(__p.second)) { }
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       template<typename... _Args1, typename... _Args2>
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****         pair(piecewise_construct_t, tuple<_Args1...>, tuple<_Args2...>);
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       pair&
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       operator=(const pair& __p)
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       {
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	first = __p.first;
GAS LISTING /tmp/ccKUqHDa.s 			page 205


 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	second = __p.second;
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	return *this;
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       }
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       pair&
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       operator=(pair&& __p)
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       noexcept(__and_<is_nothrow_move_assignable<_T1>,
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	              is_nothrow_move_assignable<_T2>>::value)
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h ****       {
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	first = std::forward<first_type>(__p.first);
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	second = std::forward<second_type>(__p.second);
 1682              		.loc 13 171 0
 1683 06a5 F30F1074 		movss	24(%rsp), %xmm6
 1683      2418
 1684 06ab F3410F11 		movss	%xmm6, 4(%r12)
 1684      742404
 1685 06b2 4983C408 		addq	$8, %r12
 1686              	.LVL178:
 1687              	.LBE2144:
 1688              	.LBE2143:
 1689              	.LBB2146:
 1690              	.LBB2140:
 1691              	.LBB2135:
 1692              	.LBB2130:
 1693              	.LBB2126:
1964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	__ret = __ret * __param.stddev() + __param.mean();
 1694              		.loc 7 1964 0
 1695 06b6 F30F584C 		addss	16(%rsp), %xmm1
 1695      2410
 1696              	.LVL179:
 1697              	.LBE2126:
 1698              	.LBE2130:
 1699              	.LBE2135:
 1700              	.LBE2140:
 1701              	.LBE2146:
 1702              	.LBB2147:
 1703              	.LBB2145:
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_pair.h **** 	second = std::forward<second_type>(__p.second);
 1704              		.loc 13 170 0
 1705 06bc F3410F11 		movss	%xmm1, -8(%r12)
 1705      4C24F8
 1706              	.LVL180:
 1707              	.LBE2145:
 1708              	.LBE2147:
 1709              		.file 16 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Algorithm implementation -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Copyright (C) 2001-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
GAS LISTING /tmp/ccKUqHDa.s 			page 206


  12:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** /*
  25:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  26:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Copyright (c) 1994
  27:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Hewlett-Packard Company
  28:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  29:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  30:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  31:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  32:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * that both that copyright notice and this permission notice appear
  33:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * in supporting documentation.  Hewlett-Packard Company makes no
  34:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * representations about the suitability of this software for any
  35:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  36:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  37:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  38:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Copyright (c) 1996
  39:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Silicon Graphics Computer Systems, Inc.
  40:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *
  41:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * Permission to use, copy, modify, distribute and sell this software
  42:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * and its documentation for any purpose is hereby granted without fee,
  43:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * provided that the above copyright notice appear in all copies and
  44:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * that both that copyright notice and this permission notice appear
  45:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * in supporting documentation.  Silicon Graphics makes no
  46:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * representations about the suitability of this software for any
  47:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  * purpose.  It is provided "as is" without express or implied warranty.
  48:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  */
  49:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  50:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** /** @file bits/stl_algo.h
  51:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *  This is an internal header file, included by other library headers.
  52:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  *  Do not attempt to use it directly. @headername{algorithm}
  53:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****  */
  54:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  55:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #ifndef _STL_ALGO_H
  56:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #define _STL_ALGO_H 1
  57:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  58:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <cstdlib>             // for rand
  59:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/algorithmfwd.h>
  60:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/stl_heap.h>
  61:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/stl_tempbuf.h>  // for _Temporary_buffer
  62:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <bits/predefined_ops.h>
  63:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
  65:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #include <random>     // for std::uniform_int_distribution
  66:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
  67:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  68:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** // See concept_check.h for the __glibcxx_*_requires macros.
GAS LISTING /tmp/ccKUqHDa.s 			page 207


  69:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  70:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** namespace std _GLIBCXX_VISIBILITY(default)
  71:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** {
  72:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
  73:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  74:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Swaps the median value of *__a, *__b and *__c under __comp to *__result
  75:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Iterator, typename _Compare>
  76:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
  77:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_median_to_first(_Iterator __result,_Iterator __a, _Iterator __b,
  78:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Iterator __c, _Compare __comp)
  79:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
  80:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__comp(__a, __b))
  81:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
  82:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__b, __c))
  83:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__result, __b);
  84:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__comp(__a, __c))
  85:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__result, __c);
  86:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
  87:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__result, __a);
  88:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
  89:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__comp(__a, __c))
  90:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__result, __a);
  91:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__comp(__b, __c))
  92:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__result, __c);
  93:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
  94:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__result, __b);
  95:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
  96:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
  97:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is an overload used by find algos for the Input Iterator case.
  98:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
  99:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
 100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if(_InputIterator __first, _InputIterator __last,
 101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Predicate __pred, input_iterator_tag)
 102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last && !__pred(__first))
 104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	++__first;
 105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
 106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is an overload used by find algos for the RAI case.
 109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Predicate>
 110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIterator
 111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if(_RandomAccessIterator __first, _RandomAccessIterator __last,
 112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Predicate __pred, random_access_iterator_tag)
 113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_RandomAccessIterator>::difference_type
 115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__trip_count = (__last - __first) >> 2;
 116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __trip_count > 0; --__trip_count)
 118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
GAS LISTING /tmp/ccKUqHDa.s 			page 208


 126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       switch (__last - __first)
 137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 3:
 139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 2:
 143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 1:
 147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(__first))
 148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
 150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	case 0:
 151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	default:
 152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __last;
 153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Iterator, typename _Predicate>
 157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Iterator
 158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if(_Iterator __first, _Iterator __last, _Predicate __pred)
 159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __find_if(__first, __last, __pred,
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       std::__iterator_category(__first));
 162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Provided for stable_partition to use.
 165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
 167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if_not(_InputIterator __first, _InputIterator __last,
 168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _Predicate __pred)
 169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if(__first, __last,
 171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__negate(__pred),
 172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    std::__iterator_category(__first));
 173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Like find_if_not(), but uses and updates a count of the
 176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// remaining range length instead of comparing against an end
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// iterator.
 178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate, typename _Distance>
 179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _InputIterator
 180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_if_not_n(_InputIterator __first, _Distance& __len, _Predicate __pred)
 181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __len; --__len, ++__first)
GAS LISTING /tmp/ccKUqHDa.s 			page 209


 183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first))
 184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  break;
 185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
 186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_difference
 189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_intersection
 190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_symmetric_difference
 191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_union
 192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // for_each
 193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find
 194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_if
 195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_first_of
 196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // adjacent_find
 197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // count
 198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // count_if
 199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // search
 200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator1
 204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate  __predicate)
 207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Test for empty ranges
 209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 == __last1 || __first2 == __last2)
 210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first1;
 211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Test for a pattern of length 1.
 213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator2 __p1(__first2);
 214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (++__p1 == __last2)
 215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return std::__find_if(__first1, __last1,
 216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // General case.
 219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator2 __p;
 220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator1 __current = __first1;
 221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (;;)
 223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first1 =
 225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__find_if(__first1, __last1,
 226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__predicate, __first2));
 227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first1 == __last1)
 229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last1;
 230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __p = __p1;
 232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __current = __first1;
 233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (++__current == __last1)
 234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last1;
 235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__predicate(__current, __p))
 237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (++__p == __last2)
 239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return __first1;
GAS LISTING /tmp/ccKUqHDa.s 			page 210


 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (++__current == __last1)
 241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return __last1;
 242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first1;
 244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first1;
 246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // search_n
 249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an helper function for search_n overloaded for forward iterators.
 252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search_n_aux(_ForwardIterator __first, _ForwardIterator __last,
 257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   std::forward_iterator_tag)
 259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__find_if(__first, __last, __unary_pred);
 261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
 262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::difference_type
 264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __n = __count;
 265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __i = __first;
 266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__i;
 267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__i != __last && __n != 1 && __unary_pred(__i))
 268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__i;
 270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__n;
 271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__n == 1)
 273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__i == __last)
 275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last;
 276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first = std::__find_if(++__i, __last, __unary_pred);
 277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last;
 279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an helper function for search_n overloaded for random access
 283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterators.
 284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIter, typename _Integer,
 286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UnaryPredicate>
 287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIter
 288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search_n_aux(_RandomAccessIter __first, _RandomAccessIter __last,
 289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Integer __count, _UnaryPredicate __unary_pred,
 290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   std::random_access_iterator_tag)
 291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename std::iterator_traits<_RandomAccessIter>::difference_type
 293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
 294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __tailSize = __last - __first;
 296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __remainder = __count;
GAS LISTING /tmp/ccKUqHDa.s 			page 211


 297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__remainder <= __tailSize) // the main loop...
 299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first += __remainder;
 301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __tailSize -= __remainder;
 302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // __first here is always pointing to one past the last element of
 303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // next possible match.
 304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _RandomAccessIter __backTrack = __first; 
 305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__unary_pred(--__backTrack))
 306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (--__remainder == 0)
 308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	        return (__first - __count); // Success
 309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __remainder = __count + 1 - (__first - __backTrack);
 311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last; // Failure
 313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer,
 316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****            typename _UnaryPredicate>
 317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __search_n(_ForwardIterator __first, _ForwardIterator __last,
 319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _Integer __count,
 320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _UnaryPredicate __unary_pred)
 321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__count <= 0)
 323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
 324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__count == 1)
 326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return std::__find_if(__first, __last, __unary_pred);
 327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search_n_aux(__first, __last, __count, __unary_pred,
 329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 std::__iterator_category(__first));
 330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_end for forward iterators.
 333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator1
 336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       forward_iterator_tag, forward_iterator_tag,
 339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BinaryPredicate __comp)
 340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first2 == __last2)
 342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last1;
 343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator1 __result = __last1;
 345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (1)
 346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator1 __new_result
 348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__search(__first1, __last1, __first2, __last2, __comp);
 349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__new_result == __last1)
 350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __result;
 351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
 352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __result = __new_result;
GAS LISTING /tmp/ccKUqHDa.s 			page 212


 354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first1 = __new_result;
 355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first1;
 356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // find_end for bidirectional iterators (much faster).
 361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
 362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _BidirectionalIterator1
 364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __find_end(_BidirectionalIterator1 __first1,
 365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BidirectionalIterator1 __last1,
 366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BidirectionalIterator2 __first2,
 367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BidirectionalIterator2 __last2,
 368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       bidirectional_iterator_tag, bidirectional_iterator_tag,
 369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _BinaryPredicate __comp)
 370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator1>)
 374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
 375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator2>)
 376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator1> _RevIterator1;
 378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef reverse_iterator<_BidirectionalIterator2> _RevIterator2;
 379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RevIterator1 __rlast1(__first1);
 381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RevIterator2 __rlast2(__first2);
 382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RevIterator1 __rresult = std::__search(_RevIterator1(__last1), __rlast1,
 383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      _RevIterator2(__last2), __rlast2,
 384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __comp);
 385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__rresult == __rlast1)
 387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last1;
 388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
 389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator1 __result = __rresult.base();
 391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__result, -std::distance(__first2, __last2));
 392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __result;
 393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence.
 398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
 400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
 401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence to match.
 403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The last iterator @c i in the range
 404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2)) such that @c *(i+N) ==
 405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p *(__first2+N) for each @c N in the range @p
 406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [0,__last2-__first2), or @p __last1 if no such iterator exists.
 407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) and returns an iterator to the __first
GAS LISTING /tmp/ccKUqHDa.s 			page 213


 411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  element of the sub-sequence, or @p __last1 if the sub-sequence
 412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is not found.  The sub-sequence will be the last such
 413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  subsequence contained in [__first1,__last1).
 414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator @c i will be in the range @p
 420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
 423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
 424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2)
 426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first1),
 438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first2),
 439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equal_to_iter());
 440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find last matching subsequence in a sequence using a predicate.
 444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
 446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
 447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence to match.
 448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence to match.
 449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    The predicate to use.
 450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The last iterator @c i in the range @p
 451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2)) such that @c
 452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  predicate(*(i+N), @p (__first2+N)) is true for each @c N in the
 453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range @p [0,__last2-__first2), or @p __last1 if no such iterator
 454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  exists.
 455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
 457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
 458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) using comp as a predicate and returns an
 459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator to the first element of the sub-sequence, or @p __last1
 460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  if the sub-sequence is not found.  The sub-sequence will be the
 461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  last such subsequence contained in [__first,__last1).
 462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
 464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
 465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
 466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  length of the sub-sequence.  This means that the returned
 467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator @c i will be in the range @p
GAS LISTING /tmp/ccKUqHDa.s 			page 214


 468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2))
 469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
 471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
 472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
 473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_end(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
 474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
 475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate __comp)
 476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
 479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
 480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
 481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
 482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
 483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
 484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
 485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_end(__first1, __last1, __first2, __last2,
 487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first1),
 488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first2),
 489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
 490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
 493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks that a predicate is true for all the elements
 495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          of a sequence.
 496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if @p __pred is true for each element in the range
 503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     all_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return __last == std::find_if_not(__first, __last, __pred); }
 509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks that a predicate is false for all the elements
 512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          of a sequence.
 513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if @p __pred is false for each element in the range
 520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last), and false otherwise.
 521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     none_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
GAS LISTING /tmp/ccKUqHDa.s 			page 215


 525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return __last == _GLIBCXX_STD_A::find_if(__first, __last, __pred); }
 526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks that a predicate is false for at least an element
 529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          of a sequence.
 530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the check is true, false otherwise.
 535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if an element exists in the range @p
 537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last) such that @p __pred is true, and false
 538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise.
 539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     any_of(_InputIterator __first, _InputIterator __last, _Predicate __pred)
 543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return !std::none_of(__first, __last, __pred); }
 544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find the first element in a sequence for which a
 547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          predicate is false.
 548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
 549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
 553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such that @p __pred(*i) is false, or @p __last if no such iterator exists.
 554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
 557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_if_not(_InputIterator __first, _InputIterator __last,
 558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred)
 559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_InputIterator>::value_type>)
 564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if_not(__first, __last,
 566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred));
 567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether the sequence is partitioned.
 571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the range @p [__first,__last) is partioned by @p __pred,
 576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  i.e. if all elements that satisfy @p __pred appear before those that
 577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  do not.
 578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
 580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
 581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_partitioned(_InputIterator __first, _InputIterator __last,
GAS LISTING /tmp/ccKUqHDa.s 			page 216


 582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Predicate __pred)
 583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::find_if_not(__first, __last, __pred);
 585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::none_of(__first, __last, __pred);
 586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find the partition point of a partitioned range.
 590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
 592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
 593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator @p mid such that @p all_of(__first, mid, __pred)
 595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           and @p none_of(mid, __last, __pred) are both true.
 596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partition_point(_ForwardIterator __first, _ForwardIterator __last,
 600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Predicate __pred)
 601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
 604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_ForwardIterator>::value_type>)
 606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // A specific debug-mode test will be necessary...
 608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
 611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
 612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
 614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __half;
 615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __middle;
 616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__len > 0)
 618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __half = __len >> 1;
 620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __middle = __first;
 621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __half);
 622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__pred(*__middle))
 623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first = __middle;
 625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
 626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len = __len - __half - 1;
 627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
 629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __len = __half;
 630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
 632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
 634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate>
 637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
 638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __remove_copy_if(_InputIterator __first, _InputIterator __last,
GAS LISTING /tmp/ccKUqHDa.s 			page 217


 639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _OutputIterator __result, _Predicate __pred)
 640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first))
 643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__result = *__first;
 645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__result;
 646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, removing elements of a given value.
 652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __value   The value to be removed.
 657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) not equal
 660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to @p __value to the range beginning at @p __result.
 661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove_copy() is stable, so the relative order of elements that
 662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are copied is unchanged.
 663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
 665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove_copy(_InputIterator __first, _InputIterator __last,
 667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_OutputIterator __result, const _Tp& __value)
 668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
 675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__gnu_cxx::__ops::__iter_equals_val(__value));
 679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, removing elements for which a predicate is true.
 683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns false to the range beginning at @p __result.
 692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove_copy_if() is stable, so the relative order of elements that are
 694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  copied is unchanged.
 695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
GAS LISTING /tmp/ccKUqHDa.s 			page 218


 696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate>
 698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove_copy_if(_InputIterator __first, _InputIterator __last,
 700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _OutputIterator __result, _Predicate __pred)
 701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_copy_if(__first, __last, __result,
 711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__pred_iter(__pred));
 712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
 715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the elements of a sequence for which a predicate is true.
 717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
 721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns true to the range beginning at @p __result.
 726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  copy_if() is stable, so the relative order of elements that are
 728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  copied is unchanged.
 729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
 731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate>
 732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
 733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     copy_if(_InputIterator __first, _InputIterator __last,
 734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _OutputIterator __result, _Predicate __pred)
 735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__first))
 746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__result = *__first;
 748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__result;
 749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 219


 753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
 755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __copy_n(_InputIterator __first, _Size __n,
 756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _OutputIterator __result, input_iterator_tag)
 757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__n > 0)
 759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (true)
 761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
 762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = *__first;
 763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__result;
 764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (--__n > 0)
 765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		++__first;
 766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      else
 767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		break;
 768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
 769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size,
 774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator>
 775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __copy_n(_RandomAccessIterator __first, _Size __n,
 777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _OutputIterator __result, random_access_iterator_tag)
 778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return std::copy(__first, __first + __n, __result); }
 779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copies the range [first,first+n) into [result,result+n).
 782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __n      The number of elements to copy.
 785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result An output iterator.
 786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  result+n.
 787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This inline function will boil down to a call to @c memmove whenever
 789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  possible.  Failing that, if random access iterators are passed, then the
 790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  loop count will be known (and therefore a candidate for compiler
 791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  optimizations such as unrolling).
 792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Size, typename _OutputIterator>
 794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
 795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     copy_n(_InputIterator __first, _Size __n, _OutputIterator __result)
 796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
 800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__copy_n(__first, __n, __result,
 803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   std::__iterator_category(__first));
 804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the elements of a sequence to separate output sequences
 808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         depending on the truth value of a predicate.
 809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
GAS LISTING /tmp/ccKUqHDa.s 			page 220


 810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
 811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    An input iterator.
 812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __out_true   An output iterator.
 813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __out_false  An output iterator.
 814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate.
 815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   A pair designating the ends of the resulting sequences.
 816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) for which
 818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns true to the range beginning at @p out_true
 819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  and each element for which @p __pred returns false to @p __out_false.
 820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator1,
 822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator2, typename _Predicate>
 823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     pair<_OutputIterator1, _OutputIterator2>
 824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partition_copy(_InputIterator __first, _InputIterator __last,
 825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _OutputIterator1 __out_true, _OutputIterator2 __out_false,
 826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Predicate __pred)
 827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
 830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator1,
 831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator2,
 833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
 836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       
 838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__first))
 840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__out_true = *__first;
 842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__out_true;
 843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
 845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
 846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *__out_false = *__first;
 847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__out_false;
 848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
 849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return pair<_OutputIterator1, _OutputIterator2>(__out_true, __out_false);
 851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
 853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
 855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __remove_if(_ForwardIterator __first, _ForwardIterator __last,
 857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred)
 858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__find_if(__first, __last, __pred);
 860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
 861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****         return __first;
 862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __result = __first;
 863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__first;
 864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****         if (!__pred(__first))
 866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           {
GAS LISTING /tmp/ccKUqHDa.s 			page 221


 867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             *__result = _GLIBCXX_MOVE(*__first);
 868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             ++__result;
 869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           }
 870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
 871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove elements from a sequence.
 875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
 877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
 878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __value  The value to be removed.
 879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  All elements equal to @p __value are removed from the range
 882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
 883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove() is stable, so the relative order of elements that are
 885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
 886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
 891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
 892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove(_ForwardIterator __first, _ForwardIterator __last,
 893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   const _Tp& __value)
 894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
 898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
 899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
 900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_if(__first, __last,
 903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_equals_val(__value));
 904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove elements from a sequence using a predicate.
 908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
 910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
 911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
 912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
 913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  All elements for which @p __pred returns true are removed from the range
 915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
 916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  remove_if() is stable, so the relative order of elements that are
 918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
 919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
GAS LISTING /tmp/ccKUqHDa.s 			page 222


 924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
 925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     remove_if(_ForwardIterator __first, _ForwardIterator __last,
 926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Predicate __pred)
 927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
 931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
 932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
 933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__remove_if(__first, __last,
 936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			      __gnu_cxx::__ops::__pred_iter(__pred));
 937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
 942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _BinaryPredicate __binary_pred)
 943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
 945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last;
 946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
 947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__next != __last)
 948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
 949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__binary_pred(__first, __next))
 950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
 951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first = __next;
 952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
 953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last;
 954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
 957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
 958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique(_ForwardIterator __first, _ForwardIterator __last,
 959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate __binary_pred)
 960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Skip the beginning, if already unique.
 962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__adjacent_find(__first, __last, __binary_pred);
 963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
 964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last;
 965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Do the real copy work.
 967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __dest = __first;
 968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__first;
 969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__first != __last)
 970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__binary_pred(__dest, __first))
 971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *++__dest = _GLIBCXX_MOVE(*__first);
 972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__dest;
 973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
 974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
 975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
 976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove consecutive duplicate values from a sequence.
 977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
 978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
 979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
 980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
GAS LISTING /tmp/ccKUqHDa.s 			page 223


 981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
 982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Removes all but the first element from each group of consecutive
 983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  values that compare equal.
 984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
 985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
 986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
 987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
 988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
 989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
 990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
 991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last)
 992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
 993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
 994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
 995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
 996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualityComparableConcept<
 997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     typename iterator_traits<_ForwardIterator>::value_type>)
 998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
 999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__unique(__first, __last,
1001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_equal_to_iter());
1002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Remove consecutive values from a sequence using a predicate.
1006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first        A forward iterator.
1008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last         A forward iterator.
1009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_pred  A binary predicate.
1010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
1011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Removes all but the first element from each group of consecutive
1013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  values for which @p __binary_pred returns true.
1014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique() is stable, so the relative order of elements that are
1015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  not removed is unchanged.
1016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Elements between the end of the resulting sequence and @p __last
1017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  are still present, but their value is unspecified.
1018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
1020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
1021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     unique(_ForwardIterator __first, _ForwardIterator __last,
1022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****            _BinaryPredicate __binary_pred)
1023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
1027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type,
1029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__unique(__first, __last,
1033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
1034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified
GAS LISTING /tmp/ccKUqHDa.s 			page 224


1038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *              _BinaryPredicate)
1040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for forward iterators and output iterator as result.
1041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator,
1043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
1045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique_copy(_ForwardIterator __first, _ForwardIterator __last,
1046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  forward_iterator_tag, output_iterator_tag)
1048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type>)
1053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
1055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__result = *__first;
1056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__next != __last)
1057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__binary_pred(__first, __next))
1058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __first = __next;
1060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *++__result = *__first;
1061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__result;
1063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified
1067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *              _BinaryPredicate)
1069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for input iterators and output iterator as result.
1070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
1072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
1074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _OutputIterator __result, _BinaryPredicate __binary_pred,
1076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  input_iterator_tag, output_iterator_tag)
1077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type,
1081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_InputIterator>::value_type __value = *__first;
1084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __decltype(__gnu_cxx::__ops::__iter_comp_val(__binary_pred))
1085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__rebound_pred
1086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= __gnu_cxx::__ops::__iter_comp_val(__binary_pred);
1087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__result = __value;
1088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__first != __last)
1089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__rebound_pred(__first, __value))
1090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __value = *__first;
1092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    *++__result = __value;
1093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__result;
GAS LISTING /tmp/ccKUqHDa.s 			page 225


1095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified
1099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  unique_copy(_InputIterator, _InputIterator, _OutputIterator,
1100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *              _BinaryPredicate)
1101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for input iterators and forward iterator as result.
1102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator,
1104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
1105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unique_copy(_InputIterator __first, _InputIterator __last,
1107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ForwardIterator __result, _BinaryPredicate __binary_pred,
1108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  input_iterator_tag, forward_iterator_tag)
1109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements -- iterators already checked
1111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
1112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_ForwardIterator>::value_type,
1113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  typename iterator_traits<_InputIterator>::value_type>)
1114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__result = *__first;
1115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__first != __last)
1116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__binary_pred(__result, __first))
1117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *++__result = *__first;
1118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return ++__result;
1119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                              _BidirectionalIterator)
1124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for bidirectional iterators.
1125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __reverse(_BidirectionalIterator __first, _BidirectionalIterator __last,
1129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      bidirectional_iterator_tag)
1130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
1132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__first == __last || __first == --__last)
1133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
1134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
1135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__first, __last);
1137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__first;
1138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is an uglified reverse(_BidirectionalIterator,
1143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                              _BidirectionalIterator)
1144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  overloaded for random access iterators.
1145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator>
1147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __reverse(_RandomAccessIterator __first, _RandomAccessIterator __last,
1149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      random_access_iterator_tag)
1150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
GAS LISTING /tmp/ccKUqHDa.s 			page 226


1152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__last;
1154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first < __last)
1155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Reverse a sequence.
1164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A bidirectional iterator.
1166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A bidirectional iterator.
1167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   reverse() returns no value.
1168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Reverses the order of the elements in the range @p [__first,__last),
1170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  so that the first element becomes the last etc.
1171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  For every @c i such that @p 0<=i<=(__last-__first)/2), @p reverse()
1172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  swaps @p *(__first+i) and @p *(__last-(i+1))
1173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     reverse(_BidirectionalIterator __first, _BidirectionalIterator __last)
1177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__reverse(__first, __last, std::__iterator_category(__first));
1183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, reversing its elements.
1187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A bidirectional iterator.
1189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A bidirectional iterator.
1190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
1191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator designating the end of the resulting sequence.
1192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies the elements in the range @p [__first,__last) to the
1194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range @p [__result,__result+(__last-__first)) such that the
1195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  order of the elements is reversed.  For every @c i such that @p
1196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  0<=i<=(__last-__first), @p reverse_copy() performs the
1197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  assignment @p *(__result+(__last-__first)-1-i) = *(__first+i).
1198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The ranges @p [__first,__last) and @p
1199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__result,__result+(__last-__first)) must not overlap.
1200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _OutputIterator>
1202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
1203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     reverse_copy(_BidirectionalIterator __first, _BidirectionalIterator __last,
1204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _OutputIterator __result)
1205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
1208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
GAS LISTING /tmp/ccKUqHDa.s 			page 227


1209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_BidirectionalIterator>::value_type>)
1211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
1214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result = *__last;
1217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result;
1218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
1220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is a helper function for the rotate algorithm specialized on RAIs.
1224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  It returns the greatest common divisor of two integer values.
1225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _EuclideanRingElement>
1227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _EuclideanRingElement
1228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __gcd(_EuclideanRingElement __m, _EuclideanRingElement __n)
1229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__n != 0)
1231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _EuclideanRingElement __t = __m % __n;
1233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __m = __n;
1234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __n = __t;
1235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __m;
1237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
1241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate(_ForwardIterator __first,
1243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator __middle,
1244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _ForwardIterator __last,
1245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     forward_iterator_tag)
1246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __last  == __middle)
1248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __first2 = __middle;
1251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       do
1252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __first2);
1254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first2;
1256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first == __middle)
1257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __middle = __first2;
1258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first2 != __last);
1260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first2 = __middle;
1262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first2 != __last)
1264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __first2);
GAS LISTING /tmp/ccKUqHDa.s 			page 228


1266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first2;
1268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first == __middle)
1269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __middle = __first2;
1270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__first2 == __last)
1271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __first2 = __middle;
1272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    /// This is a helper function for the rotate algorithm.
1276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
1277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate(_BidirectionalIterator __first,
1279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BidirectionalIterator __middle,
1280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BidirectionalIterator __last,
1281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      bidirectional_iterator_tag)
1282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
1285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
1286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __last  == __middle)
1288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __middle && __middle != __last)
1294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, --__last);
1296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle)
1300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__reverse(__middle, __last,   bidirectional_iterator_tag());
1301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__reverse(__first,  __middle, bidirectional_iterator_tag());
1303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the rotate algorithm.
1306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator>
1307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate(_RandomAccessIterator __first,
1309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _RandomAccessIterator __middle,
1310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _RandomAccessIterator __last,
1311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     random_access_iterator_tag)
1312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _RandomAccessIterator>)
1316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __last  == __middle)
1318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
1319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_Distance;
1322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
GAS LISTING /tmp/ccKUqHDa.s 			page 229


1323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
1324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __n = __last   - __first;
1326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __k = __middle - __first;
1327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__k == __n - __k)
1329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::swap_ranges(__first, __middle, __middle);
1331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
1332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __p = __first;
1335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (;;)
1337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__k < __n - __k)
1339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*__p);
1343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _GLIBCXX_MOVE3(__p + 1, __p + __n, __p);
1344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  *(__p + __n - 1) = _GLIBCXX_MOVE(__t);
1345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  return;
1346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _RandomAccessIterator __q = __p + __k;
1348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  std::iter_swap(__p, __q);
1351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  ++__p;
1352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  ++__q;
1353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __n %= __k;
1355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__n == 0)
1356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return;
1357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::swap(__n, __k);
1358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __k = __n - __k;
1359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
1361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __k = __n - __k;
1363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__is_pod(_ValueType) && __k == 1)
1364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ValueType __t = _GLIBCXX_MOVE(*(__p + __n - 1));
1366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__p, __p + __n - 1, __p + __n);
1367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  *__p = _GLIBCXX_MOVE(__t);
1368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  return;
1369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _RandomAccessIterator __q = __p + __n;
1371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __p = __q - __k;
1372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      for (_Distance __i = 0; __i < __n - __k; ++ __i)
1373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
1374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  --__p;
1375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  --__q;
1376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  std::iter_swap(__p, __q);
1377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
1378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __n %= __k;
1379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__n == 0)
GAS LISTING /tmp/ccKUqHDa.s 			page 230


1380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return;
1381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::swap(__n, __k);
1382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Rotate the elements of a sequence.
1388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  A forward iterator.
1391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
1393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Rotates the elements of the range @p [__first,__last) by 
1395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__middle - __first) positions so that the element at @p __middle
1396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is moved to @p __first, the element at @p __middle+1 is moved to
1397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __first+1 and so on for each element in the range
1398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
1399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This effectively swaps the ranges @p [__first,__middle) and
1401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__middle,__last).
1402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs
1404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *   @p *(__first+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
1408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     rotate(_ForwardIterator __first, _ForwardIterator __middle,
1410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _ForwardIterator __last)
1411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
1415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__rotate(__first, __middle, __last,
1419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    std::__iterator_category(__first));
1420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, rotating its elements.
1424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  A forward iterator.
1427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result  An output iterator.
1429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator designating the end of the resulting sequence.
1430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies the elements of the range @p [__first,__last) to the
1432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range beginning at @result, rotating the copied elements by 
1433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__middle-__first) positions so that the element at @p __middle
1434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is moved to @p __result, the element at @p __middle+1 is moved
1435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to @p __result+1 and so on for each element in the range @p
1436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last).
GAS LISTING /tmp/ccKUqHDa.s 			page 231


1437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs 
1439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p *(__result+(n+(__last-__middle))%(__last-__first))=*(__first+n)
1440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for each @p n in the range @p [0,__last-__first).
1441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _OutputIterator>
1443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
1444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     rotate_copy(_ForwardIterator __first, _ForwardIterator __middle,
1445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                 _ForwardIterator __last, _OutputIterator __result)
1446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
1449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
1450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator>::value_type>)
1451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __middle);
1452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__middle, __last);
1453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::copy(__first, __middle,
1455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                        std::copy(__middle, __last, __result));
1456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partition(_ForwardIterator __first, _ForwardIterator __last,
1462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred, forward_iterator_tag)
1463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
1465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
1466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__pred(*__first))
1468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (++__first == __last)
1469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __first;
1470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
1472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (++__next != __last)
1474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__next))
1475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  {
1476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__first, __next);
1477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__first;
1478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  }
1479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
1481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Predicate>
1485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _BidirectionalIterator
1486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partition(_BidirectionalIterator __first, _BidirectionalIterator __last,
1487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		_Predicate __pred, bidirectional_iterator_tag)
1488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
1490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (true)
1492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    if (__first == __last)
1493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return __first;
GAS LISTING /tmp/ccKUqHDa.s 			page 232


1494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else if (__pred(*__first))
1495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
1496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else
1497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      break;
1498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (true)
1500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    if (__first == __last)
1501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return __first;
1502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else if (!bool(__pred(*__last)))
1503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__last;
1504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else
1505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      break;
1506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // partition
1512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Requires __len != 0 and !__pred(*__first),
1515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// same as __stable_partition_adaptive.
1516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate, typename _Distance>
1517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __inplace_stable_partition(_ForwardIterator __first,
1519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _Predicate __pred, _Distance __len)
1520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len == 1)
1522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
1523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __middle = __first;
1524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__middle, __len / 2);
1525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __left_split =
1526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__inplace_stable_partition(__first, __pred, __len / 2);
1527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Advance past true-predicate values to satisfy this
1528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // function's preconditions.
1529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __right_len = __len - __len / 2;
1530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __right_split =
1531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__find_if_not_n(__middle, __right_len, __pred);
1532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__right_len)
1533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__right_split = std::__inplace_stable_partition(__middle,
1534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 							__pred,
1535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 							__right_len);
1536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::rotate(__left_split, __middle, __right_split);
1537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__left_split, std::distance(__middle, __right_split));
1538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __left_split;
1539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// Requires __first != __last and !__pred(__first)
1543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// and __len == distance(__first, __last).
1544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   ///
1545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// !__pred(__first) allows us to guarantee that we don't
1546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// move-assign an element onto itself.
1547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Pointer, typename _Predicate,
1548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance>
1549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __stable_partition_adaptive(_ForwardIterator __first,
GAS LISTING /tmp/ccKUqHDa.s 			page 233


1551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_ForwardIterator __last,
1552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_Predicate __pred, _Distance __len,
1553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_Pointer __buffer,
1554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_Distance __buffer_size)
1555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len <= __buffer_size)
1557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __result1 = __first;
1559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Pointer __result2 = __buffer;
1560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // The precondition guarantees that !__pred(__first), so
1561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // move that element to the buffer before starting the loop.
1562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // This ensures that we only call __pred once per element.
1563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result2 = _GLIBCXX_MOVE(*__first);
1564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result2;
1565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  for (; __first != __last; ++__first)
1567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    if (__pred(__first))
1568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      {
1569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		*__result1 = _GLIBCXX_MOVE(*__first);
1570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		++__result1;
1571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      }
1572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    else
1573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      {
1574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		*__result2 = _GLIBCXX_MOVE(*__first);
1575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		++__result2;
1576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      }
1577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _GLIBCXX_MOVE3(__buffer, __result2, __result1);
1578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __result1;
1579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
1583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __len / 2);
1584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __left_split =
1585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__stable_partition_adaptive(__first, __middle, __pred,
1586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					     __len / 2, __buffer,
1587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					     __buffer_size);
1588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // Advance past true-predicate values to satisfy this
1589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  // function's preconditions.
1590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Distance __right_len = __len - __len / 2;
1591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __right_split =
1592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__find_if_not_n(__middle, __right_len, __pred);
1593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__right_len)
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __right_split =
1595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__stable_partition_adaptive(__right_split, __last, __pred,
1596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					       __right_len,
1597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					       __buffer, __buffer_size);
1598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::rotate(__left_split, __middle, __right_split);
1599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__left_split, std::distance(__middle, __right_split));
1600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __left_split;
1601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
1606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       _Predicate __pred)
GAS LISTING /tmp/ccKUqHDa.s 			page 234


1608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = std::__find_if_not(__first, __last, __pred);
1610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
1612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __first;
1613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
1615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
1616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
1617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
1618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Temporary_buffer<_ForwardIterator, _ValueType> __buf(__first, __last);
1620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__buf.size() > 0)
1621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return
1622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__stable_partition_adaptive(__first, __last, __pred,
1623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   _DistanceType(__buf.requested_size()),
1624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   __buf.begin(),
1625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   _DistanceType(__buf.size()));
1626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return
1628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__inplace_stable_partition(__first, __pred,
1629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					  _DistanceType(__buf.requested_size()));
1630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Move elements for which a predicate is true to the beginning
1634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         of a sequence, preserving relative ordering.
1635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
1636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
1637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
1638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A predicate functor.
1639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator @p middle such that @p __pred(i) is true for each
1640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator @p i in the range @p [first,middle) and false for each @p i
1641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  in the range @p [middle,last).
1642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs the same function as @p partition() with the additional
1644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  guarantee that the relative ordering of elements in each group is
1645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  preserved, so any two elements @p x and @p y in the range
1646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last) such that @p __pred(x)==__pred(y) will have the same
1647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  relative ordering after calling @p stable_partition().
1648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate>
1650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
1651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     stable_partition(_ForwardIterator __first, _ForwardIterator __last,
1652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Predicate __pred)
1653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
1656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
1657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
1658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
1659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__stable_partition(__first, __last,
1662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__pred_iter(__pred));
1663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 235


1665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routines.
1666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __heap_select(_RandomAccessIterator __first,
1669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _RandomAccessIterator __middle,
1670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _RandomAccessIterator __last, _Compare __comp)
1671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__make_heap(__first, __middle, __comp);
1673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __middle; __i < __last; ++__i)
1674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__comp(__i, __first))
1675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__pop_heap(__first, __middle, __i, __comp);
1676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // partial_sort
1679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
1682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIterator
1683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partial_sort_copy(_InputIterator __first, _InputIterator __last,
1684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			_RandomAccessIterator __result_first,
1685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			_RandomAccessIterator __result_last,
1686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			_Compare __comp)
1687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_InputValueType;
1690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef iterator_traits<_RandomAccessIterator> _RItTraits;
1691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename _RItTraits::difference_type _DistanceType;
1692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__result_first == __result_last)
1694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __result_last;
1695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __result_real_last = __result_first;
1696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last && __result_real_last != __result_last)
1697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result_real_last = *__first;
1699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result_real_last;
1700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       
1703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__make_heap(__result_first, __result_real_last, __comp);
1704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
1705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__first, __result_first))
1707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__adjust_heap(__result_first, _DistanceType(0),
1708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _DistanceType(__result_real_last
1709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					     - __result_first),
1710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _InputValueType(*__first), __comp);
1711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__sort_heap(__result_first, __result_real_last, __comp);
1714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result_real_last;
1715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the smallest elements of a sequence.
1719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
1720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
1721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
GAS LISTING /tmp/ccKUqHDa.s 			page 236


1722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to the range beginning at @p __result_first, where the number of
1728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__result_last-__result_first).
1730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
1731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  *j<*i is false.
1733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The value returned is @p __result_first+N.
1734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator>
1736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _RandomAccessIterator
1737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_first,
1739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_last)
1740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_InputValueType;
1743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_OutputValueType;
1745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
1747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _OutputValueType>)
1752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_InputValueType,
1753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				                     _OutputValueType>)
1754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_OutputValueType>)
1755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __result_first, __result_last,
1760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __gnu_cxx::__ops::__iter_less_iter());
1761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy the smallest elements of a sequence using a predicate for
1765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         comparison.
1766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
1767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An input iterator.
1768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another input iterator.
1769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_first   A random-access iterator.
1770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result_last    Another random-access iterator.
1771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
1772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An iterator indicating the end of the resulting sequence.
1773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
1774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies and sorts the smallest N values from the range @p [__first,__last)
1775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  to the range beginning at @p result_first, where the number of
1776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  elements to be copied, @p N, is the smaller of @p (__last-__first) and
1777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p (__result_last-__result_first).
1778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  After the sort if @e i and @e j are iterators in the range
GAS LISTING /tmp/ccKUqHDa.s 			page 237


1779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__result_first,__result_first+N) such that i precedes j then
1780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __comp(*j,*i) is false.
1781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The value returned is @p __result_first+N.
1782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _RandomAccessIterator,
1784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
1785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _RandomAccessIterator
1786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     partial_sort_copy(_InputIterator __first, _InputIterator __last,
1787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_first,
1788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator __result_last,
1789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Compare __comp)
1790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_InputIterator>::value_type
1792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_InputValueType;
1793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::value_type
1794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_OutputValueType;
1795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
1796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
1797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
1799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
1800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
1801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _RandomAccessIterator>)
1802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_InputValueType,
1803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _OutputValueType>)
1804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _InputValueType, _OutputValueType>)
1806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
1807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _OutputValueType, _OutputValueType>)
1808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
1809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__result_first, __result_last);
1810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__partial_sort_copy(__first, __last,
1812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __result_first, __result_last,
1813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
1814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_linear_insert(_RandomAccessIterator __last,
1820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			      _Compare __comp)
1821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_RandomAccessIterator>::value_type
1823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__val = _GLIBCXX_MOVE(*__last);
1824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __next = __last;
1825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__next;
1826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__comp(__val, __next))
1827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__last = _GLIBCXX_MOVE(*__next);
1829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __last = __next;
1830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__next;
1831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       *__last = _GLIBCXX_MOVE(__val);
1833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
GAS LISTING /tmp/ccKUqHDa.s 			page 238


1836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __insertion_sort(_RandomAccessIterator __first,
1839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _RandomAccessIterator __last, _Compare __comp)
1840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last) return;
1842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
1844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __first))
1846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_RandomAccessIterator>::value_type
1848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__val = _GLIBCXX_MOVE(*__i);
1849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __i, __i + 1);
1850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__first = _GLIBCXX_MOVE(__val);
1851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
1853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__unguarded_linear_insert(__i,
1854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_insertion_sort(_RandomAccessIterator __first,
1862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			       _RandomAccessIterator __last, _Compare __comp)
1863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first; __i != __last; ++__i)
1865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__unguarded_linear_insert(__i,
1866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
1867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
1870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @doctodo
1871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This controls some aspect of the sort routines.
1872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
1873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   enum { _S_threshold = 16 };
1874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __final_insertion_sort(_RandomAccessIterator __first,
1879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _RandomAccessIterator __last, _Compare __comp)
1880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first > int(_S_threshold))
1882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __first + int(_S_threshold), __comp);
1884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__unguarded_insertion_sort(__first + int(_S_threshold), __last,
1885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					  __comp);
1886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
1888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__insertion_sort(__first, __last, __comp);
1889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
GAS LISTING /tmp/ccKUqHDa.s 			page 239


1893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _RandomAccessIterator
1894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_partition(_RandomAccessIterator __first,
1895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _RandomAccessIterator __last,
1896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _RandomAccessIterator __pivot, _Compare __comp)
1897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
1899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__first, __pivot))
1901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    ++__first;
1902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__last;
1903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  while (__comp(__pivot, __last))
1904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    --__last;
1905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (!(__first < __last))
1906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
1907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::iter_swap(__first, __last);
1908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
1909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function...
1913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _RandomAccessIterator
1915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __unguarded_partition_pivot(_RandomAccessIterator __first,
1916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				_RandomAccessIterator __last, _Compare __comp)
1917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __mid = __first + (__last - __first) / 2;
1919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__move_median_to_first(__first, __first + 1, __mid, __last - 1,
1920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __comp);
1921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__unguarded_partition(__first + 1, __last, __first, __comp);
1922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __partial_sort(_RandomAccessIterator __first,
1927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _RandomAccessIterator __middle,
1928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _RandomAccessIterator __last,
1929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Compare __comp)
1930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__heap_select(__first, __middle, __last, __comp);
1932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__sort_heap(__first, __middle, __comp);
1933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the sort routine.
1936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introsort_loop(_RandomAccessIterator __first,
1939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _RandomAccessIterator __last,
1940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Size __depth_limit, _Compare __comp)
1941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first > int(_S_threshold))
1943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__partial_sort(__first, __last, __last, __comp);
1947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return;
1948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__depth_limit;
GAS LISTING /tmp/ccKUqHDa.s 			page 240


1950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _RandomAccessIterator __cut =
1951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
1952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__cut, __last, __depth_limit, __comp);
1953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __last = __cut;
1954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // sort
1958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
1960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
1961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __sort(_RandomAccessIterator __first, _RandomAccessIterator __last,
1962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _Compare __comp)
1963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first != __last)
1965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__introsort_loop(__first, __last,
1967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				std::__lg(__last - __first) * 2,
1968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__comp);
1969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__final_insertion_sort(__first, __last, __comp);
1970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Size, typename _Compare>
1974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
1975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __introselect(_RandomAccessIterator __first, _RandomAccessIterator __nth,
1976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _RandomAccessIterator __last, _Size __depth_limit,
1977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _Compare __comp)
1978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
1979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first > 3)
1980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
1981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__depth_limit == 0)
1982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
1983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__heap_select(__first, __nth + 1, __last, __comp);
1984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      // Place the nth largest element in its final position.
1985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::iter_swap(__first, __nth);
1986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return;
1987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
1988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__depth_limit;
1989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _RandomAccessIterator __cut =
1990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::__unguarded_partition_pivot(__first, __last, __comp);
1991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__cut <= __nth)
1992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __first = __cut;
1993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
1994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __last = __cut;
1995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
1996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
1997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
1998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
1999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // nth_element
2000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // lower_bound moved to stl_algobase.h
2002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the first position in which @p __val could be inserted
2005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         without changing the ordering.
2006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
GAS LISTING /tmp/ccKUqHDa.s 			page 241


2007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return An iterator pointing to the first element <em>not less
2012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           than</em> @p __val, or end() if every element is less
2013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           than @p __val.
2014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
2021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     lower_bound(_ForwardIterator __first, _ForwardIterator __last,
2022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ValueType, _Tp>)
2031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__lower_bound(__first, __last, __val,
2035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp));
2036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
2040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  const _Tp& __val, _Compare __comp)
2042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
2045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__len > 0)
2049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
2052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __half);
2053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__val, __middle))
2054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __len = __half;
2055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first = __middle;
2058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
2059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len = __len - __half - 1;
2060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first;
2063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
GAS LISTING /tmp/ccKUqHDa.s 			page 242


2064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         without changing the ordering.
2068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
2078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val)
2080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_Tp, _ValueType>)
2087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the last position in which @p __val could be inserted
2095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         without changing the ordering.
2096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the first element greater than @p __val,
2102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           or end() if no elements are greater than @p __val.
2103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
2110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     upper_bound(_ForwardIterator __first, _ForwardIterator __last,
2111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _Tp, _ValueType>)
2120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
GAS LISTING /tmp/ccKUqHDa.s 			page 243


2121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__upper_bound(__first, __last, __val,
2124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp,
2128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _CompareItTp, typename _CompareTpIt>
2129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
2130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __equal_range(_ForwardIterator __first, _ForwardIterator __last,
2131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  const _Tp& __val,
2132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _CompareItTp __comp_it_val, _CompareTpIt __comp_val_it)
2133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::difference_type
2135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
2136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _DistanceType __len = std::distance(__first, __last);
2138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__len > 0)
2140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _DistanceType __half = __len >> 1;
2142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _ForwardIterator __middle = __first;
2143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__middle, __half);
2144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp_it_val(__middle, __val))
2145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first = __middle;
2147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first;
2148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len = __len - __half - 1;
2149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else if (__comp_val_it(__val, __middle))
2151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    __len = __half;
2152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _ForwardIterator __left
2155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__lower_bound(__first, __middle, __val, __comp_it_val);
2156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::advance(__first, __len);
2157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _ForwardIterator __right
2158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__upper_bound(++__middle, __first, __val, __comp_val_it);
2159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return pair<_ForwardIterator, _ForwardIterator>(__left, __right);
2160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return pair<_ForwardIterator, _ForwardIterator>(__first, __first);
2163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         at any place in it without changing the ordering.
2168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is equivalent to
2176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @code
2177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val),
GAS LISTING /tmp/ccKUqHDa.s 			page 244


2178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                   upper_bound(__first, __last, __val))
2179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @endcode
2180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  but does not actually call those functions.
2181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val)
2186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_ValueType, _Tp>)
2193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_Tp, _ValueType>)
2194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);      
2196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_less_val(),
2199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_less_iter());
2200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Finds the largest subrange in which @p __val could be inserted
2204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         at any place in it without changing the ordering.
2205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An pair of iterators defining the subrange.
2210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This is equivalent to
2213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @code
2214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *    std::make_pair(lower_bound(__first, __last, __val, __comp),
2215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                   upper_bound(__first, __last, __val, __comp))
2216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @endcode
2217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  but does not actually call those functions.
2218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
2221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     equal_range(_ForwardIterator __first, _ForwardIterator __last,
2222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		const _Tp& __val, _Compare __comp)
2223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ValueType, _Tp>)
2231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _Tp, _ValueType>)
2233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
GAS LISTING /tmp/ccKUqHDa.s 			page 245


2235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__equal_range(__first, __last, __val,
2239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_val(__comp),
2240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__val_comp_iter(__comp));
2241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return True if @p __val (or its equivalent) is in [@p
2250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __first,@p __last ].
2251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
2256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                   const _Tp& __val)
2259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<_Tp, _ValueType>)
2266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower(__first, __last, __val);
2267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper(__first, __last, __val);
2268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __i
2270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_val());
2272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __i != __last && !(__val < *__i);
2273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether an element exists in a range.
2277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup binary_search_algorithms
2278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val     The search term.
2281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if @p __val (or its equivalent) is in @p [__first,__last].
2283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Note that this does not actually return an iterator to @p __val.  For
2285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  that, use std::find or a container's specialized find member functions.
2286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp, typename _Compare>
2291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
GAS LISTING /tmp/ccKUqHDa.s 			page 246


2292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     binary_search(_ForwardIterator __first, _ForwardIterator __last,
2293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                   const _Tp& __val, _Compare __comp)
2294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_ForwardIterator>::value_type
2296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_ValueType;
2297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
2300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _Tp, _ValueType>)
2302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_lower_pred(__first, __last,
2303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_partitioned_upper_pred(__first, __last,
2305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 						__val, __comp);
2306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __i
2308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= std::__lower_bound(__first, __last, __val,
2309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_val(__comp));
2310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __i != __last && !bool(__comp(__val, *__i));
2311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // merge
2314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator, typename _Compare>
2318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_merge_adaptive(_InputIterator1 __first1, _InputIterator1 __last1,
2320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _InputIterator2 __first2, _InputIterator2 __last2,
2321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _OutputIterator __result, _Compare __comp)
2322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__first2, __first1))
2326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first2;
2329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first1;
2334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result;
2336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 != __last1)
2338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_GLIBCXX_MOVE3(__first1, __last1, __result);
2339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the __merge_adaptive routines.
2342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BidirectionalIterator3, typename _Compare>
2344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_merge_adaptive_backward(_BidirectionalIterator1 __first1,
2346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator1 __last1,
2347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator2 __first2,
2348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator2 __last2,
GAS LISTING /tmp/ccKUqHDa.s 			page 247


2349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _BidirectionalIterator3 __result,
2350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   _Compare __comp)
2351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 == __last1)
2353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _GLIBCXX_MOVE_BACKWARD3(__first2, __last2, __result);
2355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
2356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__first2 == __last2)
2358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
2359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__last1;
2361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__last2;
2362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (true)
2363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__last2, __last1))
2365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last1);
2367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__first1 == __last1)
2368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{
2369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _GLIBCXX_MOVE_BACKWARD3(__first2, ++__last2, __result);
2370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  return;
2371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		}
2372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__last1;
2373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *--__result = _GLIBCXX_MOVE(*__last2);
2377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__first2 == __last2)
2378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		return;
2379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      --__last2;
2380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator1, typename _BidirectionalIterator2,
2386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance>
2387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _BidirectionalIterator1
2388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __rotate_adaptive(_BidirectionalIterator1 __first,
2389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _BidirectionalIterator1 __middle,
2390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _BidirectionalIterator1 __last,
2391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Distance __len1, _Distance __len2,
2392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _BidirectionalIterator2 __buffer,
2393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Distance __buffer_size)
2394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator2 __buffer_end;
2396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 > __len2 && __len2 <= __buffer_size)
2397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__len2)
2399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _GLIBCXX_MOVE_BACKWARD3(__first, __middle, __last);
2402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return _GLIBCXX_MOVE3(__buffer, __buffer_end, __first);
2403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first;
GAS LISTING /tmp/ccKUqHDa.s 			page 248


2406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__len1 <= __buffer_size)
2408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__len1)
2410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _GLIBCXX_MOVE3(__middle, __last, __first);
2413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return _GLIBCXX_MOVE_BACKWARD3(__buffer, __buffer_end, __last);
2414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __last;
2417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::rotate(__first, __middle, __last);
2421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__first, std::distance(__middle, __last));
2422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __first;
2423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance, 
2428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Pointer, typename _Compare>
2429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_adaptive(_BidirectionalIterator __first,
2431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                      _BidirectionalIterator __middle,
2432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last,
2433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Distance __len1, _Distance __len2,
2434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Pointer __buffer, _Distance __buffer_size,
2435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Compare __comp)
2436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 <= __len2 && __len1 <= __buffer_size)
2438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__first, __middle, __buffer);
2440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__move_merge_adaptive(__buffer, __buffer_end, __middle, __last,
2441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __first, __comp);
2442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else if (__len2 <= __buffer_size)
2444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Pointer __buffer_end = _GLIBCXX_MOVE3(__middle, __last, __buffer);
2446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__move_merge_adaptive_backward(__first, __middle, __buffer,
2447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __buffer_end, __last, __comp);
2448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __first_cut = __first;
2452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __second_cut = __middle;
2453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Distance __len11 = 0;
2454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _Distance __len22 = 0;
2455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__len1 > __len2)
2456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len11 = __len1 / 2;
2458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::advance(__first_cut, __len11);
2459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __second_cut
2460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__lower_bound(__middle, __last, *__first_cut,
2461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__iter_comp_val(__comp));
2462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len22 = std::distance(__middle, __second_cut);
GAS LISTING /tmp/ccKUqHDa.s 			page 249


2463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len22 = __len2 / 2;
2467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::advance(__second_cut, __len22);
2468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __first_cut
2469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		= std::__upper_bound(__first, __middle, *__second_cut,
2470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__val_comp_iter(__comp));
2471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      __len11 = std::distance(__first, __first_cut);
2472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __new_middle
2474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__rotate_adaptive(__first_cut, __middle, __second_cut,
2475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __len1 - __len11, __len22, __buffer,
2476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __buffer_size);
2477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_adaptive(__first, __first_cut, __new_middle, __len11,
2478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__len22, __buffer, __buffer_size, __comp);
2479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_adaptive(__new_middle, __second_cut, __last,
2480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__len1 - __len11,
2481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__len2 - __len22, __buffer,
2482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__buffer_size, __comp);
2483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the merge routines.
2487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Distance,
2488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_without_buffer(_BidirectionalIterator __first,
2491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                            _BidirectionalIterator __middle,
2492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _BidirectionalIterator __last,
2493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Distance __len1, _Distance __len2,
2494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Compare __comp)
2495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 == 0 || __len2 == 0)
2497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
2498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 + __len2 == 2)
2499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__middle, __first))
2501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    std::iter_swap(__first, __middle);
2502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
2503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __first_cut = __first;
2505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __second_cut = __middle;
2506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __len11 = 0;
2507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __len22 = 0;
2508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len1 > __len2)
2509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len11 = __len1 / 2;
2511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__first_cut, __len11);
2512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __second_cut
2513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__lower_bound(__middle, __last, *__first_cut,
2514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __gnu_cxx::__ops::__iter_comp_val(__comp));
2515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len22 = std::distance(__middle, __second_cut);
2516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len22 = __len2 / 2;
GAS LISTING /tmp/ccKUqHDa.s 			page 250


2520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::advance(__second_cut, __len22);
2521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first_cut
2522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__upper_bound(__first, __middle, *__second_cut,
2523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __gnu_cxx::__ops::__val_comp_iter(__comp));
2524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __len11 = std::distance(__first, __first_cut);
2525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::rotate(__first_cut, __middle, __second_cut);
2527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __new_middle = __first_cut;
2528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__new_middle, std::distance(__middle, __second_cut));
2529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_without_buffer(__first, __first_cut, __new_middle,
2530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __len11, __len22, __comp);
2531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_without_buffer(__new_middle, __second_cut, __last,
2532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __len1 - __len11, __len2 - __len22, __comp);
2533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __inplace_merge(_BidirectionalIterator __first,
2538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _BidirectionalIterator __middle,
2539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _BidirectionalIterator __last,
2540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Compare __comp)
2541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::value_type
2543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           _ValueType;
2544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_BidirectionalIterator>::difference_type
2545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****           _DistanceType;
2546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __middle || __middle == __last)
2548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
2549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _DistanceType __len1 = std::distance(__first, __middle);
2551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _DistanceType __len2 = std::distance(__middle, __last);
2552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef _Temporary_buffer<_BidirectionalIterator, _ValueType> _TmpBuf;
2554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _TmpBuf __buf(__first, __last);
2555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__buf.begin() == 0)
2557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__merge_without_buffer
2558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __comp);
2559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__merge_adaptive
2561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  (__first, __middle, __last, __len1, __len2, __buf.begin(),
2562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _DistanceType(__buf.size()), __comp);
2563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  Another iterator.
2570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
2572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__middle,__last), and puts the result in [__first,__last).  The
2575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  output will be sorted.  The sort is @e stable, that is, for
2576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equivalent elements in the two ranges, elements from the first
GAS LISTING /tmp/ccKUqHDa.s 			page 251


2577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range will always come before elements from the second.
2578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  distance(__first,__last).
2582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
2584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
2585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __middle,
2587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __last)
2588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _BidirectionalIterator>)
2592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted(__first, __middle);
2595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted(__middle, __last);
2596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_less_iter());
2599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Merges two sorted ranges in place.
2603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
2605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __middle  Another iterator.
2606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
2607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A functor to use for comparisons.
2608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
2609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Merges two sorted and consecutive ranges, [__first,__middle) and
2611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [middle,last), and puts the result in [__first,__last).  The output will
2612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  be sorted.  The sort is @e stable, that is, for equivalent
2613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  elements in the two ranges, elements from the first range will always
2614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  come before elements from the second.
2615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  If enough additional memory is available, this takes (__last-__first)-1
2617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  comparisons.  Otherwise an NlogN algorithm is used, where N is
2618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  distance(__first,__last).
2619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The comparison function should have the same effects on ordering as
2621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the function used for the initial sort.
2622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline void
2625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inplace_merge(_BidirectionalIterator __first,
2626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __middle,
2627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BidirectionalIterator __last,
2628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _Compare __comp)
2629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_BidirectionalIteratorConcept<
2632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _BidirectionalIterator>)
2633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
GAS LISTING /tmp/ccKUqHDa.s 			page 252


2634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
2635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_pred(__first, __middle, __comp);
2637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_pred(__middle, __last, __comp);
2638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_merge(__first, __middle, __last,
2640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__comp));
2641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the __merge_sort_loop routines.
2645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
2646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
2648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __move_merge(_InputIterator __first1, _InputIterator __last1,
2649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _InputIterator __first2, _InputIterator __last2,
2650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _OutputIterator __result, _Compare __comp)
2651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__first2, __first1))
2655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first2);
2657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first2;
2658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
2660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      *__result = _GLIBCXX_MOVE(*__first1);
2662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      ++__first1;
2663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__result;
2665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return _GLIBCXX_MOVE3(__first2, __last2,
2667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    _GLIBCXX_MOVE3(__first1, __last1,
2668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					   __result));
2669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator1, typename _RandomAccessIterator2,
2672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance, typename _Compare>
2673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_sort_loop(_RandomAccessIterator1 __first,
2675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator1 __last,
2676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _RandomAccessIterator2 __result, _Distance __step_size,
2677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Compare __comp)
2678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Distance __two_step = 2 * __step_size;
2680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first >= __two_step)
2682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __result = std::__move_merge(__first, __first + __step_size,
2684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				       __first + __step_size,
2685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				       __first + __two_step,
2686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				       __result, __comp);
2687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first += __two_step;
2688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __step_size = std::min(_Distance(__last - __first), __step_size);
2690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 253


2691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__move_merge(__first, __first + __step_size,
2692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__first + __step_size, __last, __result, __comp);
2693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Distance,
2696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __chunk_insertion_sort(_RandomAccessIterator __first,
2699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _RandomAccessIterator __last,
2700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _Distance __chunk_size, _Compare __comp)
2701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__last - __first >= __chunk_size)
2703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __first + __chunk_size, __comp);
2705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first += __chunk_size;
2706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__insertion_sort(__first, __last, __comp);
2708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   enum { _S_chunk_size = 7 };
2711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer, typename _Compare>
2713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __merge_sort_with_buffer(_RandomAccessIterator __first,
2715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     _RandomAccessIterator __last,
2716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                              _Pointer __buffer, _Compare __comp)
2717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
2719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_Distance;
2720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Distance __len = __last - __first;
2722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Pointer __buffer_last = __buffer + __len;
2723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _Distance __step_size = _S_chunk_size;
2725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__chunk_insertion_sort(__first, __last, __step_size, __comp);
2726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__step_size < __len)
2728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_loop(__first, __last, __buffer,
2730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __step_size, __comp);
2731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __step_size *= 2;
2732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_loop(__buffer, __buffer_last, __first,
2733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				 __step_size, __comp);
2734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __step_size *= 2;
2735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Pointer,
2739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Distance, typename _Compare>
2740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __stable_sort_adaptive(_RandomAccessIterator __first,
2742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   _RandomAccessIterator __last,
2743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                            _Pointer __buffer, _Distance __buffer_size,
2744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****                            _Compare __comp)
2745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _Distance __len = (__last - __first + 1) / 2;
2747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       const _RandomAccessIterator __middle = __first + __len;
GAS LISTING /tmp/ccKUqHDa.s 			page 254


2748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__len > __buffer_size)
2749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__stable_sort_adaptive(__first, __middle, __buffer,
2751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __buffer_size, __comp);
2752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__stable_sort_adaptive(__middle, __last, __buffer,
2753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				      __buffer_size, __comp);
2754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
2756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_with_buffer(__first, __middle, __buffer, __comp);
2758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__merge_sort_with_buffer(__middle, __last, __buffer, __comp);
2759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_adaptive(__first, __middle, __last,
2761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    _Distance(__middle - __first),
2762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    _Distance(__last - __middle),
2763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __buffer, __buffer_size,
2764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __comp);
2765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /// This is a helper function for the stable sorting routines.
2768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator, typename _Compare>
2769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
2770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __inplace_stable_sort(_RandomAccessIterator __first,
2771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  _RandomAccessIterator __last, _Compare __comp)
2772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__last - __first < 15)
2774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  std::__insertion_sort(__first, __last, __comp);
2776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return;
2777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _RandomAccessIterator __middle = __first + (__last - __first) / 2;
2779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_stable_sort(__first, __middle, __comp);
2780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__inplace_stable_sort(__middle, __last, __comp);
2781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::__merge_without_buffer(__first, __middle, __last,
2782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __middle - __first,
2783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __last - __middle,
2784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __comp);
2785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // stable_sort
2788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // Set algorithms: includes, set_union, set_intersection, set_difference,
2790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_symmetric_difference.  All of these algorithms have the precondition
2791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // that their input ranges are sorted and the postcondition that their output
2792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // ranges are sorted.
2793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __includes(_InputIterator1 __first1, _InputIterator1 __last1,
2798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _InputIterator2 __first2, _InputIterator2 __last2,
2799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _Compare __comp)
2800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first1 != __last1 && __first2 != __last2)
2802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__comp(__first2, __first1))
2803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return false;
2804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else if (__comp(__first1, __first2))
GAS LISTING /tmp/ccKUqHDa.s 			page 255


2805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first1;
2806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
2807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first1, ++__first2;
2808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __first2 == __last2;
2810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range.
2814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of search range.
2815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of search range.
2816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence
2817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence.
2818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if each element in [__first2,__last2) is contained in order
2819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  within [__first1,__last1).  False otherwise.
2820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup set_algorithms
2821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1).
2825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  The iterators over each range only move forward, so this is a
2826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  linear algorithm.  If an element in [__first2,__last2) is not
2827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found before the search iterator reaches @p __last2, false is
2828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  returned.
2829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2>
2831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2)
2834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanOpConcept<
2842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set(__first1, __last1, __first2);
2845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set(__first2, __last2, __first1);
2846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_less_iter());
2849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Determines whether all elements of a sequence exists in a range
2853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  using comparison.
2854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup set_algorithms
2855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of search range.
2856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of search range.
2857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of sequence
2858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of sequence.
2859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    Comparison function to use.
2860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return True if each element in [__first2,__last2) is contained
2861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  in order within [__first1,__last1) according to comp.  False
GAS LISTING /tmp/ccKUqHDa.s 			page 256


2862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise.  @ingroup set_algorithms
2863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This operation expects both [__first1,__last1) and
2865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) to be sorted.  Searches for the presence of
2866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  each element in [__first2,__last2) within [__first1,__last1),
2867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  using comp to decide.  The iterators over each range only move
2868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  forward, so this is a linear algorithm.  If an element in
2869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) is not found before the search iterator
2870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  reaches @p __last2, false is returned.
2871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
2873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Compare>
2874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     includes(_InputIterator1 __first1, _InputIterator1 __last1,
2876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _InputIterator2 __first2, _InputIterator2 __last2,
2877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Compare __comp)
2878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
2881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
2882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type,
2884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type>)
2885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator2>::value_type,
2887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator1>::value_type>)
2888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first1, __last1, __first2, __comp);
2889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_sorted_set_pred(__first2, __last2, __first1, __comp);
2890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__includes(__first1, __last1, __first2, __last2,
2892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_comp_iter(__comp));
2893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // nth_element
2896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // merge
2897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_difference
2898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_intersection
2899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_union
2900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // stable_sort
2901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // set_symmetric_difference
2902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // min_element
2903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // max_element
2904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
2907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __next_permutation(_BidirectionalIterator __first,
2908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
2909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
2911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
2912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __i = __first;
2913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__i;
2914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__i == __last)
2915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
2916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __i = __last;
2917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__i;
2918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 257


2919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for(;;)
2920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
2921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
2922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__i;
2923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__i, __ii))
2924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _BidirectionalIterator __j = __last;
2926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      while (!__comp(__i, --__j))
2927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{}
2928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::iter_swap(__i, __j);
2929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__ii, __last,
2930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
2931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return true;
2932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__i == __first)
2934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
2935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__first, __last,
2936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
2937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return false;
2938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
2939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
2940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering.
2944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
2946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
2947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
2950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequences.  Permutes the current sequence into the next one of this set.
2951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Returns true if there are more sequences to generate.  If the sequence
2952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is the largest of the set, the smallest is generated and false returned.
2953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
2955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
2957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last)
2958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
2961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
2962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
2963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
2965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__next_permutation
2967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_less_iter());
2968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
2969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
2971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the next @e dictionary ordering using
2972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          comparison functor.
2973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
2974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
2975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
GAS LISTING /tmp/ccKUqHDa.s 			page 258


2976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp   A comparison functor.
2977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to first permutation, true otherwise.
2978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
2979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
2980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
2981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequence into the next one of this set.  Returns true if there are more
2982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequences to generate.  If the sequence is the largest of the set, the
2983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  smallest is generated and false returned.
2984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
2985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
2986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
2987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     next_permutation(_BidirectionalIterator __first,
2988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
2989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
2990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
2991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
2992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
2993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
2994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
2995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
2996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
2997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
2998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__next_permutation
2999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	(__first, __last, __gnu_cxx::__ops::__iter_comp_iter(__comp));
3000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
3004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __prev_permutation(_BidirectionalIterator __first,
3005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		       _BidirectionalIterator __last, _Compare __comp)
3006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
3008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
3009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _BidirectionalIterator __i = __first;
3010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__i;
3011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__i == __last)
3012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return false;
3013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __i = __last;
3014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       --__i;
3015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for(;;)
3017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  _BidirectionalIterator __ii = __i;
3019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  --__i;
3020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__ii, __i))
3021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _BidirectionalIterator __j = __last;
3023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      while (!__comp(--__j, __i))
3024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		{}
3025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::iter_swap(__i, __j);
3026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__ii, __last,
3027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
3028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return true;
3029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__i == __first)
3031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__reverse(__first, __last,
GAS LISTING /tmp/ccKUqHDa.s 			page 259


3033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     std::__iterator_category(__first));
3034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      return false;
3035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering.
3041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range as a set of @e dictionary sorted
3047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequences.  Permutes the current sequence into the previous one of this
3048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  set.  Returns true if there are more sequences to generate.  If the
3049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequence is the smallest of the set, the largest is generated and false
3050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  returned.
3051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator>
3053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last)
3056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
3059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__prev_permutation(__first, __last,
3065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				     __gnu_cxx::__ops::__iter_less_iter());
3066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Permute range into the previous @e dictionary ordering using
3070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          comparison functor.
3071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp   A comparison functor.
3075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  False if wrapped to last permutation, true otherwise.
3076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Treats all permutations of the range [__first,__last) as a set of
3078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @e dictionary sorted sequences ordered by @p __comp.  Permutes the current
3079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sequence into the previous one of this set.  Returns true if there are
3080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  more sequences to generate.  If the sequence is the smallest of the set,
3081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the largest is generated and false returned.
3082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _BidirectionalIterator, typename _Compare>
3084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     prev_permutation(_BidirectionalIterator __first,
3086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BidirectionalIterator __last, _Compare __comp)
3087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BidirectionalIteratorConcept<
GAS LISTING /tmp/ccKUqHDa.s 			page 260


3090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _BidirectionalIterator>)
3091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type,
3093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_BidirectionalIterator>::value_type>)
3094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__prev_permutation(__first, __last,
3097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__iter_comp_iter(__comp));
3098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // replace
3101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // replace_if
3102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate, typename _Tp>
3105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
3106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __replace_copy_if(_InputIterator __first, _InputIterator __last,
3107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _OutputIterator __result,
3108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Predicate __pred, const _Tp& __new_value)
3109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first, ++__result)
3111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(__first))
3112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result = __new_value;
3113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	else
3114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__result = *__first;
3115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
3116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, replacing each element of one value with another
3120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         value.
3121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      An input iterator.
3122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       An input iterator.
3123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result     An output iterator.
3124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __old_value  The value to be replaced.
3125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
3126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The end of the output sequence, @p result+(last-first).
3127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the input range @p [__first,__last) to the
3129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  output range @p [__result,__result+(__last-__first)) replacing elements
3130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to @p __old_value with @p __new_value.
3131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator, typename _Tp>
3133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
3134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace_copy(_InputIterator __first, _InputIterator __last,
3135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 _OutputIterator __result,
3136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		 const _Tp& __old_value, const _Tp& __new_value)
3137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
3144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
GAS LISTING /tmp/ccKUqHDa.s 			page 261


3147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_equals_val(__old_value),
3148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __new_value);
3149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Copy a sequence, replacing each value for which a predicate
3153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         returns true with another value.
3154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
3155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      An input iterator.
3156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       An input iterator.
3157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result     An output iterator.
3158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred       A predicate.
3159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
3160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The end of the output sequence, @p __result+(__last-__first).
3161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Copies each element in the range @p [__first,__last) to the range
3163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__result,__result+(__last-__first)) replacing elements for which
3164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __pred returns true with @p __new_value.
3165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
3167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _Predicate, typename _Tp>
3168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _OutputIterator
3169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace_copy_if(_InputIterator __first, _InputIterator __last,
3170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _OutputIterator __result,
3171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Predicate __pred, const _Tp& __new_value)
3172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
3176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__replace_copy_if(__first, __last, __result,
3182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				__gnu_cxx::__ops::__pred_iter(__pred),
3183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 					      __new_value);
3184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
3187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     typename iterator_traits<_InputIterator>::difference_type
3188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
3189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typename iterator_traits<_InputIterator>::difference_type __n = 0;
3191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
3192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(__first))
3193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__n;
3194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __n;
3195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus >= 201103L
3198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted.
3200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
GAS LISTING /tmp/ccKUqHDa.s 			page 262


3204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last)
3208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return std::is_sorted_until(__first, __last) == __last; }
3209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines whether the elements of a sequence are sorted
3212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          according to a comparison functor.
3213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
3217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  True if the elements are sorted, false otherwise.
3218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted(_ForwardIterator __first, _ForwardIterator __last,
3222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _Compare __comp)
3223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return std::is_sorted_until(__first, __last, __comp) == __last; }
3224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _ForwardIterator
3227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		      _Compare __comp)
3229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
3231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return __last;
3232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
3234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (++__next; __next != __last; __first = __next, ++__next)
3235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__comp(__next, __first))
3236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  return __next;
3237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __next;
3238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines the end of a sorted sequence.
3242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           for which the range [__first, i) is sorted.
3247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last)
3251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				    __gnu_cxx::__ops::__iter_less_iter());
3260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
GAS LISTING /tmp/ccKUqHDa.s 			page 263


3261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines the end of a sorted sequence using comparison functor.
3264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   An iterator.
3266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    Another iterator.
3267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    A comparison functor.
3268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  An iterator pointing to the last iterator i in [__first, __last)
3269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           for which the range [__first, i) is sorted.
3270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_sorted_until(_ForwardIterator __first, _ForwardIterator __last,
3274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		    _Compare __comp)
3275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_sorted_until(__first, __last,
3284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				    __gnu_cxx::__ops::__iter_comp_iter(__comp));
3285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __b) otherwise.
3294:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3295:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3296:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3297:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b)
3298:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3299:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3300:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<_Tp>)
3301:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3302:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __b < __a ? pair<const _Tp&, const _Tp&>(__b, __a)
3303:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	               : pair<const _Tp&, const _Tp&>(__a, __b);
3304:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3305:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3306:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3307:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Determines min and max at once as an ordered pair.
3308:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3309:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __a  A thing of arbitrary type.
3310:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __b  Another thing of arbitrary type.
3311:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp  A @link comparison_functors comparison functor @endlink.
3312:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return A pair(__b, __a) if __b is smaller than __a, pair(__a,
3313:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __b) otherwise.
3314:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3315:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3316:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<const _Tp&, const _Tp&>
3317:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(const _Tp& __a, const _Tp& __b, _Compare __comp)
GAS LISTING /tmp/ccKUqHDa.s 			page 264


3318:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3319:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __comp(__b, __a) ? pair<const _Tp&, const _Tp&>(__b, __a)
3320:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	                      : pair<const _Tp&, const _Tp&>(__a, __b);
3321:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3322:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3323:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3324:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     pair<_ForwardIterator, _ForwardIterator>
3325:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3326:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _Compare __comp)
3327:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3328:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __next = __first;
3329:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last
3330:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  || ++__next == __last)
3331:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return std::make_pair(__first, __first);
3332:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3333:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator __min, __max;
3334:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__comp(__next, __first))
3335:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3336:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __min = __next;
3337:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __max = __first;
3338:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3339:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
3340:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3341:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __min = __first;
3342:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __max = __next;
3343:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3344:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3345:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __first = __next;
3346:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       ++__first;
3347:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3348:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       while (__first != __last)
3349:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3350:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __next = __first;
3351:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (++__next == __last)
3352:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3353:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__comp(__first, __min))
3354:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__min = __first;
3355:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      else if (!__comp(__first, __max))
3356:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__max = __first;
3357:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      break;
3358:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3359:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3360:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(__next, __first))
3361:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3362:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__comp(__next, __min))
3363:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__min = __next;
3364:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (!__comp(__first, __max))
3365:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__max = __first;
3366:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3367:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  else
3368:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    {
3369:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (__comp(__first, __min))
3370:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__min = __first;
3371:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      if (!__comp(__next, __max))
3372:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__max = __next;
3373:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    }
3374:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 265


3375:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  __first = __next;
3376:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  ++__first;
3377:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3378:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3379:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::make_pair(__min, __max);
3380:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3381:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3382:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3383:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3384:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          elements in a range.
3385:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3386:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3387:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3388:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3389:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3390:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3391:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           such that no other element in the range is larger.
3392:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3393:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3394:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3395:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last)
3396:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3397:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3398:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3399:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_LessThanComparableConcept<
3400:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3401:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3402:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3403:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__minmax_element(__first, __last,
3404:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_less_iter());
3405:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3406:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3407:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3408:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Return a pair of iterators pointing to the minimum and maximum
3409:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          elements in a range.
3410:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup sorting_algorithms
3411:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  Start of range.
3412:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   End of range.
3413:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp   Comparison functor.
3414:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  make_pair(m, M), where m is the first iterator i in 
3415:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           [__first, __last) such that no other element in the range is
3416:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           smaller, and where M is the last iterator i in [__first, __last)
3417:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *           such that no other element in the range is larger.
3418:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3419:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Compare>
3420:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_ForwardIterator, _ForwardIterator>
3421:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax_element(_ForwardIterator __first, _ForwardIterator __last,
3422:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _Compare __comp)
3423:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3424:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3425:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3426:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_Compare,
3427:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3428:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3429:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3430:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3431:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__minmax_element(__first, __last,
GAS LISTING /tmp/ccKUqHDa.s 			page 266


3432:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__comp));
3433:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3434:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3435:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   // N2722 + DR 915.
3436:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3437:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3438:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     min(initializer_list<_Tp> __l)
3439:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end()); }
3440:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3441:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3442:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3443:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     min(initializer_list<_Tp> __l, _Compare __comp)
3444:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::min_element(__l.begin(), __l.end(), __comp); }
3445:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3446:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3447:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3448:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     max(initializer_list<_Tp> __l)
3449:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end()); }
3450:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3451:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3452:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _Tp
3453:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     max(initializer_list<_Tp> __l, _Compare __comp)
3454:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     { return *std::max_element(__l.begin(), __l.end(), __comp); }
3455:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3456:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp>
3457:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_Tp, _Tp>
3458:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(initializer_list<_Tp> __l)
3459:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3460:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3461:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end());
3462:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3463:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3464:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3465:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _Tp, typename _Compare>
3466:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline pair<_Tp, _Tp>
3467:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     minmax(initializer_list<_Tp> __l, _Compare __comp)
3468:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3469:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       pair<const _Tp*, const _Tp*> __p =
3470:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::minmax_element(__l.begin(), __l.end(), __comp);
3471:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::make_pair(*__p.first, *__p.second);
3472:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3473:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3474:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3475:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3476:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
3477:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3478:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _ForwardIterator2 __first2, _BinaryPredicate __pred)
3479:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3480:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Efficiently compare identical prefixes:  O(N) if sequences
3481:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // have the same elements in the same order.
3482:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
3483:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first1, __first2))
3484:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  break;
3485:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3486:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first1 == __last1)
3487:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return true;
3488:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
GAS LISTING /tmp/ccKUqHDa.s 			page 267


3489:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Establish __last2 assuming equal ranges by iterating over the
3490:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // rest of the list.
3491:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       _ForwardIterator2 __last2 = __first2;
3492:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       std::advance(__last2, std::distance(__first1, __last1));
3493:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
3494:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3495:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__scan != std::__find_if(__first1, __scan,
3496:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			  __gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)))
3497:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    continue; // We've seen this one before.
3498:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  
3499:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __matches
3500:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    = std::__count_if(__first2, __last2,
3501:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
3502:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (0 == __matches ||
3503:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      std::__count_if(__scan, __last1,
3504:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))
3505:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      != __matches)
3506:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3507:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3508:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return true;
3509:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3510:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3511:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3512:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3513:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3514:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3515:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3516:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3517:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3518:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3519:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          [__first2, __first2 + (__last1 - __first1)), beginning with 
3520:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          ForwardIterator2 begin, such that equal(__first1, __last1, begin)
3521:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          returns true; otherwise, returns false.
3522:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3523:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
3524:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3525:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3526:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2)
3527:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3528:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3529:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
3530:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
3531:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3532:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator1>::value_type,
3533:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_ForwardIterator2>::value_type>)
3534:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3535:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3536:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2,
3537:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_equal_to_iter());
3538:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3539:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3540:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3541:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3542:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3543:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3544:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3545:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
GAS LISTING /tmp/ccKUqHDa.s 			page 268


3546:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3547:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A binary predicate.
3548:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in
3549:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          the range [__first2, __first2 + (__last1 - __first1)),
3550:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          beginning with ForwardIterator2 begin, such that
3551:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          equal(__first1, __last1, __begin, __pred) returns true;
3552:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          otherwise, returns false.
3553:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3554:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3555:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3556:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3557:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3558:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _BinaryPredicate __pred)
3559:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3560:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3561:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
3562:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
3563:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3564:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
3565:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
3566:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3567:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3568:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2,
3569:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3570:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3571:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3572:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #if __cplusplus > 201103L
3573:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3574:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3575:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     bool
3576:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     __is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3577:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3578:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		     _BinaryPredicate __pred)
3579:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3580:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _Cat1
3581:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= typename iterator_traits<_ForwardIterator1>::iterator_category;
3582:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _Cat2
3583:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	= typename iterator_traits<_ForwardIterator2>::iterator_category;
3584:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _It1_is_RA = is_same<_Cat1, random_access_iterator_tag>;
3585:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       using _It2_is_RA = is_same<_Cat2, random_access_iterator_tag>;
3586:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       constexpr bool __ra_iters = _It1_is_RA() && _It2_is_RA();
3587:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__ra_iters)
3588:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3589:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3590:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3591:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__d1 != __d2)
3592:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3593:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3595:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // Efficiently compare identical prefixes:  O(N) if sequences
3596:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // have the same elements in the same order.
3597:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1, ++__first2)
3598:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (!__pred(__first1, __first2))
3599:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  break;
3600:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3601:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__ra_iters)
3602:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
GAS LISTING /tmp/ccKUqHDa.s 			page 269


3603:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__first1 == __last1)
3604:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return true;
3605:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3606:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       else
3607:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3608:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d1 = std::distance(__first1, __last1);
3609:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __d2 = std::distance(__first2, __last2);
3610:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__d1 == 0 && __d2 == 0)
3611:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return true;
3612:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__d1 != __d2)
3613:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3614:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3615:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3616:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_ForwardIterator1 __scan = __first1; __scan != __last1; ++__scan)
3617:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	{
3618:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__scan != std::__find_if(__first1, __scan,
3619:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan)))
3620:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    continue; // We've seen this one before.
3621:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3622:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  auto __matches = std::__count_if(__first2, __last2,
3623:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan));
3624:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (0 == __matches
3625:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      || std::__count_if(__scan, __last1,
3626:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__pred, __scan))
3627:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      != __matches)
3628:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return false;
3629:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	}
3630:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return true;
3631:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3632:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3633:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3634:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutaion of the second sequence is equal
3635:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3636:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3637:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3638:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3639:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3640:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of first range.
3641:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3642:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3643:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          such that equal(__first1, __last1, begin) returns true;
3644:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          otherwise, returns false.
3645:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3646:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
3647:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3648:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3649:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2)
3650:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3651:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3652:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3653:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3654:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return
3655:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::__is_permutation(__first1, __last1, __first2, __last2,
3656:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			      __gnu_cxx::__ops::__iter_equal_to_iter());
3657:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3658:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3659:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
GAS LISTING /tmp/ccKUqHDa.s 			page 270


3660:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Checks whether a permutation of the second sequence is equal
3661:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          to the first sequence.
3662:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3663:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of first range.
3664:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of first range.
3665:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of second range.
3666:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of first range.
3667:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred    A binary predicate.
3668:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return true if there exists a permutation of the elements in the range
3669:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          [__first2, __last2), beginning with ForwardIterator2 begin,
3670:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          such that equal(__first1, __last1, __begin, __pred) returns true;
3671:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *          otherwise, returns false.
3672:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3673:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
3674:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3675:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline bool
3676:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     is_permutation(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
3677:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _ForwardIterator2 __first2, _ForwardIterator2 __last2,
3678:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		   _BinaryPredicate __pred)
3679:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3680:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3681:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3682:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3683:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__is_permutation(__first1, __last1, __first2, __last2,
3684:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				   __gnu_cxx::__ops::__iter_comp_iter(__pred));
3685:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3686:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
3687:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3688:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #ifdef _GLIBCXX_USE_C99_STDINT_TR1
3689:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3690:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Shuffle the elements of a sequence using a uniform random
3691:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         number generator.
3692:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
3693:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first   A forward iterator.
3694:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last    A forward iterator.
3695:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __g       A UniformRandomNumberGenerator (26.5.1.3).
3696:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return  Nothing.
3697:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3698:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Reorders the elements in the range @p [__first,__last) using @p __g to
3699:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  provide random numbers.
3700:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3701:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _RandomAccessIterator,
3702:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UniformRandomNumberGenerator>
3703:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
3704:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     shuffle(_RandomAccessIterator __first, _RandomAccessIterator __last,
3705:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _UniformRandomNumberGenerator&& __g)
3706:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3707:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3708:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_RandomAccessIteratorConcept<
3709:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _RandomAccessIterator>)
3710:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3711:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3712:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       if (__first == __last)
3713:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	return;
3714:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3715:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename iterator_traits<_RandomAccessIterator>::difference_type
3716:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	_DistanceType;
GAS LISTING /tmp/ccKUqHDa.s 			page 271


3717:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3718:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename std::make_unsigned<_DistanceType>::type __ud_type;
3719:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename std::uniform_int_distribution<__ud_type> __distr_type;
3720:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       typedef typename __distr_type::param_type __p_type;
3721:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __distr_type __d;
3722:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3723:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (_RandomAccessIterator __i = __first + 1; __i != __last; ++__i)
3724:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	std::iter_swap(__i, __first + __d(__g, __p_type(0, __i - __first)));
3725:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3726:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif
3727:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3728:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** #endif // C++11
3729:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3730:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** _GLIBCXX_END_NAMESPACE_VERSION
3731:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3732:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** _GLIBCXX_BEGIN_NAMESPACE_ALGO
3733:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3734:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3735:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Apply a function to every element of a sequence.
3736:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3737:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3738:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3739:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __f      A unary function object.
3740:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   @p __f (std::move(@p __f) in C++0x).
3741:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3742:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Applies the function object @p __f to each element in the range
3743:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [first,last).  @p __f must not modify the order of the sequence.
3744:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  If @p __f has a return value it is ignored.
3745:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3746:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Function>
3747:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _Function
3748:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     for_each(_InputIterator __first, _InputIterator __last, _Function __f)
3749:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3750:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3751:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3752:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3753:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
3754:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	__f(*__first);
3755:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return _GLIBCXX_MOVE(__f);
3756:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3757:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3758:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3759:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find the first occurrence of a value in a sequence.
3760:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3761:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3762:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3763:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val    The value to find.
3764:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
3765:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such that @c *i == @p __val, or @p __last if no such iterator exists.
3766:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3767:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Tp>
3768:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
3769:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find(_InputIterator __first, _InputIterator __last,
3770:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	 const _Tp& __val)
3771:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3772:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3773:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
GAS LISTING /tmp/ccKUqHDa.s 			page 272


3774:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3775:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		typename iterator_traits<_InputIterator>::value_type, _Tp>)
3776:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3777:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if(__first, __last,
3778:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__iter_equals_val(__val));
3779:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3780:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3781:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3782:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find the first element in a sequence for which a
3783:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         predicate is true.
3784:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3785:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3786:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3787:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
3788:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range @p [__first,__last)
3789:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such that @p __pred(*i) is true, or @p __last if no such iterator exists.
3790:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3791:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
3792:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _InputIterator
3793:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_if(_InputIterator __first, _InputIterator __last,
3794:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    _Predicate __pred)
3795:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3796:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3797:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3798:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3799:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      typename iterator_traits<_InputIterator>::value_type>)
3800:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3801:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3802:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__find_if(__first, __last,
3803:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			    __gnu_cxx::__ops::__pred_iter(__pred));
3804:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3805:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3806:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3807:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find element from a set in a sequence.
3808:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3809:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
3810:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
3811:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of match candidates.
3812:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of match candidates.
3813:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range
3814:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1) such that @c *i == @p *(i2) such that i2 is an
3815:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator in [__first2,__last2), or @p __last1 if no such iterator exists.
3816:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3817:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for an element that is
3818:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to some element in the range [__first2,__last2).  If
3819:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found, returns an iterator in the range [__first1,__last1),
3820:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise returns @p __last1.
3821:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3822:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator>
3823:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _InputIterator
3824:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_first_of(_InputIterator __first1, _InputIterator __last1,
3825:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ForwardIterator __first2, _ForwardIterator __last2)
3826:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3827:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3828:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3829:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3830:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
GAS LISTING /tmp/ccKUqHDa.s 			page 273


3831:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type,
3832:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3833:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3834:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3835:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3836:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1)
3837:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
3838:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (*__first1 == *__iter)
3839:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first1;
3840:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last1;
3841:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3842:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3843:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3844:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief  Find element from a set in a sequence using a predicate.
3845:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3846:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  Start of range to search.
3847:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   End of range to search.
3848:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  Start of match candidates.
3849:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   End of match candidates.
3850:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __comp    Predicate to use.
3851:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range
3852:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1) such that @c comp(*i, @p *(i2)) is true
3853:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  and i2 is an iterator in [__first2,__last2), or @p __last1 if no
3854:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  such iterator exists.
3855:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3856:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3857:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for an element that is
3858:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to some element in the range [__first2,__last2).  If
3859:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found, returns an iterator in the range [__first1,__last1),
3860:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  otherwise returns @p __last1.
3861:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3862:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _ForwardIterator,
3863:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
3864:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _InputIterator
3865:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     find_first_of(_InputIterator __first1, _InputIterator __last1,
3866:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _ForwardIterator __first2, _ForwardIterator __last2,
3867:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BinaryPredicate __comp)
3868:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3869:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3870:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3871:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3872:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3873:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type,
3874:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3875:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
3876:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
3877:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3878:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1)
3879:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	for (_ForwardIterator __iter = __first2; __iter != __last2; ++__iter)
3880:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  if (__comp(*__first1, *__iter))
3881:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    return __first1;
3882:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __last1;
3883:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3884:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3885:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3886:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find two adjacent values in a sequence that are equal.
3887:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
GAS LISTING /tmp/ccKUqHDa.s 			page 274


3888:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
3889:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
3890:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i such that @c i and @c i+1 are both
3891:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  valid iterators in @p [__first,__last) and such that @c *i == @c *(i+1),
3892:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  or @p __last if no such iterator exists.
3893:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3894:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator>
3895:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3896:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     adjacent_find(_ForwardIterator __first, _ForwardIterator __last)
3897:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3898:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3899:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3900:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualityComparableConcept<
3901:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3902:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3903:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3904:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__adjacent_find(__first, __last,
3905:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  __gnu_cxx::__ops::__iter_equal_to_iter());
3906:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3907:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3908:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3909:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Find two adjacent values in a sequence using a predicate.
3910:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3911:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first         A forward iterator.
3912:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last          A forward iterator.
3913:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_pred   A binary predicate.
3914:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i such that @c i and @c i+1 are both
3915:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  valid iterators in @p [__first,__last) and such that
3916:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __binary_pred(*i,*(i+1)) is true, or @p __last if no such iterator
3917:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  exists.
3918:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3919:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _BinaryPredicate>
3920:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
3921:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     adjacent_find(_ForwardIterator __first, _ForwardIterator __last,
3922:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		  _BinaryPredicate __binary_pred)
3923:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3924:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3925:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
3926:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
3927:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type,
3928:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
3929:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3930:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3931:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__adjacent_find(__first, __last,
3932:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			__gnu_cxx::__ops::__iter_comp_iter(__binary_pred));
3933:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3934:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3935:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3936:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Count the number of copies of a value in a sequence.
3937:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3938:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3939:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3940:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __value  The value to be counted.
3941:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The number of iterators @c i in the range @p [__first,__last)
3942:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for which @c *i == @p __value
3943:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3944:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Tp>
GAS LISTING /tmp/ccKUqHDa.s 			page 275


3945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline typename iterator_traits<_InputIterator>::difference_type
3946:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     count(_InputIterator __first, _InputIterator __last, const _Tp& __value)
3947:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3948:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3949:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3950:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
3951:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type, _Tp>)
3952:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3953:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3954:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__count_if(__first, __last,
3955:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equals_val(__value));
3956:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3957:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3958:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3959:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Count the elements of a sequence for which a predicate is true.
3960:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3961:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  An input iterator.
3962:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   An input iterator.
3963:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred   A predicate.
3964:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The number of iterators @c i in the range @p [__first,__last)
3965:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  for which @p __pred(*i) is true.
3966:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
3967:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _Predicate>
3968:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline typename iterator_traits<_InputIterator>::difference_type
3969:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     count_if(_InputIterator __first, _InputIterator __last, _Predicate __pred)
3970:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
3971:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
3972:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
3973:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
3974:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_InputIterator>::value_type>)
3975:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
3976:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3977:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__count_if(__first, __last,
3978:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__pred_iter(__pred));
3979:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
3980:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
3981:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
3982:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a matching sub-sequence.
3983:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
3984:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1  A forward iterator.
3985:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1   A forward iterator.
3986:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2  A forward iterator.
3987:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2   A forward iterator.
3988:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The first iterator @c i in the range @p
3989:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1-(__last2-__first2)) such that @c *(i+N) == @p
3990:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  *(__first2+N) for each @c N in the range @p
3991:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [0,__last2-__first2), or @p __last1 if no such iterator exists.
3992:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3993:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
3994:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
3995:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2) and returns an iterator to the first element
3996:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  of the sub-sequence, or @p __last1 if the sub-sequence is not
3997:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  found.
3998:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
3999:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Because the sub-sequence must lie completely within the range @p
4000:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first1,__last1) it must start at a position less than @p
4001:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __last1-(__last2-__first2) where @p __last2-__first2 is the
GAS LISTING /tmp/ccKUqHDa.s 			page 276


4002:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  length of the sub-sequence.
4003:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4004:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  This means that the returned iterator @c i will be in the range
4005:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2))
4006:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4007:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2>
4008:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
4009:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
4010:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _ForwardIterator2 __first2, _ForwardIterator2 __last2)
4011:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4012:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4013:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
4014:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
4015:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
4016:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
4017:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
4018:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
4019:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
4020:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4021:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search(__first1, __last1, __first2, __last2,
4022:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_equal_to_iter());
4023:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4024:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4025:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4026:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a matching sub-sequence using a predicate.
4027:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
4028:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1     A forward iterator.
4029:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1      A forward iterator.
4030:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2     A forward iterator.
4031:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last2      A forward iterator.
4032:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __predicate  A binary predicate.
4033:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   The first iterator @c i in the range
4034:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first1,__last1-(__last2-__first2)) such that
4035:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __predicate(*(i+N),*(__first2+N)) is true for each @c N in the range
4036:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [0,__last2-__first2), or @p __last1 if no such iterator exists.
4037:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4038:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first1,__last1) for a sub-sequence that
4039:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  compares equal value-by-value with the sequence given by @p
4040:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first2,__last2), using @p __predicate to determine equality,
4041:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  and returns an iterator to the first element of the
4042:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  sub-sequence, or @p __last1 if no such iterator exists.
4043:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4044:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @see search(_ForwardIter1, _ForwardIter1, _ForwardIter2, _ForwardIter2)
4045:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4046:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator1, typename _ForwardIterator2,
4047:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _BinaryPredicate>
4048:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator1
4049:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search(_ForwardIterator1 __first1, _ForwardIterator1 __last1,
4050:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _ForwardIterator2 __first2, _ForwardIterator2 __last2,
4051:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   _BinaryPredicate  __predicate)
4052:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4053:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4054:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator1>)
4055:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator2>)
4056:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
4057:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator1>::value_type,
4058:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator2>::value_type>)
GAS LISTING /tmp/ccKUqHDa.s 			page 277


4059:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
4060:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first2, __last2);
4061:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4062:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search(__first1, __last1, __first2, __last2,
4063:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			   __gnu_cxx::__ops::__iter_comp_iter(__predicate));
4064:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4065:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4066:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4067:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a number of consecutive values.
4068:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
4069:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
4070:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
4071:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __count  The number of consecutive values.
4072:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val    The value to find.
4073:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The first iterator @c i in the range @p
4074:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last-__count) such that @c *(i+N) == @p __val for
4075:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  each @c N in the range @p [0,__count), or @p __last if no such
4076:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  iterator exists.
4077:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4078:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first,__last) for @p count consecutive elements
4079:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  equal to @p __val.
4080:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4081:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer, typename _Tp>
4082:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
4083:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search_n(_ForwardIterator __first, _ForwardIterator __last,
4084:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Integer __count, const _Tp& __val)
4085:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4086:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4087:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
4088:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
4089:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
4090:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4091:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4092:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search_n(__first, __last, __count,
4093:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 			     __gnu_cxx::__ops::__iter_equals_val(__val));
4094:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4095:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4096:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4097:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4098:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Search a sequence for a number of consecutive values using a
4099:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         predicate.
4100:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup non_mutating_algorithms
4101:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first        A forward iterator.
4102:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last         A forward iterator.
4103:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __count        The number of consecutive values.
4104:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __val          The value to find.
4105:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_pred  A binary predicate.
4106:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return The first iterator @c i in the range @p
4107:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  [__first,__last-__count) such that @p
4108:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  __binary_pred(*(i+N),__val) is true for each @c N in the range
4109:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [0,__count), or @p __last if no such iterator exists.
4110:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4111:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Searches the range @p [__first,__last) for @p __count
4112:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  consecutive elements for which the predicate returns true.
4113:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4114:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Integer, typename _Tp,
4115:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****            typename _BinaryPredicate>
GAS LISTING /tmp/ccKUqHDa.s 			page 278


4116:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     inline _ForwardIterator
4117:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     search_n(_ForwardIterator __first, _ForwardIterator __last,
4118:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Integer __count, const _Tp& __val,
4119:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _BinaryPredicate __binary_pred)
4120:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4121:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4122:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
4123:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_BinaryPredicateConcept<_BinaryPredicate,
4124:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
4125:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4126:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4127:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return std::__search_n(__first, __last, __count,
4128:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 		__gnu_cxx::__ops::__iter_comp_val(__binary_pred, __val));
4129:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4130:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4131:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4132:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4133:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Perform an operation on a sequence.
4134:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4135:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first     An input iterator.
4136:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last      An input iterator.
4137:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result    An output iterator.
4138:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __unary_op  A unary operator.
4139:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An output iterator equal to @p __result+(__last-__first).
4140:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4141:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Applies the operator to each element in the input range and assigns
4142:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  the results to successive elements of the output sequence.
4143:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Evaluates @p *(__result+N)=unary_op(*(__first+N)) for each @c N in the
4144:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  range @p [0,__last-__first).
4145:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4146:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p unary_op must not alter its argument.
4147:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4148:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator, typename _OutputIterator,
4149:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _UnaryOperation>
4150:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
4151:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     transform(_InputIterator __first, _InputIterator __last,
4152:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _OutputIterator __result, _UnaryOperation __unary_op)
4153:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4154:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4155:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator>)
4156:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
4157:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             // "the type returned by a _UnaryOperation"
4158:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             __typeof__(__unary_op(*__first))>)
4159:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4160:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first, ++__result)
4162:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	*__result = __unary_op(*__first);
4163:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
4164:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4165:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4166:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4167:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Perform an operation on corresponding elements of two sequences.
4168:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4169:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first1     An input iterator.
4170:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last1      An input iterator.
4171:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first2     An input iterator.
4172:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __result     An output iterator.
GAS LISTING /tmp/ccKUqHDa.s 			page 279


4173:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __binary_op  A binary operator.
4174:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   An output iterator equal to @p result+(last-first).
4175:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4176:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Applies the operator to the corresponding elements in the two
4177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  input ranges and assigns the results to successive elements of the
4178:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  output sequence.
4179:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Evaluates @p
4180:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  *(__result+N)=__binary_op(*(__first1+N),*(__first2+N)) for each
4181:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @c N in the range @p [0,__last1-__first1).
4182:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4183:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p binary_op must not alter either of its arguments.
4184:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4185:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _InputIterator1, typename _InputIterator2,
4186:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	   typename _OutputIterator, typename _BinaryOperation>
4187:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     _OutputIterator
4188:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     transform(_InputIterator1 __first1, _InputIterator1 __last1,
4189:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _InputIterator2 __first2, _OutputIterator __result,
4190:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	      _BinaryOperation __binary_op)
4191:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4192:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4193:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator1>)
4194:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_InputIteratorConcept<_InputIterator2>)
4195:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_OutputIteratorConcept<_OutputIterator,
4196:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             // "the type returned by a _BinaryOperation"
4197:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****             __typeof__(__binary_op(*__first1,*__first2))>)
4198:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first1, __last1);
4199:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4200:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first1 != __last1; ++__first1, ++__first2, ++__result)
4201:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	*__result = __binary_op(*__first1, *__first2);
4202:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       return __result;
4203:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4204:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4205:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4206:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Replace each occurrence of one value in a sequence with another
4207:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         value.
4208:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4209:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      A forward iterator.
4210:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       A forward iterator.
4211:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __old_value  The value to be replaced.
4212:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
4213:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   replace() returns no value.
4214:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4215:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  For each iterator @c i in the range @p [__first,__last) if @c *i ==
4216:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p __old_value then the assignment @c *i = @p __new_value is performed.
4217:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4218:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Tp>
4219:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
4220:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace(_ForwardIterator __first, _ForwardIterator __last,
4221:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    const _Tp& __old_value, const _Tp& __new_value)
4222:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4223:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4224:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
4225:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
4226:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_EqualOpConcept<
4227:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type, _Tp>)
4228:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_Tp,
4229:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
GAS LISTING /tmp/ccKUqHDa.s 			page 280


4230:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4231:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4232:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
4233:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (*__first == __old_value)
4234:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__first = __new_value;
4235:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4236:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4237:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4238:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Replace each value in a sequence for which a predicate returns
4239:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         true with another value.
4240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4241:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first      A forward iterator.
4242:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last       A forward iterator.
4243:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __pred       A predicate.
4244:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __new_value  The replacement value.
4245:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   replace_if() returns no value.
4246:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4247:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  For each iterator @c i in the range @p [__first,__last) if @p __pred(*i)
4248:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  is true then the assignment @c *i = @p __new_value is performed.
4249:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4250:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Predicate, typename _Tp>
4251:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
4252:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     replace_if(_ForwardIterator __first, _ForwardIterator __last,
4253:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	       _Predicate __pred, const _Tp& __new_value)
4254:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
4255:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4256:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_Mutable_ForwardIteratorConcept<
4257:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 				  _ForwardIterator>)
4258:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ConvertibleConcept<_Tp,
4259:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4260:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_UnaryPredicateConcept<_Predicate,
4261:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4262:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4263:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4264:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
4265:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	if (__pred(*__first))
4266:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	  *__first = __new_value;
4267:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     }
4268:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4269:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   /**
4270:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @brief Assign the result of a function object to each value in a
4271:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *         sequence.
4272:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @ingroup mutating_algorithms
4273:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __first  A forward iterator.
4274:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __last   A forward iterator.
4275:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @param  __gen    A function object taking no arguments and returning
4276:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *                 std::iterator_traits<_ForwardIterator>::value_type
4277:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @return   generate() returns no value.
4278:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *
4279:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  Performs the assignment @c *i = @p __gen() for each @c i in the range
4280:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****    *  @p [__first,__last).
4281:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   */
4282:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****   template<typename _ForwardIterator, typename _Generator>
4283:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     void
4284:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     generate(_ForwardIterator __first, _ForwardIterator __last,
4285:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	     _Generator __gen)
4286:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****     {
GAS LISTING /tmp/ccKUqHDa.s 			page 281


4287:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       // concept requirements
4288:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_ForwardIteratorConcept<_ForwardIterator>)
4289:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_function_requires(_GeneratorConcept<_Generator,
4290:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 	    typename iterator_traits<_ForwardIterator>::value_type>)
4291:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       __glibcxx_requires_valid_range(__first, __last);
4292:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h **** 
4293:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_algo.h ****       for (; __first != __last; ++__first)
 1710              		.loc 16 4294 0
 1711 06c3 4C396424 		cmpq	%r12, 48(%rsp)
 1711      30
 1712 06c8 0F8512FE 		jne	.L76
 1712      FFFF
 1713              	.LBE2071:
 1714              	.LBE2070:
 1715              	.LBB2152:
 1716              	.LBB2153:
 115:examples/customstamp_heatmaps.cpp ****             vector<unsigned char> image(w*h*4);
 1717              		.loc 1 115 0 discriminator 1
 1718 06ce 488B4424 		movq	120(%rsp), %rax
 1718      78
 1719              	.LBE2153:
 1720              	.LBE2152:
 107:examples/customstamp_heatmaps.cpp ****         char filename[] = "stamps_heatmapA.png";
 1721              		.loc 1 107 0 discriminator 1
 1722 06d3 488D3500 		leaq	.LC23(%rip), %rsi
 1722      000000
 1723 06da B9050000 		movl	$5, %ecx
 1723      00
 1724 06df 488B7C24 		movq	96(%rsp), %rdi
 1724      60
 1725 06e4 488B6C24 		movq	48(%rsp), %rbp
 1725      30
 1726              	.LBB2224:
 1727              	.LBB2216:
 115:examples/customstamp_heatmaps.cpp ****             vector<unsigned char> image(w*h*4);
 1728              		.loc 1 115 0 discriminator 1
 1729 06e9 4C8DBC24 		leaq	144(%rsp), %r15
 1729      90000000 
 1730              	.LBE2216:
 1731              	.LBE2224:
 107:examples/customstamp_heatmaps.cpp ****         char filename[] = "stamps_heatmapA.png";
 1732              		.loc 1 107 0 discriminator 1
 1733 06f1 F3A5     		rep; movsl
 1734              	.LVL181:
 1735              	.LBB2225:
 1736              	.LBB2217:
 115:examples/customstamp_heatmaps.cpp ****             vector<unsigned char> image(w*h*4);
 1737              		.loc 1 115 0 discriminator 1
 1738 06f3 4989C4   		movq	%rax, %r12
 1739              	.LVL182:
 1740              	.LBE2217:
 108:examples/customstamp_heatmaps.cpp ****         for(size_t i = 0 ; i < nstamps ; ++i) {
 1741              		.loc 1 108 0 discriminator 1
 1742 06f6 4531F6   		xorl	%r14d, %r14d
 1743              	.LBB2218:
 115:examples/customstamp_heatmaps.cpp ****             vector<unsigned char> image(w*h*4);
 1744              		.loc 1 115 0 discriminator 1
GAS LISTING /tmp/ccKUqHDa.s 			page 282


 1745 06f9 4C0FAFE0 		imulq	%rax, %r12
 1746 06fd 4A8D04A5 		leaq	0(,%r12,4), %rax
 1746      00000000 
 1747 0705 48894424 		movq	%rax, 8(%rsp)
 1747      08
 1748              	.LBB2154:
 119:examples/customstamp_heatmaps.cpp ****             if(unsigned error = lodepng::encode(filename, image, w, h)) {
 1749              		.loc 1 119 0 discriminator 1
 1750 070a 488D8424 		leaq	142(%rsp), %rax
 1750      8E000000 
 1751 0712 48894424 		movq	%rax, 16(%rsp)
 1751      10
 1752              	.LVL183:
 1753              	.LBB2155:
 1754              	.LBB2156:
 1755              	.LBB2157:
 1756              	.LBB2158:
 1757 0717 488D8424 		leaq	143(%rsp), %rax
 1757      8F000000 
 1758 071f 48894424 		movq	%rax, 24(%rsp)
 1758      18
 1759              	.LVL184:
 1760              	.L82:
 1761              	.LBE2158:
 1762              	.LBE2157:
 1763              	.LBE2156:
 1764              	.LBE2155:
 1765              	.LBE2154:
 109:examples/customstamp_heatmaps.cpp ****             auto* hm = hms[i];
 1766              		.loc 1 109 0
 1767 0724 488B4424 		movq	104(%rsp), %rax
 1767      68
 1768 0729 488B5C24 		movq	72(%rsp), %rbx
 1768      48
 1769 072e 4E8B24F0 		movq	(%rax,%r14,8), %r12
 1770              	.LVL185:
 1771 0732 488B4424 		movq	32(%rsp), %rax
 1771      20
 1772 0737 4E8B2CF0 		movq	(%rax,%r14,8), %r13
 1773              	.LVL186:
 1774 073b 0F1F4400 		.p2align 4,,10
 1774      00
 1775              		.p2align 3
 1776              	.L77:
 1777              	.LBB2179:
 112:examples/customstamp_heatmaps.cpp ****                 heatmap_add_point_with_stamp(hm, point.first, point.second, stamps[i]);
 1778              		.loc 1 112 0
 1779 0740 4C89E9   		movq	%r13, %rcx
 1780 0743 4C89E7   		movq	%r12, %rdi
 1781 0746 F3480F2C 		cvttss2siq	4(%rbx), %rdx
 1781      5304
 1782 074c F3480F2C 		cvttss2siq	(%rbx), %rsi
 1782      33
 1783              	.LEHB7:
 1784 0751 E8000000 		call	heatmap_add_point_with_stamp@PLT
 1784      00
 1785              	.LVL187:
GAS LISTING /tmp/ccKUqHDa.s 			page 283


 1786 0756 4883C308 		addq	$8, %rbx
 1787              	.LVL188:
 111:examples/customstamp_heatmaps.cpp ****             for(auto point : points) {
 1788              		.loc 1 111 0
 1789 075a 4839EB   		cmpq	%rbp, %rbx
 1790 075d 75E1     		jne	.L77
 1791              	.LVL189:
 1792              	.LBE2179:
 115:examples/customstamp_heatmaps.cpp ****             vector<unsigned char> image(w*h*4);
 1793              		.loc 1 115 0
 1794 075f 488B5C24 		movq	80(%rsp), %rbx
 1794      50
 1795              	.LVL190:
 1796 0764 488B7424 		movq	8(%rsp), %rsi
 1796      08
 1797 0769 4C89FA   		movq	%r15, %rdx
 1798 076c 4889DF   		movq	%rbx, %rdi
 1799 076f E8000000 		call	_ZNSt6vectorIhSaIhEEC1EmRKS0_@PLT
 1799      00
 1800              	.LEHE7:
 1801              	.LVL191:
 116:examples/customstamp_heatmaps.cpp ****             heatmap_render_default_to(hm, &image[0]);
 1802              		.loc 1 116 0
 1803 0774 488BB424 		movq	192(%rsp), %rsi
 1803      C0000000 
 1804 077c 4C89E7   		movq	%r12, %rdi
 1805              	.LEHB8:
 1806 077f E8000000 		call	heatmap_render_default_to@PLT
 1806      00
 1807              	.LVL192:
 117:examples/customstamp_heatmaps.cpp ****             heatmap_free(hm);
 1808              		.loc 1 117 0
 1809 0784 4C89E7   		movq	%r12, %rdi
 1810 0787 E8000000 		call	heatmap_free@PLT
 1810      00
 1811              	.LVL193:
 1812              	.LBB2180:
 119:examples/customstamp_heatmaps.cpp ****             if(unsigned error = lodepng::encode(filename, image, w, h)) {
 1813              		.loc 1 119 0
 1814 078c 488B5424 		movq	16(%rsp), %rdx
 1814      10
 1815 0791 488B7424 		movq	96(%rsp), %rsi
 1815      60
 1816 0796 4C89FF   		movq	%r15, %rdi
 1817 0799 E8000000 		call	_ZNSsC1EPKcRKSaIcE@PLT
 1817      00
 1818              	.LEHE8:
 1819              	.LVL194:
 119:examples/customstamp_heatmaps.cpp ****             if(unsigned error = lodepng::encode(filename, image, w, h)) {
 1820              		.loc 1 119 0 is_stmt 0 discriminator 2
 1821 079e 8B542444 		movl	68(%rsp), %edx
 1822 07a2 41B90800 		movl	$8, %r9d
 1822      0000
 1823 07a8 41B80600 		movl	$6, %r8d
 1823      0000
 1824 07ae 4889DE   		movq	%rbx, %rsi
 1825 07b1 4C89FF   		movq	%r15, %rdi
GAS LISTING /tmp/ccKUqHDa.s 			page 284


 1826 07b4 89D1     		movl	%edx, %ecx
 1827              	.LEHB9:
 1828 07b6 E8000000 		call	_ZN7lodepng6encodeERKSsRKSt6vectorIhSaIhEEjj16LodePNGColorTypej@PLT
 1828      00
 1829              	.LEHE9:
 1830              	.LVL195:
 1831 07bb 89C3     		movl	%eax, %ebx
 1832              	.LVL196:
 1833              	.LBB2167:
 1834              	.LBB2165:
 1835              	.LBB2161:
 1836              	.LBB2162:
 1837              		.loc 2 301 0 is_stmt 1 discriminator 2
 1838 07bd 488B8424 		movq	144(%rsp), %rax
 1838      90000000 
 1839              	.LVL197:
 1840 07c5 488D78E8 		leaq	-24(%rax), %rdi
 1841              	.LVL198:
 1842              	.LBE2162:
 1843              	.LBE2161:
 1844              	.LBB2163:
 1845              	.LBB2159:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 1846              		.loc 2 240 0 discriminator 2
 1847 07c9 483B3D00 		cmpq	_ZNSs4_Rep20_S_empty_rep_storageE@GOTPCREL(%rip), %rdi
 1847      000000
 1848 07d0 0F85EE00 		jne	.L173
 1848      0000
 1849              	.LVL199:
 1850              	.L78:
 1851              	.LBE2159:
 1852              	.LBE2163:
 1853              	.LBE2165:
 1854              	.LBE2167:
 119:examples/customstamp_heatmaps.cpp ****             if(unsigned error = lodepng::encode(filename, image, w, h)) {
 1855              		.loc 1 119 0
 1856 07d6 85DB     		testl	%ebx, %ebx
 1857 07d8 0F85B301 		jne	.L174
 1857      0000
 1858              	.LBE2180:
 1859              	.LBB2181:
 1860              	.LBB2182:
 1861              	.LBB2183:
 1862              	.LBB2184:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 1863              		.loc 4 161 0
 1864 07de 488BBC24 		movq	192(%rsp), %rdi
 1864      C0000000 
 1865              	.LBE2184:
 1866              	.LBE2183:
 1867              	.LBE2182:
 1868              	.LBE2181:
 125:examples/customstamp_heatmaps.cpp ****             filename[14]++;
 1869              		.loc 1 125 0
 1870 07e6 808424AE 		addb	$1, 174(%rsp)
 1870      00000001 
 1871              	.LVL200:
GAS LISTING /tmp/ccKUqHDa.s 			page 285


 1872              	.LBB2193:
 1873              	.LBB2192:
 1874              	.LBB2191:
 1875              	.LBB2190:
 1876              	.LBB2185:
 1877              	.LBB2186:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 1878              		.loc 4 177 0
 1879 07ee 4885FF   		testq	%rdi, %rdi
 1880 07f1 7405     		je	.L81
 1881              	.LVL201:
 1882              	.LBB2187:
 1883              	.LBB2188:
 1884              	.LBB2189:
 1885              		.loc 5 110 0
 1886 07f3 E8000000 		call	_ZdlPv@PLT
 1886      00
 1887              	.LVL202:
 1888              	.L81:
 1889              	.LBE2189:
 1890              	.LBE2188:
 1891              	.LBE2187:
 1892              	.LBE2186:
 1893              	.LBE2185:
 1894              	.LBE2190:
 1895              	.LBE2191:
 1896              	.LBE2192:
 1897              	.LBE2193:
 1898              	.LBE2218:
 108:examples/customstamp_heatmaps.cpp ****         for(size_t i = 0 ; i < nstamps ; ++i) {
 1899              		.loc 1 108 0
 1900 07f8 4983C601 		addq	$1, %r14
 1901              	.LVL203:
 1902 07fc 4983FE05 		cmpq	$5, %r14
 1903 0800 0F851EFF 		jne	.L82
 1903      FFFF
 1904              	.LVL204:
 1905              	.LBE2225:
 1906              	.LBB2226:
 1907              	.LBB2227:
 1908              	.LBB2228:
 1909              	.LBB2229:
 1910              	.LBB2230:
 1911              	.LBB2231:
 1912              	.LBB2232:
 1913              		.loc 5 110 0
 1914 0806 488B7C24 		movq	72(%rsp), %rdi
 1914      48
 1915 080b E8000000 		call	_ZdlPv@PLT
 1915      00
 1916              	.LVL205:
 1917              	.LBE2232:
 1918              	.LBE2231:
 1919              	.LBE2230:
 1920              	.LBE2229:
 1921              	.LBE2228:
 1922              	.LBE2227:
GAS LISTING /tmp/ccKUqHDa.s 			page 286


 1923              	.LBE2226:
 1924              	.LBB2233:
 1925              	.LBB2234:
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_fini(); }
 1926              		.loc 11 1594 0
 1927 0810 488B7C24 		movq	112(%rsp), %rdi
 1927      70
 1928 0815 E8000000 		call	_ZNSt13random_device7_M_finiEv@PLT
 1928      00
 1929              	.LVL206:
 1930 081a 488B5C24 		movq	32(%rsp), %rbx
 1930      20
 1931              	.LVL207:
 1932              	.LBE2234:
 1933              	.LBE2233:
 1934              	.LBE1998:
 1935              	.LBB2267:
 129:examples/customstamp_heatmaps.cpp ****     for(auto stamp : stamps)
 1936              		.loc 1 129 0
 1937 081f 488D6B28 		leaq	40(%rbx), %rbp
 1938              	.LVL208:
 1939              		.p2align 4,,10
 1940 0823 0F1F4400 		.p2align 3
 1940      00
 1941              	.L83:
 130:examples/customstamp_heatmaps.cpp ****         heatmap_stamp_free(stamp);
 1942              		.loc 1 130 0 discriminator 3
 1943 0828 488B3B   		movq	(%rbx), %rdi
 1944              	.LEHB10:
 1945 082b E8000000 		call	heatmap_stamp_free@PLT
 1945      00
 1946              	.LEHE10:
 1947              	.LVL209:
 1948 0830 4883C308 		addq	$8, %rbx
 1949              	.LVL210:
 129:examples/customstamp_heatmaps.cpp ****     for(auto stamp : stamps)
 1950              		.loc 1 129 0 discriminator 2
 1951 0834 4839DD   		cmpq	%rbx, %rbp
 1952 0837 75EF     		jne	.L83
 1953              	.LBE2267:
 132:examples/customstamp_heatmaps.cpp ****     return 0;
 1954              		.loc 1 132 0
 1955 0839 31C0     		xorl	%eax, %eax
 1956              	.LVL211:
 1957              	.L57:
 1958              	.LBB2268:
 1959              	.LBB2269:
 1960              	.LBB2270:
 1961              	.LBB2271:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 1962              		.loc 4 177 0 discriminator 1
 1963 083b 488B7424 		movq	88(%rsp), %rsi
 1963      58
 1964 0840 4885F6   		testq	%rsi, %rsi
 1965 0843 0F847DF8 		je	.L125
 1965      FFFF
 1966              	.LBB2272:
GAS LISTING /tmp/ccKUqHDa.s 			page 287


 1967              	.LBB2273:
 1968              	.LBB2274:
 1969              		.loc 5 110 0
 1970 0849 4889F7   		movq	%rsi, %rdi
 1971 084c 89442408 		movl	%eax, 8(%rsp)
 1972              	.LVL212:
 1973 0850 E8000000 		call	_ZdlPv@PLT
 1973      00
 1974              	.LVL213:
 1975 0855 8B442408 		movl	8(%rsp), %eax
 1976 0859 E968F8FF 		jmp	.L125
 1976      FF
 1977              	.LVL214:
 1978 085e 6690     		.p2align 4,,10
 1979              		.p2align 3
 1980              	.L171:
 1981              	.LBE2274:
 1982              	.LBE2273:
 1983              	.LBE2272:
 1984              	.LBE2271:
 1985              	.LBE2270:
 1986              	.LBE2269:
 1987              	.LBE2268:
 1988              	.LBB2275:
 1989              	.LBB2235:
 1990              	.LBB2150:
 1991              	.LBB2148:
 1992              	.LBB2141:
 1993              	.LBB2136:
 1994              	.LBB2131:
 1995              	.LBB2127:
 1996              	.LBB2123:
1945:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.tcc **** 	    __ret = _M_saved;
 1997              		.loc 7 1945 0
 1998 0860 44897C24 		movl	%r15d, 8(%rsp)
 1998      08
 1999 0865 4531ED   		xorl	%r13d, %r13d
 2000 0868 F30F104C 		movss	8(%rsp), %xmm1
 2000      2408
 2001              	.LVL215:
 2002 086e E92CFEFF 		jmp	.L72
 2002      FF
 2003              	.LVL216:
 2004              		.p2align 4,,10
 2005 0873 0F1F4400 		.p2align 3
 2005      00
 2006              	.L169:
 2007              	.LBE2123:
 2008              	.LBE2127:
 2009              	.LBE2131:
 2010              	.LBE2136:
 2011              	.LBB2137:
 2012              	.LBB2100:
 2013              	.LBB2097:
 2014              	.LBB2094:
 2015 0878 896C2408 		movl	%ebp, 8(%rsp)
 2016 087c 4531F6   		xorl	%r14d, %r14d
GAS LISTING /tmp/ccKUqHDa.s 			page 288


 2017 087f F30F104C 		movss	8(%rsp), %xmm1
 2017      2408
 2018              	.LVL217:
 2019 0885 E930FDFF 		jmp	.L67
 2019      FF
 2020              	.LVL218:
 2021              	.L164:
 2022              	.LBE2094:
 2023              	.LBE2097:
 2024              	.LBE2100:
 2025              	.LBE2137:
 2026              	.LBE2141:
 2027              	.LBE2148:
 2028              	.LBE2150:
 2029              	.LBE2235:
 2030              	.LBE2275:
 2031              	.LBB2276:
 2032              	.LBB1929:
 2033              	.LBB1925:
 2034              	.LBB1921:
 2035              	.LBB1917:
 2036              	.LBB1909:
 2037              	.LBB1910:
 2038              	.LBB1911:
 101:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	if (__n > this->max_size())
 2039              		.loc 5 101 0
 2040 088a 48BAFFFF 		movabsq	$4611686018427387903, %rdx
 2040      FFFFFFFF 
 2040      FF3F
 2041 0894 4839D0   		cmpq	%rdx, %rax
 2042 0897 0F87B201 		ja	.L175
 2042      0000
 104:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	return static_cast<_Tp*>(::operator new(__n * sizeof(_Tp)));
 2043              		.loc 5 104 0
 2044 089d 488D2C85 		leaq	0(,%rax,4), %rbp
 2044      00000000 
 2045              	.LVL219:
 2046 08a5 4889EF   		movq	%rbp, %rdi
 2047              	.LEHB11:
 2048 08a8 E8000000 		call	_Znwm@PLT
 2048      00
 2049              	.LEHE11:
 2050              	.LVL220:
 2051 08ad 4889EA   		movq	%rbp, %rdx
 2052 08b0 31F6     		xorl	%esi, %esi
 2053 08b2 4889C7   		movq	%rax, %rdi
 2054 08b5 48894424 		movq	%rax, 88(%rsp)
 2054      58
 2055              	.LVL221:
 2056 08ba E8000000 		call	memset@PLT
 2056      00
 2057              	.LVL222:
 2058 08bf E945F8FF 		jmp	.L44
 2058      FF
 2059              	.LVL223:
 2060              	.L173:
 2061              	.LBE1911:
GAS LISTING /tmp/ccKUqHDa.s 			page 289


 2062              	.LBE1910:
 2063              	.LBE1909:
 2064              	.LBE1917:
 2065              	.LBE1921:
 2066              	.LBE1925:
 2067              	.LBE1929:
 2068              	.LBE2276:
 2069              	.LBB2277:
 2070              	.LBB2236:
 2071              	.LBB2219:
 2072              	.LBB2194:
 2073              	.LBB2168:
 2074              	.LBB2166:
 2075              	.LBB2164:
 2076              	.LBB2160:
 2077 08c4 488B7424 		movq	24(%rsp), %rsi
 2077      18
 2078 08c9 E8000000 		call	_ZNSs4_Rep10_M_disposeERKSaIcE.part.7
 2078      00
 2079              	.LVL224:
 2080 08ce E903FFFF 		jmp	.L78
 2080      FF
 2081              	.LVL225:
 2082              	.L167:
 2083              	.LBE2160:
 2084              	.LBE2164:
 2085              	.LBE2166:
 2086              	.LBE2168:
 2087              	.LBE2194:
 2088              	.LBE2219:
 2089              	.LBE2236:
 2090              	.LBE2277:
 2091              	.LBB2278:
 2092              	.LBB1977:
  84:examples/customstamp_heatmaps.cpp ****             std::cerr << "encoder error " << error << ": "<< lodepng_error_text(error) << std::endl
 2093              		.loc 1 84 0
 2094 08d3 89EF     		movl	%ebp, %edi
 2095              	.LEHB12:
 2096 08d5 E8000000 		call	_Z18lodepng_error_textj@PLT
 2096      00
 2097              	.LVL226:
 2098 08da 488B3D00 		movq	_ZSt4cerr@GOTPCREL(%rip), %rdi
 2098      000000
 2099 08e1 488D3500 		leaq	.LC16(%rip), %rsi
 2099      000000
 2100 08e8 4889C3   		movq	%rax, %rbx
 2101              	.LVL227:
 2102 08eb E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2102      00
 2103              	.LVL228:
 2104              	.LBB1957:
 2105              	.LBB1958:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 114:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 115:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 116:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(__ios_type& (*__pf)(__ios_type&))
 117:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
GAS LISTING /tmp/ccKUqHDa.s 			page 290


 118:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 119:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 120:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 121:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 122:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return *this;
 123:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 124:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 125:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 126:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(ios_base& (*__pf) (ios_base&))
 127:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 128:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 129:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// DR 60. What is a formatted input function?
 130:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// The inserters for manipulators are *not* formatted output functions.
 131:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	__pf(*this);
 132:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return *this;
 133:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 134:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@}
 135:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 136:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 137:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 138:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @name Inserters
 139:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 140:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  All the @c operator<< functions (aka <em>formatted output
 141:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  functions</em>) have some common behavior.  Each starts by
 142:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  constructing a temporary object of type std::basic_ostream::sentry.
 143:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  This can have several effects, concluding with the setting of a
 144:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  status flag; see the sentry documentation for more.
 145:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 146:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If the sentry status is good, the function tries to generate
 147:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  whatever data is appropriate for the type of the argument.
 148:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 149:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  If an exception is thrown during insertion, ios_base::badbit
 150:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  will be turned on in the stream's error state without causing an
 151:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  ios_base::failure to be thrown.  The original exception will then
 152:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  be rethrown.
 153:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 154:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 155:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       //@{
 156:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       /**
 157:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @brief Integer arithmetic inserters
 158:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @param  __n A variable of builtin integral type.
 159:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @return  @c *this if successful
 160:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *
 161:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  These functions use the stream's current locale (specifically, the
 162:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****        *  @c num_get facet) to perform numeric formatting.
 163:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       */
 164:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 165:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(long __n)
 166:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 167:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 168:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 169:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned long __n)
 170:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
 171:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 172:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 173:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(bool __n)
 174:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       { return _M_insert(__n); }
GAS LISTING /tmp/ccKUqHDa.s 			page 291


 175:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 176:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 177:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(short __n);
 178:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 179:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 180:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned short __n)
 181:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 182:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 183:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 184:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 185:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 186:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 187:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 188:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(int __n);
 189:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 
 190:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       __ostream_type&
 191:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       operator<<(unsigned int __n)
 192:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       {
 193:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// _GLIBCXX_RESOLVE_LIB_DEFECTS
 194:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	// 117. basic_ostream uses nonexistent num_put member functions.
 195:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return _M_insert(static_cast<unsigned long>(__n));
 2106              		.loc 8 196 0 discriminator 1
 2107 08f0 89EE     		movl	%ebp, %esi
 2108 08f2 4889C7   		movq	%rax, %rdi
 2109 08f5 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 2109      00
 2110              	.LVL229:
 2111              	.LBE1958:
 2112              	.LBE1957:
  84:examples/customstamp_heatmaps.cpp ****             std::cerr << "encoder error " << error << ": "<< lodepng_error_text(error) << std::endl
 2113              		.loc 1 84 0 discriminator 2
 2114 08fa 488D3500 		leaq	.LC17(%rip), %rsi
 2114      000000
 2115 0901 4889C7   		movq	%rax, %rdi
 2116 0904 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2116      00
 2117              	.LVL230:
  84:examples/customstamp_heatmaps.cpp ****             std::cerr << "encoder error " << error << ": "<< lodepng_error_text(error) << std::endl
 2118              		.loc 1 84 0 is_stmt 0
 2119 0909 4889C7   		movq	%rax, %rdi
 2120 090c 4889DE   		movq	%rbx, %rsi
 2121 090f E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2121      00
 2122              	.LVL231:
 2123              	.LBB1959:
 2124              	.LBB1960:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream ****       }
 2125              		.loc 8 113 0 is_stmt 1 discriminator 4
 2126 0914 4889C7   		movq	%rax, %rdi
 2127 0917 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 2127      00
 2128              	.LEHE12:
 2129              	.LVL232:
 2130              	.LBE1960:
 2131              	.LBE1959:
 2132              	.LBE1977:
 2133              	.LBB1978:
GAS LISTING /tmp/ccKUqHDa.s 			page 292


 2134              	.LBB1979:
 2135              	.LBB1980:
 2136              	.LBB1981:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 2137              		.loc 4 161 0
 2138 091c 488BBC24 		movq	5328(%rsp), %rdi
 2138      D0140000 
 2139              	.LVL233:
 2140              	.LBB1982:
 2141              	.LBB1983:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 2142              		.loc 4 177 0
 2143 0924 4885FF   		testq	%rdi, %rdi
 2144 0927 7405     		je	.L162
 2145              	.LVL234:
 2146              	.LBB1984:
 2147              	.LBB1985:
 2148              	.LBB1986:
 2149              		.loc 5 110 0
 2150 0929 E8000000 		call	_ZdlPv@PLT
 2150      00
 2151              	.LVL235:
 2152              	.L162:
 2153              	.LBE1986:
 2154              	.LBE1985:
 2155              	.LBE1984:
 2156              	.LBE1983:
 2157              	.LBE1982:
 2158              	.LBE1981:
 2159              	.LBE1980:
 2160              	.LBE1979:
 2161              	.LBE1978:
 2162              	.LBE2278:
 2163              	.LBB2279:
 2164              	.LBB2237:
 2165              	.LBB2220:
 2166              	.LBB2195:
 121:examples/customstamp_heatmaps.cpp ****                 return 1;
 2167              		.loc 1 121 0
 2168 092e B8010000 		movl	$1, %eax
 2168      00
 2169 0933 E903FFFF 		jmp	.L57
 2169      FF
 2170              	.LVL236:
 2171              	.L99:
 2172 0938 4889D0   		movq	%rdx, %rax
 2173 093b 660FEFD2 		pxor	%xmm2, %xmm2
 2174 093f 48D1E8   		shrq	%rax
 2175 0942 83E201   		andl	$1, %edx
 2176 0945 4809D0   		orq	%rdx, %rax
 2177 0948 F3480F2A 		cvtsi2ssq	%rax, %xmm2
 2177      D0
 2178 094d F30F58D2 		addss	%xmm2, %xmm2
 2179 0951 E9D5F7FF 		jmp	.L100
 2179      FF
 2180              	.LVL237:
 2181              	.L62:
GAS LISTING /tmp/ccKUqHDa.s 			page 293


 2182              	.LBE2195:
 2183              	.LBE2220:
 2184              	.LBE2237:
 102:examples/customstamp_heatmaps.cpp ****         normal_distribution<float> x_distr(0.5f*w, 0.5f/3.0f*w), y_distr(0.5f*h, 0.25f*h);
 2185              		.loc 1 102 0
 2186 0956 488B4424 		movq	120(%rsp), %rax
 2186      78
 2187              	.LVL238:
 2188 095b 660FEFC0 		pxor	%xmm0, %xmm0
 2189 095f 48D1E8   		shrq	%rax
 2190 0962 F3480F2A 		cvtsi2ssq	%rax, %xmm0
 2190      C0
 2191 0967 F30F58C0 		addss	%xmm0, %xmm0
 2192 096b E9ECFAFF 		jmp	.L63
 2192      FF
 2193              	.LVL239:
 2194              	.L166:
 2195              	.LBE2279:
 2196              	.LBB2280:
 2197              	.LBB1987:
 2198              	.LBB1961:
 2199              	.LBB1956:
 2200              	.LBB1955:
 2201              	.LBB1954:
 2202 0970 488DB424 		leaq	272(%rsp), %rsi
 2202      10010000 
 2203              	.LVL240:
 2204 0978 E8000000 		call	_ZNSs4_Rep10_M_disposeERKSaIcE.part.7
 2204      00
 2205              	.LVL241:
 2206 097d E9AEF9FF 		jmp	.L54
 2206      FF
 2207              	.LVL242:
 2208              	.L168:
 2209              	.LBE1954:
 2210              	.LBE1955:
 2211              	.LBE1956:
 2212              	.LBE1961:
 2213              	.LBE1987:
 2214              	.LBE2280:
 2215              	.LBB2281:
 2216              	.LBB2238:
 2217              	.LBB2010:
 2218              	.LBB2009:
 2219              	.LBB2008:
 2220 0982 488B7424 		movq	80(%rsp), %rsi
 2220      50
 2221 0987 E8000000 		call	_ZNSs4_Rep10_M_disposeERKSaIcE.part.7
 2221      00
 2222              	.LVL243:
 2223 098c E93CFAFF 		jmp	.L60
 2223      FF
 2224              	.LVL244:
 2225              	.L174:
 2226              	.LBE2008:
 2227              	.LBE2009:
 2228              	.LBE2010:
GAS LISTING /tmp/ccKUqHDa.s 			page 294


 2229              	.LBE2238:
 2230              	.LBB2239:
 2231              	.LBB2221:
 2232              	.LBB2196:
 120:examples/customstamp_heatmaps.cpp ****                 cerr << "encoder error " << error << ": "<< lodepng_error_text(error) << endl;
 2233              		.loc 1 120 0
 2234 0991 89DF     		movl	%ebx, %edi
 2235              	.LEHB13:
 2236 0993 E8000000 		call	_Z18lodepng_error_textj@PLT
 2236      00
 2237              	.LVL245:
 2238 0998 488B3D00 		movq	_ZSt4cerr@GOTPCREL(%rip), %rdi
 2238      000000
 2239 099f 488D3500 		leaq	.LC16(%rip), %rsi
 2239      000000
 2240 09a6 4889C5   		movq	%rax, %rbp
 2241 09a9 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2241      00
 2242              	.LVL246:
 2243              	.LBB2169:
 2244              	.LBB2170:
 2245              		.loc 8 196 0 discriminator 1
 2246 09ae 89DE     		movl	%ebx, %esi
 2247 09b0 4889C7   		movq	%rax, %rdi
 2248 09b3 E8000000 		call	_ZNSo9_M_insertImEERSoT_@PLT
 2248      00
 2249              	.LVL247:
 2250              	.LBE2170:
 2251              	.LBE2169:
 120:examples/customstamp_heatmaps.cpp ****                 cerr << "encoder error " << error << ": "<< lodepng_error_text(error) << endl;
 2252              		.loc 1 120 0 discriminator 2
 2253 09b8 488D3500 		leaq	.LC17(%rip), %rsi
 2253      000000
 2254 09bf 4889C7   		movq	%rax, %rdi
 2255 09c2 E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2255      00
 2256              	.LVL248:
 120:examples/customstamp_heatmaps.cpp ****                 cerr << "encoder error " << error << ": "<< lodepng_error_text(error) << endl;
 2257              		.loc 1 120 0 is_stmt 0
 2258 09c7 4889EE   		movq	%rbp, %rsi
 2259 09ca 4889C7   		movq	%rax, %rdi
 2260 09cd E8000000 		call	_ZStlsISt11char_traitsIcEERSt13basic_ostreamIcT_ES5_PKc@PLT
 2260      00
 2261              	.LVL249:
 2262              	.LBB2171:
 2263              	.LBB2172:
 113:/opt/gcc/4.9.2/include/c++/4.9.2/ostream **** 	return __pf(*this);
 2264              		.loc 8 113 0 is_stmt 1 discriminator 4
 2265 09d2 4889C7   		movq	%rax, %rdi
 2266 09d5 E8000000 		call	_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_@PLT
 2266      00
 2267              	.LEHE13:
 2268              	.LVL250:
 2269              	.LBE2172:
 2270              	.LBE2171:
 2271              	.LBE2196:
 2272              	.LBB2197:
GAS LISTING /tmp/ccKUqHDa.s 			page 295


 2273              	.LBB2198:
 2274              	.LBB2199:
 2275              	.LBB2200:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 2276              		.loc 4 161 0
 2277 09da 488BBC24 		movq	192(%rsp), %rdi
 2277      C0000000 
 2278              	.LVL251:
 2279              	.LBB2201:
 2280              	.LBB2202:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 2281              		.loc 4 177 0
 2282 09e2 4885FF   		testq	%rdi, %rdi
 2283 09e5 7405     		je	.L80
 2284              	.LVL252:
 2285              	.LBB2203:
 2286              	.LBB2204:
 2287              	.LBB2205:
 2288              		.loc 5 110 0
 2289 09e7 E8000000 		call	_ZdlPv@PLT
 2289      00
 2290              	.LVL253:
 2291              	.L80:
 2292              	.LBE2205:
 2293              	.LBE2204:
 2294              	.LBE2203:
 2295              	.LBE2202:
 2296              	.LBE2201:
 2297              	.LBE2200:
 2298              	.LBE2199:
 2299              	.LBE2198:
 2300              	.LBE2197:
 2301              	.LBE2221:
 2302              	.LBE2239:
 2303              	.LBB2240:
 2304              	.LBB2241:
 2305              	.LBB2242:
 2306              	.LBB2243:
 2307              	.LBB2244:
 2308              	.LBB2245:
 2309              	.LBB2246:
 2310 09ec 488B7C24 		movq	72(%rsp), %rdi
 2310      48
 2311 09f1 E8000000 		call	_ZdlPv@PLT
 2311      00
 2312              	.LVL254:
 2313              	.LBE2246:
 2314              	.LBE2245:
 2315              	.LBE2244:
 2316              	.LBE2243:
 2317              	.LBE2242:
 2318              	.LBE2241:
 2319              	.LBE2240:
 2320              	.LBB2247:
 2321              	.LBB2248:
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_fini(); }
 2322              		.loc 11 1594 0
GAS LISTING /tmp/ccKUqHDa.s 			page 296


 2323 09f6 488B7C24 		movq	112(%rsp), %rdi
 2323      70
 2324 09fb E8000000 		call	_ZNSt13random_device7_M_finiEv@PLT
 2324      00
 2325              	.LVL255:
 2326 0a00 E929FFFF 		jmp	.L162
 2326      FF
 2327              	.LVL256:
 2328              	.L170:
 2329 0a05 F30F114C 		movss	%xmm1, 24(%rsp)
 2329      2418
 2330 0a0b F30F115C 		movss	%xmm3, 8(%rsp)
 2330      2408
 2331              	.LVL257:
 2332              	.LBE2248:
 2333              	.LBE2247:
 2334              	.LBB2249:
 2335              	.LBB2151:
 2336              	.LBB2149:
 2337              	.LBB2142:
 2338              	.LBB2138:
 2339              	.LBB2101:
 2340              	.LBB2098:
 2341              	.LBB2095:
 2342              	.LBB2093:
 2343              	.LBB2092:
 2344              	.LBB2090:
 2345              		.loc 15 483 0
 2346 0a11 E8000000 		call	sqrtf@PLT
 2346      00
 2347              	.LVL258:
 2348 0a16 F30F104C 		movss	24(%rsp), %xmm1
 2348      2418
 2349 0a1c 0F28D0   		movaps	%xmm0, %xmm2
 2350 0a1f F30F105C 		movss	8(%rsp), %xmm3
 2350      2408
 2351 0a25 E96BFBFF 		jmp	.L69
 2351      FF
 2352              	.LVL259:
 2353              	.L172:
 2354 0a2a F30F114C 		movss	%xmm1, 44(%rsp)
 2354      242C
 2355 0a30 F30F115C 		movss	%xmm3, 8(%rsp)
 2355      2408
 2356              	.LVL260:
 2357              	.LBE2090:
 2358              	.LBE2092:
 2359              	.LBE2093:
 2360              	.LBE2095:
 2361              	.LBE2098:
 2362              	.LBE2101:
 2363              	.LBE2138:
 2364              	.LBB2139:
 2365              	.LBB2132:
 2366              	.LBB2128:
 2367              	.LBB2124:
 2368              	.LBB2121:
GAS LISTING /tmp/ccKUqHDa.s 			page 297


 2369              	.LBB2120:
 2370              	.LBB2118:
 2371 0a36 E8000000 		call	sqrtf@PLT
 2371      00
 2372              	.LVL261:
 2373 0a3b F30F104C 		movss	44(%rsp), %xmm1
 2373      242C
 2374 0a41 0F28D0   		movaps	%xmm0, %xmm2
 2375 0a44 F30F105C 		movss	8(%rsp), %xmm3
 2375      2408
 2376 0a4a E92EFCFF 		jmp	.L74
 2376      FF
 2377              	.LVL262:
 2378              	.L175:
 2379              	.LEHB14:
 2380              	.LBE2118:
 2381              	.LBE2120:
 2382              	.LBE2121:
 2383              	.LBE2124:
 2384              	.LBE2128:
 2385              	.LBE2132:
 2386              	.LBE2139:
 2387              	.LBE2142:
 2388              	.LBE2149:
 2389              	.LBE2151:
 2390              	.LBE2249:
 2391              	.LBE2281:
 2392              	.LBB2282:
 2393              	.LBB1930:
 2394              	.LBB1926:
 2395              	.LBB1922:
 2396              	.LBB1918:
 2397              	.LBB1914:
 2398              	.LBB1913:
 2399              	.LBB1912:
 102:/opt/gcc/4.9.2/include/c++/4.9.2/ext/new_allocator.h **** 	  std::__throw_bad_alloc();
 2400              		.loc 5 102 0
 2401 0a4f E8000000 		call	_ZSt17__throw_bad_allocv@PLT
 2401      00
 2402              	.LVL263:
 2403              	.L104:
 2404 0a54 4889C3   		movq	%rax, %rbx
 2405              	.L87:
 2406              	.LVL264:
 2407              	.LBE1912:
 2408              	.LBE1913:
 2409              	.LBE1914:
 2410              	.LBE1918:
 2411              	.LBE1922:
 2412              	.LBE1926:
 2413              	.LBE1930:
 2414              	.LBE2282:
 2415              	.LBB2283:
 2416              	.LBB1988:
 2417              	.LBB1989:
 2418              	.LBB1990:
 2419              	.LBB1991:
GAS LISTING /tmp/ccKUqHDa.s 			page 298


 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 2420              		.loc 4 161 0
 2421 0a57 488BBC24 		movq	5328(%rsp), %rdi
 2421      D0140000 
 2422              	.LVL265:
 2423              	.LBB1992:
 2424              	.LBB1993:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 2425              		.loc 4 177 0
 2426 0a5f 4885FF   		testq	%rdi, %rdi
 2427 0a62 7405     		je	.L89
 2428              	.LVL266:
 2429              	.LBB1994:
 2430              	.LBB1995:
 2431              	.LBB1996:
 2432              		.loc 5 110 0
 2433 0a64 E8000000 		call	_ZdlPv@PLT
 2433      00
 2434              	.LVL267:
 2435              	.L89:
 2436              	.LBE1996:
 2437              	.LBE1995:
 2438              	.LBE1994:
 2439              	.LBE1993:
 2440              	.LBE1992:
 2441              	.LBE1991:
 2442              	.LBE1990:
 2443              	.LBE1989:
 2444              	.LBE1988:
 2445              	.LBE2283:
 2446              	.LBB2284:
 2447              	.LBB2285:
 2448              	.LBB2286:
 2449              	.LBB2287:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 2450              		.loc 4 177 0
 2451 0a69 488B4424 		movq	88(%rsp), %rax
 2451      58
 2452 0a6e 4885C0   		testq	%rax, %rax
 2453 0a71 7408     		je	.L98
 2454              	.LVL268:
 2455              	.LBB2288:
 2456              	.LBB2289:
 2457              	.LBB2290:
 2458              		.loc 5 110 0
 2459 0a73 4889C7   		movq	%rax, %rdi
 2460 0a76 E8000000 		call	_ZdlPv@PLT
 2460      00
 2461              	.LVL269:
 2462              	.L98:
 2463 0a7b 4889DF   		movq	%rbx, %rdi
 2464 0a7e E8000000 		call	_Unwind_Resume@PLT
 2464      00
 2465              	.LEHE14:
 2466              	.LVL270:
 2467              	.L105:
 2468 0a83 4889C3   		movq	%rax, %rbx
GAS LISTING /tmp/ccKUqHDa.s 			page 299


 2469              	.LVL271:
 2470              	.LBE2290:
 2471              	.LBE2289:
 2472              	.LBE2288:
 2473              	.LBE2287:
 2474              	.LBE2286:
 2475              	.LBE2285:
 2476              	.LBE2284:
 2477              	.LBB2291:
 2478              	.LBB1997:
 2479              	.LBB1962:
 2480              	.LBB1963:
 2481              	.LBB1964:
 2482              	.LBB1965:
 2483              		.loc 2 301 0
 2484 0a86 488B8424 		movq	320(%rsp), %rax
 2484      40010000 
 2485 0a8e 488D78E8 		leaq	-24(%rax), %rdi
 2486              	.LVL272:
 2487              	.LBE1965:
 2488              	.LBE1964:
 2489              	.LBB1966:
 2490              	.LBB1967:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 2491              		.loc 2 240 0
 2492 0a92 483B3D00 		cmpq	_ZNSs4_Rep20_S_empty_rep_storageE@GOTPCREL(%rip), %rdi
 2492      000000
 2493 0a99 74BC     		je	.L87
 2494 0a9b 488DB424 		leaq	272(%rsp), %rsi
 2494      10010000 
 2495              	.LVL273:
 2496 0aa3 E8000000 		call	_ZNSs4_Rep10_M_disposeERKSaIcE.part.7
 2496      00
 2497              	.LVL274:
 2498 0aa8 EBAD     		jmp	.L87
 2499              	.LVL275:
 2500              	.L103:
 2501 0aaa 4889C3   		movq	%rax, %rbx
 2502 0aad EBBA     		jmp	.L89
 2503              	.LVL276:
 2504              	.L107:
 2505 0aaf 4889C3   		movq	%rax, %rbx
 2506              	.LVL277:
 2507              	.L97:
 2508              	.LBE1967:
 2509              	.LBE1966:
 2510              	.LBE1963:
 2511              	.LBE1962:
 2512              	.LBE1997:
 2513              	.LBE2291:
 2514              	.LBB2292:
 2515              	.LBB2250:
 2516              	.LBB2251:
1594:/opt/gcc/4.9.2/include/c++/4.9.2/bits/random.h ****     { _M_fini(); }
 2517              		.loc 11 1594 0
 2518 0ab2 488B7C24 		movq	112(%rsp), %rdi
 2518      70
GAS LISTING /tmp/ccKUqHDa.s 			page 300


 2519 0ab7 E8000000 		call	_ZNSt13random_device7_M_finiEv@PLT
 2519      00
 2520              	.LVL278:
 2521 0abc EBAB     		jmp	.L89
 2522              	.LVL279:
 2523              	.L108:
 2524 0abe 4889C3   		movq	%rax, %rbx
 2525              	.L96:
 2526              	.LVL280:
 2527              	.LBE2251:
 2528              	.LBE2250:
 2529              	.LBB2252:
 2530              	.LBB2253:
 2531              	.LBB2254:
 2532              	.LBB2255:
 2533              	.LBB2256:
 2534              	.LBB2257:
 2535              	.LBB2258:
 2536              		.loc 5 110 0
 2537 0ac1 488B7C24 		movq	72(%rsp), %rdi
 2537      48
 2538 0ac6 E8000000 		call	_ZdlPv@PLT
 2538      00
 2539              	.LVL281:
 2540 0acb EBE5     		jmp	.L97
 2541              	.LVL282:
 2542              	.L109:
 2543 0acd 4889C3   		movq	%rax, %rbx
 2544              	.L94:
 2545              	.LVL283:
 2546              	.LBE2258:
 2547              	.LBE2257:
 2548              	.LBE2256:
 2549              	.LBE2255:
 2550              	.LBE2254:
 2551              	.LBE2253:
 2552              	.LBE2252:
 2553              	.LBB2259:
 2554              	.LBB2222:
 2555              	.LBB2206:
 2556              	.LBB2207:
 2557              	.LBB2208:
 2558              	.LBB2209:
 161:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 		      - this->_M_impl._M_start); }
 2559              		.loc 4 161 0
 2560 0ad0 488BBC24 		movq	192(%rsp), %rdi
 2560      C0000000 
 2561              	.LVL284:
 2562              	.LBB2210:
 2563              	.LBB2211:
 177:/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_vector.h **** 	if (__p)
 2564              		.loc 4 177 0
 2565 0ad8 4885FF   		testq	%rdi, %rdi
 2566 0adb 74E4     		je	.L96
 2567              	.LVL285:
 2568              	.LBB2212:
 2569              	.LBB2213:
GAS LISTING /tmp/ccKUqHDa.s 			page 301


 2570              	.LBB2214:
 2571              		.loc 5 110 0
 2572 0add E8000000 		call	_ZdlPv@PLT
 2572      00
 2573              	.LVL286:
 2574 0ae2 EBDD     		jmp	.L96
 2575              	.LVL287:
 2576              	.L106:
 2577 0ae4 4889C3   		movq	%rax, %rbx
 2578              	.LVL288:
 2579              	.LBE2214:
 2580              	.LBE2213:
 2581              	.LBE2212:
 2582              	.LBE2211:
 2583              	.LBE2210:
 2584              	.LBE2209:
 2585              	.LBE2208:
 2586              	.LBE2207:
 2587              	.LBE2206:
 2588              	.LBE2222:
 2589              	.LBE2259:
 2590              	.LBB2260:
 2591              	.LBB2261:
 2592              	.LBB2262:
 2593              	.LBB2263:
 2594              		.loc 2 301 0
 2595 0ae7 488B8424 		movq	5328(%rsp), %rax
 2595      D0140000 
 2596 0aef 488D78E8 		leaq	-24(%rax), %rdi
 2597              	.LVL289:
 2598              	.LBE2263:
 2599              	.LBE2262:
 2600              	.LBB2264:
 2601              	.LBB2265:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 2602              		.loc 2 240 0
 2603 0af3 483B3D00 		cmpq	_ZNSs4_Rep20_S_empty_rep_storageE@GOTPCREL(%rip), %rdi
 2603      000000
 2604 0afa 0F8469FF 		je	.L89
 2604      FFFF
 2605 0b00 488B7424 		movq	80(%rsp), %rsi
 2605      50
 2606 0b05 E8000000 		call	_ZNSs4_Rep10_M_disposeERKSaIcE.part.7
 2606      00
 2607              	.LVL290:
 2608 0b0a E95AFFFF 		jmp	.L89
 2608      FF
 2609              	.LVL291:
 2610              	.L110:
 2611 0b0f 4889C3   		movq	%rax, %rbx
 2612              	.LVL292:
 2613              	.LBE2265:
 2614              	.LBE2264:
 2615              	.LBE2261:
 2616              	.LBE2260:
 2617              	.LBB2266:
 2618              	.LBB2223:
GAS LISTING /tmp/ccKUqHDa.s 			page 302


 2619              	.LBB2215:
 2620              	.LBB2173:
 2621              	.LBB2174:
 2622              	.LBB2175:
 2623              	.LBB2176:
 2624              		.loc 2 301 0
 2625 0b12 488B8424 		movq	144(%rsp), %rax
 2625      90000000 
 2626 0b1a 488D78E8 		leaq	-24(%rax), %rdi
 2627              	.LVL293:
 2628              	.LBE2176:
 2629              	.LBE2175:
 2630              	.LBB2177:
 2631              	.LBB2178:
 240:/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.h **** 	  if (__builtin_expect(this != &_S_empty_rep(), false))
 2632              		.loc 2 240 0
 2633 0b1e 483B3D00 		cmpq	_ZNSs4_Rep20_S_empty_rep_storageE@GOTPCREL(%rip), %rdi
 2633      000000
 2634 0b25 74A9     		je	.L94
 2635 0b27 488DB424 		leaq	143(%rsp), %rsi
 2635      8F000000 
 2636 0b2f E8000000 		call	_ZNSs4_Rep10_M_disposeERKSaIcE.part.7
 2636      00
 2637              	.LVL294:
 2638 0b34 EB9A     		jmp	.L94
 2639              	.LBE2178:
 2640              	.LBE2177:
 2641              	.LBE2174:
 2642              	.LBE2173:
 2643              	.LBE2215:
 2644              	.LBE2223:
 2645              	.LBE2266:
 2646              	.LBE2292:
 2647              	.LBE2293:
 2648              		.cfi_endproc
 2649              	.LFE5505:
 2650              		.globl	__gxx_personality_v0
 2651              		.section	.gcc_except_table,"a",@progbits
 2652              	.LLSDA5505:
 2653 0000 FF       		.byte	0xff
 2654 0001 FF       		.byte	0xff
 2655 0002 01       		.byte	0x1
 2656 0003 59       		.uleb128 .LLSDACSE5505-.LLSDACSB5505
 2657              	.LLSDACSB5505:
 2658 0004 2B       		.uleb128 .LEHB0-.LFB5505
 2659 0005 9601     		.uleb128 .LEHE0-.LEHB0
 2660 0007 00       		.uleb128 0
 2661 0008 00       		.uleb128 0
 2662 0009 CB03     		.uleb128 .LEHB1-.LFB5505
 2663 000b ED01     		.uleb128 .LEHE1-.LEHB1
 2664 000d AA15     		.uleb128 .L103-.LFB5505
 2665 000f 00       		.uleb128 0
 2666 0010 CD05     		.uleb128 .LEHB2-.LFB5505
 2667 0012 2C       		.uleb128 .LEHE2-.LEHB2
 2668 0013 D414     		.uleb128 .L104-.LFB5505
 2669 0015 00       		.uleb128 0
 2670 0016 9006     		.uleb128 .LEHB3-.LFB5505
GAS LISTING /tmp/ccKUqHDa.s 			page 303


 2671 0018 05       		.uleb128 .LEHE3-.LEHB3
 2672 0019 8315     		.uleb128 .L105-.LFB5505
 2673 001b 00       		.uleb128 0
 2674 001c F606     		.uleb128 .LEHB4-.LFB5505
 2675 001e 31       		.uleb128 .LEHE4-.LEHB4
 2676 001f AA15     		.uleb128 .L103-.LFB5505
 2677 0021 00       		.uleb128 0
 2678 0022 AF07     		.uleb128 .LEHB5-.LFB5505
 2679 0024 05       		.uleb128 .LEHE5-.LEHB5
 2680 0025 E415     		.uleb128 .L106-.LFB5505
 2681 0027 00       		.uleb128 0
 2682 0028 D207     		.uleb128 .LEHB6-.LFB5505
 2683 002a C601     		.uleb128 .LEHE6-.LEHB6
 2684 002c AF15     		.uleb128 .L107-.LFB5505
 2685 002e 00       		.uleb128 0
 2686 002f D10E     		.uleb128 .LEHB7-.LFB5505
 2687 0031 23       		.uleb128 .LEHE7-.LEHB7
 2688 0032 BE15     		.uleb128 .L108-.LFB5505
 2689 0034 00       		.uleb128 0
 2690 0035 FF0E     		.uleb128 .LEHB8-.LFB5505
 2691 0037 1F       		.uleb128 .LEHE8-.LEHB8
 2692 0038 CD15     		.uleb128 .L109-.LFB5505
 2693 003a 00       		.uleb128 0
 2694 003b B60F     		.uleb128 .LEHB9-.LFB5505
 2695 003d 05       		.uleb128 .LEHE9-.LEHB9
 2696 003e 8F16     		.uleb128 .L110-.LFB5505
 2697 0040 00       		.uleb128 0
 2698 0041 AB10     		.uleb128 .LEHB10-.LFB5505
 2699 0043 05       		.uleb128 .LEHE10-.LEHB10
 2700 0044 AA15     		.uleb128 .L103-.LFB5505
 2701 0046 00       		.uleb128 0
 2702 0047 A811     		.uleb128 .LEHB11-.LFB5505
 2703 0049 05       		.uleb128 .LEHE11-.LEHB11
 2704 004a 00       		.uleb128 0
 2705 004b 00       		.uleb128 0
 2706 004c D511     		.uleb128 .LEHB12-.LFB5505
 2707 004e 47       		.uleb128 .LEHE12-.LEHB12
 2708 004f D414     		.uleb128 .L104-.LFB5505
 2709 0051 00       		.uleb128 0
 2710 0052 9313     		.uleb128 .LEHB13-.LFB5505
 2711 0054 47       		.uleb128 .LEHE13-.LEHB13
 2712 0055 CD15     		.uleb128 .L109-.LFB5505
 2713 0057 00       		.uleb128 0
 2714 0058 CF14     		.uleb128 .LEHB14-.LFB5505
 2715 005a 34       		.uleb128 .LEHE14-.LEHB14
 2716 005b 00       		.uleb128 0
 2717 005c 00       		.uleb128 0
 2718              	.LLSDACSE5505:
 2719              		.section	.text.startup
 2720              		.size	main, .-main
 2721              		.section	.text.unlikely
 2722              	.LCOLDE24:
 2723              		.section	.text.startup
 2724              	.LHOTE24:
 2725              		.section	.text.unlikely
 2726              	.LCOLDB25:
 2727              		.section	.text.startup
GAS LISTING /tmp/ccKUqHDa.s 			page 304


 2728              	.LHOTB25:
 2729 0b36 662E0F1F 		.p2align 4,,15
 2729      84000000 
 2729      0000
 2730              		.type	_GLOBAL__sub_I_customstamp_heatmaps.cpp, @function
 2731              	_GLOBAL__sub_I_customstamp_heatmaps.cpp:
 2732              	.LFB5938:
 2733              		.loc 1 133 0
 2734              		.cfi_startproc
 2735              	.LVL295:
 2736              	.LBB2294:
 2737              	.LBB2295:
 2738              		.file 17 "/opt/gcc/4.9.2/include/c++/4.9.2/iostream"
   0:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Standard iostream objects -*- C++ -*-
   1:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
   2:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Copyright (C) 1997-2014 Free Software Foundation, Inc.
   3:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
   4:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // This file is part of the GNU ISO C++ Library.  This library is free
   5:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // software; you can redistribute it and/or modify it under the
   6:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // terms of the GNU General Public License as published by the
   7:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Free Software Foundation; either version 3, or (at your option)
   8:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // any later version.
   9:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  10:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // This library is distributed in the hope that it will be useful,
  11:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // but WITHOUT ANY WARRANTY; without even the implied warranty of
  12:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
  13:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // GNU General Public License for more details.
  14:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  15:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // Under Section 7 of GPL version 3, you are granted additional
  16:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // permissions described in the GCC Runtime Library Exception, version
  17:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // 3.1, as published by the Free Software Foundation.
  18:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  19:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // You should have received a copy of the GNU General Public License and
  20:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // a copy of the GCC Runtime Library Exception along with this program;
  21:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // see the files COPYING3 and COPYING.RUNTIME respectively.  If not, see
  22:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // <http://www.gnu.org/licenses/>.
  23:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  24:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** /** @file include/iostream
  25:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****  *  This is a Standard C++ Library header.
  26:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****  */
  27:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  28:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
  29:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** // ISO C++ 14882: 27.3  Standard iostream objects
  30:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** //
  31:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  32:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #ifndef _GLIBCXX_IOSTREAM
  33:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #define _GLIBCXX_IOSTREAM 1
  34:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  35:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #pragma GCC system_header
  36:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  37:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <bits/c++config.h>
  38:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <ostream>
  39:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #include <istream>
  40:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  41:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** namespace std _GLIBCXX_VISIBILITY(default)
  42:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** {
  43:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** _GLIBCXX_BEGIN_NAMESPACE_VERSION
GAS LISTING /tmp/ccKUqHDa.s 			page 305


  44:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  45:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   /**
  46:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  @name Standard Stream Objects
  47:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *
  48:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  The &lt;iostream&gt; header declares the eight <em>standard stream
  49:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  objects</em>.  For other declarations, see
  50:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  http://gcc.gnu.org/onlinedocs/libstdc++/manual/io.html
  51:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  and the @link iosfwd I/O forward declarations @endlink
  52:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *
  53:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  They are required by default to cooperate with the global C
  54:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  library's @c FILE streams, and to be available during program
  55:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  startup and termination. For more information, see the section of the
  56:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****    *  manual linked to above.
  57:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   */
  58:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   //@{
  59:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern istream cin;		/// Linked to standard input
  60:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream cout;		/// Linked to standard output
  61:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream cerr;		/// Linked to standard error (unbuffered)
  62:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern ostream clog;		/// Linked to standard error (buffered)
  63:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  64:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #ifdef _GLIBCXX_USE_WCHAR_T
  65:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wistream wcin;		/// Linked to standard input
  66:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wcout;	/// Linked to standard output
  67:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wcerr;	/// Linked to standard error (unbuffered)
  68:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   extern wostream wclog;	/// Linked to standard error (buffered)
  69:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** #endif
  70:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   //@}
  71:/opt/gcc/4.9.2/include/c++/4.9.2/iostream **** 
  72:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   // For construction of filebuffers for cout, cin, cerr, clog et. al.
  73:/opt/gcc/4.9.2/include/c++/4.9.2/iostream ****   static ios_base::Init __ioinit;
 2739              		.loc 17 74 0
 2740 0b40 488D3D00 		leaq	_ZStL8__ioinit(%rip), %rdi
 2740      000000
 2741              	.LBE2295:
 2742              	.LBE2294:
 2743              		.loc 1 133 0
 2744 0b47 4883EC08 		subq	$8, %rsp
 2745              		.cfi_def_cfa_offset 16
 2746              	.LBB2298:
 2747              	.LBB2296:
 2748              		.loc 17 74 0
 2749 0b4b E8000000 		call	_ZNSt8ios_base4InitC1Ev@PLT
 2749      00
 2750              	.LVL296:
 2751 0b50 488B3D00 		movq	_ZNSt8ios_base4InitD1Ev@GOTPCREL(%rip), %rdi
 2751      000000
 2752 0b57 488D1500 		leaq	__dso_handle(%rip), %rdx
 2752      000000
 2753 0b5e 488D3500 		leaq	_ZStL8__ioinit(%rip), %rsi
 2753      000000
 2754              	.LBE2296:
 2755              	.LBE2298:
 2756              		.loc 1 133 0
 2757 0b65 4883C408 		addq	$8, %rsp
 2758              		.cfi_def_cfa_offset 8
 2759              	.LBB2299:
 2760              	.LBB2297:
GAS LISTING /tmp/ccKUqHDa.s 			page 306


 2761              		.loc 17 74 0
 2762 0b69 E9000000 		jmp	__cxa_atexit@PLT
 2762      00
 2763              	.LVL297:
 2764              	.LBE2297:
 2765              	.LBE2299:
 2766              		.cfi_endproc
 2767              	.LFE5938:
 2768              		.size	_GLOBAL__sub_I_customstamp_heatmaps.cpp, .-_GLOBAL__sub_I_customstamp_heatmaps.cpp
 2769              		.section	.text.unlikely
 2770              	.LCOLDE25:
 2771              		.section	.text.startup
 2772              	.LHOTE25:
 2773              		.section	.ctors,"aw",@progbits
 2774              		.align 8
 2775 0000 00000000 		.quad	_GLOBAL__sub_I_customstamp_heatmaps.cpp
 2775      00000000 
 2776              		.local	_ZStL8__ioinit
 2777              		.comm	_ZStL8__ioinit,1,1
 2778              		.weakref	_ZL28__gthrw___pthread_key_createPjPFvPvE,__pthread_key_create
 2779              		.section	.rodata.cst4,"aM",@progbits,4
 2780              		.align 4
 2781              	.LC5:
 2782 0000 00000000 		.long	0
 2783              		.align 4
 2784              	.LC6:
 2785 0004 0000802F 		.long	796917760
 2786              		.align 4
 2787              	.LC14:
 2788 0008 0000803F 		.long	1065353216
 2789              		.align 4
 2790              	.LC19:
 2791 000c ABAA2A3E 		.long	1042983595
 2792              		.align 4
 2793              	.LC20:
 2794 0010 0000003F 		.long	1056964608
 2795              		.align 4
 2796              	.LC21:
 2797 0014 0000803E 		.long	1048576000
 2798              		.align 4
 2799              	.LC22:
 2800 0018 000000C0 		.long	3221225472
 2801              		.text
 2802              	.Letext0:
 2803              		.section	.text.unlikely
 2804              	.Letext_cold0:
 2805              		.file 18 "/opt/gcc/4.9.2/include/c++/4.9.2/type_traits"
 2806              		.file 19 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/exception_ptr.h"
 2807              		.file 20 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/c++config.h"
 2808              		.file 21 "/opt/gcc/4.9.2/include/c++/4.9.2/new"
 2809              		.file 22 "/opt/gcc/4.9.2/include/c++/4.9.2/cwchar"
 2810              		.file 23 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/char_traits.h"
 2811              		.file 24 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdint"
 2812              		.file 25 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/allocator.h"
 2813              		.file 26 "/opt/gcc/4.9.2/include/c++/4.9.2/clocale"
 2814              		.file 27 "/opt/gcc/4.9.2/include/c++/4.9.2/cstdio"
 2815              		.file 28 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_string.tcc"
GAS LISTING /tmp/ccKUqHDa.s 			page 307


 2816              		.file 29 "/opt/gcc/4.9.2/include/c++/4.9.2/initializer_list"
 2817              		.file 30 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stringfwd.h"
 2818              		.file 31 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ios_base.h"
 2819              		.file 32 "/opt/gcc/4.9.2/include/c++/4.9.2/cwctype"
 2820              		.file 33 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ostream.tcc"
 2821              		.file 34 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/locale_facets.h"
 2822              		.file 35 "/opt/gcc/4.9.2/include/c++/4.9.2/ctime"
 2823              		.file 36 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator_base_types.h"
 2824              		.file 37 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/ptr_traits.h"
 2825              		.file 38 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/alloc_traits.h"
 2826              		.file 39 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/vector.tcc"
 2827              		.file 40 "/opt/gcc/4.9.2/include/c++/4.9.2/array"
 2828              		.file 41 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/basic_ios.h"
 2829              		.file 42 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/move.h"
 2830              		.file 43 "/opt/gcc/4.9.2/include/c++/4.9.2/iosfwd"
 2831              		.file 44 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/cpp_type_traits.h"
 2832              		.file 45 "/opt/gcc/4.9.2/include/c++/4.9.2/debug/debug.h"
 2833              		.file 46 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/predefined_ops.h"
 2834              		.file 47 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/numeric_traits.h"
 2835              		.file 48 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/stl_iterator.h"
 2836              		.file 49 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/alloc_traits.h"
 2837              		.file 50 "/opt/gcc/4.9.2/include/c++/4.9.2/ext/type_traits.h"
 2838              		.file 51 "/opt/gcc/4.9.2/lib/gcc/x86_64-unknown-linux-gnu/4.9.2/include/stddef.h"
 2839              		.file 52 "/usr/include/bits/types.h"
 2840              		.file 53 "/usr/include/time.h"
 2841              		.file 54 "/usr/include/sys/types.h"
 2842              		.file 55 "/opt/gcc/4.9.2/include/c++/4.9.2/bits/functexcept.h"
 2843              		.file 56 "/usr/include/bits/mathdef.h"
 2844              		.file 57 "/usr/include/stdio.h"
 2845              		.file 58 "/usr/include/libio.h"
 2846              		.file 59 "<built-in>"
 2847              		.file 60 "/usr/include/wchar.h"
 2848              		.file 61 "/usr/include/stdint.h"
 2849              		.file 62 "/usr/include/locale.h"
 2850              		.file 63 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/atomic_word.h"
 2851              		.file 64 "/usr/include/_G_config.h"
 2852              		.file 65 "/usr/include/bits/stdio.h"
 2853              		.file 66 "/usr/include/wctype.h"
 2854              		.file 67 "examples/lodepng.h"
 2855              		.file 68 "./heatmap.h"
 2856              		.file 69 "/opt/gcc/4.9.2/include/c++/4.9.2/x86_64-unknown-linux-gnu/bits/gthr-default.h"
 2857              		.file 70 "./colorschemes/gray.h"
 2858              		.file 71 "/usr/include/bits/mathcalls.h"
 2859              		.section	.debug_info,"",@progbits
 2860              	.Ldebug_info0:
 2861 0000 9BEF0000 		.long	0xef9b
 2862 0004 0400     		.value	0x4
 2863 0006 00000000 		.long	.Ldebug_abbrev0
 2864 000a 08       		.byte	0x8
 2865 000b 01       		.uleb128 0x1
 2866 000c 00000000 		.long	.LASF1535
 2867 0010 04       		.byte	0x4
 2868 0011 00000000 		.long	.LASF1536
 2869 0015 00000000 		.long	.LASF1537
 2870 0019 00000000 		.long	.Ldebug_ranges0+0xc10
 2871 001d 00000000 		.quad	0
 2871      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 308


 2872 0025 00000000 		.long	.Ldebug_line0
 2873 0029 02       		.uleb128 0x2
 2874 002a 04       		.byte	0x4
 2875 002b 04       		.byte	0x4
 2876 002c 00000000 		.long	.LASF0
 2877 0030 02       		.uleb128 0x2
 2878 0031 08       		.byte	0x8
 2879 0032 07       		.byte	0x7
 2880 0033 00000000 		.long	.LASF1
 2881 0037 03       		.uleb128 0x3
 2882 0038 73746400 		.string	"std"
 2883 003c 3B       		.byte	0x3b
 2884 003d 00       		.byte	0
 2885 003e 9E710000 		.long	0x719e
 2886 0042 04       		.uleb128 0x4
 2887 0043 00000000 		.long	.LASF2
 2888 0047 01       		.byte	0x1
 2889 0048 12       		.byte	0x12
 2890 0049 45       		.byte	0x45
 2891 004a 95000000 		.long	0x95
 2892 004e 05       		.uleb128 0x5
 2893 004f 00000000 		.long	.LASF4
 2894 0053 12       		.byte	0x12
 2895 0054 47       		.byte	0x47
 2896 0055 9E710000 		.long	0x719e
 2897 0059 06       		.uleb128 0x6
 2898 005a 00000000 		.long	.LASF5
 2899 005e 12       		.byte	0x12
 2900 005f 48       		.byte	0x48
 2901 0060 A3710000 		.long	0x71a3
 2902 0064 07       		.uleb128 0x7
 2903 0065 00000000 		.long	.LASF6
 2904 0069 12       		.byte	0x12
 2905 006a 4A       		.byte	0x4a
 2906 006b 00000000 		.long	.LASF8
 2907 006f 59000000 		.long	0x59
 2908 0073 7B000000 		.long	0x7b
 2909 0077 81000000 		.long	0x81
 2910 007b 08       		.uleb128 0x8
 2911 007c AA710000 		.long	0x71aa
 2912 0080 00       		.byte	0
 2913 0081 09       		.uleb128 0x9
 2914 0082 5F547000 		.string	"_Tp"
 2915 0086 A3710000 		.long	0x71a3
 2916 008a 0A       		.uleb128 0xa
 2917 008b 5F5F7600 		.string	"__v"
 2918 008f A3710000 		.long	0x71a3
 2919 0093 00       		.byte	0
 2920 0094 00       		.byte	0
 2921 0095 0B       		.uleb128 0xb
 2922 0096 42000000 		.long	0x42
 2923 009a 04       		.uleb128 0x4
 2924 009b 00000000 		.long	.LASF3
 2925 009f 01       		.byte	0x1
 2926 00a0 12       		.byte	0x12
 2927 00a1 45       		.byte	0x45
 2928 00a2 ED000000 		.long	0xed
GAS LISTING /tmp/ccKUqHDa.s 			page 309


 2929 00a6 05       		.uleb128 0x5
 2930 00a7 00000000 		.long	.LASF4
 2931 00ab 12       		.byte	0x12
 2932 00ac 47       		.byte	0x47
 2933 00ad 9E710000 		.long	0x719e
 2934 00b1 06       		.uleb128 0x6
 2935 00b2 00000000 		.long	.LASF5
 2936 00b6 12       		.byte	0x12
 2937 00b7 48       		.byte	0x48
 2938 00b8 A3710000 		.long	0x71a3
 2939 00bc 07       		.uleb128 0x7
 2940 00bd 00000000 		.long	.LASF7
 2941 00c1 12       		.byte	0x12
 2942 00c2 4A       		.byte	0x4a
 2943 00c3 00000000 		.long	.LASF9
 2944 00c7 B1000000 		.long	0xb1
 2945 00cb D3000000 		.long	0xd3
 2946 00cf D9000000 		.long	0xd9
 2947 00d3 08       		.uleb128 0x8
 2948 00d4 B0710000 		.long	0x71b0
 2949 00d8 00       		.byte	0
 2950 00d9 09       		.uleb128 0x9
 2951 00da 5F547000 		.string	"_Tp"
 2952 00de A3710000 		.long	0x71a3
 2953 00e2 0A       		.uleb128 0xa
 2954 00e3 5F5F7600 		.string	"__v"
 2955 00e7 A3710000 		.long	0x71a3
 2956 00eb 01       		.byte	0x1
 2957 00ec 00       		.byte	0
 2958 00ed 0B       		.uleb128 0xb
 2959 00ee 9A000000 		.long	0x9a
 2960 00f2 0C       		.uleb128 0xc
 2961 00f3 00000000 		.long	.LASF27
 2962 00f7 01       		.byte	0x1
 2963 00f8 0D       		.byte	0xd
 2964 00f9 4C       		.byte	0x4c
 2965 00fa 0D       		.uleb128 0xd
 2966 00fb 00000000 		.long	.LASF973
 2967 00ff 2D       		.byte	0x2d
 2968 0100 30       		.byte	0x30
 2969 0101 0E       		.uleb128 0xe
 2970 0102 0A       		.byte	0xa
 2971 0103 76       		.byte	0x76
 2972 0104 56840000 		.long	0x8456
 2973 0108 0E       		.uleb128 0xe
 2974 0109 0A       		.byte	0xa
 2975 010a 77       		.byte	0x77
 2976 010b 86840000 		.long	0x8486
 2977 010f 0E       		.uleb128 0xe
 2978 0110 0A       		.byte	0xa
 2979 0111 7B       		.byte	0x7b
 2980 0112 9D850000 		.long	0x859d
 2981 0116 0E       		.uleb128 0xe
 2982 0117 0A       		.byte	0xa
 2983 0118 7E       		.byte	0x7e
 2984 0119 BA850000 		.long	0x85ba
 2985 011d 0E       		.uleb128 0xe
GAS LISTING /tmp/ccKUqHDa.s 			page 310


 2986 011e 0A       		.byte	0xa
 2987 011f 81       		.byte	0x81
 2988 0120 D4850000 		.long	0x85d4
 2989 0124 0E       		.uleb128 0xe
 2990 0125 0A       		.byte	0xa
 2991 0126 82       		.byte	0x82
 2992 0127 EA850000 		.long	0x85ea
 2993 012b 0E       		.uleb128 0xe
 2994 012c 0A       		.byte	0xa
 2995 012d 83       		.byte	0x83
 2996 012e 08860000 		.long	0x8608
 2997 0132 0E       		.uleb128 0xe
 2998 0133 0A       		.byte	0xa
 2999 0134 84       		.byte	0x84
 3000 0135 1E860000 		.long	0x861e
 3001 0139 0E       		.uleb128 0xe
 3002 013a 0A       		.byte	0xa
 3003 013b 86       		.byte	0x86
 3004 013c 48860000 		.long	0x8648
 3005 0140 0E       		.uleb128 0xe
 3006 0141 0A       		.byte	0xa
 3007 0142 89       		.byte	0x89
 3008 0143 63860000 		.long	0x8663
 3009 0147 0E       		.uleb128 0xe
 3010 0148 0A       		.byte	0xa
 3011 0149 8B       		.byte	0x8b
 3012 014a 79860000 		.long	0x8679
 3013 014e 0E       		.uleb128 0xe
 3014 014f 0A       		.byte	0xa
 3015 0150 8E       		.byte	0x8e
 3016 0151 94860000 		.long	0x8694
 3017 0155 0E       		.uleb128 0xe
 3018 0156 0A       		.byte	0xa
 3019 0157 8F       		.byte	0x8f
 3020 0158 AF860000 		.long	0x86af
 3021 015c 0E       		.uleb128 0xe
 3022 015d 0A       		.byte	0xa
 3023 015e 90       		.byte	0x90
 3024 015f DC860000 		.long	0x86dc
 3025 0163 0E       		.uleb128 0xe
 3026 0164 0A       		.byte	0xa
 3027 0165 92       		.byte	0x92
 3028 0166 FC860000 		.long	0x86fc
 3029 016a 0E       		.uleb128 0xe
 3030 016b 0A       		.byte	0xa
 3031 016c 95       		.byte	0x95
 3032 016d 1D870000 		.long	0x871d
 3033 0171 0E       		.uleb128 0xe
 3034 0172 0A       		.byte	0xa
 3035 0173 98       		.byte	0x98
 3036 0174 2F870000 		.long	0x872f
 3037 0178 0E       		.uleb128 0xe
 3038 0179 0A       		.byte	0xa
 3039 017a 9A       		.byte	0x9a
 3040 017b 3B870000 		.long	0x873b
 3041 017f 0E       		.uleb128 0xe
 3042 0180 0A       		.byte	0xa
GAS LISTING /tmp/ccKUqHDa.s 			page 311


 3043 0181 9B       		.byte	0x9b
 3044 0182 4D870000 		.long	0x874d
 3045 0186 0E       		.uleb128 0xe
 3046 0187 0A       		.byte	0xa
 3047 0188 9C       		.byte	0x9c
 3048 0189 6D870000 		.long	0x876d
 3049 018d 0E       		.uleb128 0xe
 3050 018e 0A       		.byte	0xa
 3051 018f 9D       		.byte	0x9d
 3052 0190 8C870000 		.long	0x878c
 3053 0194 0E       		.uleb128 0xe
 3054 0195 0A       		.byte	0xa
 3055 0196 9E       		.byte	0x9e
 3056 0197 AB870000 		.long	0x87ab
 3057 019b 0E       		.uleb128 0xe
 3058 019c 0A       		.byte	0xa
 3059 019d A0       		.byte	0xa0
 3060 019e C1870000 		.long	0x87c1
 3061 01a2 0E       		.uleb128 0xe
 3062 01a3 0A       		.byte	0xa
 3063 01a4 A1       		.byte	0xa1
 3064 01a5 EC870000 		.long	0x87ec
 3065 01a9 0E       		.uleb128 0xe
 3066 01aa 0A       		.byte	0xa
 3067 01ab F1       		.byte	0xf1
 3068 01ac B6840000 		.long	0x84b6
 3069 01b0 0E       		.uleb128 0xe
 3070 01b1 0A       		.byte	0xa
 3071 01b2 F6       		.byte	0xf6
 3072 01b3 3D720000 		.long	0x723d
 3073 01b7 0E       		.uleb128 0xe
 3074 01b8 0A       		.byte	0xa
 3075 01b9 F7       		.byte	0xf7
 3076 01ba 07880000 		.long	0x8807
 3077 01be 0E       		.uleb128 0xe
 3078 01bf 0A       		.byte	0xa
 3079 01c0 F9       		.byte	0xf9
 3080 01c1 22880000 		.long	0x8822
 3081 01c5 0E       		.uleb128 0xe
 3082 01c6 0A       		.byte	0xa
 3083 01c7 FA       		.byte	0xfa
 3084 01c8 76880000 		.long	0x8876
 3085 01cc 0E       		.uleb128 0xe
 3086 01cd 0A       		.byte	0xa
 3087 01ce FB       		.byte	0xfb
 3088 01cf 38880000 		.long	0x8838
 3089 01d3 0E       		.uleb128 0xe
 3090 01d4 0A       		.byte	0xa
 3091 01d5 FC       		.byte	0xfc
 3092 01d6 57880000 		.long	0x8857
 3093 01da 0E       		.uleb128 0xe
 3094 01db 0A       		.byte	0xa
 3095 01dc FD       		.byte	0xfd
 3096 01dd 90880000 		.long	0x8890
 3097 01e1 0F       		.uleb128 0xf
 3098 01e2 00000000 		.long	.LASF10
 3099 01e6 13       		.byte	0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 312


 3100 01e7 36       		.byte	0x36
 3101 01e8 93030000 		.long	0x393
 3102 01ec 10       		.uleb128 0x10
 3103 01ed 00000000 		.long	.LASF11
 3104 01f1 08       		.byte	0x8
 3105 01f2 13       		.byte	0x13
 3106 01f3 4B       		.byte	0x4b
 3107 01f4 8D030000 		.long	0x38d
 3108 01f8 11       		.uleb128 0x11
 3109 01f9 00000000 		.long	.LASF68
 3110 01fd 13       		.byte	0x13
 3111 01fe 4D       		.byte	0x4d
 3112 01ff 16850000 		.long	0x8516
 3113 0203 00       		.byte	0
 3114 0204 12       		.uleb128 0x12
 3115 0205 00000000 		.long	.LASF11
 3116 0209 13       		.byte	0x13
 3117 020a 4F       		.byte	0x4f
 3118 020b 13020000 		.long	0x213
 3119 020f 1E020000 		.long	0x21e
 3120 0213 08       		.uleb128 0x8
 3121 0214 AA880000 		.long	0x88aa
 3122 0218 13       		.uleb128 0x13
 3123 0219 16850000 		.long	0x8516
 3124 021d 00       		.byte	0
 3125 021e 14       		.uleb128 0x14
 3126 021f 00000000 		.long	.LASF12
 3127 0223 13       		.byte	0x13
 3128 0224 51       		.byte	0x51
 3129 0225 00000000 		.long	.LASF14
 3130 0229 31020000 		.long	0x231
 3131 022d 37020000 		.long	0x237
 3132 0231 08       		.uleb128 0x8
 3133 0232 AA880000 		.long	0x88aa
 3134 0236 00       		.byte	0
 3135 0237 14       		.uleb128 0x14
 3136 0238 00000000 		.long	.LASF13
 3137 023c 13       		.byte	0x13
 3138 023d 52       		.byte	0x52
 3139 023e 00000000 		.long	.LASF15
 3140 0242 4A020000 		.long	0x24a
 3141 0246 50020000 		.long	0x250
 3142 024a 08       		.uleb128 0x8
 3143 024b AA880000 		.long	0x88aa
 3144 024f 00       		.byte	0
 3145 0250 07       		.uleb128 0x7
 3146 0251 00000000 		.long	.LASF16
 3147 0255 13       		.byte	0x13
 3148 0256 54       		.byte	0x54
 3149 0257 00000000 		.long	.LASF17
 3150 025b 16850000 		.long	0x8516
 3151 025f 67020000 		.long	0x267
 3152 0263 6D020000 		.long	0x26d
 3153 0267 08       		.uleb128 0x8
 3154 0268 B0880000 		.long	0x88b0
 3155 026c 00       		.byte	0
 3156 026d 15       		.uleb128 0x15
GAS LISTING /tmp/ccKUqHDa.s 			page 313


 3157 026e 00000000 		.long	.LASF11
 3158 0272 13       		.byte	0x13
 3159 0273 5A       		.byte	0x5a
 3160 0274 01       		.byte	0x1
 3161 0275 7D020000 		.long	0x27d
 3162 0279 83020000 		.long	0x283
 3163 027d 08       		.uleb128 0x8
 3164 027e AA880000 		.long	0x88aa
 3165 0282 00       		.byte	0
 3166 0283 15       		.uleb128 0x15
 3167 0284 00000000 		.long	.LASF11
 3168 0288 13       		.byte	0x13
 3169 0289 5C       		.byte	0x5c
 3170 028a 01       		.byte	0x1
 3171 028b 93020000 		.long	0x293
 3172 028f 9E020000 		.long	0x29e
 3173 0293 08       		.uleb128 0x8
 3174 0294 AA880000 		.long	0x88aa
 3175 0298 13       		.uleb128 0x13
 3176 0299 B6880000 		.long	0x88b6
 3177 029d 00       		.byte	0
 3178 029e 15       		.uleb128 0x15
 3179 029f 00000000 		.long	.LASF11
 3180 02a3 13       		.byte	0x13
 3181 02a4 5F       		.byte	0x5f
 3182 02a5 01       		.byte	0x1
 3183 02a6 AE020000 		.long	0x2ae
 3184 02aa B9020000 		.long	0x2b9
 3185 02ae 08       		.uleb128 0x8
 3186 02af AA880000 		.long	0x88aa
 3187 02b3 13       		.uleb128 0x13
 3188 02b4 9A030000 		.long	0x39a
 3189 02b8 00       		.byte	0
 3190 02b9 15       		.uleb128 0x15
 3191 02ba 00000000 		.long	.LASF11
 3192 02be 13       		.byte	0x13
 3193 02bf 63       		.byte	0x63
 3194 02c0 01       		.byte	0x1
 3195 02c1 C9020000 		.long	0x2c9
 3196 02c5 D4020000 		.long	0x2d4
 3197 02c9 08       		.uleb128 0x8
 3198 02ca AA880000 		.long	0x88aa
 3199 02ce 13       		.uleb128 0x13
 3200 02cf C1880000 		.long	0x88c1
 3201 02d3 00       		.byte	0
 3202 02d4 16       		.uleb128 0x16
 3203 02d5 00000000 		.long	.LASF18
 3204 02d9 13       		.byte	0x13
 3205 02da 70       		.byte	0x70
 3206 02db 00000000 		.long	.LASF19
 3207 02df C7880000 		.long	0x88c7
 3208 02e3 01       		.byte	0x1
 3209 02e4 EC020000 		.long	0x2ec
 3210 02e8 F7020000 		.long	0x2f7
 3211 02ec 08       		.uleb128 0x8
 3212 02ed AA880000 		.long	0x88aa
 3213 02f1 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 314


 3214 02f2 B6880000 		.long	0x88b6
 3215 02f6 00       		.byte	0
 3216 02f7 16       		.uleb128 0x16
 3217 02f8 00000000 		.long	.LASF18
 3218 02fc 13       		.byte	0x13
 3219 02fd 74       		.byte	0x74
 3220 02fe 00000000 		.long	.LASF20
 3221 0302 C7880000 		.long	0x88c7
 3222 0306 01       		.byte	0x1
 3223 0307 0F030000 		.long	0x30f
 3224 030b 1A030000 		.long	0x31a
 3225 030f 08       		.uleb128 0x8
 3226 0310 AA880000 		.long	0x88aa
 3227 0314 13       		.uleb128 0x13
 3228 0315 C1880000 		.long	0x88c1
 3229 0319 00       		.byte	0
 3230 031a 15       		.uleb128 0x15
 3231 031b 00000000 		.long	.LASF21
 3232 031f 13       		.byte	0x13
 3233 0320 7B       		.byte	0x7b
 3234 0321 01       		.byte	0x1
 3235 0322 2A030000 		.long	0x32a
 3236 0326 35030000 		.long	0x335
 3237 032a 08       		.uleb128 0x8
 3238 032b AA880000 		.long	0x88aa
 3239 032f 08       		.uleb128 0x8
 3240 0330 E5710000 		.long	0x71e5
 3241 0334 00       		.byte	0
 3242 0335 17       		.uleb128 0x17
 3243 0336 00000000 		.long	.LASF22
 3244 033a 13       		.byte	0x13
 3245 033b 7E       		.byte	0x7e
 3246 033c 00000000 		.long	.LASF23
 3247 0340 01       		.byte	0x1
 3248 0341 49030000 		.long	0x349
 3249 0345 54030000 		.long	0x354
 3250 0349 08       		.uleb128 0x8
 3251 034a AA880000 		.long	0x88aa
 3252 034e 13       		.uleb128 0x13
 3253 034f C7880000 		.long	0x88c7
 3254 0353 00       		.byte	0
 3255 0354 18       		.uleb128 0x18
 3256 0355 00000000 		.long	.LASF1538
 3257 0359 13       		.byte	0x13
 3258 035a 8A       		.byte	0x8a
 3259 035b 00000000 		.long	.LASF1539
 3260 035f A3710000 		.long	0x71a3
 3261 0363 01       		.byte	0x1
 3262 0364 6C030000 		.long	0x36c
 3263 0368 72030000 		.long	0x372
 3264 036c 08       		.uleb128 0x8
 3265 036d B0880000 		.long	0x88b0
 3266 0371 00       		.byte	0
 3267 0372 19       		.uleb128 0x19
 3268 0373 00000000 		.long	.LASF24
 3269 0377 13       		.byte	0x13
 3270 0378 93       		.byte	0x93
GAS LISTING /tmp/ccKUqHDa.s 			page 315


 3271 0379 00000000 		.long	.LASF25
 3272 037d CD880000 		.long	0x88cd
 3273 0381 01       		.byte	0x1
 3274 0382 86030000 		.long	0x386
 3275 0386 08       		.uleb128 0x8
 3276 0387 B0880000 		.long	0x88b0
 3277 038b 00       		.byte	0
 3278 038c 00       		.byte	0
 3279 038d 0B       		.uleb128 0xb
 3280 038e EC010000 		.long	0x1ec
 3281 0392 00       		.byte	0
 3282 0393 0E       		.uleb128 0xe
 3283 0394 13       		.byte	0x13
 3284 0395 3A       		.byte	0x3a
 3285 0396 EC010000 		.long	0x1ec
 3286 039a 06       		.uleb128 0x6
 3287 039b 00000000 		.long	.LASF26
 3288 039f 14       		.byte	0x14
 3289 03a0 C0       		.byte	0xc0
 3290 03a1 BC880000 		.long	0x88bc
 3291 03a5 1A       		.uleb128 0x1a
 3292 03a6 00000000 		.long	.LASF310
 3293 03aa 0B       		.uleb128 0xb
 3294 03ab A5030000 		.long	0x3a5
 3295 03af 0C       		.uleb128 0xc
 3296 03b0 00000000 		.long	.LASF28
 3297 03b4 01       		.byte	0x1
 3298 03b5 15       		.byte	0x15
 3299 03b6 63       		.byte	0x63
 3300 03b7 04       		.uleb128 0x4
 3301 03b8 00000000 		.long	.LASF29
 3302 03bc 01       		.byte	0x1
 3303 03bd 0C       		.byte	0xc
 3304 03be 6C       		.byte	0x6c
 3305 03bf 1D040000 		.long	0x41d
 3306 03c3 1B       		.uleb128 0x1b
 3307 03c4 00000000 		.long	.LASF31
 3308 03c8 0C       		.byte	0xc
 3309 03c9 70       		.byte	0x70
 3310 03ca E2030000 		.long	0x3e2
 3311 03ce 1C       		.uleb128 0x1c
 3312 03cf 00000000 		.long	.LASF30
 3313 03d3 829C0000 		.long	0x9c82
 3314 03d7 13       		.uleb128 0x13
 3315 03d8 829C0000 		.long	0x9c82
 3316 03dc 13       		.uleb128 0x13
 3317 03dd 829C0000 		.long	0x9c82
 3318 03e1 00       		.byte	0
 3319 03e2 1B       		.uleb128 0x1b
 3320 03e3 00000000 		.long	.LASF32
 3321 03e7 0C       		.byte	0xc
 3322 03e8 70       		.byte	0x70
 3323 03e9 01040000 		.long	0x401
 3324 03ed 1C       		.uleb128 0x1c
 3325 03ee 00000000 		.long	.LASF30
 3326 03f2 5E9B0000 		.long	0x9b5e
 3327 03f6 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 316


 3328 03f7 5E9B0000 		.long	0x9b5e
 3329 03fb 13       		.uleb128 0x13
 3330 03fc 5E9B0000 		.long	0x9b5e
 3331 0400 00       		.byte	0
 3332 0401 1D       		.uleb128 0x1d
 3333 0402 00000000 		.long	.LASF70
 3334 0406 0C       		.byte	0xc
 3335 0407 70       		.byte	0x70
 3336 0408 1C       		.uleb128 0x1c
 3337 0409 00000000 		.long	.LASF30
 3338 040d EB9E0000 		.long	0x9eeb
 3339 0411 13       		.uleb128 0x13
 3340 0412 EB9E0000 		.long	0x9eeb
 3341 0416 13       		.uleb128 0x13
 3342 0417 EB9E0000 		.long	0x9eeb
 3343 041b 00       		.byte	0
 3344 041c 00       		.byte	0
 3345 041d 1E       		.uleb128 0x1e
 3346 041e 0F       		.byte	0xf
 3347 041f 0E04     		.value	0x40e
 3348 0421 E3880000 		.long	0x88e3
 3349 0425 1E       		.uleb128 0x1e
 3350 0426 0F       		.byte	0xf
 3351 0427 0F04     		.value	0x40f
 3352 0429 D8880000 		.long	0x88d8
 3353 042d 0E       		.uleb128 0xe
 3354 042e 16       		.byte	0x16
 3355 042f 40       		.byte	0x40
 3356 0430 238B0000 		.long	0x8b23
 3357 0434 0E       		.uleb128 0xe
 3358 0435 16       		.byte	0x16
 3359 0436 8B       		.byte	0x8b
 3360 0437 C88A0000 		.long	0x8ac8
 3361 043b 0E       		.uleb128 0xe
 3362 043c 16       		.byte	0x16
 3363 043d 8D       		.byte	0x8d
 3364 043e 2E8B0000 		.long	0x8b2e
 3365 0442 0E       		.uleb128 0xe
 3366 0443 16       		.byte	0x16
 3367 0444 8E       		.byte	0x8e
 3368 0445 448B0000 		.long	0x8b44
 3369 0449 0E       		.uleb128 0xe
 3370 044a 16       		.byte	0x16
 3371 044b 8F       		.byte	0x8f
 3372 044c 608B0000 		.long	0x8b60
 3373 0450 0E       		.uleb128 0xe
 3374 0451 16       		.byte	0x16
 3375 0452 90       		.byte	0x90
 3376 0453 808B0000 		.long	0x8b80
 3377 0457 0E       		.uleb128 0xe
 3378 0458 16       		.byte	0x16
 3379 0459 91       		.byte	0x91
 3380 045a 9B8B0000 		.long	0x8b9b
 3381 045e 0E       		.uleb128 0xe
 3382 045f 16       		.byte	0x16
 3383 0460 92       		.byte	0x92
 3384 0461 B68B0000 		.long	0x8bb6
GAS LISTING /tmp/ccKUqHDa.s 			page 317


 3385 0465 0E       		.uleb128 0xe
 3386 0466 16       		.byte	0x16
 3387 0467 93       		.byte	0x93
 3388 0468 D18B0000 		.long	0x8bd1
 3389 046c 0E       		.uleb128 0xe
 3390 046d 16       		.byte	0x16
 3391 046e 94       		.byte	0x94
 3392 046f ED8B0000 		.long	0x8bed
 3393 0473 0E       		.uleb128 0xe
 3394 0474 16       		.byte	0x16
 3395 0475 95       		.byte	0x95
 3396 0476 098C0000 		.long	0x8c09
 3397 047a 0E       		.uleb128 0xe
 3398 047b 16       		.byte	0x16
 3399 047c 96       		.byte	0x96
 3400 047d 1F8C0000 		.long	0x8c1f
 3401 0481 0E       		.uleb128 0xe
 3402 0482 16       		.byte	0x16
 3403 0483 97       		.byte	0x97
 3404 0484 2B8C0000 		.long	0x8c2b
 3405 0488 0E       		.uleb128 0xe
 3406 0489 16       		.byte	0x16
 3407 048a 98       		.byte	0x98
 3408 048b 518C0000 		.long	0x8c51
 3409 048f 0E       		.uleb128 0xe
 3410 0490 16       		.byte	0x16
 3411 0491 99       		.byte	0x99
 3412 0492 768C0000 		.long	0x8c76
 3413 0496 0E       		.uleb128 0xe
 3414 0497 16       		.byte	0x16
 3415 0498 9A       		.byte	0x9a
 3416 0499 978C0000 		.long	0x8c97
 3417 049d 0E       		.uleb128 0xe
 3418 049e 16       		.byte	0x16
 3419 049f 9B       		.byte	0x9b
 3420 04a0 C28C0000 		.long	0x8cc2
 3421 04a4 0E       		.uleb128 0xe
 3422 04a5 16       		.byte	0x16
 3423 04a6 9C       		.byte	0x9c
 3424 04a7 DD8C0000 		.long	0x8cdd
 3425 04ab 0E       		.uleb128 0xe
 3426 04ac 16       		.byte	0x16
 3427 04ad 9E       		.byte	0x9e
 3428 04ae F38C0000 		.long	0x8cf3
 3429 04b2 0E       		.uleb128 0xe
 3430 04b3 16       		.byte	0x16
 3431 04b4 A0       		.byte	0xa0
 3432 04b5 148D0000 		.long	0x8d14
 3433 04b9 0E       		.uleb128 0xe
 3434 04ba 16       		.byte	0x16
 3435 04bb A1       		.byte	0xa1
 3436 04bc 308D0000 		.long	0x8d30
 3437 04c0 0E       		.uleb128 0xe
 3438 04c1 16       		.byte	0x16
 3439 04c2 A2       		.byte	0xa2
 3440 04c3 4B8D0000 		.long	0x8d4b
 3441 04c7 0E       		.uleb128 0xe
GAS LISTING /tmp/ccKUqHDa.s 			page 318


 3442 04c8 16       		.byte	0x16
 3443 04c9 A4       		.byte	0xa4
 3444 04ca 718D0000 		.long	0x8d71
 3445 04ce 0E       		.uleb128 0xe
 3446 04cf 16       		.byte	0x16
 3447 04d0 A7       		.byte	0xa7
 3448 04d1 918D0000 		.long	0x8d91
 3449 04d5 0E       		.uleb128 0xe
 3450 04d6 16       		.byte	0x16
 3451 04d7 AA       		.byte	0xaa
 3452 04d8 B68D0000 		.long	0x8db6
 3453 04dc 0E       		.uleb128 0xe
 3454 04dd 16       		.byte	0x16
 3455 04de AC       		.byte	0xac
 3456 04df D68D0000 		.long	0x8dd6
 3457 04e3 0E       		.uleb128 0xe
 3458 04e4 16       		.byte	0x16
 3459 04e5 AE       		.byte	0xae
 3460 04e6 F18D0000 		.long	0x8df1
 3461 04ea 0E       		.uleb128 0xe
 3462 04eb 16       		.byte	0x16
 3463 04ec B0       		.byte	0xb0
 3464 04ed 0C8E0000 		.long	0x8e0c
 3465 04f1 0E       		.uleb128 0xe
 3466 04f2 16       		.byte	0x16
 3467 04f3 B1       		.byte	0xb1
 3468 04f4 2C8E0000 		.long	0x8e2c
 3469 04f8 0E       		.uleb128 0xe
 3470 04f9 16       		.byte	0x16
 3471 04fa B2       		.byte	0xb2
 3472 04fb 468E0000 		.long	0x8e46
 3473 04ff 0E       		.uleb128 0xe
 3474 0500 16       		.byte	0x16
 3475 0501 B3       		.byte	0xb3
 3476 0502 608E0000 		.long	0x8e60
 3477 0506 0E       		.uleb128 0xe
 3478 0507 16       		.byte	0x16
 3479 0508 B4       		.byte	0xb4
 3480 0509 7A8E0000 		.long	0x8e7a
 3481 050d 0E       		.uleb128 0xe
 3482 050e 16       		.byte	0x16
 3483 050f B5       		.byte	0xb5
 3484 0510 948E0000 		.long	0x8e94
 3485 0514 0E       		.uleb128 0xe
 3486 0515 16       		.byte	0x16
 3487 0516 B6       		.byte	0xb6
 3488 0517 AE8E0000 		.long	0x8eae
 3489 051b 0E       		.uleb128 0xe
 3490 051c 16       		.byte	0x16
 3491 051d B7       		.byte	0xb7
 3492 051e 6E8F0000 		.long	0x8f6e
 3493 0522 0E       		.uleb128 0xe
 3494 0523 16       		.byte	0x16
 3495 0524 B8       		.byte	0xb8
 3496 0525 848F0000 		.long	0x8f84
 3497 0529 0E       		.uleb128 0xe
 3498 052a 16       		.byte	0x16
GAS LISTING /tmp/ccKUqHDa.s 			page 319


 3499 052b B9       		.byte	0xb9
 3500 052c A38F0000 		.long	0x8fa3
 3501 0530 0E       		.uleb128 0xe
 3502 0531 16       		.byte	0x16
 3503 0532 BA       		.byte	0xba
 3504 0533 C28F0000 		.long	0x8fc2
 3505 0537 0E       		.uleb128 0xe
 3506 0538 16       		.byte	0x16
 3507 0539 BB       		.byte	0xbb
 3508 053a E18F0000 		.long	0x8fe1
 3509 053e 0E       		.uleb128 0xe
 3510 053f 16       		.byte	0x16
 3511 0540 BC       		.byte	0xbc
 3512 0541 0C900000 		.long	0x900c
 3513 0545 0E       		.uleb128 0xe
 3514 0546 16       		.byte	0x16
 3515 0547 BD       		.byte	0xbd
 3516 0548 26900000 		.long	0x9026
 3517 054c 0E       		.uleb128 0xe
 3518 054d 16       		.byte	0x16
 3519 054e BF       		.byte	0xbf
 3520 054f 47900000 		.long	0x9047
 3521 0553 0E       		.uleb128 0xe
 3522 0554 16       		.byte	0x16
 3523 0555 C1       		.byte	0xc1
 3524 0556 62900000 		.long	0x9062
 3525 055a 0E       		.uleb128 0xe
 3526 055b 16       		.byte	0x16
 3527 055c C2       		.byte	0xc2
 3528 055d 82900000 		.long	0x9082
 3529 0561 0E       		.uleb128 0xe
 3530 0562 16       		.byte	0x16
 3531 0563 C3       		.byte	0xc3
 3532 0564 A2900000 		.long	0x90a2
 3533 0568 0E       		.uleb128 0xe
 3534 0569 16       		.byte	0x16
 3535 056a C4       		.byte	0xc4
 3536 056b C2900000 		.long	0x90c2
 3537 056f 0E       		.uleb128 0xe
 3538 0570 16       		.byte	0x16
 3539 0571 C5       		.byte	0xc5
 3540 0572 E1900000 		.long	0x90e1
 3541 0576 0E       		.uleb128 0xe
 3542 0577 16       		.byte	0x16
 3543 0578 C6       		.byte	0xc6
 3544 0579 F7900000 		.long	0x90f7
 3545 057d 0E       		.uleb128 0xe
 3546 057e 16       		.byte	0x16
 3547 057f C7       		.byte	0xc7
 3548 0580 17910000 		.long	0x9117
 3549 0584 0E       		.uleb128 0xe
 3550 0585 16       		.byte	0x16
 3551 0586 C8       		.byte	0xc8
 3552 0587 37910000 		.long	0x9137
 3553 058b 0E       		.uleb128 0xe
 3554 058c 16       		.byte	0x16
 3555 058d C9       		.byte	0xc9
GAS LISTING /tmp/ccKUqHDa.s 			page 320


 3556 058e 57910000 		.long	0x9157
 3557 0592 0E       		.uleb128 0xe
 3558 0593 16       		.byte	0x16
 3559 0594 CA       		.byte	0xca
 3560 0595 77910000 		.long	0x9177
 3561 0599 0E       		.uleb128 0xe
 3562 059a 16       		.byte	0x16
 3563 059b CB       		.byte	0xcb
 3564 059c 8E910000 		.long	0x918e
 3565 05a0 0E       		.uleb128 0xe
 3566 05a1 16       		.byte	0x16
 3567 05a2 CC       		.byte	0xcc
 3568 05a3 A5910000 		.long	0x91a5
 3569 05a7 0E       		.uleb128 0xe
 3570 05a8 16       		.byte	0x16
 3571 05a9 CD       		.byte	0xcd
 3572 05aa C3910000 		.long	0x91c3
 3573 05ae 0E       		.uleb128 0xe
 3574 05af 16       		.byte	0x16
 3575 05b0 CE       		.byte	0xce
 3576 05b1 E2910000 		.long	0x91e2
 3577 05b5 0E       		.uleb128 0xe
 3578 05b6 16       		.byte	0x16
 3579 05b7 CF       		.byte	0xcf
 3580 05b8 00920000 		.long	0x9200
 3581 05bc 0E       		.uleb128 0xe
 3582 05bd 16       		.byte	0x16
 3583 05be D0       		.byte	0xd0
 3584 05bf 1F920000 		.long	0x921f
 3585 05c3 1E       		.uleb128 0x1e
 3586 05c4 16       		.byte	0x16
 3587 05c5 0801     		.value	0x108
 3588 05c7 43920000 		.long	0x9243
 3589 05cb 1E       		.uleb128 0x1e
 3590 05cc 16       		.byte	0x16
 3591 05cd 0901     		.value	0x109
 3592 05cf 5E920000 		.long	0x925e
 3593 05d3 1E       		.uleb128 0x1e
 3594 05d4 16       		.byte	0x16
 3595 05d5 0A01     		.value	0x10a
 3596 05d7 7E920000 		.long	0x927e
 3597 05db 1E       		.uleb128 0x1e
 3598 05dc 16       		.byte	0x16
 3599 05dd 1801     		.value	0x118
 3600 05df 47900000 		.long	0x9047
 3601 05e3 1E       		.uleb128 0x1e
 3602 05e4 16       		.byte	0x16
 3603 05e5 1B01     		.value	0x11b
 3604 05e7 718D0000 		.long	0x8d71
 3605 05eb 1E       		.uleb128 0x1e
 3606 05ec 16       		.byte	0x16
 3607 05ed 1E01     		.value	0x11e
 3608 05ef B68D0000 		.long	0x8db6
 3609 05f3 1E       		.uleb128 0x1e
 3610 05f4 16       		.byte	0x16
 3611 05f5 2101     		.value	0x121
 3612 05f7 F18D0000 		.long	0x8df1
GAS LISTING /tmp/ccKUqHDa.s 			page 321


 3613 05fb 1E       		.uleb128 0x1e
 3614 05fc 16       		.byte	0x16
 3615 05fd 2501     		.value	0x125
 3616 05ff 43920000 		.long	0x9243
 3617 0603 1E       		.uleb128 0x1e
 3618 0604 16       		.byte	0x16
 3619 0605 2601     		.value	0x126
 3620 0607 5E920000 		.long	0x925e
 3621 060b 1E       		.uleb128 0x1e
 3622 060c 16       		.byte	0x16
 3623 060d 2701     		.value	0x127
 3624 060f 7E920000 		.long	0x927e
 3625 0613 04       		.uleb128 0x4
 3626 0614 00000000 		.long	.LASF33
 3627 0618 01       		.byte	0x1
 3628 0619 17       		.byte	0x17
 3629 061a E9       		.byte	0xe9
 3630 061b DB070000 		.long	0x7db
 3631 061f 06       		.uleb128 0x6
 3632 0620 00000000 		.long	.LASF34
 3633 0624 17       		.byte	0x17
 3634 0625 EB       		.byte	0xeb
 3635 0626 D8840000 		.long	0x84d8
 3636 062a 06       		.uleb128 0x6
 3637 062b 00000000 		.long	.LASF35
 3638 062f 17       		.byte	0x17
 3639 0630 EC       		.byte	0xec
 3640 0631 E5710000 		.long	0x71e5
 3641 0635 1F       		.uleb128 0x1f
 3642 0636 00000000 		.long	.LASF48
 3643 063a 17       		.byte	0x17
 3644 063b F2       		.byte	0xf2
 3645 063c 00000000 		.long	.LASF1048
 3646 0640 4F060000 		.long	0x64f
 3647 0644 13       		.uleb128 0x13
 3648 0645 9E920000 		.long	0x929e
 3649 0649 13       		.uleb128 0x13
 3650 064a A4920000 		.long	0x92a4
 3651 064e 00       		.byte	0
 3652 064f 0B       		.uleb128 0xb
 3653 0650 1F060000 		.long	0x61f
 3654 0654 20       		.uleb128 0x20
 3655 0655 657100   		.string	"eq"
 3656 0658 17       		.byte	0x17
 3657 0659 F6       		.byte	0xf6
 3658 065a 00000000 		.long	.LASF36
 3659 065e A3710000 		.long	0x71a3
 3660 0662 71060000 		.long	0x671
 3661 0666 13       		.uleb128 0x13
 3662 0667 A4920000 		.long	0x92a4
 3663 066b 13       		.uleb128 0x13
 3664 066c A4920000 		.long	0x92a4
 3665 0670 00       		.byte	0
 3666 0671 20       		.uleb128 0x20
 3667 0672 6C7400   		.string	"lt"
 3668 0675 17       		.byte	0x17
 3669 0676 FA       		.byte	0xfa
GAS LISTING /tmp/ccKUqHDa.s 			page 322


 3670 0677 00000000 		.long	.LASF37
 3671 067b A3710000 		.long	0x71a3
 3672 067f 8E060000 		.long	0x68e
 3673 0683 13       		.uleb128 0x13
 3674 0684 A4920000 		.long	0x92a4
 3675 0688 13       		.uleb128 0x13
 3676 0689 A4920000 		.long	0x92a4
 3677 068d 00       		.byte	0
 3678 068e 21       		.uleb128 0x21
 3679 068f 00000000 		.long	.LASF38
 3680 0693 17       		.byte	0x17
 3681 0694 0201     		.value	0x102
 3682 0696 00000000 		.long	.LASF40
 3683 069a E5710000 		.long	0x71e5
 3684 069e B2060000 		.long	0x6b2
 3685 06a2 13       		.uleb128 0x13
 3686 06a3 AA920000 		.long	0x92aa
 3687 06a7 13       		.uleb128 0x13
 3688 06a8 AA920000 		.long	0x92aa
 3689 06ac 13       		.uleb128 0x13
 3690 06ad DB070000 		.long	0x7db
 3691 06b1 00       		.byte	0
 3692 06b2 21       		.uleb128 0x21
 3693 06b3 00000000 		.long	.LASF39
 3694 06b7 17       		.byte	0x17
 3695 06b8 0601     		.value	0x106
 3696 06ba 00000000 		.long	.LASF41
 3697 06be DB070000 		.long	0x7db
 3698 06c2 CC060000 		.long	0x6cc
 3699 06c6 13       		.uleb128 0x13
 3700 06c7 AA920000 		.long	0x92aa
 3701 06cb 00       		.byte	0
 3702 06cc 21       		.uleb128 0x21
 3703 06cd 00000000 		.long	.LASF42
 3704 06d1 17       		.byte	0x17
 3705 06d2 0A01     		.value	0x10a
 3706 06d4 00000000 		.long	.LASF43
 3707 06d8 AA920000 		.long	0x92aa
 3708 06dc F0060000 		.long	0x6f0
 3709 06e0 13       		.uleb128 0x13
 3710 06e1 AA920000 		.long	0x92aa
 3711 06e5 13       		.uleb128 0x13
 3712 06e6 DB070000 		.long	0x7db
 3713 06ea 13       		.uleb128 0x13
 3714 06eb A4920000 		.long	0x92a4
 3715 06ef 00       		.byte	0
 3716 06f0 21       		.uleb128 0x21
 3717 06f1 00000000 		.long	.LASF44
 3718 06f5 17       		.byte	0x17
 3719 06f6 0E01     		.value	0x10e
 3720 06f8 00000000 		.long	.LASF45
 3721 06fc B0920000 		.long	0x92b0
 3722 0700 14070000 		.long	0x714
 3723 0704 13       		.uleb128 0x13
 3724 0705 B0920000 		.long	0x92b0
 3725 0709 13       		.uleb128 0x13
 3726 070a AA920000 		.long	0x92aa
GAS LISTING /tmp/ccKUqHDa.s 			page 323


 3727 070e 13       		.uleb128 0x13
 3728 070f DB070000 		.long	0x7db
 3729 0713 00       		.byte	0
 3730 0714 21       		.uleb128 0x21
 3731 0715 00000000 		.long	.LASF46
 3732 0719 17       		.byte	0x17
 3733 071a 1201     		.value	0x112
 3734 071c 00000000 		.long	.LASF47
 3735 0720 B0920000 		.long	0x92b0
 3736 0724 38070000 		.long	0x738
 3737 0728 13       		.uleb128 0x13
 3738 0729 B0920000 		.long	0x92b0
 3739 072d 13       		.uleb128 0x13
 3740 072e AA920000 		.long	0x92aa
 3741 0732 13       		.uleb128 0x13
 3742 0733 DB070000 		.long	0x7db
 3743 0737 00       		.byte	0
 3744 0738 21       		.uleb128 0x21
 3745 0739 00000000 		.long	.LASF48
 3746 073d 17       		.byte	0x17
 3747 073e 1601     		.value	0x116
 3748 0740 00000000 		.long	.LASF49
 3749 0744 B0920000 		.long	0x92b0
 3750 0748 5C070000 		.long	0x75c
 3751 074c 13       		.uleb128 0x13
 3752 074d B0920000 		.long	0x92b0
 3753 0751 13       		.uleb128 0x13
 3754 0752 DB070000 		.long	0x7db
 3755 0756 13       		.uleb128 0x13
 3756 0757 1F060000 		.long	0x61f
 3757 075b 00       		.byte	0
 3758 075c 21       		.uleb128 0x21
 3759 075d 00000000 		.long	.LASF50
 3760 0761 17       		.byte	0x17
 3761 0762 1A01     		.value	0x11a
 3762 0764 00000000 		.long	.LASF51
 3763 0768 1F060000 		.long	0x61f
 3764 076c 76070000 		.long	0x776
 3765 0770 13       		.uleb128 0x13
 3766 0771 B6920000 		.long	0x92b6
 3767 0775 00       		.byte	0
 3768 0776 0B       		.uleb128 0xb
 3769 0777 2A060000 		.long	0x62a
 3770 077b 21       		.uleb128 0x21
 3771 077c 00000000 		.long	.LASF52
 3772 0780 17       		.byte	0x17
 3773 0781 2001     		.value	0x120
 3774 0783 00000000 		.long	.LASF53
 3775 0787 2A060000 		.long	0x62a
 3776 078b 95070000 		.long	0x795
 3777 078f 13       		.uleb128 0x13
 3778 0790 A4920000 		.long	0x92a4
 3779 0794 00       		.byte	0
 3780 0795 21       		.uleb128 0x21
 3781 0796 00000000 		.long	.LASF54
 3782 079a 17       		.byte	0x17
 3783 079b 2401     		.value	0x124
GAS LISTING /tmp/ccKUqHDa.s 			page 324


 3784 079d 00000000 		.long	.LASF55
 3785 07a1 A3710000 		.long	0x71a3
 3786 07a5 B4070000 		.long	0x7b4
 3787 07a9 13       		.uleb128 0x13
 3788 07aa B6920000 		.long	0x92b6
 3789 07ae 13       		.uleb128 0x13
 3790 07af B6920000 		.long	0x92b6
 3791 07b3 00       		.byte	0
 3792 07b4 22       		.uleb128 0x22
 3793 07b5 656F6600 		.string	"eof"
 3794 07b9 17       		.byte	0x17
 3795 07ba 2801     		.value	0x128
 3796 07bc 00000000 		.long	.LASF1540
 3797 07c0 2A060000 		.long	0x62a
 3798 07c4 23       		.uleb128 0x23
 3799 07c5 00000000 		.long	.LASF56
 3800 07c9 17       		.byte	0x17
 3801 07ca 2C01     		.value	0x12c
 3802 07cc 00000000 		.long	.LASF131
 3803 07d0 2A060000 		.long	0x62a
 3804 07d4 13       		.uleb128 0x13
 3805 07d5 B6920000 		.long	0x92b6
 3806 07d9 00       		.byte	0
 3807 07da 00       		.byte	0
 3808 07db 06       		.uleb128 0x6
 3809 07dc 00000000 		.long	.LASF57
 3810 07e0 14       		.byte	0x14
 3811 07e1 BC       		.byte	0xbc
 3812 07e2 30000000 		.long	0x30
 3813 07e6 0E       		.uleb128 0xe
 3814 07e7 18       		.byte	0x18
 3815 07e8 30       		.byte	0x30
 3816 07e9 34850000 		.long	0x8534
 3817 07ed 0E       		.uleb128 0xe
 3818 07ee 18       		.byte	0x18
 3819 07ef 31       		.byte	0x31
 3820 07f0 3F850000 		.long	0x853f
 3821 07f4 0E       		.uleb128 0xe
 3822 07f5 18       		.byte	0x18
 3823 07f6 32       		.byte	0x32
 3824 07f7 4A850000 		.long	0x854a
 3825 07fb 0E       		.uleb128 0xe
 3826 07fc 18       		.byte	0x18
 3827 07fd 33       		.byte	0x33
 3828 07fe 55850000 		.long	0x8555
 3829 0802 0E       		.uleb128 0xe
 3830 0803 18       		.byte	0x18
 3831 0804 35       		.byte	0x35
 3832 0805 40930000 		.long	0x9340
 3833 0809 0E       		.uleb128 0xe
 3834 080a 18       		.byte	0x18
 3835 080b 36       		.byte	0x36
 3836 080c 4B930000 		.long	0x934b
 3837 0810 0E       		.uleb128 0xe
 3838 0811 18       		.byte	0x18
 3839 0812 37       		.byte	0x37
 3840 0813 56930000 		.long	0x9356
GAS LISTING /tmp/ccKUqHDa.s 			page 325


 3841 0817 0E       		.uleb128 0xe
 3842 0818 18       		.byte	0x18
 3843 0819 38       		.byte	0x38
 3844 081a 61930000 		.long	0x9361
 3845 081e 0E       		.uleb128 0xe
 3846 081f 18       		.byte	0x18
 3847 0820 3A       		.byte	0x3a
 3848 0821 E8920000 		.long	0x92e8
 3849 0825 0E       		.uleb128 0xe
 3850 0826 18       		.byte	0x18
 3851 0827 3B       		.byte	0x3b
 3852 0828 F3920000 		.long	0x92f3
 3853 082c 0E       		.uleb128 0xe
 3854 082d 18       		.byte	0x18
 3855 082e 3C       		.byte	0x3c
 3856 082f FE920000 		.long	0x92fe
 3857 0833 0E       		.uleb128 0xe
 3858 0834 18       		.byte	0x18
 3859 0835 3D       		.byte	0x3d
 3860 0836 09930000 		.long	0x9309
 3861 083a 0E       		.uleb128 0xe
 3862 083b 18       		.byte	0x18
 3863 083c 3F       		.byte	0x3f
 3864 083d AE930000 		.long	0x93ae
 3865 0841 0E       		.uleb128 0xe
 3866 0842 18       		.byte	0x18
 3867 0843 40       		.byte	0x40
 3868 0844 98930000 		.long	0x9398
 3869 0848 0E       		.uleb128 0xe
 3870 0849 18       		.byte	0x18
 3871 084a 42       		.byte	0x42
 3872 084b BC920000 		.long	0x92bc
 3873 084f 0E       		.uleb128 0xe
 3874 0850 18       		.byte	0x18
 3875 0851 43       		.byte	0x43
 3876 0852 C7920000 		.long	0x92c7
 3877 0856 0E       		.uleb128 0xe
 3878 0857 18       		.byte	0x18
 3879 0858 44       		.byte	0x44
 3880 0859 D2920000 		.long	0x92d2
 3881 085d 0E       		.uleb128 0xe
 3882 085e 18       		.byte	0x18
 3883 085f 45       		.byte	0x45
 3884 0860 DD920000 		.long	0x92dd
 3885 0864 0E       		.uleb128 0xe
 3886 0865 18       		.byte	0x18
 3887 0866 47       		.byte	0x47
 3888 0867 6C930000 		.long	0x936c
 3889 086b 0E       		.uleb128 0xe
 3890 086c 18       		.byte	0x18
 3891 086d 48       		.byte	0x48
 3892 086e 77930000 		.long	0x9377
 3893 0872 0E       		.uleb128 0xe
 3894 0873 18       		.byte	0x18
 3895 0874 49       		.byte	0x49
 3896 0875 82930000 		.long	0x9382
 3897 0879 0E       		.uleb128 0xe
GAS LISTING /tmp/ccKUqHDa.s 			page 326


 3898 087a 18       		.byte	0x18
 3899 087b 4A       		.byte	0x4a
 3900 087c 8D930000 		.long	0x938d
 3901 0880 0E       		.uleb128 0xe
 3902 0881 18       		.byte	0x18
 3903 0882 4C       		.byte	0x4c
 3904 0883 14930000 		.long	0x9314
 3905 0887 0E       		.uleb128 0xe
 3906 0888 18       		.byte	0x18
 3907 0889 4D       		.byte	0x4d
 3908 088a 1F930000 		.long	0x931f
 3909 088e 0E       		.uleb128 0xe
 3910 088f 18       		.byte	0x18
 3911 0890 4E       		.byte	0x4e
 3912 0891 2A930000 		.long	0x932a
 3913 0895 0E       		.uleb128 0xe
 3914 0896 18       		.byte	0x18
 3915 0897 4F       		.byte	0x4f
 3916 0898 35930000 		.long	0x9335
 3917 089c 0E       		.uleb128 0xe
 3918 089d 18       		.byte	0x18
 3919 089e 51       		.byte	0x51
 3920 089f B9930000 		.long	0x93b9
 3921 08a3 0E       		.uleb128 0xe
 3922 08a4 18       		.byte	0x18
 3923 08a5 52       		.byte	0x52
 3924 08a6 A3930000 		.long	0x93a3
 3925 08aa 06       		.uleb128 0x6
 3926 08ab 00000000 		.long	.LASF58
 3927 08af 14       		.byte	0x14
 3928 08b0 BD       		.byte	0xbd
 3929 08b1 EC710000 		.long	0x71ec
 3930 08b5 06       		.uleb128 0x6
 3931 08b6 00000000 		.long	.LASF59
 3932 08ba 12       		.byte	0x12
 3933 08bb 57       		.byte	0x57
 3934 08bc 9A000000 		.long	0x9a
 3935 08c0 10       		.uleb128 0x10
 3936 08c1 00000000 		.long	.LASF60
 3937 08c5 01       		.byte	0x1
 3938 08c6 19       		.byte	0x19
 3939 08c7 5C       		.byte	0x5c
 3940 08c8 40090000 		.long	0x940
 3941 08cc 24       		.uleb128 0x24
 3942 08cd C2720000 		.long	0x72c2
 3943 08d1 00       		.byte	0
 3944 08d2 01       		.byte	0x1
 3945 08d3 25       		.uleb128 0x25
 3946 08d4 00000000 		.long	.LASF61
 3947 08d8 19       		.byte	0x19
 3948 08d9 5F       		.byte	0x5f
 3949 08da DB070000 		.long	0x7db
 3950 08de 01       		.byte	0x1
 3951 08df 25       		.uleb128 0x25
 3952 08e0 00000000 		.long	.LASF62
 3953 08e4 19       		.byte	0x19
 3954 08e5 63       		.byte	0x63
GAS LISTING /tmp/ccKUqHDa.s 			page 327


 3955 08e6 D2930000 		.long	0x93d2
 3956 08ea 01       		.byte	0x1
 3957 08eb 25       		.uleb128 0x25
 3958 08ec 00000000 		.long	.LASF63
 3959 08f0 19       		.byte	0x19
 3960 08f1 64       		.byte	0x64
 3961 08f2 D8930000 		.long	0x93d8
 3962 08f6 01       		.byte	0x1
 3963 08f7 15       		.uleb128 0x15
 3964 08f8 00000000 		.long	.LASF64
 3965 08fc 19       		.byte	0x19
 3966 08fd 71       		.byte	0x71
 3967 08fe 01       		.byte	0x1
 3968 08ff 07090000 		.long	0x907
 3969 0903 0D090000 		.long	0x90d
 3970 0907 08       		.uleb128 0x8
 3971 0908 F0930000 		.long	0x93f0
 3972 090c 00       		.byte	0
 3973 090d 15       		.uleb128 0x15
 3974 090e 00000000 		.long	.LASF64
 3975 0912 19       		.byte	0x19
 3976 0913 73       		.byte	0x73
 3977 0914 01       		.byte	0x1
 3978 0915 1D090000 		.long	0x91d
 3979 0919 28090000 		.long	0x928
 3980 091d 08       		.uleb128 0x8
 3981 091e F0930000 		.long	0x93f0
 3982 0922 13       		.uleb128 0x13
 3983 0923 F6930000 		.long	0x93f6
 3984 0927 00       		.byte	0
 3985 0928 26       		.uleb128 0x26
 3986 0929 00000000 		.long	.LASF65
 3987 092d 19       		.byte	0x19
 3988 092e 79       		.byte	0x79
 3989 092f 01       		.byte	0x1
 3990 0930 34090000 		.long	0x934
 3991 0934 08       		.uleb128 0x8
 3992 0935 F0930000 		.long	0x93f0
 3993 0939 08       		.uleb128 0x8
 3994 093a E5710000 		.long	0x71e5
 3995 093e 00       		.byte	0
 3996 093f 00       		.byte	0
 3997 0940 0B       		.uleb128 0xb
 3998 0941 C0080000 		.long	0x8c0
 3999 0945 0E       		.uleb128 0xe
 4000 0946 1A       		.byte	0x1a
 4001 0947 35       		.byte	0x35
 4002 0948 FC930000 		.long	0x93fc
 4003 094c 0E       		.uleb128 0xe
 4004 094d 1A       		.byte	0x1a
 4005 094e 36       		.byte	0x36
 4006 094f 29950000 		.long	0x9529
 4007 0953 0E       		.uleb128 0xe
 4008 0954 1A       		.byte	0x1a
 4009 0955 37       		.byte	0x37
 4010 0956 43950000 		.long	0x9543
 4011 095a 0E       		.uleb128 0xe
GAS LISTING /tmp/ccKUqHDa.s 			page 328


 4012 095b 1B       		.byte	0x1b
 4013 095c 62       		.byte	0x62
 4014 095d EE880000 		.long	0x88ee
 4015 0961 0E       		.uleb128 0xe
 4016 0962 1B       		.byte	0x1b
 4017 0963 63       		.byte	0x63
 4018 0964 0C960000 		.long	0x960c
 4019 0968 0E       		.uleb128 0xe
 4020 0969 1B       		.byte	0x1b
 4021 096a 65       		.byte	0x65
 4022 096b 17960000 		.long	0x9617
 4023 096f 0E       		.uleb128 0xe
 4024 0970 1B       		.byte	0x1b
 4025 0971 66       		.byte	0x66
 4026 0972 2F960000 		.long	0x962f
 4027 0976 0E       		.uleb128 0xe
 4028 0977 1B       		.byte	0x1b
 4029 0978 67       		.byte	0x67
 4030 0979 44960000 		.long	0x9644
 4031 097d 0E       		.uleb128 0xe
 4032 097e 1B       		.byte	0x1b
 4033 097f 68       		.byte	0x68
 4034 0980 5A960000 		.long	0x965a
 4035 0984 0E       		.uleb128 0xe
 4036 0985 1B       		.byte	0x1b
 4037 0986 69       		.byte	0x69
 4038 0987 70960000 		.long	0x9670
 4039 098b 0E       		.uleb128 0xe
 4040 098c 1B       		.byte	0x1b
 4041 098d 6A       		.byte	0x6a
 4042 098e 85960000 		.long	0x9685
 4043 0992 0E       		.uleb128 0xe
 4044 0993 1B       		.byte	0x1b
 4045 0994 6B       		.byte	0x6b
 4046 0995 9B960000 		.long	0x969b
 4047 0999 0E       		.uleb128 0xe
 4048 099a 1B       		.byte	0x1b
 4049 099b 6C       		.byte	0x6c
 4050 099c BC960000 		.long	0x96bc
 4051 09a0 0E       		.uleb128 0xe
 4052 09a1 1B       		.byte	0x1b
 4053 09a2 6D       		.byte	0x6d
 4054 09a3 DC960000 		.long	0x96dc
 4055 09a7 0E       		.uleb128 0xe
 4056 09a8 1B       		.byte	0x1b
 4057 09a9 71       		.byte	0x71
 4058 09aa F7960000 		.long	0x96f7
 4059 09ae 0E       		.uleb128 0xe
 4060 09af 1B       		.byte	0x1b
 4061 09b0 72       		.byte	0x72
 4062 09b1 1C970000 		.long	0x971c
 4063 09b5 0E       		.uleb128 0xe
 4064 09b6 1B       		.byte	0x1b
 4065 09b7 74       		.byte	0x74
 4066 09b8 3C970000 		.long	0x973c
 4067 09bc 0E       		.uleb128 0xe
 4068 09bd 1B       		.byte	0x1b
GAS LISTING /tmp/ccKUqHDa.s 			page 329


 4069 09be 75       		.byte	0x75
 4070 09bf 5C970000 		.long	0x975c
 4071 09c3 0E       		.uleb128 0xe
 4072 09c4 1B       		.byte	0x1b
 4073 09c5 76       		.byte	0x76
 4074 09c6 82970000 		.long	0x9782
 4075 09ca 0E       		.uleb128 0xe
 4076 09cb 1B       		.byte	0x1b
 4077 09cc 78       		.byte	0x78
 4078 09cd 98970000 		.long	0x9798
 4079 09d1 0E       		.uleb128 0xe
 4080 09d2 1B       		.byte	0x1b
 4081 09d3 79       		.byte	0x79
 4082 09d4 AE970000 		.long	0x97ae
 4083 09d8 0E       		.uleb128 0xe
 4084 09d9 1B       		.byte	0x1b
 4085 09da 7C       		.byte	0x7c
 4086 09db B9970000 		.long	0x97b9
 4087 09df 0E       		.uleb128 0xe
 4088 09e0 1B       		.byte	0x1b
 4089 09e1 7E       		.byte	0x7e
 4090 09e2 CF970000 		.long	0x97cf
 4091 09e6 0E       		.uleb128 0xe
 4092 09e7 1B       		.byte	0x1b
 4093 09e8 83       		.byte	0x83
 4094 09e9 E1970000 		.long	0x97e1
 4095 09ed 0E       		.uleb128 0xe
 4096 09ee 1B       		.byte	0x1b
 4097 09ef 84       		.byte	0x84
 4098 09f0 F6970000 		.long	0x97f6
 4099 09f4 0E       		.uleb128 0xe
 4100 09f5 1B       		.byte	0x1b
 4101 09f6 85       		.byte	0x85
 4102 09f7 10980000 		.long	0x9810
 4103 09fb 0E       		.uleb128 0xe
 4104 09fc 1B       		.byte	0x1b
 4105 09fd 87       		.byte	0x87
 4106 09fe 22980000 		.long	0x9822
 4107 0a02 0E       		.uleb128 0xe
 4108 0a03 1B       		.byte	0x1b
 4109 0a04 88       		.byte	0x88
 4110 0a05 39980000 		.long	0x9839
 4111 0a09 0E       		.uleb128 0xe
 4112 0a0a 1B       		.byte	0x1b
 4113 0a0b 8B       		.byte	0x8b
 4114 0a0c 5E980000 		.long	0x985e
 4115 0a10 0E       		.uleb128 0xe
 4116 0a11 1B       		.byte	0x1b
 4117 0a12 8D       		.byte	0x8d
 4118 0a13 69980000 		.long	0x9869
 4119 0a17 0E       		.uleb128 0xe
 4120 0a18 1B       		.byte	0x1b
 4121 0a19 8F       		.byte	0x8f
 4122 0a1a 7E980000 		.long	0x987e
 4123 0a1e 10       		.uleb128 0x10
 4124 0a1f 00000000 		.long	.LASF66
 4125 0a23 08       		.byte	0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 330


 4126 0a24 02       		.byte	0x2
 4127 0a25 70       		.byte	0x70
 4128 0a26 46230000 		.long	0x2346
 4129 0a2a 27       		.uleb128 0x27
 4130 0a2b 00000000 		.long	.LASF67
 4131 0a2f 08       		.byte	0x8
 4132 0a30 02       		.byte	0x2
 4133 0a31 1001     		.value	0x110
 4134 0a33 7F0A0000 		.long	0xa7f
 4135 0a37 28       		.uleb128 0x28
 4136 0a38 C0080000 		.long	0x8c0
 4137 0a3c 00       		.byte	0
 4138 0a3d 29       		.uleb128 0x29
 4139 0a3e 00000000 		.long	.LASF69
 4140 0a42 02       		.byte	0x2
 4141 0a43 1501     		.value	0x115
 4142 0a45 18850000 		.long	0x8518
 4143 0a49 00       		.byte	0
 4144 0a4a 2A       		.uleb128 0x2a
 4145 0a4b 00000000 		.long	.LASF67
 4146 0a4f 02       		.byte	0x2
 4147 0a50 1201     		.value	0x112
 4148 0a52 5A0A0000 		.long	0xa5a
 4149 0a56 6A0A0000 		.long	0xa6a
 4150 0a5a 08       		.uleb128 0x8
 4151 0a5b 99980000 		.long	0x9899
 4152 0a5f 13       		.uleb128 0x13
 4153 0a60 18850000 		.long	0x8518
 4154 0a64 13       		.uleb128 0x13
 4155 0a65 F6930000 		.long	0x93f6
 4156 0a69 00       		.byte	0
 4157 0a6a 2B       		.uleb128 0x2b
 4158 0a6b 00000000 		.long	.LASF71
 4159 0a6f 730A0000 		.long	0xa73
 4160 0a73 08       		.uleb128 0x8
 4161 0a74 99980000 		.long	0x9899
 4162 0a78 08       		.uleb128 0x8
 4163 0a79 E5710000 		.long	0x71e5
 4164 0a7d 00       		.byte	0
 4165 0a7e 00       		.byte	0
 4166 0a7f 25       		.uleb128 0x25
 4167 0a80 00000000 		.long	.LASF61
 4168 0a84 02       		.byte	0x2
 4169 0a85 79       		.byte	0x79
 4170 0a86 D3080000 		.long	0x8d3
 4171 0a8a 01       		.byte	0x1
 4172 0a8b 2C       		.uleb128 0x2c
 4173 0a8c 00000000 		.long	.LASF345
 4174 0a90 02       		.byte	0x2
 4175 0a91 1D01     		.value	0x11d
 4176 0a93 980A0000 		.long	0xa98
 4177 0a97 01       		.byte	0x1
 4178 0a98 0B       		.uleb128 0xb
 4179 0a99 7F0A0000 		.long	0xa7f
 4180 0a9d 29       		.uleb128 0x29
 4181 0a9e 00000000 		.long	.LASF72
 4182 0aa2 02       		.byte	0x2
GAS LISTING /tmp/ccKUqHDa.s 			page 331


 4183 0aa3 2101     		.value	0x121
 4184 0aa5 2A0A0000 		.long	0xa2a
 4185 0aa9 00       		.byte	0
 4186 0aaa 25       		.uleb128 0x25
 4187 0aab 00000000 		.long	.LASF73
 4188 0aaf 02       		.byte	0x2
 4189 0ab0 78       		.byte	0x78
 4190 0ab1 C0080000 		.long	0x8c0
 4191 0ab5 01       		.byte	0x1
 4192 0ab6 25       		.uleb128 0x25
 4193 0ab7 00000000 		.long	.LASF62
 4194 0abb 02       		.byte	0x2
 4195 0abc 7B       		.byte	0x7b
 4196 0abd DF080000 		.long	0x8df
 4197 0ac1 01       		.byte	0x1
 4198 0ac2 25       		.uleb128 0x25
 4199 0ac3 00000000 		.long	.LASF63
 4200 0ac7 02       		.byte	0x2
 4201 0ac8 7C       		.byte	0x7c
 4202 0ac9 EB080000 		.long	0x8eb
 4203 0acd 01       		.byte	0x1
 4204 0ace 25       		.uleb128 0x25
 4205 0acf 00000000 		.long	.LASF74
 4206 0ad3 02       		.byte	0x2
 4207 0ad4 7F       		.byte	0x7f
 4208 0ad5 4A740000 		.long	0x744a
 4209 0ad9 01       		.byte	0x1
 4210 0ada 25       		.uleb128 0x25
 4211 0adb 00000000 		.long	.LASF75
 4212 0adf 02       		.byte	0x2
 4213 0ae0 81       		.byte	0x81
 4214 0ae1 69760000 		.long	0x7669
 4215 0ae5 01       		.byte	0x1
 4216 0ae6 25       		.uleb128 0x25
 4217 0ae7 00000000 		.long	.LASF76
 4218 0aeb 02       		.byte	0x2
 4219 0aec 82       		.byte	0x82
 4220 0aed 46230000 		.long	0x2346
 4221 0af1 01       		.byte	0x1
 4222 0af2 25       		.uleb128 0x25
 4223 0af3 00000000 		.long	.LASF77
 4224 0af7 02       		.byte	0x2
 4225 0af8 83       		.byte	0x83
 4226 0af9 4B230000 		.long	0x234b
 4227 0afd 01       		.byte	0x1
 4228 0afe 04       		.uleb128 0x4
 4229 0aff 00000000 		.long	.LASF78
 4230 0b03 18       		.byte	0x18
 4231 0b04 02       		.byte	0x2
 4232 0b05 94       		.byte	0x94
 4233 0b06 2F0B0000 		.long	0xb2f
 4234 0b0a 11       		.uleb128 0x11
 4235 0b0b 00000000 		.long	.LASF79
 4236 0b0f 02       		.byte	0x2
 4237 0b10 96       		.byte	0x96
 4238 0b11 7F0A0000 		.long	0xa7f
 4239 0b15 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 332


 4240 0b16 11       		.uleb128 0x11
 4241 0b17 00000000 		.long	.LASF80
 4242 0b1b 02       		.byte	0x2
 4243 0b1c 97       		.byte	0x97
 4244 0b1d 7F0A0000 		.long	0xa7f
 4245 0b21 08       		.byte	0x8
 4246 0b22 11       		.uleb128 0x11
 4247 0b23 00000000 		.long	.LASF81
 4248 0b27 02       		.byte	0x2
 4249 0b28 98       		.byte	0x98
 4250 0b29 66950000 		.long	0x9566
 4251 0b2d 10       		.byte	0x10
 4252 0b2e 00       		.byte	0
 4253 0b2f 04       		.uleb128 0x4
 4254 0b30 00000000 		.long	.LASF82
 4255 0b34 18       		.byte	0x18
 4256 0b35 02       		.byte	0x2
 4257 0b36 9B       		.byte	0x9b
 4258 0b37 E30C0000 		.long	0xce3
 4259 0b3b 28       		.uleb128 0x28
 4260 0b3c FE0A0000 		.long	0xafe
 4261 0b40 00       		.byte	0
 4262 0b41 05       		.uleb128 0x5
 4263 0b42 00000000 		.long	.LASF83
 4264 0b46 1C       		.byte	0x1c
 4265 0b47 32       		.byte	0x32
 4266 0b48 980A0000 		.long	0xa98
 4267 0b4c 05       		.uleb128 0x5
 4268 0b4d 00000000 		.long	.LASF84
 4269 0b51 1C       		.byte	0x1c
 4270 0b52 37       		.byte	0x37
 4271 0b53 D3840000 		.long	0x84d3
 4272 0b57 05       		.uleb128 0x5
 4273 0b58 00000000 		.long	.LASF85
 4274 0b5c 1C       		.byte	0x1c
 4275 0b5d 42       		.byte	0x42
 4276 0b5e DB980000 		.long	0x98db
 4277 0b62 2D       		.uleb128 0x2d
 4278 0b63 00000000 		.long	.LASF86
 4279 0b67 02       		.byte	0x2
 4280 0b68 B5       		.byte	0xb5
 4281 0b69 00000000 		.long	.LASF1051
 4282 0b6d B1980000 		.long	0x98b1
 4283 0b71 07       		.uleb128 0x7
 4284 0b72 00000000 		.long	.LASF87
 4285 0b76 02       		.byte	0x2
 4286 0b77 BF       		.byte	0xbf
 4287 0b78 00000000 		.long	.LASF88
 4288 0b7c A3710000 		.long	0x71a3
 4289 0b80 880B0000 		.long	0xb88
 4290 0b84 8E0B0000 		.long	0xb8e
 4291 0b88 08       		.uleb128 0x8
 4292 0b89 E7980000 		.long	0x98e7
 4293 0b8d 00       		.byte	0
 4294 0b8e 07       		.uleb128 0x7
 4295 0b8f 00000000 		.long	.LASF89
 4296 0b93 02       		.byte	0x2
GAS LISTING /tmp/ccKUqHDa.s 			page 333


 4297 0b94 C3       		.byte	0xc3
 4298 0b95 00000000 		.long	.LASF90
 4299 0b99 A3710000 		.long	0x71a3
 4300 0b9d A50B0000 		.long	0xba5
 4301 0ba1 AB0B0000 		.long	0xbab
 4302 0ba5 08       		.uleb128 0x8
 4303 0ba6 E7980000 		.long	0x98e7
 4304 0baa 00       		.byte	0
 4305 0bab 14       		.uleb128 0x14
 4306 0bac 00000000 		.long	.LASF91
 4307 0bb0 02       		.byte	0x2
 4308 0bb1 C7       		.byte	0xc7
 4309 0bb2 00000000 		.long	.LASF92
 4310 0bb6 BE0B0000 		.long	0xbbe
 4311 0bba C40B0000 		.long	0xbc4
 4312 0bbe 08       		.uleb128 0x8
 4313 0bbf AB980000 		.long	0x98ab
 4314 0bc3 00       		.byte	0
 4315 0bc4 14       		.uleb128 0x14
 4316 0bc5 00000000 		.long	.LASF93
 4317 0bc9 02       		.byte	0x2
 4318 0bca CB       		.byte	0xcb
 4319 0bcb 00000000 		.long	.LASF94
 4320 0bcf D70B0000 		.long	0xbd7
 4321 0bd3 DD0B0000 		.long	0xbdd
 4322 0bd7 08       		.uleb128 0x8
 4323 0bd8 AB980000 		.long	0x98ab
 4324 0bdc 00       		.byte	0
 4325 0bdd 14       		.uleb128 0x14
 4326 0bde 00000000 		.long	.LASF95
 4327 0be2 02       		.byte	0x2
 4328 0be3 CF       		.byte	0xcf
 4329 0be4 00000000 		.long	.LASF96
 4330 0be8 F00B0000 		.long	0xbf0
 4331 0bec FB0B0000 		.long	0xbfb
 4332 0bf0 08       		.uleb128 0x8
 4333 0bf1 AB980000 		.long	0x98ab
 4334 0bf5 13       		.uleb128 0x13
 4335 0bf6 7F0A0000 		.long	0xa7f
 4336 0bfa 00       		.byte	0
 4337 0bfb 07       		.uleb128 0x7
 4338 0bfc 00000000 		.long	.LASF97
 4339 0c00 02       		.byte	0x2
 4340 0c01 DE       		.byte	0xde
 4341 0c02 00000000 		.long	.LASF98
 4342 0c06 18850000 		.long	0x8518
 4343 0c0a 120C0000 		.long	0xc12
 4344 0c0e 180C0000 		.long	0xc18
 4345 0c12 08       		.uleb128 0x8
 4346 0c13 AB980000 		.long	0x98ab
 4347 0c17 00       		.byte	0
 4348 0c18 07       		.uleb128 0x7
 4349 0c19 00000000 		.long	.LASF99
 4350 0c1d 02       		.byte	0x2
 4351 0c1e E2       		.byte	0xe2
 4352 0c1f 00000000 		.long	.LASF100
 4353 0c23 18850000 		.long	0x8518
GAS LISTING /tmp/ccKUqHDa.s 			page 334


 4354 0c27 2F0C0000 		.long	0xc2f
 4355 0c2b 3F0C0000 		.long	0xc3f
 4356 0c2f 08       		.uleb128 0x8
 4357 0c30 AB980000 		.long	0x98ab
 4358 0c34 13       		.uleb128 0x13
 4359 0c35 F6930000 		.long	0x93f6
 4360 0c39 13       		.uleb128 0x13
 4361 0c3a F6930000 		.long	0x93f6
 4362 0c3e 00       		.byte	0
 4363 0c3f 21       		.uleb128 0x21
 4364 0c40 00000000 		.long	.LASF101
 4365 0c44 1C       		.byte	0x1c
 4366 0c45 2102     		.value	0x221
 4367 0c47 00000000 		.long	.LASF102
 4368 0c4b AB980000 		.long	0x98ab
 4369 0c4f 630C0000 		.long	0xc63
 4370 0c53 13       		.uleb128 0x13
 4371 0c54 7F0A0000 		.long	0xa7f
 4372 0c58 13       		.uleb128 0x13
 4373 0c59 7F0A0000 		.long	0xa7f
 4374 0c5d 13       		.uleb128 0x13
 4375 0c5e F6930000 		.long	0x93f6
 4376 0c62 00       		.byte	0
 4377 0c63 14       		.uleb128 0x14
 4378 0c64 00000000 		.long	.LASF103
 4379 0c68 02       		.byte	0x2
 4380 0c69 ED       		.byte	0xed
 4381 0c6a 00000000 		.long	.LASF104
 4382 0c6e 760C0000 		.long	0xc76
 4383 0c72 810C0000 		.long	0xc81
 4384 0c76 08       		.uleb128 0x8
 4385 0c77 AB980000 		.long	0x98ab
 4386 0c7b 13       		.uleb128 0x13
 4387 0c7c F6930000 		.long	0x93f6
 4388 0c80 00       		.byte	0
 4389 0c81 2E       		.uleb128 0x2e
 4390 0c82 00000000 		.long	.LASF105
 4391 0c86 1C       		.byte	0x1c
 4392 0c87 BC01     		.value	0x1bc
 4393 0c89 00000000 		.long	.LASF106
 4394 0c8d 950C0000 		.long	0xc95
 4395 0c91 A00C0000 		.long	0xca0
 4396 0c95 08       		.uleb128 0x8
 4397 0c96 AB980000 		.long	0x98ab
 4398 0c9a 13       		.uleb128 0x13
 4399 0c9b F6930000 		.long	0x93f6
 4400 0c9f 00       		.byte	0
 4401 0ca0 2F       		.uleb128 0x2f
 4402 0ca1 00000000 		.long	.LASF107
 4403 0ca5 02       		.byte	0x2
 4404 0ca6 0201     		.value	0x102
 4405 0ca8 00000000 		.long	.LASF111
 4406 0cac 18850000 		.long	0x8518
 4407 0cb0 B80C0000 		.long	0xcb8
 4408 0cb4 BE0C0000 		.long	0xcbe
 4409 0cb8 08       		.uleb128 0x8
 4410 0cb9 AB980000 		.long	0x98ab
GAS LISTING /tmp/ccKUqHDa.s 			page 335


 4411 0cbd 00       		.byte	0
 4412 0cbe 30       		.uleb128 0x30
 4413 0cbf 00000000 		.long	.LASF108
 4414 0cc3 1C       		.byte	0x1c
 4415 0cc4 6F02     		.value	0x26f
 4416 0cc6 00000000 		.long	.LASF109
 4417 0cca 18850000 		.long	0x8518
 4418 0cce D20C0000 		.long	0xcd2
 4419 0cd2 08       		.uleb128 0x8
 4420 0cd3 AB980000 		.long	0x98ab
 4421 0cd7 13       		.uleb128 0x13
 4422 0cd8 F6930000 		.long	0x93f6
 4423 0cdc 13       		.uleb128 0x13
 4424 0cdd 7F0A0000 		.long	0xa7f
 4425 0ce1 00       		.byte	0
 4426 0ce2 00       		.byte	0
 4427 0ce3 2F       		.uleb128 0x2f
 4428 0ce4 00000000 		.long	.LASF110
 4429 0ce8 02       		.byte	0x2
 4430 0ce9 2401     		.value	0x124
 4431 0ceb 00000000 		.long	.LASF112
 4432 0cef 18850000 		.long	0x8518
 4433 0cf3 FB0C0000 		.long	0xcfb
 4434 0cf7 010D0000 		.long	0xd01
 4435 0cfb 08       		.uleb128 0x8
 4436 0cfc 9F980000 		.long	0x989f
 4437 0d00 00       		.byte	0
 4438 0d01 2F       		.uleb128 0x2f
 4439 0d02 00000000 		.long	.LASF110
 4440 0d06 02       		.byte	0x2
 4441 0d07 2801     		.value	0x128
 4442 0d09 00000000 		.long	.LASF113
 4443 0d0d 18850000 		.long	0x8518
 4444 0d11 190D0000 		.long	0xd19
 4445 0d15 240D0000 		.long	0xd24
 4446 0d19 08       		.uleb128 0x8
 4447 0d1a A5980000 		.long	0x98a5
 4448 0d1e 13       		.uleb128 0x13
 4449 0d1f 18850000 		.long	0x8518
 4450 0d23 00       		.byte	0
 4451 0d24 2F       		.uleb128 0x2f
 4452 0d25 00000000 		.long	.LASF114
 4453 0d29 02       		.byte	0x2
 4454 0d2a 2C01     		.value	0x12c
 4455 0d2c 00000000 		.long	.LASF115
 4456 0d30 AB980000 		.long	0x98ab
 4457 0d34 3C0D0000 		.long	0xd3c
 4458 0d38 420D0000 		.long	0xd42
 4459 0d3c 08       		.uleb128 0x8
 4460 0d3d 9F980000 		.long	0x989f
 4461 0d41 00       		.byte	0
 4462 0d42 2F       		.uleb128 0x2f
 4463 0d43 00000000 		.long	.LASF116
 4464 0d47 02       		.byte	0x2
 4465 0d48 3201     		.value	0x132
 4466 0d4a 00000000 		.long	.LASF117
 4467 0d4e CE0A0000 		.long	0xace
GAS LISTING /tmp/ccKUqHDa.s 			page 336


 4468 0d52 5A0D0000 		.long	0xd5a
 4469 0d56 600D0000 		.long	0xd60
 4470 0d5a 08       		.uleb128 0x8
 4471 0d5b 9F980000 		.long	0x989f
 4472 0d5f 00       		.byte	0
 4473 0d60 2F       		.uleb128 0x2f
 4474 0d61 00000000 		.long	.LASF118
 4475 0d65 02       		.byte	0x2
 4476 0d66 3601     		.value	0x136
 4477 0d68 00000000 		.long	.LASF119
 4478 0d6c CE0A0000 		.long	0xace
 4479 0d70 780D0000 		.long	0xd78
 4480 0d74 7E0D0000 		.long	0xd7e
 4481 0d78 08       		.uleb128 0x8
 4482 0d79 9F980000 		.long	0x989f
 4483 0d7d 00       		.byte	0
 4484 0d7e 2E       		.uleb128 0x2e
 4485 0d7f 00000000 		.long	.LASF120
 4486 0d83 02       		.byte	0x2
 4487 0d84 3A01     		.value	0x13a
 4488 0d86 00000000 		.long	.LASF121
 4489 0d8a 920D0000 		.long	0xd92
 4490 0d8e 980D0000 		.long	0xd98
 4491 0d92 08       		.uleb128 0x8
 4492 0d93 A5980000 		.long	0x98a5
 4493 0d97 00       		.byte	0
 4494 0d98 2F       		.uleb128 0x2f
 4495 0d99 00000000 		.long	.LASF122
 4496 0d9d 02       		.byte	0x2
 4497 0d9e 4101     		.value	0x141
 4498 0da0 00000000 		.long	.LASF123
 4499 0da4 7F0A0000 		.long	0xa7f
 4500 0da8 B00D0000 		.long	0xdb0
 4501 0dac C00D0000 		.long	0xdc0
 4502 0db0 08       		.uleb128 0x8
 4503 0db1 9F980000 		.long	0x989f
 4504 0db5 13       		.uleb128 0x13
 4505 0db6 7F0A0000 		.long	0xa7f
 4506 0dba 13       		.uleb128 0x13
 4507 0dbb CD840000 		.long	0x84cd
 4508 0dbf 00       		.byte	0
 4509 0dc0 2E       		.uleb128 0x2e
 4510 0dc1 00000000 		.long	.LASF124
 4511 0dc5 02       		.byte	0x2
 4512 0dc6 4B01     		.value	0x14b
 4513 0dc8 00000000 		.long	.LASF125
 4514 0dcc D40D0000 		.long	0xdd4
 4515 0dd0 E90D0000 		.long	0xde9
 4516 0dd4 08       		.uleb128 0x8
 4517 0dd5 9F980000 		.long	0x989f
 4518 0dd9 13       		.uleb128 0x13
 4519 0dda 7F0A0000 		.long	0xa7f
 4520 0dde 13       		.uleb128 0x13
 4521 0ddf 7F0A0000 		.long	0xa7f
 4522 0de3 13       		.uleb128 0x13
 4523 0de4 CD840000 		.long	0x84cd
 4524 0de8 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 337


 4525 0de9 2F       		.uleb128 0x2f
 4526 0dea 00000000 		.long	.LASF126
 4527 0dee 02       		.byte	0x2
 4528 0def 5301     		.value	0x153
 4529 0df1 00000000 		.long	.LASF127
 4530 0df5 7F0A0000 		.long	0xa7f
 4531 0df9 010E0000 		.long	0xe01
 4532 0dfd 110E0000 		.long	0xe11
 4533 0e01 08       		.uleb128 0x8
 4534 0e02 9F980000 		.long	0x989f
 4535 0e06 13       		.uleb128 0x13
 4536 0e07 7F0A0000 		.long	0xa7f
 4537 0e0b 13       		.uleb128 0x13
 4538 0e0c 7F0A0000 		.long	0xa7f
 4539 0e10 00       		.byte	0
 4540 0e11 2F       		.uleb128 0x2f
 4541 0e12 00000000 		.long	.LASF128
 4542 0e16 02       		.byte	0x2
 4543 0e17 5B01     		.value	0x15b
 4544 0e19 00000000 		.long	.LASF129
 4545 0e1d A3710000 		.long	0x71a3
 4546 0e21 290E0000 		.long	0xe29
 4547 0e25 340E0000 		.long	0xe34
 4548 0e29 08       		.uleb128 0x8
 4549 0e2a 9F980000 		.long	0x989f
 4550 0e2e 13       		.uleb128 0x13
 4551 0e2f CD840000 		.long	0x84cd
 4552 0e33 00       		.byte	0
 4553 0e34 31       		.uleb128 0x31
 4554 0e35 00000000 		.long	.LASF130
 4555 0e39 02       		.byte	0x2
 4556 0e3a 6401     		.value	0x164
 4557 0e3c 00000000 		.long	.LASF132
 4558 0e40 540E0000 		.long	0xe54
 4559 0e44 13       		.uleb128 0x13
 4560 0e45 18850000 		.long	0x8518
 4561 0e49 13       		.uleb128 0x13
 4562 0e4a CD840000 		.long	0x84cd
 4563 0e4e 13       		.uleb128 0x13
 4564 0e4f 7F0A0000 		.long	0xa7f
 4565 0e53 00       		.byte	0
 4566 0e54 31       		.uleb128 0x31
 4567 0e55 00000000 		.long	.LASF133
 4568 0e59 02       		.byte	0x2
 4569 0e5a 6D01     		.value	0x16d
 4570 0e5c 00000000 		.long	.LASF134
 4571 0e60 740E0000 		.long	0xe74
 4572 0e64 13       		.uleb128 0x13
 4573 0e65 18850000 		.long	0x8518
 4574 0e69 13       		.uleb128 0x13
 4575 0e6a CD840000 		.long	0x84cd
 4576 0e6e 13       		.uleb128 0x13
 4577 0e6f 7F0A0000 		.long	0xa7f
 4578 0e73 00       		.byte	0
 4579 0e74 31       		.uleb128 0x31
 4580 0e75 00000000 		.long	.LASF135
 4581 0e79 02       		.byte	0x2
GAS LISTING /tmp/ccKUqHDa.s 			page 338


 4582 0e7a 7601     		.value	0x176
 4583 0e7c 00000000 		.long	.LASF136
 4584 0e80 940E0000 		.long	0xe94
 4585 0e84 13       		.uleb128 0x13
 4586 0e85 18850000 		.long	0x8518
 4587 0e89 13       		.uleb128 0x13
 4588 0e8a 7F0A0000 		.long	0xa7f
 4589 0e8e 13       		.uleb128 0x13
 4590 0e8f D8840000 		.long	0x84d8
 4591 0e93 00       		.byte	0
 4592 0e94 31       		.uleb128 0x31
 4593 0e95 00000000 		.long	.LASF137
 4594 0e99 02       		.byte	0x2
 4595 0e9a 8A01     		.value	0x18a
 4596 0e9c 00000000 		.long	.LASF138
 4597 0ea0 B40E0000 		.long	0xeb4
 4598 0ea4 13       		.uleb128 0x13
 4599 0ea5 18850000 		.long	0x8518
 4600 0ea9 13       		.uleb128 0x13
 4601 0eaa CE0A0000 		.long	0xace
 4602 0eae 13       		.uleb128 0x13
 4603 0eaf CE0A0000 		.long	0xace
 4604 0eb3 00       		.byte	0
 4605 0eb4 31       		.uleb128 0x31
 4606 0eb5 00000000 		.long	.LASF137
 4607 0eb9 02       		.byte	0x2
 4608 0eba 8E01     		.value	0x18e
 4609 0ebc 00000000 		.long	.LASF139
 4610 0ec0 D40E0000 		.long	0xed4
 4611 0ec4 13       		.uleb128 0x13
 4612 0ec5 18850000 		.long	0x8518
 4613 0ec9 13       		.uleb128 0x13
 4614 0eca DA0A0000 		.long	0xada
 4615 0ece 13       		.uleb128 0x13
 4616 0ecf DA0A0000 		.long	0xada
 4617 0ed3 00       		.byte	0
 4618 0ed4 31       		.uleb128 0x31
 4619 0ed5 00000000 		.long	.LASF137
 4620 0ed9 02       		.byte	0x2
 4621 0eda 9301     		.value	0x193
 4622 0edc 00000000 		.long	.LASF140
 4623 0ee0 F40E0000 		.long	0xef4
 4624 0ee4 13       		.uleb128 0x13
 4625 0ee5 18850000 		.long	0x8518
 4626 0ee9 13       		.uleb128 0x13
 4627 0eea 18850000 		.long	0x8518
 4628 0eee 13       		.uleb128 0x13
 4629 0eef 18850000 		.long	0x8518
 4630 0ef3 00       		.byte	0
 4631 0ef4 31       		.uleb128 0x31
 4632 0ef5 00000000 		.long	.LASF137
 4633 0ef9 02       		.byte	0x2
 4634 0efa 9701     		.value	0x197
 4635 0efc 00000000 		.long	.LASF141
 4636 0f00 140F0000 		.long	0xf14
 4637 0f04 13       		.uleb128 0x13
 4638 0f05 18850000 		.long	0x8518
GAS LISTING /tmp/ccKUqHDa.s 			page 339


 4639 0f09 13       		.uleb128 0x13
 4640 0f0a CD840000 		.long	0x84cd
 4641 0f0e 13       		.uleb128 0x13
 4642 0f0f CD840000 		.long	0x84cd
 4643 0f13 00       		.byte	0
 4644 0f14 21       		.uleb128 0x21
 4645 0f15 00000000 		.long	.LASF142
 4646 0f19 02       		.byte	0x2
 4647 0f1a 9C01     		.value	0x19c
 4648 0f1c 00000000 		.long	.LASF143
 4649 0f20 E5710000 		.long	0x71e5
 4650 0f24 330F0000 		.long	0xf33
 4651 0f28 13       		.uleb128 0x13
 4652 0f29 7F0A0000 		.long	0xa7f
 4653 0f2d 13       		.uleb128 0x13
 4654 0f2e 7F0A0000 		.long	0xa7f
 4655 0f32 00       		.byte	0
 4656 0f33 2E       		.uleb128 0x2e
 4657 0f34 00000000 		.long	.LASF144
 4658 0f38 02       		.byte	0x2
 4659 0f39 A901     		.value	0x1a9
 4660 0f3b 00000000 		.long	.LASF145
 4661 0f3f 470F0000 		.long	0xf47
 4662 0f43 5C0F0000 		.long	0xf5c
 4663 0f47 08       		.uleb128 0x8
 4664 0f48 A5980000 		.long	0x98a5
 4665 0f4c 13       		.uleb128 0x13
 4666 0f4d 7F0A0000 		.long	0xa7f
 4667 0f51 13       		.uleb128 0x13
 4668 0f52 7F0A0000 		.long	0xa7f
 4669 0f56 13       		.uleb128 0x13
 4670 0f57 7F0A0000 		.long	0xa7f
 4671 0f5b 00       		.byte	0
 4672 0f5c 2E       		.uleb128 0x2e
 4673 0f5d 00000000 		.long	.LASF146
 4674 0f61 02       		.byte	0x2
 4675 0f62 AC01     		.value	0x1ac
 4676 0f64 00000000 		.long	.LASF147
 4677 0f68 700F0000 		.long	0xf70
 4678 0f6c 760F0000 		.long	0xf76
 4679 0f70 08       		.uleb128 0x8
 4680 0f71 A5980000 		.long	0x98a5
 4681 0f75 00       		.byte	0
 4682 0f76 32       		.uleb128 0x32
 4683 0f77 00000000 		.long	.LASF86
 4684 0f7b 02       		.byte	0x2
 4685 0f7c AF01     		.value	0x1af
 4686 0f7e 00000000 		.long	.LASF1541
 4687 0f82 B1980000 		.long	0x98b1
 4688 0f86 33       		.uleb128 0x33
 4689 0f87 00000000 		.long	.LASF148
 4690 0f8b 02       		.byte	0x2
 4691 0f8c BA01     		.value	0x1ba
 4692 0f8e 01       		.byte	0x1
 4693 0f8f 970F0000 		.long	0xf97
 4694 0f93 9D0F0000 		.long	0xf9d
 4695 0f97 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 340


 4696 0f98 A5980000 		.long	0x98a5
 4697 0f9c 00       		.byte	0
 4698 0f9d 34       		.uleb128 0x34
 4699 0f9e 00000000 		.long	.LASF148
 4700 0fa2 02       		.byte	0x2
 4701 0fa3 C501     		.value	0x1c5
 4702 0fa5 01       		.byte	0x1
 4703 0fa6 AE0F0000 		.long	0xfae
 4704 0faa B90F0000 		.long	0xfb9
 4705 0fae 08       		.uleb128 0x8
 4706 0faf A5980000 		.long	0x98a5
 4707 0fb3 13       		.uleb128 0x13
 4708 0fb4 F6930000 		.long	0x93f6
 4709 0fb8 00       		.byte	0
 4710 0fb9 33       		.uleb128 0x33
 4711 0fba 00000000 		.long	.LASF148
 4712 0fbe 02       		.byte	0x2
 4713 0fbf CC01     		.value	0x1cc
 4714 0fc1 01       		.byte	0x1
 4715 0fc2 CA0F0000 		.long	0xfca
 4716 0fc6 D50F0000 		.long	0xfd5
 4717 0fca 08       		.uleb128 0x8
 4718 0fcb A5980000 		.long	0x98a5
 4719 0fcf 13       		.uleb128 0x13
 4720 0fd0 B7980000 		.long	0x98b7
 4721 0fd4 00       		.byte	0
 4722 0fd5 33       		.uleb128 0x33
 4723 0fd6 00000000 		.long	.LASF148
 4724 0fda 02       		.byte	0x2
 4725 0fdb D301     		.value	0x1d3
 4726 0fdd 01       		.byte	0x1
 4727 0fde E60F0000 		.long	0xfe6
 4728 0fe2 FB0F0000 		.long	0xffb
 4729 0fe6 08       		.uleb128 0x8
 4730 0fe7 A5980000 		.long	0x98a5
 4731 0feb 13       		.uleb128 0x13
 4732 0fec B7980000 		.long	0x98b7
 4733 0ff0 13       		.uleb128 0x13
 4734 0ff1 7F0A0000 		.long	0xa7f
 4735 0ff5 13       		.uleb128 0x13
 4736 0ff6 7F0A0000 		.long	0xa7f
 4737 0ffa 00       		.byte	0
 4738 0ffb 33       		.uleb128 0x33
 4739 0ffc 00000000 		.long	.LASF148
 4740 1000 02       		.byte	0x2
 4741 1001 DC01     		.value	0x1dc
 4742 1003 01       		.byte	0x1
 4743 1004 0C100000 		.long	0x100c
 4744 1008 26100000 		.long	0x1026
 4745 100c 08       		.uleb128 0x8
 4746 100d A5980000 		.long	0x98a5
 4747 1011 13       		.uleb128 0x13
 4748 1012 B7980000 		.long	0x98b7
 4749 1016 13       		.uleb128 0x13
 4750 1017 7F0A0000 		.long	0xa7f
 4751 101b 13       		.uleb128 0x13
 4752 101c 7F0A0000 		.long	0xa7f
GAS LISTING /tmp/ccKUqHDa.s 			page 341


 4753 1020 13       		.uleb128 0x13
 4754 1021 F6930000 		.long	0x93f6
 4755 1025 00       		.byte	0
 4756 1026 33       		.uleb128 0x33
 4757 1027 00000000 		.long	.LASF148
 4758 102b 02       		.byte	0x2
 4759 102c E801     		.value	0x1e8
 4760 102e 01       		.byte	0x1
 4761 102f 37100000 		.long	0x1037
 4762 1033 4C100000 		.long	0x104c
 4763 1037 08       		.uleb128 0x8
 4764 1038 A5980000 		.long	0x98a5
 4765 103c 13       		.uleb128 0x13
 4766 103d CD840000 		.long	0x84cd
 4767 1041 13       		.uleb128 0x13
 4768 1042 7F0A0000 		.long	0xa7f
 4769 1046 13       		.uleb128 0x13
 4770 1047 F6930000 		.long	0x93f6
 4771 104b 00       		.byte	0
 4772 104c 33       		.uleb128 0x33
 4773 104d 00000000 		.long	.LASF148
 4774 1051 02       		.byte	0x2
 4775 1052 EF01     		.value	0x1ef
 4776 1054 01       		.byte	0x1
 4777 1055 5D100000 		.long	0x105d
 4778 1059 6D100000 		.long	0x106d
 4779 105d 08       		.uleb128 0x8
 4780 105e A5980000 		.long	0x98a5
 4781 1062 13       		.uleb128 0x13
 4782 1063 CD840000 		.long	0x84cd
 4783 1067 13       		.uleb128 0x13
 4784 1068 F6930000 		.long	0x93f6
 4785 106c 00       		.byte	0
 4786 106d 33       		.uleb128 0x33
 4787 106e 00000000 		.long	.LASF148
 4788 1072 02       		.byte	0x2
 4789 1073 F601     		.value	0x1f6
 4790 1075 01       		.byte	0x1
 4791 1076 7E100000 		.long	0x107e
 4792 107a 93100000 		.long	0x1093
 4793 107e 08       		.uleb128 0x8
 4794 107f A5980000 		.long	0x98a5
 4795 1083 13       		.uleb128 0x13
 4796 1084 7F0A0000 		.long	0xa7f
 4797 1088 13       		.uleb128 0x13
 4798 1089 D8840000 		.long	0x84d8
 4799 108d 13       		.uleb128 0x13
 4800 108e F6930000 		.long	0x93f6
 4801 1092 00       		.byte	0
 4802 1093 33       		.uleb128 0x33
 4803 1094 00000000 		.long	.LASF148
 4804 1098 02       		.byte	0x2
 4805 1099 0002     		.value	0x200
 4806 109b 01       		.byte	0x1
 4807 109c A4100000 		.long	0x10a4
 4808 10a0 AF100000 		.long	0x10af
 4809 10a4 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 342


 4810 10a5 A5980000 		.long	0x98a5
 4811 10a9 13       		.uleb128 0x13
 4812 10aa BD980000 		.long	0x98bd
 4813 10ae 00       		.byte	0
 4814 10af 33       		.uleb128 0x33
 4815 10b0 00000000 		.long	.LASF148
 4816 10b4 02       		.byte	0x2
 4817 10b5 1202     		.value	0x212
 4818 10b7 01       		.byte	0x1
 4819 10b8 C0100000 		.long	0x10c0
 4820 10bc D0100000 		.long	0x10d0
 4821 10c0 08       		.uleb128 0x8
 4822 10c1 A5980000 		.long	0x98a5
 4823 10c5 13       		.uleb128 0x13
 4824 10c6 55230000 		.long	0x2355
 4825 10ca 13       		.uleb128 0x13
 4826 10cb F6930000 		.long	0x93f6
 4827 10cf 00       		.byte	0
 4828 10d0 33       		.uleb128 0x33
 4829 10d1 00000000 		.long	.LASF149
 4830 10d5 02       		.byte	0x2
 4831 10d6 2202     		.value	0x222
 4832 10d8 01       		.byte	0x1
 4833 10d9 E1100000 		.long	0x10e1
 4834 10dd EC100000 		.long	0x10ec
 4835 10e1 08       		.uleb128 0x8
 4836 10e2 A5980000 		.long	0x98a5
 4837 10e6 08       		.uleb128 0x8
 4838 10e7 E5710000 		.long	0x71e5
 4839 10eb 00       		.byte	0
 4840 10ec 35       		.uleb128 0x35
 4841 10ed 00000000 		.long	.LASF18
 4842 10f1 02       		.byte	0x2
 4843 10f2 2A02     		.value	0x22a
 4844 10f4 00000000 		.long	.LASF150
 4845 10f8 C3980000 		.long	0x98c3
 4846 10fc 01       		.byte	0x1
 4847 10fd 05110000 		.long	0x1105
 4848 1101 10110000 		.long	0x1110
 4849 1105 08       		.uleb128 0x8
 4850 1106 A5980000 		.long	0x98a5
 4851 110a 13       		.uleb128 0x13
 4852 110b B7980000 		.long	0x98b7
 4853 110f 00       		.byte	0
 4854 1110 35       		.uleb128 0x35
 4855 1111 00000000 		.long	.LASF18
 4856 1115 02       		.byte	0x2
 4857 1116 3202     		.value	0x232
 4858 1118 00000000 		.long	.LASF151
 4859 111c C3980000 		.long	0x98c3
 4860 1120 01       		.byte	0x1
 4861 1121 29110000 		.long	0x1129
 4862 1125 34110000 		.long	0x1134
 4863 1129 08       		.uleb128 0x8
 4864 112a A5980000 		.long	0x98a5
 4865 112e 13       		.uleb128 0x13
 4866 112f CD840000 		.long	0x84cd
GAS LISTING /tmp/ccKUqHDa.s 			page 343


 4867 1133 00       		.byte	0
 4868 1134 35       		.uleb128 0x35
 4869 1135 00000000 		.long	.LASF18
 4870 1139 02       		.byte	0x2
 4871 113a 3D02     		.value	0x23d
 4872 113c 00000000 		.long	.LASF152
 4873 1140 C3980000 		.long	0x98c3
 4874 1144 01       		.byte	0x1
 4875 1145 4D110000 		.long	0x114d
 4876 1149 58110000 		.long	0x1158
 4877 114d 08       		.uleb128 0x8
 4878 114e A5980000 		.long	0x98a5
 4879 1152 13       		.uleb128 0x13
 4880 1153 D8840000 		.long	0x84d8
 4881 1157 00       		.byte	0
 4882 1158 35       		.uleb128 0x35
 4883 1159 00000000 		.long	.LASF18
 4884 115d 02       		.byte	0x2
 4885 115e 4D02     		.value	0x24d
 4886 1160 00000000 		.long	.LASF153
 4887 1164 C3980000 		.long	0x98c3
 4888 1168 01       		.byte	0x1
 4889 1169 71110000 		.long	0x1171
 4890 116d 7C110000 		.long	0x117c
 4891 1171 08       		.uleb128 0x8
 4892 1172 A5980000 		.long	0x98a5
 4893 1176 13       		.uleb128 0x13
 4894 1177 BD980000 		.long	0x98bd
 4895 117b 00       		.byte	0
 4896 117c 35       		.uleb128 0x35
 4897 117d 00000000 		.long	.LASF18
 4898 1181 02       		.byte	0x2
 4899 1182 5902     		.value	0x259
 4900 1184 00000000 		.long	.LASF154
 4901 1188 C3980000 		.long	0x98c3
 4902 118c 01       		.byte	0x1
 4903 118d 95110000 		.long	0x1195
 4904 1191 A0110000 		.long	0x11a0
 4905 1195 08       		.uleb128 0x8
 4906 1196 A5980000 		.long	0x98a5
 4907 119a 13       		.uleb128 0x13
 4908 119b 55230000 		.long	0x2355
 4909 119f 00       		.byte	0
 4910 11a0 35       		.uleb128 0x35
 4911 11a1 00000000 		.long	.LASF155
 4912 11a5 02       		.byte	0x2
 4913 11a6 6602     		.value	0x266
 4914 11a8 00000000 		.long	.LASF156
 4915 11ac CE0A0000 		.long	0xace
 4916 11b0 01       		.byte	0x1
 4917 11b1 B9110000 		.long	0x11b9
 4918 11b5 BF110000 		.long	0x11bf
 4919 11b9 08       		.uleb128 0x8
 4920 11ba A5980000 		.long	0x98a5
 4921 11be 00       		.byte	0
 4922 11bf 35       		.uleb128 0x35
 4923 11c0 00000000 		.long	.LASF155
GAS LISTING /tmp/ccKUqHDa.s 			page 344


 4924 11c4 02       		.byte	0x2
 4925 11c5 7102     		.value	0x271
 4926 11c7 00000000 		.long	.LASF157
 4927 11cb DA0A0000 		.long	0xada
 4928 11cf 01       		.byte	0x1
 4929 11d0 D8110000 		.long	0x11d8
 4930 11d4 DE110000 		.long	0x11de
 4931 11d8 08       		.uleb128 0x8
 4932 11d9 9F980000 		.long	0x989f
 4933 11dd 00       		.byte	0
 4934 11de 36       		.uleb128 0x36
 4935 11df 656E6400 		.string	"end"
 4936 11e3 02       		.byte	0x2
 4937 11e4 7902     		.value	0x279
 4938 11e6 00000000 		.long	.LASF158
 4939 11ea CE0A0000 		.long	0xace
 4940 11ee 01       		.byte	0x1
 4941 11ef F7110000 		.long	0x11f7
 4942 11f3 FD110000 		.long	0x11fd
 4943 11f7 08       		.uleb128 0x8
 4944 11f8 A5980000 		.long	0x98a5
 4945 11fc 00       		.byte	0
 4946 11fd 36       		.uleb128 0x36
 4947 11fe 656E6400 		.string	"end"
 4948 1202 02       		.byte	0x2
 4949 1203 8402     		.value	0x284
 4950 1205 00000000 		.long	.LASF159
 4951 1209 DA0A0000 		.long	0xada
 4952 120d 01       		.byte	0x1
 4953 120e 16120000 		.long	0x1216
 4954 1212 1C120000 		.long	0x121c
 4955 1216 08       		.uleb128 0x8
 4956 1217 9F980000 		.long	0x989f
 4957 121b 00       		.byte	0
 4958 121c 35       		.uleb128 0x35
 4959 121d 00000000 		.long	.LASF160
 4960 1221 02       		.byte	0x2
 4961 1222 8D02     		.value	0x28d
 4962 1224 00000000 		.long	.LASF161
 4963 1228 F20A0000 		.long	0xaf2
 4964 122c 01       		.byte	0x1
 4965 122d 35120000 		.long	0x1235
 4966 1231 3B120000 		.long	0x123b
 4967 1235 08       		.uleb128 0x8
 4968 1236 A5980000 		.long	0x98a5
 4969 123a 00       		.byte	0
 4970 123b 35       		.uleb128 0x35
 4971 123c 00000000 		.long	.LASF160
 4972 1240 02       		.byte	0x2
 4973 1241 9602     		.value	0x296
 4974 1243 00000000 		.long	.LASF162
 4975 1247 E60A0000 		.long	0xae6
 4976 124b 01       		.byte	0x1
 4977 124c 54120000 		.long	0x1254
 4978 1250 5A120000 		.long	0x125a
 4979 1254 08       		.uleb128 0x8
 4980 1255 9F980000 		.long	0x989f
GAS LISTING /tmp/ccKUqHDa.s 			page 345


 4981 1259 00       		.byte	0
 4982 125a 35       		.uleb128 0x35
 4983 125b 00000000 		.long	.LASF163
 4984 125f 02       		.byte	0x2
 4985 1260 9F02     		.value	0x29f
 4986 1262 00000000 		.long	.LASF164
 4987 1266 F20A0000 		.long	0xaf2
 4988 126a 01       		.byte	0x1
 4989 126b 73120000 		.long	0x1273
 4990 126f 79120000 		.long	0x1279
 4991 1273 08       		.uleb128 0x8
 4992 1274 A5980000 		.long	0x98a5
 4993 1278 00       		.byte	0
 4994 1279 35       		.uleb128 0x35
 4995 127a 00000000 		.long	.LASF163
 4996 127e 02       		.byte	0x2
 4997 127f A802     		.value	0x2a8
 4998 1281 00000000 		.long	.LASF165
 4999 1285 E60A0000 		.long	0xae6
 5000 1289 01       		.byte	0x1
 5001 128a 92120000 		.long	0x1292
 5002 128e 98120000 		.long	0x1298
 5003 1292 08       		.uleb128 0x8
 5004 1293 9F980000 		.long	0x989f
 5005 1297 00       		.byte	0
 5006 1298 35       		.uleb128 0x35
 5007 1299 00000000 		.long	.LASF166
 5008 129d 02       		.byte	0x2
 5009 129e B102     		.value	0x2b1
 5010 12a0 00000000 		.long	.LASF167
 5011 12a4 DA0A0000 		.long	0xada
 5012 12a8 01       		.byte	0x1
 5013 12a9 B1120000 		.long	0x12b1
 5014 12ad B7120000 		.long	0x12b7
 5015 12b1 08       		.uleb128 0x8
 5016 12b2 9F980000 		.long	0x989f
 5017 12b6 00       		.byte	0
 5018 12b7 35       		.uleb128 0x35
 5019 12b8 00000000 		.long	.LASF168
 5020 12bc 02       		.byte	0x2
 5021 12bd B902     		.value	0x2b9
 5022 12bf 00000000 		.long	.LASF169
 5023 12c3 DA0A0000 		.long	0xada
 5024 12c7 01       		.byte	0x1
 5025 12c8 D0120000 		.long	0x12d0
 5026 12cc D6120000 		.long	0x12d6
 5027 12d0 08       		.uleb128 0x8
 5028 12d1 9F980000 		.long	0x989f
 5029 12d5 00       		.byte	0
 5030 12d6 35       		.uleb128 0x35
 5031 12d7 00000000 		.long	.LASF170
 5032 12db 02       		.byte	0x2
 5033 12dc C202     		.value	0x2c2
 5034 12de 00000000 		.long	.LASF171
 5035 12e2 E60A0000 		.long	0xae6
 5036 12e6 01       		.byte	0x1
 5037 12e7 EF120000 		.long	0x12ef
GAS LISTING /tmp/ccKUqHDa.s 			page 346


 5038 12eb F5120000 		.long	0x12f5
 5039 12ef 08       		.uleb128 0x8
 5040 12f0 9F980000 		.long	0x989f
 5041 12f4 00       		.byte	0
 5042 12f5 35       		.uleb128 0x35
 5043 12f6 00000000 		.long	.LASF172
 5044 12fa 02       		.byte	0x2
 5045 12fb CB02     		.value	0x2cb
 5046 12fd 00000000 		.long	.LASF173
 5047 1301 E60A0000 		.long	0xae6
 5048 1305 01       		.byte	0x1
 5049 1306 0E130000 		.long	0x130e
 5050 130a 14130000 		.long	0x1314
 5051 130e 08       		.uleb128 0x8
 5052 130f 9F980000 		.long	0x989f
 5053 1313 00       		.byte	0
 5054 1314 35       		.uleb128 0x35
 5055 1315 00000000 		.long	.LASF174
 5056 1319 02       		.byte	0x2
 5057 131a D402     		.value	0x2d4
 5058 131c 00000000 		.long	.LASF175
 5059 1320 7F0A0000 		.long	0xa7f
 5060 1324 01       		.byte	0x1
 5061 1325 2D130000 		.long	0x132d
 5062 1329 33130000 		.long	0x1333
 5063 132d 08       		.uleb128 0x8
 5064 132e 9F980000 		.long	0x989f
 5065 1332 00       		.byte	0
 5066 1333 35       		.uleb128 0x35
 5067 1334 00000000 		.long	.LASF39
 5068 1338 02       		.byte	0x2
 5069 1339 DA02     		.value	0x2da
 5070 133b 00000000 		.long	.LASF176
 5071 133f 7F0A0000 		.long	0xa7f
 5072 1343 01       		.byte	0x1
 5073 1344 4C130000 		.long	0x134c
 5074 1348 52130000 		.long	0x1352
 5075 134c 08       		.uleb128 0x8
 5076 134d 9F980000 		.long	0x989f
 5077 1351 00       		.byte	0
 5078 1352 35       		.uleb128 0x35
 5079 1353 00000000 		.long	.LASF177
 5080 1357 02       		.byte	0x2
 5081 1358 DF02     		.value	0x2df
 5082 135a 00000000 		.long	.LASF178
 5083 135e 7F0A0000 		.long	0xa7f
 5084 1362 01       		.byte	0x1
 5085 1363 6B130000 		.long	0x136b
 5086 1367 71130000 		.long	0x1371
 5087 136b 08       		.uleb128 0x8
 5088 136c 9F980000 		.long	0x989f
 5089 1370 00       		.byte	0
 5090 1371 37       		.uleb128 0x37
 5091 1372 00000000 		.long	.LASF179
 5092 1376 02       		.byte	0x2
 5093 1377 ED02     		.value	0x2ed
 5094 1379 00000000 		.long	.LASF180
GAS LISTING /tmp/ccKUqHDa.s 			page 347


 5095 137d 01       		.byte	0x1
 5096 137e 86130000 		.long	0x1386
 5097 1382 96130000 		.long	0x1396
 5098 1386 08       		.uleb128 0x8
 5099 1387 A5980000 		.long	0x98a5
 5100 138b 13       		.uleb128 0x13
 5101 138c 7F0A0000 		.long	0xa7f
 5102 1390 13       		.uleb128 0x13
 5103 1391 D8840000 		.long	0x84d8
 5104 1395 00       		.byte	0
 5105 1396 37       		.uleb128 0x37
 5106 1397 00000000 		.long	.LASF179
 5107 139b 02       		.byte	0x2
 5108 139c FA02     		.value	0x2fa
 5109 139e 00000000 		.long	.LASF181
 5110 13a2 01       		.byte	0x1
 5111 13a3 AB130000 		.long	0x13ab
 5112 13a7 B6130000 		.long	0x13b6
 5113 13ab 08       		.uleb128 0x8
 5114 13ac A5980000 		.long	0x98a5
 5115 13b0 13       		.uleb128 0x13
 5116 13b1 7F0A0000 		.long	0xa7f
 5117 13b5 00       		.byte	0
 5118 13b6 37       		.uleb128 0x37
 5119 13b7 00000000 		.long	.LASF182
 5120 13bb 02       		.byte	0x2
 5121 13bc 0003     		.value	0x300
 5122 13be 00000000 		.long	.LASF183
 5123 13c2 01       		.byte	0x1
 5124 13c3 CB130000 		.long	0x13cb
 5125 13c7 D1130000 		.long	0x13d1
 5126 13cb 08       		.uleb128 0x8
 5127 13cc A5980000 		.long	0x98a5
 5128 13d0 00       		.byte	0
 5129 13d1 35       		.uleb128 0x35
 5130 13d2 00000000 		.long	.LASF184
 5131 13d6 02       		.byte	0x2
 5132 13d7 1103     		.value	0x311
 5133 13d9 00000000 		.long	.LASF185
 5134 13dd 7F0A0000 		.long	0xa7f
 5135 13e1 01       		.byte	0x1
 5136 13e2 EA130000 		.long	0x13ea
 5137 13e6 F0130000 		.long	0x13f0
 5138 13ea 08       		.uleb128 0x8
 5139 13eb 9F980000 		.long	0x989f
 5140 13ef 00       		.byte	0
 5141 13f0 37       		.uleb128 0x37
 5142 13f1 00000000 		.long	.LASF186
 5143 13f5 02       		.byte	0x2
 5144 13f6 2603     		.value	0x326
 5145 13f8 00000000 		.long	.LASF187
 5146 13fc 01       		.byte	0x1
 5147 13fd 05140000 		.long	0x1405
 5148 1401 10140000 		.long	0x1410
 5149 1405 08       		.uleb128 0x8
 5150 1406 A5980000 		.long	0x98a5
 5151 140a 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 348


 5152 140b 7F0A0000 		.long	0xa7f
 5153 140f 00       		.byte	0
 5154 1410 37       		.uleb128 0x37
 5155 1411 00000000 		.long	.LASF188
 5156 1415 02       		.byte	0x2
 5157 1416 2D03     		.value	0x32d
 5158 1418 00000000 		.long	.LASF189
 5159 141c 01       		.byte	0x1
 5160 141d 25140000 		.long	0x1425
 5161 1421 2B140000 		.long	0x142b
 5162 1425 08       		.uleb128 0x8
 5163 1426 A5980000 		.long	0x98a5
 5164 142a 00       		.byte	0
 5165 142b 35       		.uleb128 0x35
 5166 142c 00000000 		.long	.LASF190
 5167 1430 02       		.byte	0x2
 5168 1431 3503     		.value	0x335
 5169 1433 00000000 		.long	.LASF191
 5170 1437 A3710000 		.long	0x71a3
 5171 143b 01       		.byte	0x1
 5172 143c 44140000 		.long	0x1444
 5173 1440 4A140000 		.long	0x144a
 5174 1444 08       		.uleb128 0x8
 5175 1445 9F980000 		.long	0x989f
 5176 1449 00       		.byte	0
 5177 144a 35       		.uleb128 0x35
 5178 144b 00000000 		.long	.LASF192
 5179 144f 02       		.byte	0x2
 5180 1450 4403     		.value	0x344
 5181 1452 00000000 		.long	.LASF193
 5182 1456 C20A0000 		.long	0xac2
 5183 145a 01       		.byte	0x1
 5184 145b 63140000 		.long	0x1463
 5185 145f 6E140000 		.long	0x146e
 5186 1463 08       		.uleb128 0x8
 5187 1464 9F980000 		.long	0x989f
 5188 1468 13       		.uleb128 0x13
 5189 1469 7F0A0000 		.long	0xa7f
 5190 146d 00       		.byte	0
 5191 146e 35       		.uleb128 0x35
 5192 146f 00000000 		.long	.LASF192
 5193 1473 02       		.byte	0x2
 5194 1474 5503     		.value	0x355
 5195 1476 00000000 		.long	.LASF194
 5196 147a B60A0000 		.long	0xab6
 5197 147e 01       		.byte	0x1
 5198 147f 87140000 		.long	0x1487
 5199 1483 92140000 		.long	0x1492
 5200 1487 08       		.uleb128 0x8
 5201 1488 A5980000 		.long	0x98a5
 5202 148c 13       		.uleb128 0x13
 5203 148d 7F0A0000 		.long	0xa7f
 5204 1491 00       		.byte	0
 5205 1492 36       		.uleb128 0x36
 5206 1493 617400   		.string	"at"
 5207 1496 02       		.byte	0x2
 5208 1497 6B03     		.value	0x36b
GAS LISTING /tmp/ccKUqHDa.s 			page 349


 5209 1499 00000000 		.long	.LASF195
 5210 149d C20A0000 		.long	0xac2
 5211 14a1 01       		.byte	0x1
 5212 14a2 AA140000 		.long	0x14aa
 5213 14a6 B5140000 		.long	0x14b5
 5214 14aa 08       		.uleb128 0x8
 5215 14ab 9F980000 		.long	0x989f
 5216 14af 13       		.uleb128 0x13
 5217 14b0 7F0A0000 		.long	0xa7f
 5218 14b4 00       		.byte	0
 5219 14b5 36       		.uleb128 0x36
 5220 14b6 617400   		.string	"at"
 5221 14b9 02       		.byte	0x2
 5222 14ba 8103     		.value	0x381
 5223 14bc 00000000 		.long	.LASF196
 5224 14c0 B60A0000 		.long	0xab6
 5225 14c4 01       		.byte	0x1
 5226 14c5 CD140000 		.long	0x14cd
 5227 14c9 D8140000 		.long	0x14d8
 5228 14cd 08       		.uleb128 0x8
 5229 14ce A5980000 		.long	0x98a5
 5230 14d2 13       		.uleb128 0x13
 5231 14d3 7F0A0000 		.long	0xa7f
 5232 14d7 00       		.byte	0
 5233 14d8 35       		.uleb128 0x35
 5234 14d9 00000000 		.long	.LASF197
 5235 14dd 02       		.byte	0x2
 5236 14de 9203     		.value	0x392
 5237 14e0 00000000 		.long	.LASF198
 5238 14e4 B60A0000 		.long	0xab6
 5239 14e8 01       		.byte	0x1
 5240 14e9 F1140000 		.long	0x14f1
 5241 14ed F7140000 		.long	0x14f7
 5242 14f1 08       		.uleb128 0x8
 5243 14f2 A5980000 		.long	0x98a5
 5244 14f6 00       		.byte	0
 5245 14f7 35       		.uleb128 0x35
 5246 14f8 00000000 		.long	.LASF197
 5247 14fc 02       		.byte	0x2
 5248 14fd 9A03     		.value	0x39a
 5249 14ff 00000000 		.long	.LASF199
 5250 1503 C20A0000 		.long	0xac2
 5251 1507 01       		.byte	0x1
 5252 1508 10150000 		.long	0x1510
 5253 150c 16150000 		.long	0x1516
 5254 1510 08       		.uleb128 0x8
 5255 1511 9F980000 		.long	0x989f
 5256 1515 00       		.byte	0
 5257 1516 35       		.uleb128 0x35
 5258 1517 00000000 		.long	.LASF200
 5259 151b 02       		.byte	0x2
 5260 151c A203     		.value	0x3a2
 5261 151e 00000000 		.long	.LASF201
 5262 1522 B60A0000 		.long	0xab6
 5263 1526 01       		.byte	0x1
 5264 1527 2F150000 		.long	0x152f
 5265 152b 35150000 		.long	0x1535
GAS LISTING /tmp/ccKUqHDa.s 			page 350


 5266 152f 08       		.uleb128 0x8
 5267 1530 A5980000 		.long	0x98a5
 5268 1534 00       		.byte	0
 5269 1535 35       		.uleb128 0x35
 5270 1536 00000000 		.long	.LASF200
 5271 153a 02       		.byte	0x2
 5272 153b AA03     		.value	0x3aa
 5273 153d 00000000 		.long	.LASF202
 5274 1541 C20A0000 		.long	0xac2
 5275 1545 01       		.byte	0x1
 5276 1546 4E150000 		.long	0x154e
 5277 154a 54150000 		.long	0x1554
 5278 154e 08       		.uleb128 0x8
 5279 154f 9F980000 		.long	0x989f
 5280 1553 00       		.byte	0
 5281 1554 35       		.uleb128 0x35
 5282 1555 00000000 		.long	.LASF203
 5283 1559 02       		.byte	0x2
 5284 155a B503     		.value	0x3b5
 5285 155c 00000000 		.long	.LASF204
 5286 1560 C3980000 		.long	0x98c3
 5287 1564 01       		.byte	0x1
 5288 1565 6D150000 		.long	0x156d
 5289 1569 78150000 		.long	0x1578
 5290 156d 08       		.uleb128 0x8
 5291 156e A5980000 		.long	0x98a5
 5292 1572 13       		.uleb128 0x13
 5293 1573 B7980000 		.long	0x98b7
 5294 1577 00       		.byte	0
 5295 1578 35       		.uleb128 0x35
 5296 1579 00000000 		.long	.LASF203
 5297 157d 02       		.byte	0x2
 5298 157e BE03     		.value	0x3be
 5299 1580 00000000 		.long	.LASF205
 5300 1584 C3980000 		.long	0x98c3
 5301 1588 01       		.byte	0x1
 5302 1589 91150000 		.long	0x1591
 5303 158d 9C150000 		.long	0x159c
 5304 1591 08       		.uleb128 0x8
 5305 1592 A5980000 		.long	0x98a5
 5306 1596 13       		.uleb128 0x13
 5307 1597 CD840000 		.long	0x84cd
 5308 159b 00       		.byte	0
 5309 159c 35       		.uleb128 0x35
 5310 159d 00000000 		.long	.LASF203
 5311 15a1 02       		.byte	0x2
 5312 15a2 C703     		.value	0x3c7
 5313 15a4 00000000 		.long	.LASF206
 5314 15a8 C3980000 		.long	0x98c3
 5315 15ac 01       		.byte	0x1
 5316 15ad B5150000 		.long	0x15b5
 5317 15b1 C0150000 		.long	0x15c0
 5318 15b5 08       		.uleb128 0x8
 5319 15b6 A5980000 		.long	0x98a5
 5320 15ba 13       		.uleb128 0x13
 5321 15bb D8840000 		.long	0x84d8
 5322 15bf 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 351


 5323 15c0 35       		.uleb128 0x35
 5324 15c1 00000000 		.long	.LASF203
 5325 15c5 02       		.byte	0x2
 5326 15c6 D403     		.value	0x3d4
 5327 15c8 00000000 		.long	.LASF207
 5328 15cc C3980000 		.long	0x98c3
 5329 15d0 01       		.byte	0x1
 5330 15d1 D9150000 		.long	0x15d9
 5331 15d5 E4150000 		.long	0x15e4
 5332 15d9 08       		.uleb128 0x8
 5333 15da A5980000 		.long	0x98a5
 5334 15de 13       		.uleb128 0x13
 5335 15df 55230000 		.long	0x2355
 5336 15e3 00       		.byte	0
 5337 15e4 35       		.uleb128 0x35
 5338 15e5 00000000 		.long	.LASF208
 5339 15e9 02       		.byte	0x2
 5340 15ea DE03     		.value	0x3de
 5341 15ec 00000000 		.long	.LASF209
 5342 15f0 C3980000 		.long	0x98c3
 5343 15f4 01       		.byte	0x1
 5344 15f5 FD150000 		.long	0x15fd
 5345 15f9 08160000 		.long	0x1608
 5346 15fd 08       		.uleb128 0x8
 5347 15fe A5980000 		.long	0x98a5
 5348 1602 13       		.uleb128 0x13
 5349 1603 B7980000 		.long	0x98b7
 5350 1607 00       		.byte	0
 5351 1608 35       		.uleb128 0x35
 5352 1609 00000000 		.long	.LASF208
 5353 160d 02       		.byte	0x2
 5354 160e EE03     		.value	0x3ee
 5355 1610 00000000 		.long	.LASF210
 5356 1614 C3980000 		.long	0x98c3
 5357 1618 01       		.byte	0x1
 5358 1619 21160000 		.long	0x1621
 5359 161d 36160000 		.long	0x1636
 5360 1621 08       		.uleb128 0x8
 5361 1622 A5980000 		.long	0x98a5
 5362 1626 13       		.uleb128 0x13
 5363 1627 B7980000 		.long	0x98b7
 5364 162b 13       		.uleb128 0x13
 5365 162c 7F0A0000 		.long	0xa7f
 5366 1630 13       		.uleb128 0x13
 5367 1631 7F0A0000 		.long	0xa7f
 5368 1635 00       		.byte	0
 5369 1636 35       		.uleb128 0x35
 5370 1637 00000000 		.long	.LASF208
 5371 163b 02       		.byte	0x2
 5372 163c F703     		.value	0x3f7
 5373 163e 00000000 		.long	.LASF211
 5374 1642 C3980000 		.long	0x98c3
 5375 1646 01       		.byte	0x1
 5376 1647 4F160000 		.long	0x164f
 5377 164b 5F160000 		.long	0x165f
 5378 164f 08       		.uleb128 0x8
 5379 1650 A5980000 		.long	0x98a5
GAS LISTING /tmp/ccKUqHDa.s 			page 352


 5380 1654 13       		.uleb128 0x13
 5381 1655 CD840000 		.long	0x84cd
 5382 1659 13       		.uleb128 0x13
 5383 165a 7F0A0000 		.long	0xa7f
 5384 165e 00       		.byte	0
 5385 165f 35       		.uleb128 0x35
 5386 1660 00000000 		.long	.LASF208
 5387 1664 02       		.byte	0x2
 5388 1665 FF03     		.value	0x3ff
 5389 1667 00000000 		.long	.LASF212
 5390 166b C3980000 		.long	0x98c3
 5391 166f 01       		.byte	0x1
 5392 1670 78160000 		.long	0x1678
 5393 1674 83160000 		.long	0x1683
 5394 1678 08       		.uleb128 0x8
 5395 1679 A5980000 		.long	0x98a5
 5396 167d 13       		.uleb128 0x13
 5397 167e CD840000 		.long	0x84cd
 5398 1682 00       		.byte	0
 5399 1683 35       		.uleb128 0x35
 5400 1684 00000000 		.long	.LASF208
 5401 1688 02       		.byte	0x2
 5402 1689 0E04     		.value	0x40e
 5403 168b 00000000 		.long	.LASF213
 5404 168f C3980000 		.long	0x98c3
 5405 1693 01       		.byte	0x1
 5406 1694 9C160000 		.long	0x169c
 5407 1698 AC160000 		.long	0x16ac
 5408 169c 08       		.uleb128 0x8
 5409 169d A5980000 		.long	0x98a5
 5410 16a1 13       		.uleb128 0x13
 5411 16a2 7F0A0000 		.long	0xa7f
 5412 16a6 13       		.uleb128 0x13
 5413 16a7 D8840000 		.long	0x84d8
 5414 16ab 00       		.byte	0
 5415 16ac 35       		.uleb128 0x35
 5416 16ad 00000000 		.long	.LASF208
 5417 16b1 02       		.byte	0x2
 5418 16b2 1704     		.value	0x417
 5419 16b4 00000000 		.long	.LASF214
 5420 16b8 C3980000 		.long	0x98c3
 5421 16bc 01       		.byte	0x1
 5422 16bd C5160000 		.long	0x16c5
 5423 16c1 D0160000 		.long	0x16d0
 5424 16c5 08       		.uleb128 0x8
 5425 16c6 A5980000 		.long	0x98a5
 5426 16ca 13       		.uleb128 0x13
 5427 16cb 55230000 		.long	0x2355
 5428 16cf 00       		.byte	0
 5429 16d0 37       		.uleb128 0x37
 5430 16d1 00000000 		.long	.LASF215
 5431 16d5 02       		.byte	0x2
 5432 16d6 2D04     		.value	0x42d
 5433 16d8 00000000 		.long	.LASF216
 5434 16dc 01       		.byte	0x1
 5435 16dd E5160000 		.long	0x16e5
 5436 16e1 F0160000 		.long	0x16f0
GAS LISTING /tmp/ccKUqHDa.s 			page 353


 5437 16e5 08       		.uleb128 0x8
 5438 16e6 A5980000 		.long	0x98a5
 5439 16ea 13       		.uleb128 0x13
 5440 16eb D8840000 		.long	0x84d8
 5441 16ef 00       		.byte	0
 5442 16f0 35       		.uleb128 0x35
 5443 16f1 00000000 		.long	.LASF48
 5444 16f5 02       		.byte	0x2
 5445 16f6 3C04     		.value	0x43c
 5446 16f8 00000000 		.long	.LASF217
 5447 16fc C3980000 		.long	0x98c3
 5448 1700 01       		.byte	0x1
 5449 1701 09170000 		.long	0x1709
 5450 1705 14170000 		.long	0x1714
 5451 1709 08       		.uleb128 0x8
 5452 170a A5980000 		.long	0x98a5
 5453 170e 13       		.uleb128 0x13
 5454 170f B7980000 		.long	0x98b7
 5455 1713 00       		.byte	0
 5456 1714 35       		.uleb128 0x35
 5457 1715 00000000 		.long	.LASF48
 5458 1719 02       		.byte	0x2
 5459 171a 4904     		.value	0x449
 5460 171c 00000000 		.long	.LASF218
 5461 1720 C3980000 		.long	0x98c3
 5462 1724 01       		.byte	0x1
 5463 1725 2D170000 		.long	0x172d
 5464 1729 38170000 		.long	0x1738
 5465 172d 08       		.uleb128 0x8
 5466 172e A5980000 		.long	0x98a5
 5467 1732 13       		.uleb128 0x13
 5468 1733 BD980000 		.long	0x98bd
 5469 1737 00       		.byte	0
 5470 1738 35       		.uleb128 0x35
 5471 1739 00000000 		.long	.LASF48
 5472 173d 02       		.byte	0x2
 5473 173e 5E04     		.value	0x45e
 5474 1740 00000000 		.long	.LASF219
 5475 1744 C3980000 		.long	0x98c3
 5476 1748 01       		.byte	0x1
 5477 1749 51170000 		.long	0x1751
 5478 174d 66170000 		.long	0x1766
 5479 1751 08       		.uleb128 0x8
 5480 1752 A5980000 		.long	0x98a5
 5481 1756 13       		.uleb128 0x13
 5482 1757 B7980000 		.long	0x98b7
 5483 175b 13       		.uleb128 0x13
 5484 175c 7F0A0000 		.long	0xa7f
 5485 1760 13       		.uleb128 0x13
 5486 1761 7F0A0000 		.long	0xa7f
 5487 1765 00       		.byte	0
 5488 1766 35       		.uleb128 0x35
 5489 1767 00000000 		.long	.LASF48
 5490 176b 02       		.byte	0x2
 5491 176c 6E04     		.value	0x46e
 5492 176e 00000000 		.long	.LASF220
 5493 1772 C3980000 		.long	0x98c3
GAS LISTING /tmp/ccKUqHDa.s 			page 354


 5494 1776 01       		.byte	0x1
 5495 1777 7F170000 		.long	0x177f
 5496 177b 8F170000 		.long	0x178f
 5497 177f 08       		.uleb128 0x8
 5498 1780 A5980000 		.long	0x98a5
 5499 1784 13       		.uleb128 0x13
 5500 1785 CD840000 		.long	0x84cd
 5501 1789 13       		.uleb128 0x13
 5502 178a 7F0A0000 		.long	0xa7f
 5503 178e 00       		.byte	0
 5504 178f 35       		.uleb128 0x35
 5505 1790 00000000 		.long	.LASF48
 5506 1794 02       		.byte	0x2
 5507 1795 7A04     		.value	0x47a
 5508 1797 00000000 		.long	.LASF221
 5509 179b C3980000 		.long	0x98c3
 5510 179f 01       		.byte	0x1
 5511 17a0 A8170000 		.long	0x17a8
 5512 17a4 B3170000 		.long	0x17b3
 5513 17a8 08       		.uleb128 0x8
 5514 17a9 A5980000 		.long	0x98a5
 5515 17ad 13       		.uleb128 0x13
 5516 17ae CD840000 		.long	0x84cd
 5517 17b2 00       		.byte	0
 5518 17b3 35       		.uleb128 0x35
 5519 17b4 00000000 		.long	.LASF48
 5520 17b8 02       		.byte	0x2
 5521 17b9 8A04     		.value	0x48a
 5522 17bb 00000000 		.long	.LASF222
 5523 17bf C3980000 		.long	0x98c3
 5524 17c3 01       		.byte	0x1
 5525 17c4 CC170000 		.long	0x17cc
 5526 17c8 DC170000 		.long	0x17dc
 5527 17cc 08       		.uleb128 0x8
 5528 17cd A5980000 		.long	0x98a5
 5529 17d1 13       		.uleb128 0x13
 5530 17d2 7F0A0000 		.long	0xa7f
 5531 17d6 13       		.uleb128 0x13
 5532 17d7 D8840000 		.long	0x84d8
 5533 17db 00       		.byte	0
 5534 17dc 35       		.uleb128 0x35
 5535 17dd 00000000 		.long	.LASF48
 5536 17e1 02       		.byte	0x2
 5537 17e2 A104     		.value	0x4a1
 5538 17e4 00000000 		.long	.LASF223
 5539 17e8 C3980000 		.long	0x98c3
 5540 17ec 01       		.byte	0x1
 5541 17ed F5170000 		.long	0x17f5
 5542 17f1 00180000 		.long	0x1800
 5543 17f5 08       		.uleb128 0x8
 5544 17f6 A5980000 		.long	0x98a5
 5545 17fa 13       		.uleb128 0x13
 5546 17fb 55230000 		.long	0x2355
 5547 17ff 00       		.byte	0
 5548 1800 37       		.uleb128 0x37
 5549 1801 00000000 		.long	.LASF224
 5550 1805 02       		.byte	0x2
GAS LISTING /tmp/ccKUqHDa.s 			page 355


 5551 1806 B304     		.value	0x4b3
 5552 1808 00000000 		.long	.LASF225
 5553 180c 01       		.byte	0x1
 5554 180d 15180000 		.long	0x1815
 5555 1811 2A180000 		.long	0x182a
 5556 1815 08       		.uleb128 0x8
 5557 1816 A5980000 		.long	0x98a5
 5558 181a 13       		.uleb128 0x13
 5559 181b CE0A0000 		.long	0xace
 5560 181f 13       		.uleb128 0x13
 5561 1820 7F0A0000 		.long	0xa7f
 5562 1824 13       		.uleb128 0x13
 5563 1825 D8840000 		.long	0x84d8
 5564 1829 00       		.byte	0
 5565 182a 37       		.uleb128 0x37
 5566 182b 00000000 		.long	.LASF224
 5567 182f 02       		.byte	0x2
 5568 1830 CF04     		.value	0x4cf
 5569 1832 00000000 		.long	.LASF226
 5570 1836 01       		.byte	0x1
 5571 1837 3F180000 		.long	0x183f
 5572 183b 4F180000 		.long	0x184f
 5573 183f 08       		.uleb128 0x8
 5574 1840 A5980000 		.long	0x98a5
 5575 1844 13       		.uleb128 0x13
 5576 1845 CE0A0000 		.long	0xace
 5577 1849 13       		.uleb128 0x13
 5578 184a 55230000 		.long	0x2355
 5579 184e 00       		.byte	0
 5580 184f 35       		.uleb128 0x35
 5581 1850 00000000 		.long	.LASF224
 5582 1854 02       		.byte	0x2
 5583 1855 E304     		.value	0x4e3
 5584 1857 00000000 		.long	.LASF227
 5585 185b C3980000 		.long	0x98c3
 5586 185f 01       		.byte	0x1
 5587 1860 68180000 		.long	0x1868
 5588 1864 78180000 		.long	0x1878
 5589 1868 08       		.uleb128 0x8
 5590 1869 A5980000 		.long	0x98a5
 5591 186d 13       		.uleb128 0x13
 5592 186e 7F0A0000 		.long	0xa7f
 5593 1872 13       		.uleb128 0x13
 5594 1873 B7980000 		.long	0x98b7
 5595 1877 00       		.byte	0
 5596 1878 35       		.uleb128 0x35
 5597 1879 00000000 		.long	.LASF224
 5598 187d 02       		.byte	0x2
 5599 187e F904     		.value	0x4f9
 5600 1880 00000000 		.long	.LASF228
 5601 1884 C3980000 		.long	0x98c3
 5602 1888 01       		.byte	0x1
 5603 1889 91180000 		.long	0x1891
 5604 188d AB180000 		.long	0x18ab
 5605 1891 08       		.uleb128 0x8
 5606 1892 A5980000 		.long	0x98a5
 5607 1896 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 356


 5608 1897 7F0A0000 		.long	0xa7f
 5609 189b 13       		.uleb128 0x13
 5610 189c B7980000 		.long	0x98b7
 5611 18a0 13       		.uleb128 0x13
 5612 18a1 7F0A0000 		.long	0xa7f
 5613 18a5 13       		.uleb128 0x13
 5614 18a6 7F0A0000 		.long	0xa7f
 5615 18aa 00       		.byte	0
 5616 18ab 35       		.uleb128 0x35
 5617 18ac 00000000 		.long	.LASF224
 5618 18b0 02       		.byte	0x2
 5619 18b1 1005     		.value	0x510
 5620 18b3 00000000 		.long	.LASF229
 5621 18b7 C3980000 		.long	0x98c3
 5622 18bb 01       		.byte	0x1
 5623 18bc C4180000 		.long	0x18c4
 5624 18c0 D9180000 		.long	0x18d9
 5625 18c4 08       		.uleb128 0x8
 5626 18c5 A5980000 		.long	0x98a5
 5627 18c9 13       		.uleb128 0x13
 5628 18ca 7F0A0000 		.long	0xa7f
 5629 18ce 13       		.uleb128 0x13
 5630 18cf CD840000 		.long	0x84cd
 5631 18d3 13       		.uleb128 0x13
 5632 18d4 7F0A0000 		.long	0xa7f
 5633 18d8 00       		.byte	0
 5634 18d9 35       		.uleb128 0x35
 5635 18da 00000000 		.long	.LASF224
 5636 18de 02       		.byte	0x2
 5637 18df 2205     		.value	0x522
 5638 18e1 00000000 		.long	.LASF230
 5639 18e5 C3980000 		.long	0x98c3
 5640 18e9 01       		.byte	0x1
 5641 18ea F2180000 		.long	0x18f2
 5642 18ee 02190000 		.long	0x1902
 5643 18f2 08       		.uleb128 0x8
 5644 18f3 A5980000 		.long	0x98a5
 5645 18f7 13       		.uleb128 0x13
 5646 18f8 7F0A0000 		.long	0xa7f
 5647 18fc 13       		.uleb128 0x13
 5648 18fd CD840000 		.long	0x84cd
 5649 1901 00       		.byte	0
 5650 1902 35       		.uleb128 0x35
 5651 1903 00000000 		.long	.LASF224
 5652 1907 02       		.byte	0x2
 5653 1908 3905     		.value	0x539
 5654 190a 00000000 		.long	.LASF231
 5655 190e C3980000 		.long	0x98c3
 5656 1912 01       		.byte	0x1
 5657 1913 1B190000 		.long	0x191b
 5658 1917 30190000 		.long	0x1930
 5659 191b 08       		.uleb128 0x8
 5660 191c A5980000 		.long	0x98a5
 5661 1920 13       		.uleb128 0x13
 5662 1921 7F0A0000 		.long	0xa7f
 5663 1925 13       		.uleb128 0x13
 5664 1926 7F0A0000 		.long	0xa7f
GAS LISTING /tmp/ccKUqHDa.s 			page 357


 5665 192a 13       		.uleb128 0x13
 5666 192b D8840000 		.long	0x84d8
 5667 192f 00       		.byte	0
 5668 1930 35       		.uleb128 0x35
 5669 1931 00000000 		.long	.LASF224
 5670 1935 02       		.byte	0x2
 5671 1936 4B05     		.value	0x54b
 5672 1938 00000000 		.long	.LASF232
 5673 193c CE0A0000 		.long	0xace
 5674 1940 01       		.byte	0x1
 5675 1941 49190000 		.long	0x1949
 5676 1945 59190000 		.long	0x1959
 5677 1949 08       		.uleb128 0x8
 5678 194a A5980000 		.long	0x98a5
 5679 194e 13       		.uleb128 0x13
 5680 194f CE0A0000 		.long	0xace
 5681 1953 13       		.uleb128 0x13
 5682 1954 D8840000 		.long	0x84d8
 5683 1958 00       		.byte	0
 5684 1959 35       		.uleb128 0x35
 5685 195a 00000000 		.long	.LASF233
 5686 195e 02       		.byte	0x2
 5687 195f 6405     		.value	0x564
 5688 1961 00000000 		.long	.LASF234
 5689 1965 C3980000 		.long	0x98c3
 5690 1969 01       		.byte	0x1
 5691 196a 72190000 		.long	0x1972
 5692 196e 82190000 		.long	0x1982
 5693 1972 08       		.uleb128 0x8
 5694 1973 A5980000 		.long	0x98a5
 5695 1977 13       		.uleb128 0x13
 5696 1978 7F0A0000 		.long	0xa7f
 5697 197c 13       		.uleb128 0x13
 5698 197d 7F0A0000 		.long	0xa7f
 5699 1981 00       		.byte	0
 5700 1982 35       		.uleb128 0x35
 5701 1983 00000000 		.long	.LASF233
 5702 1987 02       		.byte	0x2
 5703 1988 7405     		.value	0x574
 5704 198a 00000000 		.long	.LASF235
 5705 198e CE0A0000 		.long	0xace
 5706 1992 01       		.byte	0x1
 5707 1993 9B190000 		.long	0x199b
 5708 1997 A6190000 		.long	0x19a6
 5709 199b 08       		.uleb128 0x8
 5710 199c A5980000 		.long	0x98a5
 5711 19a0 13       		.uleb128 0x13
 5712 19a1 CE0A0000 		.long	0xace
 5713 19a5 00       		.byte	0
 5714 19a6 35       		.uleb128 0x35
 5715 19a7 00000000 		.long	.LASF233
 5716 19ab 02       		.byte	0x2
 5717 19ac 8805     		.value	0x588
 5718 19ae 00000000 		.long	.LASF236
 5719 19b2 CE0A0000 		.long	0xace
 5720 19b6 01       		.byte	0x1
 5721 19b7 BF190000 		.long	0x19bf
GAS LISTING /tmp/ccKUqHDa.s 			page 358


 5722 19bb CF190000 		.long	0x19cf
 5723 19bf 08       		.uleb128 0x8
 5724 19c0 A5980000 		.long	0x98a5
 5725 19c4 13       		.uleb128 0x13
 5726 19c5 CE0A0000 		.long	0xace
 5727 19c9 13       		.uleb128 0x13
 5728 19ca CE0A0000 		.long	0xace
 5729 19ce 00       		.byte	0
 5730 19cf 37       		.uleb128 0x37
 5731 19d0 00000000 		.long	.LASF237
 5732 19d4 02       		.byte	0x2
 5733 19d5 9105     		.value	0x591
 5734 19d7 00000000 		.long	.LASF238
 5735 19db 01       		.byte	0x1
 5736 19dc E4190000 		.long	0x19e4
 5737 19e0 EA190000 		.long	0x19ea
 5738 19e4 08       		.uleb128 0x8
 5739 19e5 A5980000 		.long	0x98a5
 5740 19e9 00       		.byte	0
 5741 19ea 35       		.uleb128 0x35
 5742 19eb 00000000 		.long	.LASF239
 5743 19ef 02       		.byte	0x2
 5744 19f0 A705     		.value	0x5a7
 5745 19f2 00000000 		.long	.LASF240
 5746 19f6 C3980000 		.long	0x98c3
 5747 19fa 01       		.byte	0x1
 5748 19fb 031A0000 		.long	0x1a03
 5749 19ff 181A0000 		.long	0x1a18
 5750 1a03 08       		.uleb128 0x8
 5751 1a04 A5980000 		.long	0x98a5
 5752 1a08 13       		.uleb128 0x13
 5753 1a09 7F0A0000 		.long	0xa7f
 5754 1a0d 13       		.uleb128 0x13
 5755 1a0e 7F0A0000 		.long	0xa7f
 5756 1a12 13       		.uleb128 0x13
 5757 1a13 B7980000 		.long	0x98b7
 5758 1a17 00       		.byte	0
 5759 1a18 35       		.uleb128 0x35
 5760 1a19 00000000 		.long	.LASF239
 5761 1a1d 02       		.byte	0x2
 5762 1a1e BD05     		.value	0x5bd
 5763 1a20 00000000 		.long	.LASF241
 5764 1a24 C3980000 		.long	0x98c3
 5765 1a28 01       		.byte	0x1
 5766 1a29 311A0000 		.long	0x1a31
 5767 1a2d 501A0000 		.long	0x1a50
 5768 1a31 08       		.uleb128 0x8
 5769 1a32 A5980000 		.long	0x98a5
 5770 1a36 13       		.uleb128 0x13
 5771 1a37 7F0A0000 		.long	0xa7f
 5772 1a3b 13       		.uleb128 0x13
 5773 1a3c 7F0A0000 		.long	0xa7f
 5774 1a40 13       		.uleb128 0x13
 5775 1a41 B7980000 		.long	0x98b7
 5776 1a45 13       		.uleb128 0x13
 5777 1a46 7F0A0000 		.long	0xa7f
 5778 1a4a 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 359


 5779 1a4b 7F0A0000 		.long	0xa7f
 5780 1a4f 00       		.byte	0
 5781 1a50 35       		.uleb128 0x35
 5782 1a51 00000000 		.long	.LASF239
 5783 1a55 02       		.byte	0x2
 5784 1a56 D605     		.value	0x5d6
 5785 1a58 00000000 		.long	.LASF242
 5786 1a5c C3980000 		.long	0x98c3
 5787 1a60 01       		.byte	0x1
 5788 1a61 691A0000 		.long	0x1a69
 5789 1a65 831A0000 		.long	0x1a83
 5790 1a69 08       		.uleb128 0x8
 5791 1a6a A5980000 		.long	0x98a5
 5792 1a6e 13       		.uleb128 0x13
 5793 1a6f 7F0A0000 		.long	0xa7f
 5794 1a73 13       		.uleb128 0x13
 5795 1a74 7F0A0000 		.long	0xa7f
 5796 1a78 13       		.uleb128 0x13
 5797 1a79 CD840000 		.long	0x84cd
 5798 1a7d 13       		.uleb128 0x13
 5799 1a7e 7F0A0000 		.long	0xa7f
 5800 1a82 00       		.byte	0
 5801 1a83 35       		.uleb128 0x35
 5802 1a84 00000000 		.long	.LASF239
 5803 1a88 02       		.byte	0x2
 5804 1a89 EA05     		.value	0x5ea
 5805 1a8b 00000000 		.long	.LASF243
 5806 1a8f C3980000 		.long	0x98c3
 5807 1a93 01       		.byte	0x1
 5808 1a94 9C1A0000 		.long	0x1a9c
 5809 1a98 B11A0000 		.long	0x1ab1
 5810 1a9c 08       		.uleb128 0x8
 5811 1a9d A5980000 		.long	0x98a5
 5812 1aa1 13       		.uleb128 0x13
 5813 1aa2 7F0A0000 		.long	0xa7f
 5814 1aa6 13       		.uleb128 0x13
 5815 1aa7 7F0A0000 		.long	0xa7f
 5816 1aab 13       		.uleb128 0x13
 5817 1aac CD840000 		.long	0x84cd
 5818 1ab0 00       		.byte	0
 5819 1ab1 35       		.uleb128 0x35
 5820 1ab2 00000000 		.long	.LASF239
 5821 1ab6 02       		.byte	0x2
 5822 1ab7 0206     		.value	0x602
 5823 1ab9 00000000 		.long	.LASF244
 5824 1abd C3980000 		.long	0x98c3
 5825 1ac1 01       		.byte	0x1
 5826 1ac2 CA1A0000 		.long	0x1aca
 5827 1ac6 E41A0000 		.long	0x1ae4
 5828 1aca 08       		.uleb128 0x8
 5829 1acb A5980000 		.long	0x98a5
 5830 1acf 13       		.uleb128 0x13
 5831 1ad0 7F0A0000 		.long	0xa7f
 5832 1ad4 13       		.uleb128 0x13
 5833 1ad5 7F0A0000 		.long	0xa7f
 5834 1ad9 13       		.uleb128 0x13
 5835 1ada 7F0A0000 		.long	0xa7f
GAS LISTING /tmp/ccKUqHDa.s 			page 360


 5836 1ade 13       		.uleb128 0x13
 5837 1adf D8840000 		.long	0x84d8
 5838 1ae3 00       		.byte	0
 5839 1ae4 35       		.uleb128 0x35
 5840 1ae5 00000000 		.long	.LASF239
 5841 1ae9 02       		.byte	0x2
 5842 1aea 1406     		.value	0x614
 5843 1aec 00000000 		.long	.LASF245
 5844 1af0 C3980000 		.long	0x98c3
 5845 1af4 01       		.byte	0x1
 5846 1af5 FD1A0000 		.long	0x1afd
 5847 1af9 121B0000 		.long	0x1b12
 5848 1afd 08       		.uleb128 0x8
 5849 1afe A5980000 		.long	0x98a5
 5850 1b02 13       		.uleb128 0x13
 5851 1b03 CE0A0000 		.long	0xace
 5852 1b07 13       		.uleb128 0x13
 5853 1b08 CE0A0000 		.long	0xace
 5854 1b0c 13       		.uleb128 0x13
 5855 1b0d B7980000 		.long	0x98b7
 5856 1b11 00       		.byte	0
 5857 1b12 35       		.uleb128 0x35
 5858 1b13 00000000 		.long	.LASF239
 5859 1b17 02       		.byte	0x2
 5860 1b18 2706     		.value	0x627
 5861 1b1a 00000000 		.long	.LASF246
 5862 1b1e C3980000 		.long	0x98c3
 5863 1b22 01       		.byte	0x1
 5864 1b23 2B1B0000 		.long	0x1b2b
 5865 1b27 451B0000 		.long	0x1b45
 5866 1b2b 08       		.uleb128 0x8
 5867 1b2c A5980000 		.long	0x98a5
 5868 1b30 13       		.uleb128 0x13
 5869 1b31 CE0A0000 		.long	0xace
 5870 1b35 13       		.uleb128 0x13
 5871 1b36 CE0A0000 		.long	0xace
 5872 1b3a 13       		.uleb128 0x13
 5873 1b3b CD840000 		.long	0x84cd
 5874 1b3f 13       		.uleb128 0x13
 5875 1b40 7F0A0000 		.long	0xa7f
 5876 1b44 00       		.byte	0
 5877 1b45 35       		.uleb128 0x35
 5878 1b46 00000000 		.long	.LASF239
 5879 1b4a 02       		.byte	0x2
 5880 1b4b 3C06     		.value	0x63c
 5881 1b4d 00000000 		.long	.LASF247
 5882 1b51 C3980000 		.long	0x98c3
 5883 1b55 01       		.byte	0x1
 5884 1b56 5E1B0000 		.long	0x1b5e
 5885 1b5a 731B0000 		.long	0x1b73
 5886 1b5e 08       		.uleb128 0x8
 5887 1b5f A5980000 		.long	0x98a5
 5888 1b63 13       		.uleb128 0x13
 5889 1b64 CE0A0000 		.long	0xace
 5890 1b68 13       		.uleb128 0x13
 5891 1b69 CE0A0000 		.long	0xace
 5892 1b6d 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 361


 5893 1b6e CD840000 		.long	0x84cd
 5894 1b72 00       		.byte	0
 5895 1b73 35       		.uleb128 0x35
 5896 1b74 00000000 		.long	.LASF239
 5897 1b78 02       		.byte	0x2
 5898 1b79 5106     		.value	0x651
 5899 1b7b 00000000 		.long	.LASF248
 5900 1b7f C3980000 		.long	0x98c3
 5901 1b83 01       		.byte	0x1
 5902 1b84 8C1B0000 		.long	0x1b8c
 5903 1b88 A61B0000 		.long	0x1ba6
 5904 1b8c 08       		.uleb128 0x8
 5905 1b8d A5980000 		.long	0x98a5
 5906 1b91 13       		.uleb128 0x13
 5907 1b92 CE0A0000 		.long	0xace
 5908 1b96 13       		.uleb128 0x13
 5909 1b97 CE0A0000 		.long	0xace
 5910 1b9b 13       		.uleb128 0x13
 5911 1b9c 7F0A0000 		.long	0xa7f
 5912 1ba0 13       		.uleb128 0x13
 5913 1ba1 D8840000 		.long	0x84d8
 5914 1ba5 00       		.byte	0
 5915 1ba6 35       		.uleb128 0x35
 5916 1ba7 00000000 		.long	.LASF239
 5917 1bab 02       		.byte	0x2
 5918 1bac 7606     		.value	0x676
 5919 1bae 00000000 		.long	.LASF249
 5920 1bb2 C3980000 		.long	0x98c3
 5921 1bb6 01       		.byte	0x1
 5922 1bb7 BF1B0000 		.long	0x1bbf
 5923 1bbb D91B0000 		.long	0x1bd9
 5924 1bbf 08       		.uleb128 0x8
 5925 1bc0 A5980000 		.long	0x98a5
 5926 1bc4 13       		.uleb128 0x13
 5927 1bc5 CE0A0000 		.long	0xace
 5928 1bc9 13       		.uleb128 0x13
 5929 1bca CE0A0000 		.long	0xace
 5930 1bce 13       		.uleb128 0x13
 5931 1bcf 18850000 		.long	0x8518
 5932 1bd3 13       		.uleb128 0x13
 5933 1bd4 18850000 		.long	0x8518
 5934 1bd8 00       		.byte	0
 5935 1bd9 35       		.uleb128 0x35
 5936 1bda 00000000 		.long	.LASF239
 5937 1bde 02       		.byte	0x2
 5938 1bdf 8006     		.value	0x680
 5939 1be1 00000000 		.long	.LASF250
 5940 1be5 C3980000 		.long	0x98c3
 5941 1be9 01       		.byte	0x1
 5942 1bea F21B0000 		.long	0x1bf2
 5943 1bee 0C1C0000 		.long	0x1c0c
 5944 1bf2 08       		.uleb128 0x8
 5945 1bf3 A5980000 		.long	0x98a5
 5946 1bf7 13       		.uleb128 0x13
 5947 1bf8 CE0A0000 		.long	0xace
 5948 1bfc 13       		.uleb128 0x13
 5949 1bfd CE0A0000 		.long	0xace
GAS LISTING /tmp/ccKUqHDa.s 			page 362


 5950 1c01 13       		.uleb128 0x13
 5951 1c02 CD840000 		.long	0x84cd
 5952 1c06 13       		.uleb128 0x13
 5953 1c07 CD840000 		.long	0x84cd
 5954 1c0b 00       		.byte	0
 5955 1c0c 35       		.uleb128 0x35
 5956 1c0d 00000000 		.long	.LASF239
 5957 1c11 02       		.byte	0x2
 5958 1c12 8B06     		.value	0x68b
 5959 1c14 00000000 		.long	.LASF251
 5960 1c18 C3980000 		.long	0x98c3
 5961 1c1c 01       		.byte	0x1
 5962 1c1d 251C0000 		.long	0x1c25
 5963 1c21 3F1C0000 		.long	0x1c3f
 5964 1c25 08       		.uleb128 0x8
 5965 1c26 A5980000 		.long	0x98a5
 5966 1c2a 13       		.uleb128 0x13
 5967 1c2b CE0A0000 		.long	0xace
 5968 1c2f 13       		.uleb128 0x13
 5969 1c30 CE0A0000 		.long	0xace
 5970 1c34 13       		.uleb128 0x13
 5971 1c35 CE0A0000 		.long	0xace
 5972 1c39 13       		.uleb128 0x13
 5973 1c3a CE0A0000 		.long	0xace
 5974 1c3e 00       		.byte	0
 5975 1c3f 35       		.uleb128 0x35
 5976 1c40 00000000 		.long	.LASF239
 5977 1c44 02       		.byte	0x2
 5978 1c45 9506     		.value	0x695
 5979 1c47 00000000 		.long	.LASF252
 5980 1c4b C3980000 		.long	0x98c3
 5981 1c4f 01       		.byte	0x1
 5982 1c50 581C0000 		.long	0x1c58
 5983 1c54 721C0000 		.long	0x1c72
 5984 1c58 08       		.uleb128 0x8
 5985 1c59 A5980000 		.long	0x98a5
 5986 1c5d 13       		.uleb128 0x13
 5987 1c5e CE0A0000 		.long	0xace
 5988 1c62 13       		.uleb128 0x13
 5989 1c63 CE0A0000 		.long	0xace
 5990 1c67 13       		.uleb128 0x13
 5991 1c68 DA0A0000 		.long	0xada
 5992 1c6c 13       		.uleb128 0x13
 5993 1c6d DA0A0000 		.long	0xada
 5994 1c71 00       		.byte	0
 5995 1c72 35       		.uleb128 0x35
 5996 1c73 00000000 		.long	.LASF239
 5997 1c77 02       		.byte	0x2
 5998 1c78 AE06     		.value	0x6ae
 5999 1c7a 00000000 		.long	.LASF253
 6000 1c7e C3980000 		.long	0x98c3
 6001 1c82 01       		.byte	0x1
 6002 1c83 8B1C0000 		.long	0x1c8b
 6003 1c87 A01C0000 		.long	0x1ca0
 6004 1c8b 08       		.uleb128 0x8
 6005 1c8c A5980000 		.long	0x98a5
 6006 1c90 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 363


 6007 1c91 CE0A0000 		.long	0xace
 6008 1c95 13       		.uleb128 0x13
 6009 1c96 CE0A0000 		.long	0xace
 6010 1c9a 13       		.uleb128 0x13
 6011 1c9b 55230000 		.long	0x2355
 6012 1c9f 00       		.byte	0
 6013 1ca0 2F       		.uleb128 0x2f
 6014 1ca1 00000000 		.long	.LASF254
 6015 1ca5 02       		.byte	0x2
 6016 1ca6 C006     		.value	0x6c0
 6017 1ca8 00000000 		.long	.LASF255
 6018 1cac C3980000 		.long	0x98c3
 6019 1cb0 B81C0000 		.long	0x1cb8
 6020 1cb4 D21C0000 		.long	0x1cd2
 6021 1cb8 08       		.uleb128 0x8
 6022 1cb9 A5980000 		.long	0x98a5
 6023 1cbd 13       		.uleb128 0x13
 6024 1cbe 7F0A0000 		.long	0xa7f
 6025 1cc2 13       		.uleb128 0x13
 6026 1cc3 7F0A0000 		.long	0xa7f
 6027 1cc7 13       		.uleb128 0x13
 6028 1cc8 7F0A0000 		.long	0xa7f
 6029 1ccc 13       		.uleb128 0x13
 6030 1ccd D8840000 		.long	0x84d8
 6031 1cd1 00       		.byte	0
 6032 1cd2 2F       		.uleb128 0x2f
 6033 1cd3 00000000 		.long	.LASF256
 6034 1cd7 02       		.byte	0x2
 6035 1cd8 C406     		.value	0x6c4
 6036 1cda 00000000 		.long	.LASF257
 6037 1cde C3980000 		.long	0x98c3
 6038 1ce2 EA1C0000 		.long	0x1cea
 6039 1ce6 041D0000 		.long	0x1d04
 6040 1cea 08       		.uleb128 0x8
 6041 1ceb A5980000 		.long	0x98a5
 6042 1cef 13       		.uleb128 0x13
 6043 1cf0 7F0A0000 		.long	0xa7f
 6044 1cf4 13       		.uleb128 0x13
 6045 1cf5 7F0A0000 		.long	0xa7f
 6046 1cf9 13       		.uleb128 0x13
 6047 1cfa CD840000 		.long	0x84cd
 6048 1cfe 13       		.uleb128 0x13
 6049 1cff 7F0A0000 		.long	0xa7f
 6050 1d03 00       		.byte	0
 6051 1d04 21       		.uleb128 0x21
 6052 1d05 00000000 		.long	.LASF258
 6053 1d09 02       		.byte	0x2
 6054 1d0a DC06     		.value	0x6dc
 6055 1d0c 00000000 		.long	.LASF259
 6056 1d10 18850000 		.long	0x8518
 6057 1d14 281D0000 		.long	0x1d28
 6058 1d18 13       		.uleb128 0x13
 6059 1d19 7F0A0000 		.long	0xa7f
 6060 1d1d 13       		.uleb128 0x13
 6061 1d1e D8840000 		.long	0x84d8
 6062 1d22 13       		.uleb128 0x13
 6063 1d23 F6930000 		.long	0x93f6
GAS LISTING /tmp/ccKUqHDa.s 			page 364


 6064 1d27 00       		.byte	0
 6065 1d28 21       		.uleb128 0x21
 6066 1d29 00000000 		.long	.LASF260
 6067 1d2d 02       		.byte	0x2
 6068 1d2e F506     		.value	0x6f5
 6069 1d30 00000000 		.long	.LASF261
 6070 1d34 18850000 		.long	0x8518
 6071 1d38 4C1D0000 		.long	0x1d4c
 6072 1d3c 13       		.uleb128 0x13
 6073 1d3d 7F0A0000 		.long	0xa7f
 6074 1d41 13       		.uleb128 0x13
 6075 1d42 D8840000 		.long	0x84d8
 6076 1d46 13       		.uleb128 0x13
 6077 1d47 F6930000 		.long	0x93f6
 6078 1d4b 00       		.byte	0
 6079 1d4c 35       		.uleb128 0x35
 6080 1d4d 00000000 		.long	.LASF46
 6081 1d51 02       		.byte	0x2
 6082 1d52 0607     		.value	0x706
 6083 1d54 00000000 		.long	.LASF262
 6084 1d58 7F0A0000 		.long	0xa7f
 6085 1d5c 01       		.byte	0x1
 6086 1d5d 651D0000 		.long	0x1d65
 6087 1d61 7A1D0000 		.long	0x1d7a
 6088 1d65 08       		.uleb128 0x8
 6089 1d66 9F980000 		.long	0x989f
 6090 1d6a 13       		.uleb128 0x13
 6091 1d6b 18850000 		.long	0x8518
 6092 1d6f 13       		.uleb128 0x13
 6093 1d70 7F0A0000 		.long	0xa7f
 6094 1d74 13       		.uleb128 0x13
 6095 1d75 7F0A0000 		.long	0xa7f
 6096 1d79 00       		.byte	0
 6097 1d7a 37       		.uleb128 0x37
 6098 1d7b 00000000 		.long	.LASF22
 6099 1d7f 02       		.byte	0x2
 6100 1d80 1107     		.value	0x711
 6101 1d82 00000000 		.long	.LASF263
 6102 1d86 01       		.byte	0x1
 6103 1d87 8F1D0000 		.long	0x1d8f
 6104 1d8b 9A1D0000 		.long	0x1d9a
 6105 1d8f 08       		.uleb128 0x8
 6106 1d90 A5980000 		.long	0x98a5
 6107 1d94 13       		.uleb128 0x13
 6108 1d95 C3980000 		.long	0x98c3
 6109 1d99 00       		.byte	0
 6110 1d9a 35       		.uleb128 0x35
 6111 1d9b 00000000 		.long	.LASF264
 6112 1d9f 02       		.byte	0x2
 6113 1da0 1B07     		.value	0x71b
 6114 1da2 00000000 		.long	.LASF265
 6115 1da6 CD840000 		.long	0x84cd
 6116 1daa 01       		.byte	0x1
 6117 1dab B31D0000 		.long	0x1db3
 6118 1daf B91D0000 		.long	0x1db9
 6119 1db3 08       		.uleb128 0x8
 6120 1db4 9F980000 		.long	0x989f
GAS LISTING /tmp/ccKUqHDa.s 			page 365


 6121 1db8 00       		.byte	0
 6122 1db9 35       		.uleb128 0x35
 6123 1dba 00000000 		.long	.LASF266
 6124 1dbe 02       		.byte	0x2
 6125 1dbf 2507     		.value	0x725
 6126 1dc1 00000000 		.long	.LASF267
 6127 1dc5 CD840000 		.long	0x84cd
 6128 1dc9 01       		.byte	0x1
 6129 1dca D21D0000 		.long	0x1dd2
 6130 1dce D81D0000 		.long	0x1dd8
 6131 1dd2 08       		.uleb128 0x8
 6132 1dd3 9F980000 		.long	0x989f
 6133 1dd7 00       		.byte	0
 6134 1dd8 35       		.uleb128 0x35
 6135 1dd9 00000000 		.long	.LASF268
 6136 1ddd 02       		.byte	0x2
 6137 1dde 2C07     		.value	0x72c
 6138 1de0 00000000 		.long	.LASF269
 6139 1de4 AA0A0000 		.long	0xaaa
 6140 1de8 01       		.byte	0x1
 6141 1de9 F11D0000 		.long	0x1df1
 6142 1ded F71D0000 		.long	0x1df7
 6143 1df1 08       		.uleb128 0x8
 6144 1df2 9F980000 		.long	0x989f
 6145 1df6 00       		.byte	0
 6146 1df7 35       		.uleb128 0x35
 6147 1df8 00000000 		.long	.LASF42
 6148 1dfc 02       		.byte	0x2
 6149 1dfd 3C07     		.value	0x73c
 6150 1dff 00000000 		.long	.LASF270
 6151 1e03 7F0A0000 		.long	0xa7f
 6152 1e07 01       		.byte	0x1
 6153 1e08 101E0000 		.long	0x1e10
 6154 1e0c 251E0000 		.long	0x1e25
 6155 1e10 08       		.uleb128 0x8
 6156 1e11 9F980000 		.long	0x989f
 6157 1e15 13       		.uleb128 0x13
 6158 1e16 CD840000 		.long	0x84cd
 6159 1e1a 13       		.uleb128 0x13
 6160 1e1b 7F0A0000 		.long	0xa7f
 6161 1e1f 13       		.uleb128 0x13
 6162 1e20 7F0A0000 		.long	0xa7f
 6163 1e24 00       		.byte	0
 6164 1e25 35       		.uleb128 0x35
 6165 1e26 00000000 		.long	.LASF42
 6166 1e2a 02       		.byte	0x2
 6167 1e2b 4907     		.value	0x749
 6168 1e2d 00000000 		.long	.LASF271
 6169 1e31 7F0A0000 		.long	0xa7f
 6170 1e35 01       		.byte	0x1
 6171 1e36 3E1E0000 		.long	0x1e3e
 6172 1e3a 4E1E0000 		.long	0x1e4e
 6173 1e3e 08       		.uleb128 0x8
 6174 1e3f 9F980000 		.long	0x989f
 6175 1e43 13       		.uleb128 0x13
 6176 1e44 B7980000 		.long	0x98b7
 6177 1e48 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 366


 6178 1e49 7F0A0000 		.long	0xa7f
 6179 1e4d 00       		.byte	0
 6180 1e4e 35       		.uleb128 0x35
 6181 1e4f 00000000 		.long	.LASF42
 6182 1e53 02       		.byte	0x2
 6183 1e54 5807     		.value	0x758
 6184 1e56 00000000 		.long	.LASF272
 6185 1e5a 7F0A0000 		.long	0xa7f
 6186 1e5e 01       		.byte	0x1
 6187 1e5f 671E0000 		.long	0x1e67
 6188 1e63 771E0000 		.long	0x1e77
 6189 1e67 08       		.uleb128 0x8
 6190 1e68 9F980000 		.long	0x989f
 6191 1e6c 13       		.uleb128 0x13
 6192 1e6d CD840000 		.long	0x84cd
 6193 1e71 13       		.uleb128 0x13
 6194 1e72 7F0A0000 		.long	0xa7f
 6195 1e76 00       		.byte	0
 6196 1e77 35       		.uleb128 0x35
 6197 1e78 00000000 		.long	.LASF42
 6198 1e7c 02       		.byte	0x2
 6199 1e7d 6907     		.value	0x769
 6200 1e7f 00000000 		.long	.LASF273
 6201 1e83 7F0A0000 		.long	0xa7f
 6202 1e87 01       		.byte	0x1
 6203 1e88 901E0000 		.long	0x1e90
 6204 1e8c A01E0000 		.long	0x1ea0
 6205 1e90 08       		.uleb128 0x8
 6206 1e91 9F980000 		.long	0x989f
 6207 1e95 13       		.uleb128 0x13
 6208 1e96 D8840000 		.long	0x84d8
 6209 1e9a 13       		.uleb128 0x13
 6210 1e9b 7F0A0000 		.long	0xa7f
 6211 1e9f 00       		.byte	0
 6212 1ea0 35       		.uleb128 0x35
 6213 1ea1 00000000 		.long	.LASF274
 6214 1ea5 02       		.byte	0x2
 6215 1ea6 7607     		.value	0x776
 6216 1ea8 00000000 		.long	.LASF275
 6217 1eac 7F0A0000 		.long	0xa7f
 6218 1eb0 01       		.byte	0x1
 6219 1eb1 B91E0000 		.long	0x1eb9
 6220 1eb5 C91E0000 		.long	0x1ec9
 6221 1eb9 08       		.uleb128 0x8
 6222 1eba 9F980000 		.long	0x989f
 6223 1ebe 13       		.uleb128 0x13
 6224 1ebf B7980000 		.long	0x98b7
 6225 1ec3 13       		.uleb128 0x13
 6226 1ec4 7F0A0000 		.long	0xa7f
 6227 1ec8 00       		.byte	0
 6228 1ec9 35       		.uleb128 0x35
 6229 1eca 00000000 		.long	.LASF274
 6230 1ece 02       		.byte	0x2
 6231 1ecf 8707     		.value	0x787
 6232 1ed1 00000000 		.long	.LASF276
 6233 1ed5 7F0A0000 		.long	0xa7f
 6234 1ed9 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 367


 6235 1eda E21E0000 		.long	0x1ee2
 6236 1ede F71E0000 		.long	0x1ef7
 6237 1ee2 08       		.uleb128 0x8
 6238 1ee3 9F980000 		.long	0x989f
 6239 1ee7 13       		.uleb128 0x13
 6240 1ee8 CD840000 		.long	0x84cd
 6241 1eec 13       		.uleb128 0x13
 6242 1eed 7F0A0000 		.long	0xa7f
 6243 1ef1 13       		.uleb128 0x13
 6244 1ef2 7F0A0000 		.long	0xa7f
 6245 1ef6 00       		.byte	0
 6246 1ef7 35       		.uleb128 0x35
 6247 1ef8 00000000 		.long	.LASF274
 6248 1efc 02       		.byte	0x2
 6249 1efd 9407     		.value	0x794
 6250 1eff 00000000 		.long	.LASF277
 6251 1f03 7F0A0000 		.long	0xa7f
 6252 1f07 01       		.byte	0x1
 6253 1f08 101F0000 		.long	0x1f10
 6254 1f0c 201F0000 		.long	0x1f20
 6255 1f10 08       		.uleb128 0x8
 6256 1f11 9F980000 		.long	0x989f
 6257 1f15 13       		.uleb128 0x13
 6258 1f16 CD840000 		.long	0x84cd
 6259 1f1a 13       		.uleb128 0x13
 6260 1f1b 7F0A0000 		.long	0xa7f
 6261 1f1f 00       		.byte	0
 6262 1f20 35       		.uleb128 0x35
 6263 1f21 00000000 		.long	.LASF274
 6264 1f25 02       		.byte	0x2
 6265 1f26 A507     		.value	0x7a5
 6266 1f28 00000000 		.long	.LASF278
 6267 1f2c 7F0A0000 		.long	0xa7f
 6268 1f30 01       		.byte	0x1
 6269 1f31 391F0000 		.long	0x1f39
 6270 1f35 491F0000 		.long	0x1f49
 6271 1f39 08       		.uleb128 0x8
 6272 1f3a 9F980000 		.long	0x989f
 6273 1f3e 13       		.uleb128 0x13
 6274 1f3f D8840000 		.long	0x84d8
 6275 1f43 13       		.uleb128 0x13
 6276 1f44 7F0A0000 		.long	0xa7f
 6277 1f48 00       		.byte	0
 6278 1f49 35       		.uleb128 0x35
 6279 1f4a 00000000 		.long	.LASF279
 6280 1f4e 02       		.byte	0x2
 6281 1f4f B307     		.value	0x7b3
 6282 1f51 00000000 		.long	.LASF280
 6283 1f55 7F0A0000 		.long	0xa7f
 6284 1f59 01       		.byte	0x1
 6285 1f5a 621F0000 		.long	0x1f62
 6286 1f5e 721F0000 		.long	0x1f72
 6287 1f62 08       		.uleb128 0x8
 6288 1f63 9F980000 		.long	0x989f
 6289 1f67 13       		.uleb128 0x13
 6290 1f68 B7980000 		.long	0x98b7
 6291 1f6c 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 368


 6292 1f6d 7F0A0000 		.long	0xa7f
 6293 1f71 00       		.byte	0
 6294 1f72 35       		.uleb128 0x35
 6295 1f73 00000000 		.long	.LASF279
 6296 1f77 02       		.byte	0x2
 6297 1f78 C407     		.value	0x7c4
 6298 1f7a 00000000 		.long	.LASF281
 6299 1f7e 7F0A0000 		.long	0xa7f
 6300 1f82 01       		.byte	0x1
 6301 1f83 8B1F0000 		.long	0x1f8b
 6302 1f87 A01F0000 		.long	0x1fa0
 6303 1f8b 08       		.uleb128 0x8
 6304 1f8c 9F980000 		.long	0x989f
 6305 1f90 13       		.uleb128 0x13
 6306 1f91 CD840000 		.long	0x84cd
 6307 1f95 13       		.uleb128 0x13
 6308 1f96 7F0A0000 		.long	0xa7f
 6309 1f9a 13       		.uleb128 0x13
 6310 1f9b 7F0A0000 		.long	0xa7f
 6311 1f9f 00       		.byte	0
 6312 1fa0 35       		.uleb128 0x35
 6313 1fa1 00000000 		.long	.LASF279
 6314 1fa5 02       		.byte	0x2
 6315 1fa6 D107     		.value	0x7d1
 6316 1fa8 00000000 		.long	.LASF282
 6317 1fac 7F0A0000 		.long	0xa7f
 6318 1fb0 01       		.byte	0x1
 6319 1fb1 B91F0000 		.long	0x1fb9
 6320 1fb5 C91F0000 		.long	0x1fc9
 6321 1fb9 08       		.uleb128 0x8
 6322 1fba 9F980000 		.long	0x989f
 6323 1fbe 13       		.uleb128 0x13
 6324 1fbf CD840000 		.long	0x84cd
 6325 1fc3 13       		.uleb128 0x13
 6326 1fc4 7F0A0000 		.long	0xa7f
 6327 1fc8 00       		.byte	0
 6328 1fc9 35       		.uleb128 0x35
 6329 1fca 00000000 		.long	.LASF279
 6330 1fce 02       		.byte	0x2
 6331 1fcf E407     		.value	0x7e4
 6332 1fd1 00000000 		.long	.LASF283
 6333 1fd5 7F0A0000 		.long	0xa7f
 6334 1fd9 01       		.byte	0x1
 6335 1fda E21F0000 		.long	0x1fe2
 6336 1fde F21F0000 		.long	0x1ff2
 6337 1fe2 08       		.uleb128 0x8
 6338 1fe3 9F980000 		.long	0x989f
 6339 1fe7 13       		.uleb128 0x13
 6340 1fe8 D8840000 		.long	0x84d8
 6341 1fec 13       		.uleb128 0x13
 6342 1fed 7F0A0000 		.long	0xa7f
 6343 1ff1 00       		.byte	0
 6344 1ff2 35       		.uleb128 0x35
 6345 1ff3 00000000 		.long	.LASF284
 6346 1ff7 02       		.byte	0x2
 6347 1ff8 F307     		.value	0x7f3
 6348 1ffa 00000000 		.long	.LASF285
GAS LISTING /tmp/ccKUqHDa.s 			page 369


 6349 1ffe 7F0A0000 		.long	0xa7f
 6350 2002 01       		.byte	0x1
 6351 2003 0B200000 		.long	0x200b
 6352 2007 1B200000 		.long	0x201b
 6353 200b 08       		.uleb128 0x8
 6354 200c 9F980000 		.long	0x989f
 6355 2010 13       		.uleb128 0x13
 6356 2011 B7980000 		.long	0x98b7
 6357 2015 13       		.uleb128 0x13
 6358 2016 7F0A0000 		.long	0xa7f
 6359 201a 00       		.byte	0
 6360 201b 35       		.uleb128 0x35
 6361 201c 00000000 		.long	.LASF284
 6362 2020 02       		.byte	0x2
 6363 2021 0408     		.value	0x804
 6364 2023 00000000 		.long	.LASF286
 6365 2027 7F0A0000 		.long	0xa7f
 6366 202b 01       		.byte	0x1
 6367 202c 34200000 		.long	0x2034
 6368 2030 49200000 		.long	0x2049
 6369 2034 08       		.uleb128 0x8
 6370 2035 9F980000 		.long	0x989f
 6371 2039 13       		.uleb128 0x13
 6372 203a CD840000 		.long	0x84cd
 6373 203e 13       		.uleb128 0x13
 6374 203f 7F0A0000 		.long	0xa7f
 6375 2043 13       		.uleb128 0x13
 6376 2044 7F0A0000 		.long	0xa7f
 6377 2048 00       		.byte	0
 6378 2049 35       		.uleb128 0x35
 6379 204a 00000000 		.long	.LASF284
 6380 204e 02       		.byte	0x2
 6381 204f 1108     		.value	0x811
 6382 2051 00000000 		.long	.LASF287
 6383 2055 7F0A0000 		.long	0xa7f
 6384 2059 01       		.byte	0x1
 6385 205a 62200000 		.long	0x2062
 6386 205e 72200000 		.long	0x2072
 6387 2062 08       		.uleb128 0x8
 6388 2063 9F980000 		.long	0x989f
 6389 2067 13       		.uleb128 0x13
 6390 2068 CD840000 		.long	0x84cd
 6391 206c 13       		.uleb128 0x13
 6392 206d 7F0A0000 		.long	0xa7f
 6393 2071 00       		.byte	0
 6394 2072 35       		.uleb128 0x35
 6395 2073 00000000 		.long	.LASF284
 6396 2077 02       		.byte	0x2
 6397 2078 2408     		.value	0x824
 6398 207a 00000000 		.long	.LASF288
 6399 207e 7F0A0000 		.long	0xa7f
 6400 2082 01       		.byte	0x1
 6401 2083 8B200000 		.long	0x208b
 6402 2087 9B200000 		.long	0x209b
 6403 208b 08       		.uleb128 0x8
 6404 208c 9F980000 		.long	0x989f
 6405 2090 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 370


 6406 2091 D8840000 		.long	0x84d8
 6407 2095 13       		.uleb128 0x13
 6408 2096 7F0A0000 		.long	0xa7f
 6409 209a 00       		.byte	0
 6410 209b 35       		.uleb128 0x35
 6411 209c 00000000 		.long	.LASF289
 6412 20a0 02       		.byte	0x2
 6413 20a1 3208     		.value	0x832
 6414 20a3 00000000 		.long	.LASF290
 6415 20a7 7F0A0000 		.long	0xa7f
 6416 20ab 01       		.byte	0x1
 6417 20ac B4200000 		.long	0x20b4
 6418 20b0 C4200000 		.long	0x20c4
 6419 20b4 08       		.uleb128 0x8
 6420 20b5 9F980000 		.long	0x989f
 6421 20b9 13       		.uleb128 0x13
 6422 20ba B7980000 		.long	0x98b7
 6423 20be 13       		.uleb128 0x13
 6424 20bf 7F0A0000 		.long	0xa7f
 6425 20c3 00       		.byte	0
 6426 20c4 35       		.uleb128 0x35
 6427 20c5 00000000 		.long	.LASF289
 6428 20c9 02       		.byte	0x2
 6429 20ca 4308     		.value	0x843
 6430 20cc 00000000 		.long	.LASF291
 6431 20d0 7F0A0000 		.long	0xa7f
 6432 20d4 01       		.byte	0x1
 6433 20d5 DD200000 		.long	0x20dd
 6434 20d9 F2200000 		.long	0x20f2
 6435 20dd 08       		.uleb128 0x8
 6436 20de 9F980000 		.long	0x989f
 6437 20e2 13       		.uleb128 0x13
 6438 20e3 CD840000 		.long	0x84cd
 6439 20e7 13       		.uleb128 0x13
 6440 20e8 7F0A0000 		.long	0xa7f
 6441 20ec 13       		.uleb128 0x13
 6442 20ed 7F0A0000 		.long	0xa7f
 6443 20f1 00       		.byte	0
 6444 20f2 35       		.uleb128 0x35
 6445 20f3 00000000 		.long	.LASF289
 6446 20f7 02       		.byte	0x2
 6447 20f8 5108     		.value	0x851
 6448 20fa 00000000 		.long	.LASF292
 6449 20fe 7F0A0000 		.long	0xa7f
 6450 2102 01       		.byte	0x1
 6451 2103 0B210000 		.long	0x210b
 6452 2107 1B210000 		.long	0x211b
 6453 210b 08       		.uleb128 0x8
 6454 210c 9F980000 		.long	0x989f
 6455 2110 13       		.uleb128 0x13
 6456 2111 CD840000 		.long	0x84cd
 6457 2115 13       		.uleb128 0x13
 6458 2116 7F0A0000 		.long	0xa7f
 6459 211a 00       		.byte	0
 6460 211b 35       		.uleb128 0x35
 6461 211c 00000000 		.long	.LASF289
 6462 2120 02       		.byte	0x2
GAS LISTING /tmp/ccKUqHDa.s 			page 371


 6463 2121 6208     		.value	0x862
 6464 2123 00000000 		.long	.LASF293
 6465 2127 7F0A0000 		.long	0xa7f
 6466 212b 01       		.byte	0x1
 6467 212c 34210000 		.long	0x2134
 6468 2130 44210000 		.long	0x2144
 6469 2134 08       		.uleb128 0x8
 6470 2135 9F980000 		.long	0x989f
 6471 2139 13       		.uleb128 0x13
 6472 213a D8840000 		.long	0x84d8
 6473 213e 13       		.uleb128 0x13
 6474 213f 7F0A0000 		.long	0xa7f
 6475 2143 00       		.byte	0
 6476 2144 35       		.uleb128 0x35
 6477 2145 00000000 		.long	.LASF294
 6478 2149 02       		.byte	0x2
 6479 214a 7108     		.value	0x871
 6480 214c 00000000 		.long	.LASF295
 6481 2150 7F0A0000 		.long	0xa7f
 6482 2154 01       		.byte	0x1
 6483 2155 5D210000 		.long	0x215d
 6484 2159 6D210000 		.long	0x216d
 6485 215d 08       		.uleb128 0x8
 6486 215e 9F980000 		.long	0x989f
 6487 2162 13       		.uleb128 0x13
 6488 2163 B7980000 		.long	0x98b7
 6489 2167 13       		.uleb128 0x13
 6490 2168 7F0A0000 		.long	0xa7f
 6491 216c 00       		.byte	0
 6492 216d 35       		.uleb128 0x35
 6493 216e 00000000 		.long	.LASF294
 6494 2172 02       		.byte	0x2
 6495 2173 8208     		.value	0x882
 6496 2175 00000000 		.long	.LASF296
 6497 2179 7F0A0000 		.long	0xa7f
 6498 217d 01       		.byte	0x1
 6499 217e 86210000 		.long	0x2186
 6500 2182 9B210000 		.long	0x219b
 6501 2186 08       		.uleb128 0x8
 6502 2187 9F980000 		.long	0x989f
 6503 218b 13       		.uleb128 0x13
 6504 218c CD840000 		.long	0x84cd
 6505 2190 13       		.uleb128 0x13
 6506 2191 7F0A0000 		.long	0xa7f
 6507 2195 13       		.uleb128 0x13
 6508 2196 7F0A0000 		.long	0xa7f
 6509 219a 00       		.byte	0
 6510 219b 35       		.uleb128 0x35
 6511 219c 00000000 		.long	.LASF294
 6512 21a0 02       		.byte	0x2
 6513 21a1 9008     		.value	0x890
 6514 21a3 00000000 		.long	.LASF297
 6515 21a7 7F0A0000 		.long	0xa7f
 6516 21ab 01       		.byte	0x1
 6517 21ac B4210000 		.long	0x21b4
 6518 21b0 C4210000 		.long	0x21c4
 6519 21b4 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 372


 6520 21b5 9F980000 		.long	0x989f
 6521 21b9 13       		.uleb128 0x13
 6522 21ba CD840000 		.long	0x84cd
 6523 21be 13       		.uleb128 0x13
 6524 21bf 7F0A0000 		.long	0xa7f
 6525 21c3 00       		.byte	0
 6526 21c4 35       		.uleb128 0x35
 6527 21c5 00000000 		.long	.LASF294
 6528 21c9 02       		.byte	0x2
 6529 21ca A108     		.value	0x8a1
 6530 21cc 00000000 		.long	.LASF298
 6531 21d0 7F0A0000 		.long	0xa7f
 6532 21d4 01       		.byte	0x1
 6533 21d5 DD210000 		.long	0x21dd
 6534 21d9 ED210000 		.long	0x21ed
 6535 21dd 08       		.uleb128 0x8
 6536 21de 9F980000 		.long	0x989f
 6537 21e2 13       		.uleb128 0x13
 6538 21e3 D8840000 		.long	0x84d8
 6539 21e7 13       		.uleb128 0x13
 6540 21e8 7F0A0000 		.long	0xa7f
 6541 21ec 00       		.byte	0
 6542 21ed 35       		.uleb128 0x35
 6543 21ee 00000000 		.long	.LASF299
 6544 21f2 02       		.byte	0x2
 6545 21f3 B108     		.value	0x8b1
 6546 21f5 00000000 		.long	.LASF300
 6547 21f9 1E0A0000 		.long	0xa1e
 6548 21fd 01       		.byte	0x1
 6549 21fe 06220000 		.long	0x2206
 6550 2202 16220000 		.long	0x2216
 6551 2206 08       		.uleb128 0x8
 6552 2207 9F980000 		.long	0x989f
 6553 220b 13       		.uleb128 0x13
 6554 220c 7F0A0000 		.long	0xa7f
 6555 2210 13       		.uleb128 0x13
 6556 2211 7F0A0000 		.long	0xa7f
 6557 2215 00       		.byte	0
 6558 2216 35       		.uleb128 0x35
 6559 2217 00000000 		.long	.LASF38
 6560 221b 02       		.byte	0x2
 6561 221c C408     		.value	0x8c4
 6562 221e 00000000 		.long	.LASF301
 6563 2222 E5710000 		.long	0x71e5
 6564 2226 01       		.byte	0x1
 6565 2227 2F220000 		.long	0x222f
 6566 222b 3A220000 		.long	0x223a
 6567 222f 08       		.uleb128 0x8
 6568 2230 9F980000 		.long	0x989f
 6569 2234 13       		.uleb128 0x13
 6570 2235 B7980000 		.long	0x98b7
 6571 2239 00       		.byte	0
 6572 223a 35       		.uleb128 0x35
 6573 223b 00000000 		.long	.LASF38
 6574 223f 02       		.byte	0x2
 6575 2240 E408     		.value	0x8e4
 6576 2242 00000000 		.long	.LASF302
GAS LISTING /tmp/ccKUqHDa.s 			page 373


 6577 2246 E5710000 		.long	0x71e5
 6578 224a 01       		.byte	0x1
 6579 224b 53220000 		.long	0x2253
 6580 224f 68220000 		.long	0x2268
 6581 2253 08       		.uleb128 0x8
 6582 2254 9F980000 		.long	0x989f
 6583 2258 13       		.uleb128 0x13
 6584 2259 7F0A0000 		.long	0xa7f
 6585 225d 13       		.uleb128 0x13
 6586 225e 7F0A0000 		.long	0xa7f
 6587 2262 13       		.uleb128 0x13
 6588 2263 B7980000 		.long	0x98b7
 6589 2267 00       		.byte	0
 6590 2268 35       		.uleb128 0x35
 6591 2269 00000000 		.long	.LASF38
 6592 226d 02       		.byte	0x2
 6593 226e FE08     		.value	0x8fe
 6594 2270 00000000 		.long	.LASF303
 6595 2274 E5710000 		.long	0x71e5
 6596 2278 01       		.byte	0x1
 6597 2279 81220000 		.long	0x2281
 6598 227d A0220000 		.long	0x22a0
 6599 2281 08       		.uleb128 0x8
 6600 2282 9F980000 		.long	0x989f
 6601 2286 13       		.uleb128 0x13
 6602 2287 7F0A0000 		.long	0xa7f
 6603 228b 13       		.uleb128 0x13
 6604 228c 7F0A0000 		.long	0xa7f
 6605 2290 13       		.uleb128 0x13
 6606 2291 B7980000 		.long	0x98b7
 6607 2295 13       		.uleb128 0x13
 6608 2296 7F0A0000 		.long	0xa7f
 6609 229a 13       		.uleb128 0x13
 6610 229b 7F0A0000 		.long	0xa7f
 6611 229f 00       		.byte	0
 6612 22a0 35       		.uleb128 0x35
 6613 22a1 00000000 		.long	.LASF38
 6614 22a5 02       		.byte	0x2
 6615 22a6 1009     		.value	0x910
 6616 22a8 00000000 		.long	.LASF304
 6617 22ac E5710000 		.long	0x71e5
 6618 22b0 01       		.byte	0x1
 6619 22b1 B9220000 		.long	0x22b9
 6620 22b5 C4220000 		.long	0x22c4
 6621 22b9 08       		.uleb128 0x8
 6622 22ba 9F980000 		.long	0x989f
 6623 22be 13       		.uleb128 0x13
 6624 22bf CD840000 		.long	0x84cd
 6625 22c3 00       		.byte	0
 6626 22c4 35       		.uleb128 0x35
 6627 22c5 00000000 		.long	.LASF38
 6628 22c9 02       		.byte	0x2
 6629 22ca 2809     		.value	0x928
 6630 22cc 00000000 		.long	.LASF305
 6631 22d0 E5710000 		.long	0x71e5
 6632 22d4 01       		.byte	0x1
 6633 22d5 DD220000 		.long	0x22dd
GAS LISTING /tmp/ccKUqHDa.s 			page 374


 6634 22d9 F2220000 		.long	0x22f2
 6635 22dd 08       		.uleb128 0x8
 6636 22de 9F980000 		.long	0x989f
 6637 22e2 13       		.uleb128 0x13
 6638 22e3 7F0A0000 		.long	0xa7f
 6639 22e7 13       		.uleb128 0x13
 6640 22e8 7F0A0000 		.long	0xa7f
 6641 22ec 13       		.uleb128 0x13
 6642 22ed CD840000 		.long	0x84cd
 6643 22f1 00       		.byte	0
 6644 22f2 35       		.uleb128 0x35
 6645 22f3 00000000 		.long	.LASF38
 6646 22f7 02       		.byte	0x2
 6647 22f8 4309     		.value	0x943
 6648 22fa 00000000 		.long	.LASF306
 6649 22fe E5710000 		.long	0x71e5
 6650 2302 01       		.byte	0x1
 6651 2303 0B230000 		.long	0x230b
 6652 2307 25230000 		.long	0x2325
 6653 230b 08       		.uleb128 0x8
 6654 230c 9F980000 		.long	0x989f
 6655 2310 13       		.uleb128 0x13
 6656 2311 7F0A0000 		.long	0xa7f
 6657 2315 13       		.uleb128 0x13
 6658 2316 7F0A0000 		.long	0xa7f
 6659 231a 13       		.uleb128 0x13
 6660 231b CD840000 		.long	0x84cd
 6661 231f 13       		.uleb128 0x13
 6662 2320 7F0A0000 		.long	0xa7f
 6663 2324 00       		.byte	0
 6664 2325 0B       		.uleb128 0xb
 6665 2326 2F0B0000 		.long	0xb2f
 6666 232a 1C       		.uleb128 0x1c
 6667 232b 00000000 		.long	.LASF307
 6668 232f D8840000 		.long	0x84d8
 6669 2333 38       		.uleb128 0x38
 6670 2334 00000000 		.long	.LASF308
 6671 2338 13060000 		.long	0x613
 6672 233c 38       		.uleb128 0x38
 6673 233d 00000000 		.long	.LASF309
 6674 2341 C0080000 		.long	0x8c0
 6675 2345 00       		.byte	0
 6676 2346 1A       		.uleb128 0x1a
 6677 2347 00000000 		.long	.LASF311
 6678 234b 1A       		.uleb128 0x1a
 6679 234c 00000000 		.long	.LASF312
 6680 2350 0B       		.uleb128 0xb
 6681 2351 1E0A0000 		.long	0xa1e
 6682 2355 10       		.uleb128 0x10
 6683 2356 00000000 		.long	.LASF313
 6684 235a 10       		.byte	0x10
 6685 235b 1D       		.byte	0x1d
 6686 235c 2F       		.byte	0x2f
 6687 235d 35240000 		.long	0x2435
 6688 2361 25       		.uleb128 0x25
 6689 2362 00000000 		.long	.LASF74
 6690 2366 1D       		.byte	0x1d
GAS LISTING /tmp/ccKUqHDa.s 			page 375


 6691 2367 36       		.byte	0x36
 6692 2368 CD840000 		.long	0x84cd
 6693 236c 01       		.byte	0x1
 6694 236d 11       		.uleb128 0x11
 6695 236e 00000000 		.long	.LASF314
 6696 2372 1D       		.byte	0x1d
 6697 2373 3A       		.byte	0x3a
 6698 2374 61230000 		.long	0x2361
 6699 2378 00       		.byte	0
 6700 2379 25       		.uleb128 0x25
 6701 237a 00000000 		.long	.LASF61
 6702 237e 1D       		.byte	0x1d
 6703 237f 35       		.byte	0x35
 6704 2380 DB070000 		.long	0x7db
 6705 2384 01       		.byte	0x1
 6706 2385 11       		.uleb128 0x11
 6707 2386 00000000 		.long	.LASF315
 6708 238a 1D       		.byte	0x1d
 6709 238b 3B       		.byte	0x3b
 6710 238c 79230000 		.long	0x2379
 6711 2390 08       		.byte	0x8
 6712 2391 25       		.uleb128 0x25
 6713 2392 00000000 		.long	.LASF75
 6714 2396 1D       		.byte	0x1d
 6715 2397 37       		.byte	0x37
 6716 2398 CD840000 		.long	0x84cd
 6717 239c 01       		.byte	0x1
 6718 239d 39       		.uleb128 0x39
 6719 239e 00000000 		.long	.LASF316
 6720 23a2 1D       		.byte	0x1d
 6721 23a3 3E       		.byte	0x3e
 6722 23a4 AC230000 		.long	0x23ac
 6723 23a8 BC230000 		.long	0x23bc
 6724 23ac 08       		.uleb128 0x8
 6725 23ad C9980000 		.long	0x98c9
 6726 23b1 13       		.uleb128 0x13
 6727 23b2 91230000 		.long	0x2391
 6728 23b6 13       		.uleb128 0x13
 6729 23b7 79230000 		.long	0x2379
 6730 23bb 00       		.byte	0
 6731 23bc 15       		.uleb128 0x15
 6732 23bd 00000000 		.long	.LASF316
 6733 23c1 1D       		.byte	0x1d
 6734 23c2 42       		.byte	0x42
 6735 23c3 01       		.byte	0x1
 6736 23c4 CC230000 		.long	0x23cc
 6737 23c8 D2230000 		.long	0x23d2
 6738 23cc 08       		.uleb128 0x8
 6739 23cd C9980000 		.long	0x98c9
 6740 23d1 00       		.byte	0
 6741 23d2 16       		.uleb128 0x16
 6742 23d3 00000000 		.long	.LASF174
 6743 23d7 1D       		.byte	0x1d
 6744 23d8 47       		.byte	0x47
 6745 23d9 00000000 		.long	.LASF317
 6746 23dd 79230000 		.long	0x2379
 6747 23e1 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 376


 6748 23e2 EA230000 		.long	0x23ea
 6749 23e6 F0230000 		.long	0x23f0
 6750 23ea 08       		.uleb128 0x8
 6751 23eb CF980000 		.long	0x98cf
 6752 23ef 00       		.byte	0
 6753 23f0 16       		.uleb128 0x16
 6754 23f1 00000000 		.long	.LASF155
 6755 23f5 1D       		.byte	0x1d
 6756 23f6 4B       		.byte	0x4b
 6757 23f7 00000000 		.long	.LASF318
 6758 23fb 91230000 		.long	0x2391
 6759 23ff 01       		.byte	0x1
 6760 2400 08240000 		.long	0x2408
 6761 2404 0E240000 		.long	0x240e
 6762 2408 08       		.uleb128 0x8
 6763 2409 CF980000 		.long	0x98cf
 6764 240d 00       		.byte	0
 6765 240e 3A       		.uleb128 0x3a
 6766 240f 656E6400 		.string	"end"
 6767 2413 1D       		.byte	0x1d
 6768 2414 4F       		.byte	0x4f
 6769 2415 00000000 		.long	.LASF635
 6770 2419 91230000 		.long	0x2391
 6771 241d 01       		.byte	0x1
 6772 241e 26240000 		.long	0x2426
 6773 2422 2C240000 		.long	0x242c
 6774 2426 08       		.uleb128 0x8
 6775 2427 CF980000 		.long	0x98cf
 6776 242b 00       		.byte	0
 6777 242c 09       		.uleb128 0x9
 6778 242d 5F4500   		.string	"_E"
 6779 2430 D8840000 		.long	0x84d8
 6780 2434 00       		.byte	0
 6781 2435 0B       		.uleb128 0xb
 6782 2436 55230000 		.long	0x2355
 6783 243a 0B       		.uleb128 0xb
 6784 243b 3F240000 		.long	0x243f
 6785 243f 06       		.uleb128 0x6
 6786 2440 00000000 		.long	.LASF319
 6787 2444 1E       		.byte	0x1e
 6788 2445 3E       		.byte	0x3e
 6789 2446 1E0A0000 		.long	0xa1e
 6790 244a 04       		.uleb128 0x4
 6791 244b 00000000 		.long	.LASF320
 6792 244f 01       		.byte	0x1
 6793 2450 0E       		.byte	0xe
 6794 2451 D4       		.byte	0xd4
 6795 2452 89240000 		.long	0x2489
 6796 2456 1D       		.uleb128 0x1d
 6797 2457 00000000 		.long	.LASF321
 6798 245b 0E       		.byte	0xe
 6799 245c D8       		.byte	0xd8
 6800 245d 1C       		.uleb128 0x1c
 6801 245e 00000000 		.long	.LASF30
 6802 2462 829C0000 		.long	0x9c82
 6803 2466 1C       		.uleb128 0x1c
 6804 2467 00000000 		.long	.LASF322
GAS LISTING /tmp/ccKUqHDa.s 			page 377


 6805 246b 30000000 		.long	0x30
 6806 246f 09       		.uleb128 0x9
 6807 2470 5F547000 		.string	"_Tp"
 6808 2474 29000000 		.long	0x29
 6809 2478 13       		.uleb128 0x13
 6810 2479 829C0000 		.long	0x9c82
 6811 247d 13       		.uleb128 0x13
 6812 247e 30000000 		.long	0x30
 6813 2482 13       		.uleb128 0x13
 6814 2483 139D0000 		.long	0x9d13
 6815 2487 00       		.byte	0
 6816 2488 00       		.byte	0
 6817 2489 27       		.uleb128 0x27
 6818 248a 00000000 		.long	.LASF323
 6819 248e 01       		.byte	0x1
 6820 248f 0E       		.byte	0xe
 6821 2490 0E02     		.value	0x20e
 6822 2492 BC240000 		.long	0x24bc
 6823 2496 3B       		.uleb128 0x3b
 6824 2497 00000000 		.long	.LASF324
 6825 249b 0E       		.byte	0xe
 6826 249c 1202     		.value	0x212
 6827 249e 1C       		.uleb128 0x1c
 6828 249f 00000000 		.long	.LASF30
 6829 24a3 5E9B0000 		.long	0x9b5e
 6830 24a7 1C       		.uleb128 0x1c
 6831 24a8 00000000 		.long	.LASF322
 6832 24ac 30000000 		.long	0x30
 6833 24b0 13       		.uleb128 0x13
 6834 24b1 5E9B0000 		.long	0x9b5e
 6835 24b5 13       		.uleb128 0x13
 6836 24b6 30000000 		.long	0x30
 6837 24ba 00       		.byte	0
 6838 24bb 00       		.byte	0
 6839 24bc 0F       		.uleb128 0xf
 6840 24bd 00000000 		.long	.LASF325
 6841 24c1 0B       		.byte	0xb
 6842 24c2 42       		.byte	0x42
 6843 24c3 B0260000 		.long	0x26b0
 6844 24c7 04       		.uleb128 0x4
 6845 24c8 00000000 		.long	.LASF326
 6846 24cc 08       		.byte	0x8
 6847 24cd 0B       		.byte	0xb
 6848 24ce A5       		.byte	0xa5
 6849 24cf 64250000 		.long	0x2564
 6850 24d3 3C       		.uleb128 0x3c
 6851 24d4 00000000 		.long	.LASF327
 6852 24d8 0B       		.byte	0xb
 6853 24d9 C4       		.byte	0xc4
 6854 24da DA9F0000 		.long	0x9fda
 6855 24de 00       		.byte	0
 6856 24df 03       		.byte	0x3
 6857 24e0 39       		.uleb128 0x39
 6858 24e1 00000000 		.long	.LASF328
 6859 24e5 0B       		.byte	0xb
 6860 24e6 AB       		.byte	0xab
 6861 24e7 EF240000 		.long	0x24ef
GAS LISTING /tmp/ccKUqHDa.s 			page 378


 6862 24eb FA240000 		.long	0x24fa
 6863 24ef 08       		.uleb128 0x8
 6864 24f0 E59F0000 		.long	0x9fe5
 6865 24f4 13       		.uleb128 0x13
 6866 24f5 DF9F0000 		.long	0x9fdf
 6867 24f9 00       		.byte	0
 6868 24fa 3D       		.uleb128 0x3d
 6869 24fb 6D696E00 		.string	"min"
 6870 24ff 0B       		.byte	0xb
 6871 2500 AF       		.byte	0xaf
 6872 2501 00000000 		.long	.LASF329
 6873 2505 29000000 		.long	0x29
 6874 2509 11250000 		.long	0x2511
 6875 250d 17250000 		.long	0x2517
 6876 2511 08       		.uleb128 0x8
 6877 2512 EB9F0000 		.long	0x9feb
 6878 2516 00       		.byte	0
 6879 2517 3D       		.uleb128 0x3d
 6880 2518 6D617800 		.string	"max"
 6881 251c 0B       		.byte	0xb
 6882 251d B3       		.byte	0xb3
 6883 251e 00000000 		.long	.LASF330
 6884 2522 29000000 		.long	0x29
 6885 2526 2E250000 		.long	0x252e
 6886 252a 34250000 		.long	0x2534
 6887 252e 08       		.uleb128 0x8
 6888 252f EB9F0000 		.long	0x9feb
 6889 2533 00       		.byte	0
 6890 2534 07       		.uleb128 0x7
 6891 2535 00000000 		.long	.LASF331
 6892 2539 0B       		.byte	0xb
 6893 253a BC       		.byte	0xbc
 6894 253b 00000000 		.long	.LASF332
 6895 253f 29000000 		.long	0x29
 6896 2543 4B250000 		.long	0x254b
 6897 2547 51250000 		.long	0x2551
 6898 254b 08       		.uleb128 0x8
 6899 254c E59F0000 		.long	0x9fe5
 6900 2550 00       		.byte	0
 6901 2551 1C       		.uleb128 0x1c
 6902 2552 00000000 		.long	.LASF333
 6903 2556 B0260000 		.long	0x26b0
 6904 255a 1C       		.uleb128 0x1c
 6905 255b 00000000 		.long	.LASF334
 6906 255f 29000000 		.long	0x29
 6907 2563 00       		.byte	0
 6908 2564 0B       		.uleb128 0xb
 6909 2565 C7240000 		.long	0x24c7
 6910 2569 04       		.uleb128 0x4
 6911 256a 00000000 		.long	.LASF335
 6912 256e 01       		.byte	0x1
 6913 256f 0B       		.byte	0xb
 6914 2570 87       		.byte	0x87
 6915 2571 D1250000 		.long	0x25d1
 6916 2575 3E       		.uleb128 0x3e
 6917 2576 00000000 		.long	.LASF336
 6918 257a 0B       		.byte	0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 379


 6919 257b 8A       		.byte	0x8a
 6920 257c 00000000 		.long	.LASF337
 6921 2580 30000000 		.long	0x30
 6922 2584 8E250000 		.long	0x258e
 6923 2588 13       		.uleb128 0x13
 6924 2589 30000000 		.long	0x30
 6925 258d 00       		.byte	0
 6926 258e 09       		.uleb128 0x9
 6927 258f 5F547000 		.string	"_Tp"
 6928 2593 30000000 		.long	0x30
 6929 2597 3F       		.uleb128 0x3f
 6930 2598 5F5F6D00 		.string	"__m"
 6931 259c 30000000 		.long	0x30
 6932 25a0 00000000 		.quad	0x100000000
 6932      01000000 
 6933 25a8 0A       		.uleb128 0xa
 6934 25a9 5F5F6100 		.string	"__a"
 6935 25ad 30000000 		.long	0x30
 6936 25b1 01       		.byte	0x1
 6937 25b2 0A       		.uleb128 0xa
 6938 25b3 5F5F6300 		.string	"__c"
 6939 25b7 30000000 		.long	0x30
 6940 25bb 00       		.byte	0
 6941 25bc 40       		.uleb128 0x40
 6942 25bd 00000000 		.long	.LASF338
 6943 25c1 A3710000 		.long	0x71a3
 6944 25c5 01       		.byte	0x1
 6945 25c6 40       		.uleb128 0x40
 6946 25c7 00000000 		.long	.LASF339
 6947 25cb A3710000 		.long	0x71a3
 6948 25cf 01       		.byte	0x1
 6949 25d0 00       		.byte	0
 6950 25d1 04       		.uleb128 0x4
 6951 25d2 00000000 		.long	.LASF340
 6952 25d6 01       		.byte	0x1
 6953 25d7 0B       		.byte	0xb
 6954 25d8 87       		.byte	0x87
 6955 25d9 33260000 		.long	0x2633
 6956 25dd 3E       		.uleb128 0x3e
 6957 25de 00000000 		.long	.LASF336
 6958 25e2 0B       		.byte	0xb
 6959 25e3 8A       		.byte	0x8a
 6960 25e4 00000000 		.long	.LASF341
 6961 25e8 30000000 		.long	0x30
 6962 25ec F6250000 		.long	0x25f6
 6963 25f0 13       		.uleb128 0x13
 6964 25f1 30000000 		.long	0x30
 6965 25f5 00       		.byte	0
 6966 25f6 09       		.uleb128 0x9
 6967 25f7 5F547000 		.string	"_Tp"
 6968 25fb 30000000 		.long	0x30
 6969 25ff 41       		.uleb128 0x41
 6970 2600 5F5F6D00 		.string	"__m"
 6971 2604 30000000 		.long	0x30
 6972 2608 7002     		.value	0x270
 6973 260a 0A       		.uleb128 0xa
 6974 260b 5F5F6100 		.string	"__a"
GAS LISTING /tmp/ccKUqHDa.s 			page 380


 6975 260f 30000000 		.long	0x30
 6976 2613 01       		.byte	0x1
 6977 2614 0A       		.uleb128 0xa
 6978 2615 5F5F6300 		.string	"__c"
 6979 2619 30000000 		.long	0x30
 6980 261d 00       		.byte	0
 6981 261e 40       		.uleb128 0x40
 6982 261f 00000000 		.long	.LASF338
 6983 2623 A3710000 		.long	0x71a3
 6984 2627 01       		.byte	0x1
 6985 2628 40       		.uleb128 0x40
 6986 2629 00000000 		.long	.LASF339
 6987 262d A3710000 		.long	0x71a3
 6988 2631 01       		.byte	0x1
 6989 2632 00       		.byte	0
 6990 2633 42       		.uleb128 0x42
 6991 2634 00000000 		.long	.LASF342
 6992 2638 0B       		.byte	0xb
 6993 2639 95       		.byte	0x95
 6994 263a 30000000 		.long	0x30
 6995 263e 76260000 		.long	0x2676
 6996 2642 09       		.uleb128 0x9
 6997 2643 5F547000 		.string	"_Tp"
 6998 2647 30000000 		.long	0x30
 6999 264b 3F       		.uleb128 0x3f
 7000 264c 5F5F6D00 		.string	"__m"
 7001 2650 30000000 		.long	0x30
 7002 2654 00000000 		.quad	0x100000000
 7002      01000000 
 7003 265c 0A       		.uleb128 0xa
 7004 265d 5F5F6100 		.string	"__a"
 7005 2661 30000000 		.long	0x30
 7006 2665 01       		.byte	0x1
 7007 2666 0A       		.uleb128 0xa
 7008 2667 5F5F6300 		.string	"__c"
 7009 266b 30000000 		.long	0x30
 7010 266f 00       		.byte	0
 7011 2670 13       		.uleb128 0x13
 7012 2671 30000000 		.long	0x30
 7013 2675 00       		.byte	0
 7014 2676 43       		.uleb128 0x43
 7015 2677 00000000 		.long	.LASF343
 7016 267b 0B       		.byte	0xb
 7017 267c 95       		.byte	0x95
 7018 267d 30000000 		.long	0x30
 7019 2681 09       		.uleb128 0x9
 7020 2682 5F547000 		.string	"_Tp"
 7021 2686 30000000 		.long	0x30
 7022 268a 41       		.uleb128 0x41
 7023 268b 5F5F6D00 		.string	"__m"
 7024 268f 30000000 		.long	0x30
 7025 2693 7002     		.value	0x270
 7026 2695 0A       		.uleb128 0xa
 7027 2696 5F5F6100 		.string	"__a"
 7028 269a 30000000 		.long	0x30
 7029 269e 01       		.byte	0x1
 7030 269f 0A       		.uleb128 0xa
GAS LISTING /tmp/ccKUqHDa.s 			page 381


 7031 26a0 5F5F6300 		.string	"__c"
 7032 26a4 30000000 		.long	0x30
 7033 26a8 00       		.byte	0
 7034 26a9 13       		.uleb128 0x13
 7035 26aa 30000000 		.long	0x30
 7036 26ae 00       		.byte	0
 7037 26af 00       		.byte	0
 7038 26b0 44       		.uleb128 0x44
 7039 26b1 00000000 		.long	.LASF344
 7040 26b5 8813     		.value	0x1388
 7041 26b7 0B       		.byte	0xb
 7042 26b8 C301     		.value	0x1c3
 7043 26ba F7280000 		.long	0x28f7
 7044 26be 2C       		.uleb128 0x2c
 7045 26bf 00000000 		.long	.LASF346
 7046 26c3 0B       		.byte	0xb
 7047 26c4 E501     		.value	0x1e5
 7048 26c6 F7280000 		.long	0x28f7
 7049 26ca 01       		.byte	0x1
 7050 26cb 45       		.uleb128 0x45
 7051 26cc 00000000 		.long	.LASF451
 7052 26d0 0B       		.byte	0xb
 7053 26d1 E601     		.value	0x1e6
 7054 26d3 F7280000 		.long	0x28f7
 7055 26d7 01       		.byte	0x1
 7056 26d8 7002     		.value	0x270
 7057 26da 2C       		.uleb128 0x2c
 7058 26db 00000000 		.long	.LASF347
 7059 26df 0B       		.byte	0xb
 7060 26e0 E701     		.value	0x1e7
 7061 26e2 F7280000 		.long	0x28f7
 7062 26e6 01       		.byte	0x1
 7063 26e7 2C       		.uleb128 0x2c
 7064 26e8 00000000 		.long	.LASF348
 7065 26ec 0B       		.byte	0xb
 7066 26ed E801     		.value	0x1e8
 7067 26ef F7280000 		.long	0x28f7
 7068 26f3 01       		.byte	0x1
 7069 26f4 46       		.uleb128 0x46
 7070 26f5 00000000 		.long	.LASF349
 7071 26f9 0B       		.byte	0xb
 7072 26fa E201     		.value	0x1e2
 7073 26fc 30000000 		.long	0x30
 7074 2700 01       		.byte	0x1
 7075 2701 2C       		.uleb128 0x2c
 7076 2702 00000000 		.long	.LASF350
 7077 2706 0B       		.byte	0xb
 7078 2707 E901     		.value	0x1e9
 7079 2709 0E270000 		.long	0x270e
 7080 270d 01       		.byte	0x1
 7081 270e 0B       		.uleb128 0xb
 7082 270f F4260000 		.long	0x26f4
 7083 2713 2C       		.uleb128 0x2c
 7084 2714 00000000 		.long	.LASF351
 7085 2718 0B       		.byte	0xb
 7086 2719 EA01     		.value	0x1ea
 7087 271b F7280000 		.long	0x28f7
GAS LISTING /tmp/ccKUqHDa.s 			page 382


 7088 271f 01       		.byte	0x1
 7089 2720 2C       		.uleb128 0x2c
 7090 2721 00000000 		.long	.LASF352
 7091 2725 0B       		.byte	0xb
 7092 2726 EB01     		.value	0x1eb
 7093 2728 0E270000 		.long	0x270e
 7094 272c 01       		.byte	0x1
 7095 272d 2C       		.uleb128 0x2c
 7096 272e 00000000 		.long	.LASF353
 7097 2732 0B       		.byte	0xb
 7098 2733 EC01     		.value	0x1ec
 7099 2735 F7280000 		.long	0x28f7
 7100 2739 01       		.byte	0x1
 7101 273a 2C       		.uleb128 0x2c
 7102 273b 00000000 		.long	.LASF354
 7103 273f 0B       		.byte	0xb
 7104 2740 ED01     		.value	0x1ed
 7105 2742 0E270000 		.long	0x270e
 7106 2746 01       		.byte	0x1
 7107 2747 2C       		.uleb128 0x2c
 7108 2748 00000000 		.long	.LASF355
 7109 274c 0B       		.byte	0xb
 7110 274d EE01     		.value	0x1ee
 7111 274f F7280000 		.long	0x28f7
 7112 2753 01       		.byte	0x1
 7113 2754 2C       		.uleb128 0x2c
 7114 2755 00000000 		.long	.LASF356
 7115 2759 0B       		.byte	0xb
 7116 275a EF01     		.value	0x1ef
 7117 275c 0E270000 		.long	0x270e
 7118 2760 01       		.byte	0x1
 7119 2761 2C       		.uleb128 0x2c
 7120 2762 00000000 		.long	.LASF357
 7121 2766 0B       		.byte	0xb
 7122 2767 F001     		.value	0x1f0
 7123 2769 F7280000 		.long	0x28f7
 7124 276d 01       		.byte	0x1
 7125 276e 2C       		.uleb128 0x2c
 7126 276f 00000000 		.long	.LASF358
 7127 2773 0B       		.byte	0xb
 7128 2774 F101     		.value	0x1f1
 7129 2776 0E270000 		.long	0x270e
 7130 277a 01       		.byte	0x1
 7131 277b 2C       		.uleb128 0x2c
 7132 277c 00000000 		.long	.LASF359
 7133 2780 0B       		.byte	0xb
 7134 2781 F201     		.value	0x1f2
 7135 2783 0E270000 		.long	0x270e
 7136 2787 01       		.byte	0x1
 7137 2788 29       		.uleb128 0x29
 7138 2789 00000000 		.long	.LASF360
 7139 278d 0B       		.byte	0xb
 7140 278e 6D02     		.value	0x26d
 7141 2790 ED980000 		.long	0x98ed
 7142 2794 00       		.byte	0
 7143 2795 47       		.uleb128 0x47
 7144 2796 00000000 		.long	.LASF69
GAS LISTING /tmp/ccKUqHDa.s 			page 383


 7145 279a 0B       		.byte	0xb
 7146 279b 6E02     		.value	0x26e
 7147 279d DB070000 		.long	0x7db
 7148 27a1 8013     		.value	0x1380
 7149 27a3 34       		.uleb128 0x34
 7150 27a4 00000000 		.long	.LASF361
 7151 27a8 0B       		.byte	0xb
 7152 27a9 F601     		.value	0x1f6
 7153 27ab 01       		.byte	0x1
 7154 27ac B4270000 		.long	0x27b4
 7155 27b0 BF270000 		.long	0x27bf
 7156 27b4 08       		.uleb128 0x8
 7157 27b5 FF980000 		.long	0x98ff
 7158 27b9 13       		.uleb128 0x13
 7159 27ba F4260000 		.long	0x26f4
 7160 27be 00       		.byte	0
 7161 27bf 37       		.uleb128 0x37
 7162 27c0 00000000 		.long	.LASF362
 7163 27c4 0B       		.byte	0xb
 7164 27c5 0702     		.value	0x207
 7165 27c7 00000000 		.long	.LASF363
 7166 27cb 01       		.byte	0x1
 7167 27cc D4270000 		.long	0x27d4
 7168 27d0 DF270000 		.long	0x27df
 7169 27d4 08       		.uleb128 0x8
 7170 27d5 FF980000 		.long	0x98ff
 7171 27d9 13       		.uleb128 0x13
 7172 27da F4260000 		.long	0x26f4
 7173 27de 00       		.byte	0
 7174 27df 48       		.uleb128 0x48
 7175 27e0 6D696E00 		.string	"min"
 7176 27e4 0B       		.byte	0xb
 7177 27e5 1102     		.value	0x211
 7178 27e7 00000000 		.long	.LASF364
 7179 27eb F4260000 		.long	0x26f4
 7180 27ef 01       		.byte	0x1
 7181 27f0 48       		.uleb128 0x48
 7182 27f1 6D617800 		.string	"max"
 7183 27f5 0B       		.byte	0xb
 7184 27f6 1802     		.value	0x218
 7185 27f8 00000000 		.long	.LASF365
 7186 27fc F4260000 		.long	0x26f4
 7187 2800 01       		.byte	0x1
 7188 2801 37       		.uleb128 0x37
 7189 2802 00000000 		.long	.LASF366
 7190 2806 0B       		.byte	0xb
 7191 2807 1F02     		.value	0x21f
 7192 2809 00000000 		.long	.LASF367
 7193 280d 01       		.byte	0x1
 7194 280e 16280000 		.long	0x2816
 7195 2812 21280000 		.long	0x2821
 7196 2816 08       		.uleb128 0x8
 7197 2817 FF980000 		.long	0x98ff
 7198 281b 13       		.uleb128 0x13
 7199 281c D0710000 		.long	0x71d0
 7200 2820 00       		.byte	0
 7201 2821 35       		.uleb128 0x35
GAS LISTING /tmp/ccKUqHDa.s 			page 384


 7202 2822 00000000 		.long	.LASF331
 7203 2826 0B       		.byte	0xb
 7204 2827 2202     		.value	0x222
 7205 2829 00000000 		.long	.LASF368
 7206 282d F4260000 		.long	0x26f4
 7207 2831 01       		.byte	0x1
 7208 2832 3A280000 		.long	0x283a
 7209 2836 40280000 		.long	0x2840
 7210 283a 08       		.uleb128 0x8
 7211 283b FF980000 		.long	0x98ff
 7212 283f 00       		.byte	0
 7213 2840 2E       		.uleb128 0x2e
 7214 2841 00000000 		.long	.LASF369
 7215 2845 0B       		.byte	0xb
 7216 2846 6B02     		.value	0x26b
 7217 2848 00000000 		.long	.LASF370
 7218 284c 54280000 		.long	0x2854
 7219 2850 5A280000 		.long	0x285a
 7220 2854 08       		.uleb128 0x8
 7221 2855 FF980000 		.long	0x98ff
 7222 2859 00       		.byte	0
 7223 285a 1C       		.uleb128 0x1c
 7224 285b 00000000 		.long	.LASF371
 7225 285f 30000000 		.long	0x30
 7226 2863 0A       		.uleb128 0xa
 7227 2864 5F5F7700 		.string	"__w"
 7228 2868 30000000 		.long	0x30
 7229 286c 20       		.byte	0x20
 7230 286d 41       		.uleb128 0x41
 7231 286e 5F5F6E00 		.string	"__n"
 7232 2872 30000000 		.long	0x30
 7233 2876 7002     		.value	0x270
 7234 2878 41       		.uleb128 0x41
 7235 2879 5F5F6D00 		.string	"__m"
 7236 287d 30000000 		.long	0x30
 7237 2881 8D01     		.value	0x18d
 7238 2883 0A       		.uleb128 0xa
 7239 2884 5F5F7200 		.string	"__r"
 7240 2888 30000000 		.long	0x30
 7241 288c 1F       		.byte	0x1f
 7242 288d 49       		.uleb128 0x49
 7243 288e 5F5F6100 		.string	"__a"
 7244 2892 30000000 		.long	0x30
 7245 2896 DFB00899 		.long	0x9908b0df
 7246 289a 0A       		.uleb128 0xa
 7247 289b 5F5F7500 		.string	"__u"
 7248 289f 30000000 		.long	0x30
 7249 28a3 0B       		.byte	0xb
 7250 28a4 49       		.uleb128 0x49
 7251 28a5 5F5F6400 		.string	"__d"
 7252 28a9 30000000 		.long	0x30
 7253 28ad FFFFFFFF 		.long	0xffffffff
 7254 28b1 0A       		.uleb128 0xa
 7255 28b2 5F5F7300 		.string	"__s"
 7256 28b6 30000000 		.long	0x30
 7257 28ba 07       		.byte	0x7
 7258 28bb 49       		.uleb128 0x49
GAS LISTING /tmp/ccKUqHDa.s 			page 385


 7259 28bc 5F5F6200 		.string	"__b"
 7260 28c0 30000000 		.long	0x30
 7261 28c4 80562C9D 		.long	0x9d2c5680
 7262 28c8 0A       		.uleb128 0xa
 7263 28c9 5F5F7400 		.string	"__t"
 7264 28cd 30000000 		.long	0x30
 7265 28d1 0F       		.byte	0xf
 7266 28d2 49       		.uleb128 0x49
 7267 28d3 5F5F6300 		.string	"__c"
 7268 28d7 30000000 		.long	0x30
 7269 28db 0000C6EF 		.long	0xefc60000
 7270 28df 0A       		.uleb128 0xa
 7271 28e0 5F5F6C00 		.string	"__l"
 7272 28e4 30000000 		.long	0x30
 7273 28e8 12       		.byte	0x12
 7274 28e9 49       		.uleb128 0x49
 7275 28ea 5F5F6600 		.string	"__f"
 7276 28ee 30000000 		.long	0x30
 7277 28f2 6589076C 		.long	0x6c078965
 7278 28f6 00       		.byte	0
 7279 28f7 0B       		.uleb128 0xb
 7280 28f8 DB070000 		.long	0x7db
 7281 28fc 44       		.uleb128 0x44
 7282 28fd 00000000 		.long	.LASF372
 7283 2901 8813     		.value	0x1388
 7284 2903 0B       		.byte	0xb
 7285 2904 2906     		.value	0x629
 7286 2906 B02A0000 		.long	0x2ab0
 7287 290a 4A       		.uleb128 0x4a
 7288 290b 8813     		.value	0x1388
 7289 290d 0B       		.byte	0xb
 7290 290e 6A06     		.value	0x66a
 7291 2910 38290000 		.long	0x2938
 7292 2914 4B       		.uleb128 0x4b
 7293 2915 00000000 		.long	.LASF373
 7294 2919 0B       		.byte	0xb
 7295 291a 6B06     		.value	0x66b
 7296 291c 16850000 		.long	0x8516
 7297 2920 4B       		.uleb128 0x4b
 7298 2921 00000000 		.long	.LASF374
 7299 2925 0B       		.byte	0xb
 7300 2926 6C06     		.value	0x66c
 7301 2928 B02A0000 		.long	0x2ab0
 7302 292c 4C       		.uleb128 0x4c
 7303 292d 31290000 		.long	0x2931
 7304 2931 08       		.uleb128 0x8
 7305 2932 05990000 		.long	0x9905
 7306 2936 00       		.byte	0
 7307 2937 00       		.byte	0
 7308 2938 4D       		.uleb128 0x4d
 7309 2939 0A290000 		.long	0x290a
 7310 293d 00       		.byte	0
 7311 293e 46       		.uleb128 0x46
 7312 293f 00000000 		.long	.LASF349
 7313 2943 0B       		.byte	0xb
 7314 2944 2D06     		.value	0x62d
 7315 2946 C9710000 		.long	0x71c9
GAS LISTING /tmp/ccKUqHDa.s 			page 386


 7316 294a 01       		.byte	0x1
 7317 294b 34       		.uleb128 0x34
 7318 294c 00000000 		.long	.LASF372
 7319 2950 0B       		.byte	0xb
 7320 2951 3406     		.value	0x634
 7321 2953 01       		.byte	0x1
 7322 2954 5C290000 		.long	0x295c
 7323 2958 67290000 		.long	0x2967
 7324 295c 08       		.uleb128 0x8
 7325 295d 0B990000 		.long	0x990b
 7326 2961 13       		.uleb128 0x13
 7327 2962 D5980000 		.long	0x98d5
 7328 2966 00       		.byte	0
 7329 2967 33       		.uleb128 0x33
 7330 2968 00000000 		.long	.LASF375
 7331 296c 0B       		.byte	0xb
 7332 296d 3906     		.value	0x639
 7333 296f 01       		.byte	0x1
 7334 2970 78290000 		.long	0x2978
 7335 2974 83290000 		.long	0x2983
 7336 2978 08       		.uleb128 0x8
 7337 2979 0B990000 		.long	0x990b
 7338 297d 08       		.uleb128 0x8
 7339 297e E5710000 		.long	0x71e5
 7340 2982 00       		.byte	0
 7341 2983 48       		.uleb128 0x48
 7342 2984 6D696E00 		.string	"min"
 7343 2988 0B       		.byte	0xb
 7344 2989 4706     		.value	0x647
 7345 298b 00000000 		.long	.LASF376
 7346 298f 3E290000 		.long	0x293e
 7347 2993 01       		.byte	0x1
 7348 2994 48       		.uleb128 0x48
 7349 2995 6D617800 		.string	"max"
 7350 2999 0B       		.byte	0xb
 7351 299a 4B06     		.value	0x64b
 7352 299c 00000000 		.long	.LASF377
 7353 29a0 3E290000 		.long	0x293e
 7354 29a4 01       		.byte	0x1
 7355 29a5 35       		.uleb128 0x35
 7356 29a6 00000000 		.long	.LASF378
 7357 29aa 0B       		.byte	0xb
 7358 29ab 4F06     		.value	0x64f
 7359 29ad 00000000 		.long	.LASF379
 7360 29b1 0C840000 		.long	0x840c
 7361 29b5 01       		.byte	0x1
 7362 29b6 BE290000 		.long	0x29be
 7363 29ba C4290000 		.long	0x29c4
 7364 29be 08       		.uleb128 0x8
 7365 29bf 11990000 		.long	0x9911
 7366 29c3 00       		.byte	0
 7367 29c4 35       		.uleb128 0x35
 7368 29c5 00000000 		.long	.LASF331
 7369 29c9 0B       		.byte	0xb
 7370 29ca 5306     		.value	0x653
 7371 29cc 00000000 		.long	.LASF380
 7372 29d0 3E290000 		.long	0x293e
GAS LISTING /tmp/ccKUqHDa.s 			page 387


 7373 29d4 01       		.byte	0x1
 7374 29d5 DD290000 		.long	0x29dd
 7375 29d9 E3290000 		.long	0x29e3
 7376 29dd 08       		.uleb128 0x8
 7377 29de 0B990000 		.long	0x990b
 7378 29e2 00       		.byte	0
 7379 29e3 33       		.uleb128 0x33
 7380 29e4 00000000 		.long	.LASF372
 7381 29e8 0B       		.byte	0xb
 7382 29e9 5D06     		.value	0x65d
 7383 29eb 01       		.byte	0x1
 7384 29ec F4290000 		.long	0x29f4
 7385 29f0 FF290000 		.long	0x29ff
 7386 29f4 08       		.uleb128 0x8
 7387 29f5 0B990000 		.long	0x990b
 7388 29f9 13       		.uleb128 0x13
 7389 29fa 17990000 		.long	0x9917
 7390 29fe 00       		.byte	0
 7391 29ff 37       		.uleb128 0x37
 7392 2a00 00000000 		.long	.LASF18
 7393 2a04 0B       		.byte	0xb
 7394 2a05 5E06     		.value	0x65e
 7395 2a07 00000000 		.long	.LASF381
 7396 2a0b 01       		.byte	0x1
 7397 2a0c 142A0000 		.long	0x2a14
 7398 2a10 1F2A0000 		.long	0x2a1f
 7399 2a14 08       		.uleb128 0x8
 7400 2a15 0B990000 		.long	0x990b
 7401 2a19 13       		.uleb128 0x13
 7402 2a1a 17990000 		.long	0x9917
 7403 2a1e 00       		.byte	0
 7404 2a1f 2E       		.uleb128 0x2e
 7405 2a20 00000000 		.long	.LASF382
 7406 2a24 0B       		.byte	0xb
 7407 2a25 6206     		.value	0x662
 7408 2a27 00000000 		.long	.LASF383
 7409 2a2b 332A0000 		.long	0x2a33
 7410 2a2f 3E2A0000 		.long	0x2a3e
 7411 2a33 08       		.uleb128 0x8
 7412 2a34 0B990000 		.long	0x990b
 7413 2a38 13       		.uleb128 0x13
 7414 2a39 D5980000 		.long	0x98d5
 7415 2a3d 00       		.byte	0
 7416 2a3e 2E       		.uleb128 0x2e
 7417 2a3f 00000000 		.long	.LASF384
 7418 2a43 0B       		.byte	0xb
 7419 2a44 6306     		.value	0x663
 7420 2a46 00000000 		.long	.LASF385
 7421 2a4a 522A0000 		.long	0x2a52
 7422 2a4e 5D2A0000 		.long	0x2a5d
 7423 2a52 08       		.uleb128 0x8
 7424 2a53 0B990000 		.long	0x990b
 7425 2a57 13       		.uleb128 0x13
 7426 2a58 D5980000 		.long	0x98d5
 7427 2a5c 00       		.byte	0
 7428 2a5d 2E       		.uleb128 0x2e
 7429 2a5e 00000000 		.long	.LASF386
GAS LISTING /tmp/ccKUqHDa.s 			page 388


 7430 2a62 0B       		.byte	0xb
 7431 2a63 6406     		.value	0x664
 7432 2a65 00000000 		.long	.LASF387
 7433 2a69 712A0000 		.long	0x2a71
 7434 2a6d 772A0000 		.long	0x2a77
 7435 2a71 08       		.uleb128 0x8
 7436 2a72 0B990000 		.long	0x990b
 7437 2a76 00       		.byte	0
 7438 2a77 2F       		.uleb128 0x2f
 7439 2a78 00000000 		.long	.LASF388
 7440 2a7c 0B       		.byte	0xb
 7441 2a7d 6606     		.value	0x666
 7442 2a7f 00000000 		.long	.LASF389
 7443 2a83 3E290000 		.long	0x293e
 7444 2a87 8F2A0000 		.long	0x2a8f
 7445 2a8b 952A0000 		.long	0x2a95
 7446 2a8f 08       		.uleb128 0x8
 7447 2a90 0B990000 		.long	0x990b
 7448 2a94 00       		.byte	0
 7449 2a95 30       		.uleb128 0x30
 7450 2a96 00000000 		.long	.LASF390
 7451 2a9a 0B       		.byte	0xb
 7452 2a9b 6706     		.value	0x667
 7453 2a9d 00000000 		.long	.LASF391
 7454 2aa1 3E290000 		.long	0x293e
 7455 2aa5 A92A0000 		.long	0x2aa9
 7456 2aa9 08       		.uleb128 0x8
 7457 2aaa 0B990000 		.long	0x990b
 7458 2aae 00       		.byte	0
 7459 2aaf 00       		.byte	0
 7460 2ab0 4E       		.uleb128 0x4e
 7461 2ab1 00000000 		.long	.LASF392
 7462 2ab5 0B       		.byte	0xb
 7463 2ab6 0906     		.value	0x609
 7464 2ab8 B0260000 		.long	0x26b0
 7465 2abc 0B       		.uleb128 0xb
 7466 2abd FC280000 		.long	0x28fc
 7467 2ac1 27       		.uleb128 0x27
 7468 2ac2 00000000 		.long	.LASF393
 7469 2ac6 01       		.byte	0x1
 7470 2ac7 12       		.byte	0x12
 7471 2ac8 1806     		.value	0x618
 7472 2aca F82A0000 		.long	0x2af8
 7473 2ace 4E       		.uleb128 0x4e
 7474 2acf 00000000 		.long	.LASF394
 7475 2ad3 12       		.byte	0x12
 7476 2ad4 1906     		.value	0x619
 7477 2ad6 30000000 		.long	0x30
 7478 2ada 1C       		.uleb128 0x1c
 7479 2adb 00000000 		.long	.LASF395
 7480 2adf 30000000 		.long	0x30
 7481 2ae3 40       		.uleb128 0x40
 7482 2ae4 00000000 		.long	.LASF396
 7483 2ae8 A3710000 		.long	0x71a3
 7484 2aec 00       		.byte	0
 7485 2aed 40       		.uleb128 0x40
 7486 2aee 00000000 		.long	.LASF397
GAS LISTING /tmp/ccKUqHDa.s 			page 389


 7487 2af2 A3710000 		.long	0x71a3
 7488 2af6 00       		.byte	0
 7489 2af7 00       		.byte	0
 7490 2af8 4F       		.uleb128 0x4f
 7491 2af9 00000000 		.long	.LASF398
 7492 2afd 01       		.byte	0x1
 7493 2afe 12       		.byte	0x12
 7494 2aff 2A06     		.value	0x62a
 7495 2b01 392B0000 		.long	0x2b39
 7496 2b05 46       		.uleb128 0x46
 7497 2b06 00000000 		.long	.LASF394
 7498 2b0a 12       		.byte	0x12
 7499 2b0b 2F06     		.value	0x62f
 7500 2b0d CE2A0000 		.long	0x2ace
 7501 2b11 01       		.byte	0x1
 7502 2b12 1C       		.uleb128 0x1c
 7503 2b13 00000000 		.long	.LASF399
 7504 2b17 EC710000 		.long	0x71ec
 7505 2b1b 1C       		.uleb128 0x1c
 7506 2b1c 00000000 		.long	.LASF395
 7507 2b20 30000000 		.long	0x30
 7508 2b24 40       		.uleb128 0x40
 7509 2b25 00000000 		.long	.LASF396
 7510 2b29 A3710000 		.long	0x71a3
 7511 2b2d 00       		.byte	0
 7512 2b2e 40       		.uleb128 0x40
 7513 2b2f 00000000 		.long	.LASF397
 7514 2b33 A3710000 		.long	0x71a3
 7515 2b37 00       		.byte	0
 7516 2b38 00       		.byte	0
 7517 2b39 4F       		.uleb128 0x4f
 7518 2b3a 00000000 		.long	.LASF400
 7519 2b3e 01       		.byte	0x1
 7520 2b3f 12       		.byte	0x12
 7521 2b40 6206     		.value	0x662
 7522 2b42 712B0000 		.long	0x2b71
 7523 2b46 46       		.uleb128 0x46
 7524 2b47 00000000 		.long	.LASF394
 7525 2b4b 12       		.byte	0x12
 7526 2b4c 6906     		.value	0x669
 7527 2b4e 052B0000 		.long	0x2b05
 7528 2b52 01       		.byte	0x1
 7529 2b53 09       		.uleb128 0x9
 7530 2b54 5F547000 		.string	"_Tp"
 7531 2b58 EC710000 		.long	0x71ec
 7532 2b5c 40       		.uleb128 0x40
 7533 2b5d 00000000 		.long	.LASF401
 7534 2b61 A3710000 		.long	0x71a3
 7535 2b65 01       		.byte	0x1
 7536 2b66 40       		.uleb128 0x40
 7537 2b67 00000000 		.long	.LASF402
 7538 2b6b A3710000 		.long	0x71a3
 7539 2b6f 00       		.byte	0
 7540 2b70 00       		.byte	0
 7541 2b71 27       		.uleb128 0x27
 7542 2b72 00000000 		.long	.LASF403
 7543 2b76 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 390


 7544 2b77 12       		.byte	0x12
 7545 2b78 8206     		.value	0x682
 7546 2b7a 942B0000 		.long	0x2b94
 7547 2b7e 4E       		.uleb128 0x4e
 7548 2b7f 00000000 		.long	.LASF404
 7549 2b83 12       		.byte	0x12
 7550 2b84 8306     		.value	0x683
 7551 2b86 462B0000 		.long	0x2b46
 7552 2b8a 09       		.uleb128 0x9
 7553 2b8b 5F547000 		.string	"_Tp"
 7554 2b8f EC710000 		.long	0x71ec
 7555 2b93 00       		.byte	0
 7556 2b94 06       		.uleb128 0x6
 7557 2b95 00000000 		.long	.LASF405
 7558 2b99 12       		.byte	0x12
 7559 2b9a 5A       		.byte	0x5a
 7560 2b9b 42000000 		.long	0x42
 7561 2b9f 50       		.uleb128 0x50
 7562 2ba0 00000000 		.long	.LASF425
 7563 2ba4 04       		.byte	0x4
 7564 2ba5 1F       		.byte	0x1f
 7565 2ba6 33       		.byte	0x33
 7566 2ba7 2E2C0000 		.long	0x2c2e
 7567 2bab 51       		.uleb128 0x51
 7568 2bac 00000000 		.long	.LASF406
 7569 2bb0 01       		.sleb128 1
 7570 2bb1 51       		.uleb128 0x51
 7571 2bb2 00000000 		.long	.LASF407
 7572 2bb6 02       		.sleb128 2
 7573 2bb7 51       		.uleb128 0x51
 7574 2bb8 00000000 		.long	.LASF408
 7575 2bbc 04       		.sleb128 4
 7576 2bbd 51       		.uleb128 0x51
 7577 2bbe 00000000 		.long	.LASF409
 7578 2bc2 08       		.sleb128 8
 7579 2bc3 51       		.uleb128 0x51
 7580 2bc4 00000000 		.long	.LASF410
 7581 2bc8 10       		.sleb128 16
 7582 2bc9 51       		.uleb128 0x51
 7583 2bca 00000000 		.long	.LASF411
 7584 2bce 20       		.sleb128 32
 7585 2bcf 51       		.uleb128 0x51
 7586 2bd0 00000000 		.long	.LASF412
 7587 2bd4 C000     		.sleb128 64
 7588 2bd6 51       		.uleb128 0x51
 7589 2bd7 00000000 		.long	.LASF413
 7590 2bdb 8001     		.sleb128 128
 7591 2bdd 51       		.uleb128 0x51
 7592 2bde 00000000 		.long	.LASF414
 7593 2be2 8002     		.sleb128 256
 7594 2be4 51       		.uleb128 0x51
 7595 2be5 00000000 		.long	.LASF415
 7596 2be9 8004     		.sleb128 512
 7597 2beb 51       		.uleb128 0x51
 7598 2bec 00000000 		.long	.LASF416
 7599 2bf0 8008     		.sleb128 1024
 7600 2bf2 51       		.uleb128 0x51
GAS LISTING /tmp/ccKUqHDa.s 			page 391


 7601 2bf3 00000000 		.long	.LASF417
 7602 2bf7 8010     		.sleb128 2048
 7603 2bf9 51       		.uleb128 0x51
 7604 2bfa 00000000 		.long	.LASF418
 7605 2bfe 8020     		.sleb128 4096
 7606 2c00 51       		.uleb128 0x51
 7607 2c01 00000000 		.long	.LASF419
 7608 2c05 80C000   		.sleb128 8192
 7609 2c08 51       		.uleb128 0x51
 7610 2c09 00000000 		.long	.LASF420
 7611 2c0d 808001   		.sleb128 16384
 7612 2c10 51       		.uleb128 0x51
 7613 2c11 00000000 		.long	.LASF421
 7614 2c15 B001     		.sleb128 176
 7615 2c17 51       		.uleb128 0x51
 7616 2c18 00000000 		.long	.LASF422
 7617 2c1c CA00     		.sleb128 74
 7618 2c1e 51       		.uleb128 0x51
 7619 2c1f 00000000 		.long	.LASF423
 7620 2c23 8402     		.sleb128 260
 7621 2c25 51       		.uleb128 0x51
 7622 2c26 00000000 		.long	.LASF424
 7623 2c2a 808004   		.sleb128 65536
 7624 2c2d 00       		.byte	0
 7625 2c2e 50       		.uleb128 0x50
 7626 2c2f 00000000 		.long	.LASF426
 7627 2c33 04       		.byte	0x4
 7628 2c34 1F       		.byte	0x1f
 7629 2c35 67       		.byte	0x67
 7630 2c36 672C0000 		.long	0x2c67
 7631 2c3a 51       		.uleb128 0x51
 7632 2c3b 00000000 		.long	.LASF427
 7633 2c3f 01       		.sleb128 1
 7634 2c40 51       		.uleb128 0x51
 7635 2c41 00000000 		.long	.LASF428
 7636 2c45 02       		.sleb128 2
 7637 2c46 51       		.uleb128 0x51
 7638 2c47 00000000 		.long	.LASF429
 7639 2c4b 04       		.sleb128 4
 7640 2c4c 51       		.uleb128 0x51
 7641 2c4d 00000000 		.long	.LASF430
 7642 2c51 08       		.sleb128 8
 7643 2c52 51       		.uleb128 0x51
 7644 2c53 00000000 		.long	.LASF431
 7645 2c57 10       		.sleb128 16
 7646 2c58 51       		.uleb128 0x51
 7647 2c59 00000000 		.long	.LASF432
 7648 2c5d 20       		.sleb128 32
 7649 2c5e 51       		.uleb128 0x51
 7650 2c5f 00000000 		.long	.LASF433
 7651 2c63 808004   		.sleb128 65536
 7652 2c66 00       		.byte	0
 7653 2c67 50       		.uleb128 0x50
 7654 2c68 00000000 		.long	.LASF434
 7655 2c6c 04       		.byte	0x4
 7656 2c6d 1F       		.byte	0x1f
 7657 2c6e 8F       		.byte	0x8f
GAS LISTING /tmp/ccKUqHDa.s 			page 392


 7658 2c6f 942C0000 		.long	0x2c94
 7659 2c73 51       		.uleb128 0x51
 7660 2c74 00000000 		.long	.LASF435
 7661 2c78 00       		.sleb128 0
 7662 2c79 51       		.uleb128 0x51
 7663 2c7a 00000000 		.long	.LASF436
 7664 2c7e 01       		.sleb128 1
 7665 2c7f 51       		.uleb128 0x51
 7666 2c80 00000000 		.long	.LASF437
 7667 2c84 02       		.sleb128 2
 7668 2c85 51       		.uleb128 0x51
 7669 2c86 00000000 		.long	.LASF438
 7670 2c8a 04       		.sleb128 4
 7671 2c8b 51       		.uleb128 0x51
 7672 2c8c 00000000 		.long	.LASF439
 7673 2c90 808004   		.sleb128 65536
 7674 2c93 00       		.byte	0
 7675 2c94 50       		.uleb128 0x50
 7676 2c95 00000000 		.long	.LASF440
 7677 2c99 04       		.byte	0x4
 7678 2c9a 1F       		.byte	0x1f
 7679 2c9b B5       		.byte	0xb5
 7680 2c9c BB2C0000 		.long	0x2cbb
 7681 2ca0 51       		.uleb128 0x51
 7682 2ca1 00000000 		.long	.LASF441
 7683 2ca5 00       		.sleb128 0
 7684 2ca6 51       		.uleb128 0x51
 7685 2ca7 00000000 		.long	.LASF442
 7686 2cab 01       		.sleb128 1
 7687 2cac 51       		.uleb128 0x51
 7688 2cad 00000000 		.long	.LASF443
 7689 2cb1 02       		.sleb128 2
 7690 2cb2 51       		.uleb128 0x51
 7691 2cb3 00000000 		.long	.LASF444
 7692 2cb7 808004   		.sleb128 65536
 7693 2cba 00       		.byte	0
 7694 2cbb 52       		.uleb128 0x52
 7695 2cbc 00000000 		.long	.LASF475
 7696 2cc0 1B2F0000 		.long	0x2f1b
 7697 2cc4 53       		.uleb128 0x53
 7698 2cc5 00000000 		.long	.LASF447
 7699 2cc9 01       		.byte	0x1
 7700 2cca 1F       		.byte	0x1f
 7701 2ccb 1502     		.value	0x215
 7702 2ccd 01       		.byte	0x1
 7703 2cce 1A2D0000 		.long	0x2d1a
 7704 2cd2 54       		.uleb128 0x54
 7705 2cd3 00000000 		.long	.LASF445
 7706 2cd7 1F       		.byte	0x1f
 7707 2cd8 1D02     		.value	0x21d
 7708 2cda 66950000 		.long	0x9566
 7709 2cde 54       		.uleb128 0x54
 7710 2cdf 00000000 		.long	.LASF446
 7711 2ce3 1F       		.byte	0x1f
 7712 2ce4 1E02     		.value	0x21e
 7713 2ce6 A3710000 		.long	0x71a3
 7714 2cea 33       		.uleb128 0x33
GAS LISTING /tmp/ccKUqHDa.s 			page 393


 7715 2ceb 00000000 		.long	.LASF447
 7716 2cef 1F       		.byte	0x1f
 7717 2cf0 1902     		.value	0x219
 7718 2cf2 01       		.byte	0x1
 7719 2cf3 FB2C0000 		.long	0x2cfb
 7720 2cf7 012D0000 		.long	0x2d01
 7721 2cfb 08       		.uleb128 0x8
 7722 2cfc 28990000 		.long	0x9928
 7723 2d00 00       		.byte	0
 7724 2d01 55       		.uleb128 0x55
 7725 2d02 00000000 		.long	.LASF448
 7726 2d06 1F       		.byte	0x1f
 7727 2d07 1A02     		.value	0x21a
 7728 2d09 01       		.byte	0x1
 7729 2d0a 0E2D0000 		.long	0x2d0e
 7730 2d0e 08       		.uleb128 0x8
 7731 2d0f 28990000 		.long	0x9928
 7732 2d13 08       		.uleb128 0x8
 7733 2d14 E5710000 		.long	0x71e5
 7734 2d18 00       		.byte	0
 7735 2d19 00       		.byte	0
 7736 2d1a 25       		.uleb128 0x25
 7737 2d1b 00000000 		.long	.LASF449
 7738 2d1f 1F       		.byte	0x1f
 7739 2d20 FF       		.byte	0xff
 7740 2d21 9F2B0000 		.long	0x2b9f
 7741 2d25 01       		.byte	0x1
 7742 2d26 46       		.uleb128 0x46
 7743 2d27 00000000 		.long	.LASF450
 7744 2d2b 1F       		.byte	0x1f
 7745 2d2c 4A01     		.value	0x14a
 7746 2d2e 672C0000 		.long	0x2c67
 7747 2d32 01       		.byte	0x1
 7748 2d33 56       		.uleb128 0x56
 7749 2d34 00000000 		.long	.LASF452
 7750 2d38 1F       		.byte	0x1f
 7751 2d39 0201     		.value	0x102
 7752 2d3b 412D0000 		.long	0x2d41
 7753 2d3f 01       		.byte	0x1
 7754 2d40 01       		.byte	0x1
 7755 2d41 0B       		.uleb128 0xb
 7756 2d42 1A2D0000 		.long	0x2d1a
 7757 2d46 57       		.uleb128 0x57
 7758 2d47 64656300 		.string	"dec"
 7759 2d4b 1F       		.byte	0x1f
 7760 2d4c 0501     		.value	0x105
 7761 2d4e 412D0000 		.long	0x2d41
 7762 2d52 01       		.byte	0x1
 7763 2d53 02       		.byte	0x2
 7764 2d54 56       		.uleb128 0x56
 7765 2d55 00000000 		.long	.LASF453
 7766 2d59 1F       		.byte	0x1f
 7767 2d5a 0801     		.value	0x108
 7768 2d5c 412D0000 		.long	0x2d41
 7769 2d60 01       		.byte	0x1
 7770 2d61 04       		.byte	0x4
 7771 2d62 57       		.uleb128 0x57
GAS LISTING /tmp/ccKUqHDa.s 			page 394


 7772 2d63 68657800 		.string	"hex"
 7773 2d67 1F       		.byte	0x1f
 7774 2d68 0B01     		.value	0x10b
 7775 2d6a 412D0000 		.long	0x2d41
 7776 2d6e 01       		.byte	0x1
 7777 2d6f 08       		.byte	0x8
 7778 2d70 56       		.uleb128 0x56
 7779 2d71 00000000 		.long	.LASF454
 7780 2d75 1F       		.byte	0x1f
 7781 2d76 1001     		.value	0x110
 7782 2d78 412D0000 		.long	0x2d41
 7783 2d7c 01       		.byte	0x1
 7784 2d7d 10       		.byte	0x10
 7785 2d7e 56       		.uleb128 0x56
 7786 2d7f 00000000 		.long	.LASF455
 7787 2d83 1F       		.byte	0x1f
 7788 2d84 1401     		.value	0x114
 7789 2d86 412D0000 		.long	0x2d41
 7790 2d8a 01       		.byte	0x1
 7791 2d8b 20       		.byte	0x20
 7792 2d8c 57       		.uleb128 0x57
 7793 2d8d 6F637400 		.string	"oct"
 7794 2d91 1F       		.byte	0x1f
 7795 2d92 1701     		.value	0x117
 7796 2d94 412D0000 		.long	0x2d41
 7797 2d98 01       		.byte	0x1
 7798 2d99 40       		.byte	0x40
 7799 2d9a 56       		.uleb128 0x56
 7800 2d9b 00000000 		.long	.LASF456
 7801 2d9f 1F       		.byte	0x1f
 7802 2da0 1B01     		.value	0x11b
 7803 2da2 412D0000 		.long	0x2d41
 7804 2da6 01       		.byte	0x1
 7805 2da7 80       		.byte	0x80
 7806 2da8 45       		.uleb128 0x45
 7807 2da9 00000000 		.long	.LASF457
 7808 2dad 1F       		.byte	0x1f
 7809 2dae 1E01     		.value	0x11e
 7810 2db0 412D0000 		.long	0x2d41
 7811 2db4 01       		.byte	0x1
 7812 2db5 0001     		.value	0x100
 7813 2db7 45       		.uleb128 0x45
 7814 2db8 00000000 		.long	.LASF458
 7815 2dbc 1F       		.byte	0x1f
 7816 2dbd 2201     		.value	0x122
 7817 2dbf 412D0000 		.long	0x2d41
 7818 2dc3 01       		.byte	0x1
 7819 2dc4 0002     		.value	0x200
 7820 2dc6 45       		.uleb128 0x45
 7821 2dc7 00000000 		.long	.LASF459
 7822 2dcb 1F       		.byte	0x1f
 7823 2dcc 2601     		.value	0x126
 7824 2dce 412D0000 		.long	0x2d41
 7825 2dd2 01       		.byte	0x1
 7826 2dd3 0004     		.value	0x400
 7827 2dd5 45       		.uleb128 0x45
 7828 2dd6 00000000 		.long	.LASF460
GAS LISTING /tmp/ccKUqHDa.s 			page 395


 7829 2dda 1F       		.byte	0x1f
 7830 2ddb 2901     		.value	0x129
 7831 2ddd 412D0000 		.long	0x2d41
 7832 2de1 01       		.byte	0x1
 7833 2de2 0008     		.value	0x800
 7834 2de4 45       		.uleb128 0x45
 7835 2de5 00000000 		.long	.LASF461
 7836 2de9 1F       		.byte	0x1f
 7837 2dea 2C01     		.value	0x12c
 7838 2dec 412D0000 		.long	0x2d41
 7839 2df0 01       		.byte	0x1
 7840 2df1 0010     		.value	0x1000
 7841 2df3 45       		.uleb128 0x45
 7842 2df4 00000000 		.long	.LASF462
 7843 2df8 1F       		.byte	0x1f
 7844 2df9 2F01     		.value	0x12f
 7845 2dfb 412D0000 		.long	0x2d41
 7846 2dff 01       		.byte	0x1
 7847 2e00 0020     		.value	0x2000
 7848 2e02 45       		.uleb128 0x45
 7849 2e03 00000000 		.long	.LASF463
 7850 2e07 1F       		.byte	0x1f
 7851 2e08 3301     		.value	0x133
 7852 2e0a 412D0000 		.long	0x2d41
 7853 2e0e 01       		.byte	0x1
 7854 2e0f 0040     		.value	0x4000
 7855 2e11 56       		.uleb128 0x56
 7856 2e12 00000000 		.long	.LASF464
 7857 2e16 1F       		.byte	0x1f
 7858 2e17 3601     		.value	0x136
 7859 2e19 412D0000 		.long	0x2d41
 7860 2e1d 01       		.byte	0x1
 7861 2e1e B0       		.byte	0xb0
 7862 2e1f 56       		.uleb128 0x56
 7863 2e20 00000000 		.long	.LASF465
 7864 2e24 1F       		.byte	0x1f
 7865 2e25 3901     		.value	0x139
 7866 2e27 412D0000 		.long	0x2d41
 7867 2e2b 01       		.byte	0x1
 7868 2e2c 4A       		.byte	0x4a
 7869 2e2d 45       		.uleb128 0x45
 7870 2e2e 00000000 		.long	.LASF466
 7871 2e32 1F       		.byte	0x1f
 7872 2e33 3C01     		.value	0x13c
 7873 2e35 412D0000 		.long	0x2d41
 7874 2e39 01       		.byte	0x1
 7875 2e3a 0401     		.value	0x104
 7876 2e3c 56       		.uleb128 0x56
 7877 2e3d 00000000 		.long	.LASF467
 7878 2e41 1F       		.byte	0x1f
 7879 2e42 4E01     		.value	0x14e
 7880 2e44 4A2E0000 		.long	0x2e4a
 7881 2e48 01       		.byte	0x1
 7882 2e49 01       		.byte	0x1
 7883 2e4a 0B       		.uleb128 0xb
 7884 2e4b 262D0000 		.long	0x2d26
 7885 2e4f 56       		.uleb128 0x56
GAS LISTING /tmp/ccKUqHDa.s 			page 396


 7886 2e50 00000000 		.long	.LASF468
 7887 2e54 1F       		.byte	0x1f
 7888 2e55 5101     		.value	0x151
 7889 2e57 4A2E0000 		.long	0x2e4a
 7890 2e5b 01       		.byte	0x1
 7891 2e5c 02       		.byte	0x2
 7892 2e5d 56       		.uleb128 0x56
 7893 2e5e 00000000 		.long	.LASF469
 7894 2e62 1F       		.byte	0x1f
 7895 2e63 5601     		.value	0x156
 7896 2e65 4A2E0000 		.long	0x2e4a
 7897 2e69 01       		.byte	0x1
 7898 2e6a 04       		.byte	0x4
 7899 2e6b 56       		.uleb128 0x56
 7900 2e6c 00000000 		.long	.LASF470
 7901 2e70 1F       		.byte	0x1f
 7902 2e71 5901     		.value	0x159
 7903 2e73 4A2E0000 		.long	0x2e4a
 7904 2e77 01       		.byte	0x1
 7905 2e78 00       		.byte	0
 7906 2e79 46       		.uleb128 0x46
 7907 2e7a 00000000 		.long	.LASF471
 7908 2e7e 1F       		.byte	0x1f
 7909 2e7f 6901     		.value	0x169
 7910 2e81 2E2C0000 		.long	0x2c2e
 7911 2e85 01       		.byte	0x1
 7912 2e86 57       		.uleb128 0x57
 7913 2e87 61707000 		.string	"app"
 7914 2e8b 1F       		.byte	0x1f
 7915 2e8c 6C01     		.value	0x16c
 7916 2e8e 942E0000 		.long	0x2e94
 7917 2e92 01       		.byte	0x1
 7918 2e93 01       		.byte	0x1
 7919 2e94 0B       		.uleb128 0xb
 7920 2e95 792E0000 		.long	0x2e79
 7921 2e99 57       		.uleb128 0x57
 7922 2e9a 61746500 		.string	"ate"
 7923 2e9e 1F       		.byte	0x1f
 7924 2e9f 6F01     		.value	0x16f
 7925 2ea1 942E0000 		.long	0x2e94
 7926 2ea5 01       		.byte	0x1
 7927 2ea6 02       		.byte	0x2
 7928 2ea7 56       		.uleb128 0x56
 7929 2ea8 00000000 		.long	.LASF472
 7930 2eac 1F       		.byte	0x1f
 7931 2ead 7401     		.value	0x174
 7932 2eaf 942E0000 		.long	0x2e94
 7933 2eb3 01       		.byte	0x1
 7934 2eb4 04       		.byte	0x4
 7935 2eb5 57       		.uleb128 0x57
 7936 2eb6 696E00   		.string	"in"
 7937 2eb9 1F       		.byte	0x1f
 7938 2eba 7701     		.value	0x177
 7939 2ebc 942E0000 		.long	0x2e94
 7940 2ec0 01       		.byte	0x1
 7941 2ec1 08       		.byte	0x8
 7942 2ec2 57       		.uleb128 0x57
GAS LISTING /tmp/ccKUqHDa.s 			page 397


 7943 2ec3 6F757400 		.string	"out"
 7944 2ec7 1F       		.byte	0x1f
 7945 2ec8 7A01     		.value	0x17a
 7946 2eca 942E0000 		.long	0x2e94
 7947 2ece 01       		.byte	0x1
 7948 2ecf 10       		.byte	0x10
 7949 2ed0 56       		.uleb128 0x56
 7950 2ed1 00000000 		.long	.LASF473
 7951 2ed5 1F       		.byte	0x1f
 7952 2ed6 7D01     		.value	0x17d
 7953 2ed8 942E0000 		.long	0x2e94
 7954 2edc 01       		.byte	0x1
 7955 2edd 20       		.byte	0x20
 7956 2ede 46       		.uleb128 0x46
 7957 2edf 00000000 		.long	.LASF474
 7958 2ee3 1F       		.byte	0x1f
 7959 2ee4 8901     		.value	0x189
 7960 2ee6 942C0000 		.long	0x2c94
 7961 2eea 01       		.byte	0x1
 7962 2eeb 57       		.uleb128 0x57
 7963 2eec 62656700 		.string	"beg"
 7964 2ef0 1F       		.byte	0x1f
 7965 2ef1 8C01     		.value	0x18c
 7966 2ef3 F92E0000 		.long	0x2ef9
 7967 2ef7 01       		.byte	0x1
 7968 2ef8 00       		.byte	0
 7969 2ef9 0B       		.uleb128 0xb
 7970 2efa DE2E0000 		.long	0x2ede
 7971 2efe 57       		.uleb128 0x57
 7972 2eff 63757200 		.string	"cur"
 7973 2f03 1F       		.byte	0x1f
 7974 2f04 8F01     		.value	0x18f
 7975 2f06 F92E0000 		.long	0x2ef9
 7976 2f0a 01       		.byte	0x1
 7977 2f0b 01       		.byte	0x1
 7978 2f0c 57       		.uleb128 0x57
 7979 2f0d 656E6400 		.string	"end"
 7980 2f11 1F       		.byte	0x1f
 7981 2f12 9201     		.value	0x192
 7982 2f14 F92E0000 		.long	0x2ef9
 7983 2f18 01       		.byte	0x1
 7984 2f19 02       		.byte	0x2
 7985 2f1a 00       		.byte	0
 7986 2f1b 0E       		.uleb128 0xe
 7987 2f1c 20       		.byte	0x20
 7988 2f1d 52       		.byte	0x52
 7989 2f1e 39990000 		.long	0x9939
 7990 2f22 0E       		.uleb128 0xe
 7991 2f23 20       		.byte	0x20
 7992 2f24 53       		.byte	0x53
 7993 2f25 2E990000 		.long	0x992e
 7994 2f29 0E       		.uleb128 0xe
 7995 2f2a 20       		.byte	0x20
 7996 2f2b 54       		.byte	0x54
 7997 2f2c C88A0000 		.long	0x8ac8
 7998 2f30 0E       		.uleb128 0xe
 7999 2f31 20       		.byte	0x20
GAS LISTING /tmp/ccKUqHDa.s 			page 398


 8000 2f32 5C       		.byte	0x5c
 8001 2f33 4F990000 		.long	0x994f
 8002 2f37 0E       		.uleb128 0xe
 8003 2f38 20       		.byte	0x20
 8004 2f39 65       		.byte	0x65
 8005 2f3a 69990000 		.long	0x9969
 8006 2f3e 0E       		.uleb128 0xe
 8007 2f3f 20       		.byte	0x20
 8008 2f40 68       		.byte	0x68
 8009 2f41 83990000 		.long	0x9983
 8010 2f45 0E       		.uleb128 0xe
 8011 2f46 20       		.byte	0x20
 8012 2f47 69       		.byte	0x69
 8013 2f48 98990000 		.long	0x9998
 8014 2f4c 52       		.uleb128 0x52
 8015 2f4d 00000000 		.long	.LASF476
 8016 2f51 E22F0000 		.long	0x2fe2
 8017 2f55 16       		.uleb128 0x16
 8018 2f56 00000000 		.long	.LASF477
 8019 2f5a 08       		.byte	0x8
 8020 2f5b 6C       		.byte	0x6c
 8021 2f5c 00000000 		.long	.LASF478
 8022 2f60 50B90000 		.long	0xb950
 8023 2f64 01       		.byte	0x1
 8024 2f65 6D2F0000 		.long	0x2f6d
 8025 2f69 782F0000 		.long	0x2f78
 8026 2f6d 08       		.uleb128 0x8
 8027 2f6e 56B90000 		.long	0xb956
 8028 2f72 13       		.uleb128 0x13
 8029 2f73 5CB90000 		.long	0xb95c
 8030 2f77 00       		.byte	0
 8031 2f78 25       		.uleb128 0x25
 8032 2f79 00000000 		.long	.LASF479
 8033 2f7d 08       		.byte	0x8
 8034 2f7e 47       		.byte	0x47
 8035 2f7f 4C2F0000 		.long	0x2f4c
 8036 2f83 01       		.byte	0x1
 8037 2f84 16       		.uleb128 0x16
 8038 2f85 00000000 		.long	.LASF477
 8039 2f89 08       		.byte	0x8
 8040 2f8a C0       		.byte	0xc0
 8041 2f8b 00000000 		.long	.LASF480
 8042 2f8f 50B90000 		.long	0xb950
 8043 2f93 01       		.byte	0x1
 8044 2f94 9C2F0000 		.long	0x2f9c
 8045 2f98 A72F0000 		.long	0x2fa7
 8046 2f9c 08       		.uleb128 0x8
 8047 2f9d 56B90000 		.long	0xb956
 8048 2fa1 13       		.uleb128 0x13
 8049 2fa2 C9710000 		.long	0x71c9
 8050 2fa6 00       		.byte	0
 8051 2fa7 1C       		.uleb128 0x1c
 8052 2fa8 00000000 		.long	.LASF307
 8053 2fac D8840000 		.long	0x84d8
 8054 2fb0 38       		.uleb128 0x38
 8055 2fb1 00000000 		.long	.LASF308
 8056 2fb5 13060000 		.long	0x613
GAS LISTING /tmp/ccKUqHDa.s 			page 399


 8057 2fb9 19       		.uleb128 0x19
 8058 2fba 00000000 		.long	.LASF481
 8059 2fbe 21       		.byte	0x21
 8060 2fbf 3F       		.byte	0x3f
 8061 2fc0 00000000 		.long	.LASF482
 8062 2fc4 AD990000 		.long	0x99ad
 8063 2fc8 02       		.byte	0x2
 8064 2fc9 D62F0000 		.long	0x2fd6
 8065 2fcd 1C       		.uleb128 0x1c
 8066 2fce 00000000 		.long	.LASF483
 8067 2fd2 30000000 		.long	0x30
 8068 2fd6 08       		.uleb128 0x8
 8069 2fd7 56B90000 		.long	0xb956
 8070 2fdb 13       		.uleb128 0x13
 8071 2fdc 30000000 		.long	0x30
 8072 2fe0 00       		.byte	0
 8073 2fe1 00       		.byte	0
 8074 2fe2 52       		.uleb128 0x52
 8075 2fe3 00000000 		.long	.LASF484
 8076 2fe7 2C300000 		.long	0x302c
 8077 2feb 35       		.uleb128 0x35
 8078 2fec 00000000 		.long	.LASF485
 8079 2ff0 22       		.byte	0x22
 8080 2ff1 6103     		.value	0x361
 8081 2ff3 00000000 		.long	.LASF486
 8082 2ff7 0F300000 		.long	0x300f
 8083 2ffb 01       		.byte	0x1
 8084 2ffc 04300000 		.long	0x3004
 8085 3000 0F300000 		.long	0x300f
 8086 3004 08       		.uleb128 0x8
 8087 3005 60A20000 		.long	0xa260
 8088 3009 13       		.uleb128 0x13
 8089 300a D8840000 		.long	0x84d8
 8090 300e 00       		.byte	0
 8091 300f 46       		.uleb128 0x46
 8092 3010 00000000 		.long	.LASF34
 8093 3014 22       		.byte	0x22
 8094 3015 A702     		.value	0x2a7
 8095 3017 D8840000 		.long	0x84d8
 8096 301b 01       		.byte	0x1
 8097 301c 45       		.uleb128 0x45
 8098 301d 00000000 		.long	.LASF487
 8099 3021 22       		.byte	0x22
 8100 3022 BA02     		.value	0x2ba
 8101 3024 F7280000 		.long	0x28f7
 8102 3028 01       		.byte	0x1
 8103 3029 0001     		.value	0x100
 8104 302b 00       		.byte	0
 8105 302c 0E       		.uleb128 0xe
 8106 302d 23       		.byte	0x23
 8107 302e 3C       		.byte	0x3c
 8108 302f 1E850000 		.long	0x851e
 8109 3033 0E       		.uleb128 0xe
 8110 3034 23       		.byte	0x23
 8111 3035 3D       		.byte	0x3d
 8112 3036 29850000 		.long	0x8529
 8113 303a 0E       		.uleb128 0xe
GAS LISTING /tmp/ccKUqHDa.s 			page 400


 8114 303b 23       		.byte	0x23
 8115 303c 3E       		.byte	0x3e
 8116 303d DE8E0000 		.long	0x8ede
 8117 3041 0E       		.uleb128 0xe
 8118 3042 23       		.byte	0x23
 8119 3043 40       		.byte	0x40
 8120 3044 B8990000 		.long	0x99b8
 8121 3048 0E       		.uleb128 0xe
 8122 3049 23       		.byte	0x23
 8123 304a 41       		.byte	0x41
 8124 304b C3990000 		.long	0x99c3
 8125 304f 0E       		.uleb128 0xe
 8126 3050 23       		.byte	0x23
 8127 3051 42       		.byte	0x42
 8128 3052 DD990000 		.long	0x99dd
 8129 3056 0E       		.uleb128 0xe
 8130 3057 23       		.byte	0x23
 8131 3058 43       		.byte	0x43
 8132 3059 F8990000 		.long	0x99f8
 8133 305d 0E       		.uleb128 0xe
 8134 305e 23       		.byte	0x23
 8135 305f 44       		.byte	0x44
 8136 3060 139A0000 		.long	0x9a13
 8137 3064 0E       		.uleb128 0xe
 8138 3065 23       		.byte	0x23
 8139 3066 45       		.byte	0x45
 8140 3067 289A0000 		.long	0x9a28
 8141 306b 0E       		.uleb128 0xe
 8142 306c 23       		.byte	0x23
 8143 306d 46       		.byte	0x46
 8144 306e 499A0000 		.long	0x9a49
 8145 3072 0E       		.uleb128 0xe
 8146 3073 23       		.byte	0x23
 8147 3074 47       		.byte	0x47
 8148 3075 5E9A0000 		.long	0x9a5e
 8149 3079 0E       		.uleb128 0xe
 8150 307a 23       		.byte	0x23
 8151 307b 48       		.byte	0x48
 8152 307c 739A0000 		.long	0x9a73
 8153 3080 04       		.uleb128 0x4
 8154 3081 00000000 		.long	.LASF488
 8155 3085 01       		.byte	0x1
 8156 3086 24       		.byte	0x24
 8157 3087 AF       		.byte	0xaf
 8158 3088 B7300000 		.long	0x30b7
 8159 308c 06       		.uleb128 0x6
 8160 308d 00000000 		.long	.LASF489
 8161 3091 24       		.byte	0x24
 8162 3092 B3       		.byte	0xb3
 8163 3093 AA080000 		.long	0x8aa
 8164 3097 06       		.uleb128 0x6
 8165 3098 00000000 		.long	.LASF490
 8166 309c 24       		.byte	0x24
 8167 309d B4       		.byte	0xb4
 8168 309e 18850000 		.long	0x8518
 8169 30a2 06       		.uleb128 0x6
 8170 30a3 00000000 		.long	.LASF62
GAS LISTING /tmp/ccKUqHDa.s 			page 401


 8171 30a7 24       		.byte	0x24
 8172 30a8 B5       		.byte	0xb5
 8173 30a9 D2930000 		.long	0x93d2
 8174 30ad 1C       		.uleb128 0x1c
 8175 30ae 00000000 		.long	.LASF491
 8176 30b2 18850000 		.long	0x8518
 8177 30b6 00       		.byte	0
 8178 30b7 10       		.uleb128 0x10
 8179 30b8 00000000 		.long	.LASF492
 8180 30bc 01       		.byte	0x1
 8181 30bd 19       		.byte	0x19
 8182 30be 5C       		.byte	0x5c
 8183 30bf 59310000 		.long	0x3159
 8184 30c3 24       		.uleb128 0x24
 8185 30c4 197A0000 		.long	0x7a19
 8186 30c8 00       		.byte	0
 8187 30c9 01       		.byte	0x1
 8188 30ca 25       		.uleb128 0x25
 8189 30cb 00000000 		.long	.LASF61
 8190 30cf 19       		.byte	0x19
 8191 30d0 5F       		.byte	0x5f
 8192 30d1 DB070000 		.long	0x7db
 8193 30d5 01       		.byte	0x1
 8194 30d6 25       		.uleb128 0x25
 8195 30d7 00000000 		.long	.LASF490
 8196 30db 19       		.byte	0x19
 8197 30dc 61       		.byte	0x61
 8198 30dd 829C0000 		.long	0x9c82
 8199 30e1 01       		.byte	0x1
 8200 30e2 25       		.uleb128 0x25
 8201 30e3 00000000 		.long	.LASF5
 8202 30e7 19       		.byte	0x19
 8203 30e8 65       		.byte	0x65
 8204 30e9 29000000 		.long	0x29
 8205 30ed 01       		.byte	0x1
 8206 30ee 15       		.uleb128 0x15
 8207 30ef 00000000 		.long	.LASF64
 8208 30f3 19       		.byte	0x19
 8209 30f4 71       		.byte	0x71
 8210 30f5 01       		.byte	0x1
 8211 30f6 FE300000 		.long	0x30fe
 8212 30fa 04310000 		.long	0x3104
 8213 30fe 08       		.uleb128 0x8
 8214 30ff 2B9D0000 		.long	0x9d2b
 8215 3103 00       		.byte	0
 8216 3104 15       		.uleb128 0x15
 8217 3105 00000000 		.long	.LASF64
 8218 3109 19       		.byte	0x19
 8219 310a 73       		.byte	0x73
 8220 310b 01       		.byte	0x1
 8221 310c 14310000 		.long	0x3114
 8222 3110 1F310000 		.long	0x311f
 8223 3114 08       		.uleb128 0x8
 8224 3115 2B9D0000 		.long	0x9d2b
 8225 3119 13       		.uleb128 0x13
 8226 311a 319D0000 		.long	0x9d31
 8227 311e 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 402


 8228 311f 15       		.uleb128 0x15
 8229 3120 00000000 		.long	.LASF65
 8230 3124 19       		.byte	0x19
 8231 3125 79       		.byte	0x79
 8232 3126 01       		.byte	0x1
 8233 3127 2F310000 		.long	0x312f
 8234 312b 3A310000 		.long	0x313a
 8235 312f 08       		.uleb128 0x8
 8236 3130 2B9D0000 		.long	0x9d2b
 8237 3134 08       		.uleb128 0x8
 8238 3135 E5710000 		.long	0x71e5
 8239 3139 00       		.byte	0
 8240 313a 58       		.uleb128 0x58
 8241 313b 00000000 		.long	.LASF493
 8242 313f 01       		.byte	0x1
 8243 3140 19       		.byte	0x19
 8244 3141 68       		.byte	0x68
 8245 3142 01       		.byte	0x1
 8246 3143 06       		.uleb128 0x6
 8247 3144 00000000 		.long	.LASF494
 8248 3148 19       		.byte	0x19
 8249 3149 69       		.byte	0x69
 8250 314a B7300000 		.long	0x30b7
 8251 314e 1C       		.uleb128 0x1c
 8252 314f 00000000 		.long	.LASF495
 8253 3153 29000000 		.long	0x29
 8254 3157 00       		.byte	0
 8255 3158 00       		.byte	0
 8256 3159 0B       		.uleb128 0xb
 8257 315a B7300000 		.long	0x30b7
 8258 315e 04       		.uleb128 0x4
 8259 315f 00000000 		.long	.LASF496
 8260 3163 01       		.byte	0x1
 8261 3164 25       		.byte	0x25
 8262 3165 69       		.byte	0x69
 8263 3166 7F310000 		.long	0x317f
 8264 316a 06       		.uleb128 0x6
 8265 316b 00000000 		.long	.LASF394
 8266 316f 25       		.byte	0x25
 8267 3170 6B       		.byte	0x6b
 8268 3171 29000000 		.long	0x29
 8269 3175 09       		.uleb128 0x9
 8270 3176 5F547000 		.string	"_Tp"
 8271 317a 29000000 		.long	0x29
 8272 317e 00       		.byte	0
 8273 317f 04       		.uleb128 0x4
 8274 3180 00000000 		.long	.LASF497
 8275 3184 01       		.byte	0x1
 8276 3185 25       		.byte	0x25
 8277 3186 96       		.byte	0x96
 8278 3187 E5310000 		.long	0x31e5
 8279 318b 06       		.uleb128 0x6
 8280 318c 00000000 		.long	.LASF490
 8281 3190 25       		.byte	0x25
 8282 3191 99       		.byte	0x99
 8283 3192 829C0000 		.long	0x9c82
 8284 3196 06       		.uleb128 0x6
GAS LISTING /tmp/ccKUqHDa.s 			page 403


 8285 3197 00000000 		.long	.LASF489
 8286 319b 25       		.byte	0x25
 8287 319c 9D       		.byte	0x9d
 8288 319d AA080000 		.long	0x8aa
 8289 31a1 3E       		.uleb128 0x3e
 8290 31a2 00000000 		.long	.LASF498
 8291 31a6 25       		.byte	0x25
 8292 31a7 A8       		.byte	0xa8
 8293 31a8 00000000 		.long	.LASF499
 8294 31ac 8B310000 		.long	0x318b
 8295 31b0 BA310000 		.long	0x31ba
 8296 31b4 13       		.uleb128 0x13
 8297 31b5 379D0000 		.long	0x9d37
 8298 31b9 00       		.byte	0
 8299 31ba 06       		.uleb128 0x6
 8300 31bb 00000000 		.long	.LASF500
 8301 31bf 25       		.byte	0x25
 8302 31c0 A0       		.byte	0xa0
 8303 31c1 16850000 		.long	0x8516
 8304 31c5 06       		.uleb128 0x6
 8305 31c6 00000000 		.long	.LASF500
 8306 31ca 25       		.byte	0x25
 8307 31cb A0       		.byte	0xa0
 8308 31cc 96850000 		.long	0x8596
 8309 31d0 06       		.uleb128 0x6
 8310 31d1 00000000 		.long	.LASF500
 8311 31d5 25       		.byte	0x25
 8312 31d6 A0       		.byte	0xa0
 8313 31d7 029D0000 		.long	0x9d02
 8314 31db 1C       		.uleb128 0x1c
 8315 31dc 00000000 		.long	.LASF501
 8316 31e0 829C0000 		.long	0x9c82
 8317 31e4 00       		.byte	0
 8318 31e5 04       		.uleb128 0x4
 8319 31e6 00000000 		.long	.LASF502
 8320 31ea 01       		.byte	0x1
 8321 31eb 26       		.byte	0x26
 8322 31ec 50       		.byte	0x50
 8323 31ed B3330000 		.long	0x33b3
 8324 31f1 06       		.uleb128 0x6
 8325 31f2 00000000 		.long	.LASF5
 8326 31f6 26       		.byte	0x26
 8327 31f7 55       		.byte	0x55
 8328 31f8 E2300000 		.long	0x30e2
 8329 31fc 25       		.uleb128 0x25
 8330 31fd 00000000 		.long	.LASF503
 8331 3201 26       		.byte	0x26
 8332 3202 5F       		.byte	0x5f
 8333 3203 D6300000 		.long	0x30d6
 8334 3207 03       		.byte	0x3
 8335 3208 06       		.uleb128 0x6
 8336 3209 00000000 		.long	.LASF490
 8337 320d 26       		.byte	0x26
 8338 320e 66       		.byte	0x66
 8339 320f FC310000 		.long	0x31fc
 8340 3213 25       		.uleb128 0x25
 8341 3214 00000000 		.long	.LASF504
GAS LISTING /tmp/ccKUqHDa.s 			page 404


 8342 3218 26       		.byte	0x26
 8343 3219 7E       		.byte	0x7e
 8344 321a C5310000 		.long	0x31c5
 8345 321e 03       		.byte	0x3
 8346 321f 06       		.uleb128 0x6
 8347 3220 00000000 		.long	.LASF505
 8348 3224 26       		.byte	0x26
 8349 3225 87       		.byte	0x87
 8350 3226 13320000 		.long	0x3213
 8351 322a 25       		.uleb128 0x25
 8352 322b 00000000 		.long	.LASF506
 8353 322f 26       		.byte	0x26
 8354 3230 94       		.byte	0x94
 8355 3231 CA300000 		.long	0x30ca
 8356 3235 03       		.byte	0x3
 8357 3236 06       		.uleb128 0x6
 8358 3237 00000000 		.long	.LASF61
 8359 323b 26       		.byte	0x26
 8360 323c 9D       		.byte	0x9d
 8361 323d 2A320000 		.long	0x322a
 8362 3241 59       		.uleb128 0x59
 8363 3242 00000000 		.long	.LASF507
 8364 3246 26       		.byte	0x26
 8365 3247 5F       		.byte	0x5f
 8366 3248 00000000 		.long	.LASF508
 8367 324c 3D9D0000 		.long	0x9d3d
 8368 3250 03       		.byte	0x3
 8369 3251 57320000 		.long	0x3257
 8370 3255 5A       		.uleb128 0x5a
 8371 3256 00       		.byte	0
 8372 3257 59       		.uleb128 0x59
 8373 3258 00000000 		.long	.LASF509
 8374 325c 26       		.byte	0x26
 8375 325d 68       		.byte	0x68
 8376 325e 00000000 		.long	.LASF510
 8377 3262 D0310000 		.long	0x31d0
 8378 3266 03       		.byte	0x3
 8379 3267 6D320000 		.long	0x326d
 8380 326b 5A       		.uleb128 0x5a
 8381 326c 00       		.byte	0
 8382 326d 59       		.uleb128 0x59
 8383 326e 00000000 		.long	.LASF511
 8384 3272 26       		.byte	0x26
 8385 3273 73       		.byte	0x73
 8386 3274 00000000 		.long	.LASF512
 8387 3278 BA310000 		.long	0x31ba
 8388 327c 03       		.byte	0x3
 8389 327d 83320000 		.long	0x3283
 8390 3281 5A       		.uleb128 0x5a
 8391 3282 00       		.byte	0
 8392 3283 59       		.uleb128 0x59
 8393 3284 00000000 		.long	.LASF513
 8394 3288 26       		.byte	0x26
 8395 3289 7E       		.byte	0x7e
 8396 328a 00000000 		.long	.LASF514
 8397 328e C5310000 		.long	0x31c5
 8398 3292 03       		.byte	0x3
GAS LISTING /tmp/ccKUqHDa.s 			page 405


 8399 3293 99320000 		.long	0x3299
 8400 3297 5A       		.uleb128 0x5a
 8401 3298 00       		.byte	0
 8402 3299 59       		.uleb128 0x59
 8403 329a 00000000 		.long	.LASF515
 8404 329e 26       		.byte	0x26
 8405 329f 89       		.byte	0x89
 8406 32a0 00000000 		.long	.LASF516
 8407 32a4 96310000 		.long	0x3196
 8408 32a8 03       		.byte	0x3
 8409 32a9 AF320000 		.long	0x32af
 8410 32ad 5A       		.uleb128 0x5a
 8411 32ae 00       		.byte	0
 8412 32af 59       		.uleb128 0x59
 8413 32b0 00000000 		.long	.LASF517
 8414 32b4 26       		.byte	0x26
 8415 32b5 94       		.byte	0x94
 8416 32b6 00000000 		.long	.LASF518
 8417 32ba 7E2B0000 		.long	0x2b7e
 8418 32be 03       		.byte	0x3
 8419 32bf C5320000 		.long	0x32c5
 8420 32c3 5A       		.uleb128 0x5a
 8421 32c4 00       		.byte	0
 8422 32c5 59       		.uleb128 0x59
 8423 32c6 00000000 		.long	.LASF519
 8424 32ca 26       		.byte	0x26
 8425 32cb 9F       		.byte	0x9f
 8426 32cc 00000000 		.long	.LASF520
 8427 32d0 942B0000 		.long	0x2b94
 8428 32d4 03       		.byte	0x3
 8429 32d5 DB320000 		.long	0x32db
 8430 32d9 5A       		.uleb128 0x5a
 8431 32da 00       		.byte	0
 8432 32db 59       		.uleb128 0x59
 8433 32dc 00000000 		.long	.LASF521
 8434 32e0 26       		.byte	0x26
 8435 32e1 AB       		.byte	0xab
 8436 32e2 00000000 		.long	.LASF522
 8437 32e6 942B0000 		.long	0x2b94
 8438 32ea 03       		.byte	0x3
 8439 32eb F1320000 		.long	0x32f1
 8440 32ef 5A       		.uleb128 0x5a
 8441 32f0 00       		.byte	0
 8442 32f1 59       		.uleb128 0x59
 8443 32f2 00000000 		.long	.LASF523
 8444 32f6 26       		.byte	0x26
 8445 32f7 B7       		.byte	0xb7
 8446 32f8 00000000 		.long	.LASF524
 8447 32fc 942B0000 		.long	0x2b94
 8448 3300 03       		.byte	0x3
 8449 3301 07330000 		.long	0x3307
 8450 3305 5A       		.uleb128 0x5a
 8451 3306 00       		.byte	0
 8452 3307 21       		.uleb128 0x21
 8453 3308 00000000 		.long	.LASF525
 8454 330c 26       		.byte	0x26
 8455 330d 6401     		.value	0x164
GAS LISTING /tmp/ccKUqHDa.s 			page 406


 8456 330f 00000000 		.long	.LASF526
 8457 3313 08320000 		.long	0x3208
 8458 3317 26330000 		.long	0x3326
 8459 331b 13       		.uleb128 0x13
 8460 331c 439D0000 		.long	0x9d43
 8461 3320 13       		.uleb128 0x13
 8462 3321 36320000 		.long	0x3236
 8463 3325 00       		.byte	0
 8464 3326 21       		.uleb128 0x21
 8465 3327 00000000 		.long	.LASF525
 8466 332b 26       		.byte	0x26
 8467 332c 7301     		.value	0x173
 8468 332e 00000000 		.long	.LASF527
 8469 3332 08320000 		.long	0x3208
 8470 3336 4A330000 		.long	0x334a
 8471 333a 13       		.uleb128 0x13
 8472 333b 439D0000 		.long	0x9d43
 8473 333f 13       		.uleb128 0x13
 8474 3340 36320000 		.long	0x3236
 8475 3344 13       		.uleb128 0x13
 8476 3345 1F320000 		.long	0x321f
 8477 3349 00       		.byte	0
 8478 334a 31       		.uleb128 0x31
 8479 334b 00000000 		.long	.LASF528
 8480 334f 26       		.byte	0x26
 8481 3350 7E01     		.value	0x17e
 8482 3352 00000000 		.long	.LASF529
 8483 3356 6A330000 		.long	0x336a
 8484 335a 13       		.uleb128 0x13
 8485 335b 439D0000 		.long	0x9d43
 8486 335f 13       		.uleb128 0x13
 8487 3360 08320000 		.long	0x3208
 8488 3364 13       		.uleb128 0x13
 8489 3365 36320000 		.long	0x3236
 8490 3369 00       		.byte	0
 8491 336a 21       		.uleb128 0x21
 8492 336b 00000000 		.long	.LASF177
 8493 336f 26       		.byte	0x26
 8494 3370 A501     		.value	0x1a5
 8495 3372 00000000 		.long	.LASF530
 8496 3376 36320000 		.long	0x3236
 8497 337a 84330000 		.long	0x3384
 8498 337e 13       		.uleb128 0x13
 8499 337f 319D0000 		.long	0x9d31
 8500 3383 00       		.byte	0
 8501 3384 21       		.uleb128 0x21
 8502 3385 00000000 		.long	.LASF531
 8503 3389 26       		.byte	0x26
 8504 338a B101     		.value	0x1b1
 8505 338c 00000000 		.long	.LASF532
 8506 3390 B7300000 		.long	0x30b7
 8507 3394 9E330000 		.long	0x339e
 8508 3398 13       		.uleb128 0x13
 8509 3399 319D0000 		.long	0x9d31
 8510 339d 00       		.byte	0
 8511 339e 06       		.uleb128 0x6
 8512 339f 00000000 		.long	.LASF533
GAS LISTING /tmp/ccKUqHDa.s 			page 407


 8513 33a3 26       		.byte	0x26
 8514 33a4 C5       		.byte	0xc5
 8515 33a5 BF330000 		.long	0x33bf
 8516 33a9 1C       		.uleb128 0x1c
 8517 33aa 00000000 		.long	.LASF309
 8518 33ae B7300000 		.long	0x30b7
 8519 33b2 00       		.byte	0
 8520 33b3 04       		.uleb128 0x4
 8521 33b4 00000000 		.long	.LASF534
 8522 33b8 01       		.byte	0x1
 8523 33b9 26       		.byte	0x26
 8524 33ba 3F       		.byte	0x3f
 8525 33bb DD330000 		.long	0x33dd
 8526 33bf 06       		.uleb128 0x6
 8527 33c0 00000000 		.long	.LASF394
 8528 33c4 26       		.byte	0x26
 8529 33c5 41       		.byte	0x41
 8530 33c6 43310000 		.long	0x3143
 8531 33ca 1C       		.uleb128 0x1c
 8532 33cb 00000000 		.long	.LASF309
 8533 33cf B7300000 		.long	0x30b7
 8534 33d3 09       		.uleb128 0x9
 8535 33d4 5F547000 		.string	"_Tp"
 8536 33d8 29000000 		.long	0x29
 8537 33dc 00       		.byte	0
 8538 33dd 04       		.uleb128 0x4
 8539 33de 00000000 		.long	.LASF535
 8540 33e2 18       		.byte	0x18
 8541 33e3 04       		.byte	0x4
 8542 33e4 48       		.byte	0x48
 8543 33e5 75360000 		.long	0x3675
 8544 33e9 04       		.uleb128 0x4
 8545 33ea 00000000 		.long	.LASF536
 8546 33ee 18       		.byte	0x18
 8547 33ef 04       		.byte	0x4
 8548 33f0 4F       		.byte	0x4f
 8549 33f1 9B340000 		.long	0x349b
 8550 33f5 28       		.uleb128 0x28
 8551 33f6 B7300000 		.long	0x30b7
 8552 33fa 00       		.byte	0
 8553 33fb 11       		.uleb128 0x11
 8554 33fc 00000000 		.long	.LASF537
 8555 3400 04       		.byte	0x4
 8556 3401 52       		.byte	0x52
 8557 3402 9B340000 		.long	0x349b
 8558 3406 00       		.byte	0
 8559 3407 11       		.uleb128 0x11
 8560 3408 00000000 		.long	.LASF538
 8561 340c 04       		.byte	0x4
 8562 340d 53       		.byte	0x53
 8563 340e 9B340000 		.long	0x349b
 8564 3412 08       		.byte	0x8
 8565 3413 11       		.uleb128 0x11
 8566 3414 00000000 		.long	.LASF539
 8567 3418 04       		.byte	0x4
 8568 3419 54       		.byte	0x54
 8569 341a 9B340000 		.long	0x349b
GAS LISTING /tmp/ccKUqHDa.s 			page 408


 8570 341e 10       		.byte	0x10
 8571 341f 39       		.uleb128 0x39
 8572 3420 00000000 		.long	.LASF536
 8573 3424 04       		.byte	0x4
 8574 3425 56       		.byte	0x56
 8575 3426 2E340000 		.long	0x342e
 8576 342a 34340000 		.long	0x3434
 8577 342e 08       		.uleb128 0x8
 8578 342f 559D0000 		.long	0x9d55
 8579 3433 00       		.byte	0
 8580 3434 39       		.uleb128 0x39
 8581 3435 00000000 		.long	.LASF536
 8582 3439 04       		.byte	0x4
 8583 343a 5A       		.byte	0x5a
 8584 343b 43340000 		.long	0x3443
 8585 343f 4E340000 		.long	0x344e
 8586 3443 08       		.uleb128 0x8
 8587 3444 559D0000 		.long	0x9d55
 8588 3448 13       		.uleb128 0x13
 8589 3449 5B9D0000 		.long	0x9d5b
 8590 344d 00       		.byte	0
 8591 344e 39       		.uleb128 0x39
 8592 344f 00000000 		.long	.LASF536
 8593 3453 04       		.byte	0x4
 8594 3454 5F       		.byte	0x5f
 8595 3455 5D340000 		.long	0x345d
 8596 3459 68340000 		.long	0x3468
 8597 345d 08       		.uleb128 0x8
 8598 345e 559D0000 		.long	0x9d55
 8599 3462 13       		.uleb128 0x13
 8600 3463 619D0000 		.long	0x9d61
 8601 3467 00       		.byte	0
 8602 3468 14       		.uleb128 0x14
 8603 3469 00000000 		.long	.LASF540
 8604 346d 04       		.byte	0x4
 8605 346e 65       		.byte	0x65
 8606 346f 00000000 		.long	.LASF541
 8607 3473 7B340000 		.long	0x347b
 8608 3477 86340000 		.long	0x3486
 8609 347b 08       		.uleb128 0x8
 8610 347c 559D0000 		.long	0x9d55
 8611 3480 13       		.uleb128 0x13
 8612 3481 679D0000 		.long	0x9d67
 8613 3485 00       		.byte	0
 8614 3486 2B       		.uleb128 0x2b
 8615 3487 00000000 		.long	.LASF542
 8616 348b 8F340000 		.long	0x348f
 8617 348f 08       		.uleb128 0x8
 8618 3490 559D0000 		.long	0x9d55
 8619 3494 08       		.uleb128 0x8
 8620 3495 E5710000 		.long	0x71e5
 8621 3499 00       		.byte	0
 8622 349a 00       		.byte	0
 8623 349b 06       		.uleb128 0x6
 8624 349c 00000000 		.long	.LASF490
 8625 34a0 04       		.byte	0x4
 8626 34a1 4D       		.byte	0x4d
GAS LISTING /tmp/ccKUqHDa.s 			page 409


 8627 34a2 917B0000 		.long	0x7b91
 8628 34a6 0B       		.uleb128 0xb
 8629 34a7 AB340000 		.long	0x34ab
 8630 34ab 06       		.uleb128 0x6
 8631 34ac 00000000 		.long	.LASF543
 8632 34b0 04       		.byte	0x4
 8633 34b1 4B       		.byte	0x4b
 8634 34b2 507C0000 		.long	0x7c50
 8635 34b6 11       		.uleb128 0x11
 8636 34b7 00000000 		.long	.LASF544
 8637 34bb 04       		.byte	0x4
 8638 34bc A4       		.byte	0xa4
 8639 34bd E9330000 		.long	0x33e9
 8640 34c1 00       		.byte	0
 8641 34c2 06       		.uleb128 0x6
 8642 34c3 00000000 		.long	.LASF73
 8643 34c7 04       		.byte	0x4
 8644 34c8 6E       		.byte	0x6e
 8645 34c9 B7300000 		.long	0x30b7
 8646 34cd 07       		.uleb128 0x7
 8647 34ce 00000000 		.long	.LASF545
 8648 34d2 04       		.byte	0x4
 8649 34d3 71       		.byte	0x71
 8650 34d4 00000000 		.long	.LASF546
 8651 34d8 6D9D0000 		.long	0x9d6d
 8652 34dc E4340000 		.long	0x34e4
 8653 34e0 EA340000 		.long	0x34ea
 8654 34e4 08       		.uleb128 0x8
 8655 34e5 739D0000 		.long	0x9d73
 8656 34e9 00       		.byte	0
 8657 34ea 07       		.uleb128 0x7
 8658 34eb 00000000 		.long	.LASF545
 8659 34ef 04       		.byte	0x4
 8660 34f0 75       		.byte	0x75
 8661 34f1 00000000 		.long	.LASF547
 8662 34f5 5B9D0000 		.long	0x9d5b
 8663 34f9 01350000 		.long	0x3501
 8664 34fd 07350000 		.long	0x3507
 8665 3501 08       		.uleb128 0x8
 8666 3502 799D0000 		.long	0x9d79
 8667 3506 00       		.byte	0
 8668 3507 07       		.uleb128 0x7
 8669 3508 00000000 		.long	.LASF268
 8670 350c 04       		.byte	0x4
 8671 350d 79       		.byte	0x79
 8672 350e 00000000 		.long	.LASF548
 8673 3512 C2340000 		.long	0x34c2
 8674 3516 1E350000 		.long	0x351e
 8675 351a 24350000 		.long	0x3524
 8676 351e 08       		.uleb128 0x8
 8677 351f 799D0000 		.long	0x9d79
 8678 3523 00       		.byte	0
 8679 3524 39       		.uleb128 0x39
 8680 3525 00000000 		.long	.LASF549
 8681 3529 04       		.byte	0x4
 8682 352a 7C       		.byte	0x7c
 8683 352b 33350000 		.long	0x3533
GAS LISTING /tmp/ccKUqHDa.s 			page 410


 8684 352f 39350000 		.long	0x3539
 8685 3533 08       		.uleb128 0x8
 8686 3534 739D0000 		.long	0x9d73
 8687 3538 00       		.byte	0
 8688 3539 39       		.uleb128 0x39
 8689 353a 00000000 		.long	.LASF549
 8690 353e 04       		.byte	0x4
 8691 353f 7F       		.byte	0x7f
 8692 3540 48350000 		.long	0x3548
 8693 3544 53350000 		.long	0x3553
 8694 3548 08       		.uleb128 0x8
 8695 3549 739D0000 		.long	0x9d73
 8696 354d 13       		.uleb128 0x13
 8697 354e 7F9D0000 		.long	0x9d7f
 8698 3552 00       		.byte	0
 8699 3553 0B       		.uleb128 0xb
 8700 3554 C2340000 		.long	0x34c2
 8701 3558 39       		.uleb128 0x39
 8702 3559 00000000 		.long	.LASF549
 8703 355d 04       		.byte	0x4
 8704 355e 82       		.byte	0x82
 8705 355f 67350000 		.long	0x3567
 8706 3563 72350000 		.long	0x3572
 8707 3567 08       		.uleb128 0x8
 8708 3568 739D0000 		.long	0x9d73
 8709 356c 13       		.uleb128 0x13
 8710 356d DB070000 		.long	0x7db
 8711 3571 00       		.byte	0
 8712 3572 39       		.uleb128 0x39
 8713 3573 00000000 		.long	.LASF549
 8714 3577 04       		.byte	0x4
 8715 3578 86       		.byte	0x86
 8716 3579 81350000 		.long	0x3581
 8717 357d 91350000 		.long	0x3591
 8718 3581 08       		.uleb128 0x8
 8719 3582 739D0000 		.long	0x9d73
 8720 3586 13       		.uleb128 0x13
 8721 3587 DB070000 		.long	0x7db
 8722 358b 13       		.uleb128 0x13
 8723 358c 7F9D0000 		.long	0x9d7f
 8724 3590 00       		.byte	0
 8725 3591 39       		.uleb128 0x39
 8726 3592 00000000 		.long	.LASF549
 8727 3596 04       		.byte	0x4
 8728 3597 8B       		.byte	0x8b
 8729 3598 A0350000 		.long	0x35a0
 8730 359c AB350000 		.long	0x35ab
 8731 35a0 08       		.uleb128 0x8
 8732 35a1 739D0000 		.long	0x9d73
 8733 35a5 13       		.uleb128 0x13
 8734 35a6 619D0000 		.long	0x9d61
 8735 35aa 00       		.byte	0
 8736 35ab 39       		.uleb128 0x39
 8737 35ac 00000000 		.long	.LASF549
 8738 35b0 04       		.byte	0x4
 8739 35b1 8E       		.byte	0x8e
 8740 35b2 BA350000 		.long	0x35ba
GAS LISTING /tmp/ccKUqHDa.s 			page 411


 8741 35b6 C5350000 		.long	0x35c5
 8742 35ba 08       		.uleb128 0x8
 8743 35bb 739D0000 		.long	0x9d73
 8744 35bf 13       		.uleb128 0x13
 8745 35c0 859D0000 		.long	0x9d85
 8746 35c4 00       		.byte	0
 8747 35c5 39       		.uleb128 0x39
 8748 35c6 00000000 		.long	.LASF549
 8749 35ca 04       		.byte	0x4
 8750 35cb 92       		.byte	0x92
 8751 35cc D4350000 		.long	0x35d4
 8752 35d0 E4350000 		.long	0x35e4
 8753 35d4 08       		.uleb128 0x8
 8754 35d5 739D0000 		.long	0x9d73
 8755 35d9 13       		.uleb128 0x13
 8756 35da 859D0000 		.long	0x9d85
 8757 35de 13       		.uleb128 0x13
 8758 35df 7F9D0000 		.long	0x9d7f
 8759 35e3 00       		.byte	0
 8760 35e4 39       		.uleb128 0x39
 8761 35e5 00000000 		.long	.LASF550
 8762 35e9 04       		.byte	0x4
 8763 35ea 9F       		.byte	0x9f
 8764 35eb F3350000 		.long	0x35f3
 8765 35ef FE350000 		.long	0x35fe
 8766 35f3 08       		.uleb128 0x8
 8767 35f4 739D0000 		.long	0x9d73
 8768 35f8 08       		.uleb128 0x8
 8769 35f9 E5710000 		.long	0x71e5
 8770 35fd 00       		.byte	0
 8771 35fe 07       		.uleb128 0x7
 8772 35ff 00000000 		.long	.LASF551
 8773 3603 04       		.byte	0x4
 8774 3604 A7       		.byte	0xa7
 8775 3605 00000000 		.long	.LASF552
 8776 3609 9B340000 		.long	0x349b
 8777 360d 15360000 		.long	0x3615
 8778 3611 20360000 		.long	0x3620
 8779 3615 08       		.uleb128 0x8
 8780 3616 739D0000 		.long	0x9d73
 8781 361a 13       		.uleb128 0x13
 8782 361b DB070000 		.long	0x7db
 8783 361f 00       		.byte	0
 8784 3620 14       		.uleb128 0x14
 8785 3621 00000000 		.long	.LASF553
 8786 3625 04       		.byte	0x4
 8787 3626 AE       		.byte	0xae
 8788 3627 00000000 		.long	.LASF554
 8789 362b 33360000 		.long	0x3633
 8790 362f 43360000 		.long	0x3643
 8791 3633 08       		.uleb128 0x8
 8792 3634 739D0000 		.long	0x9d73
 8793 3638 13       		.uleb128 0x13
 8794 3639 9B340000 		.long	0x349b
 8795 363d 13       		.uleb128 0x13
 8796 363e DB070000 		.long	0x7db
 8797 3642 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 412


 8798 3643 17       		.uleb128 0x17
 8799 3644 00000000 		.long	.LASF555
 8800 3648 04       		.byte	0x4
 8801 3649 B7       		.byte	0xb7
 8802 364a 00000000 		.long	.LASF556
 8803 364e 03       		.byte	0x3
 8804 364f 57360000 		.long	0x3657
 8805 3653 62360000 		.long	0x3662
 8806 3657 08       		.uleb128 0x8
 8807 3658 739D0000 		.long	0x9d73
 8808 365c 13       		.uleb128 0x13
 8809 365d DB070000 		.long	0x7db
 8810 3661 00       		.byte	0
 8811 3662 09       		.uleb128 0x9
 8812 3663 5F547000 		.string	"_Tp"
 8813 3667 29000000 		.long	0x29
 8814 366b 1C       		.uleb128 0x1c
 8815 366c 00000000 		.long	.LASF309
 8816 3670 B7300000 		.long	0x30b7
 8817 3674 00       		.byte	0
 8818 3675 0B       		.uleb128 0xb
 8819 3676 DD330000 		.long	0x33dd
 8820 367a 10       		.uleb128 0x10
 8821 367b 00000000 		.long	.LASF557
 8822 367f 18       		.byte	0x18
 8823 3680 04       		.byte	0x4
 8824 3681 D6       		.byte	0xd6
 8825 3682 35400000 		.long	0x4035
 8826 3686 0E       		.uleb128 0xe
 8827 3687 04       		.byte	0x4
 8828 3688 D6       		.byte	0xd6
 8829 3689 FE350000 		.long	0x35fe
 8830 368d 0E       		.uleb128 0xe
 8831 368e 04       		.byte	0x4
 8832 368f D6       		.byte	0xd6
 8833 3690 20360000 		.long	0x3620
 8834 3694 0E       		.uleb128 0xe
 8835 3695 04       		.byte	0x4
 8836 3696 D6       		.byte	0xd6
 8837 3697 B6340000 		.long	0x34b6
 8838 369b 0E       		.uleb128 0xe
 8839 369c 04       		.byte	0x4
 8840 369d D6       		.byte	0xd6
 8841 369e EA340000 		.long	0x34ea
 8842 36a2 0E       		.uleb128 0xe
 8843 36a3 04       		.byte	0x4
 8844 36a4 D6       		.byte	0xd6
 8845 36a5 07350000 		.long	0x3507
 8846 36a9 24       		.uleb128 0x24
 8847 36aa DD330000 		.long	0x33dd
 8848 36ae 00       		.byte	0
 8849 36af 02       		.byte	0x2
 8850 36b0 25       		.uleb128 0x25
 8851 36b1 00000000 		.long	.LASF5
 8852 36b5 04       		.byte	0x4
 8853 36b6 E2       		.byte	0xe2
 8854 36b7 29000000 		.long	0x29
GAS LISTING /tmp/ccKUqHDa.s 			page 413


 8855 36bb 01       		.byte	0x1
 8856 36bc 25       		.uleb128 0x25
 8857 36bd 00000000 		.long	.LASF490
 8858 36c1 04       		.byte	0x4
 8859 36c2 E3       		.byte	0xe3
 8860 36c3 9B340000 		.long	0x349b
 8861 36c7 01       		.byte	0x1
 8862 36c8 25       		.uleb128 0x25
 8863 36c9 00000000 		.long	.LASF62
 8864 36cd 04       		.byte	0x4
 8865 36ce E5       		.byte	0xe5
 8866 36cf 9C7B0000 		.long	0x7b9c
 8867 36d3 01       		.byte	0x1
 8868 36d4 25       		.uleb128 0x25
 8869 36d5 00000000 		.long	.LASF63
 8870 36d9 04       		.byte	0x4
 8871 36da E6       		.byte	0xe6
 8872 36db A77B0000 		.long	0x7ba7
 8873 36df 01       		.byte	0x1
 8874 36e0 25       		.uleb128 0x25
 8875 36e1 00000000 		.long	.LASF74
 8876 36e5 04       		.byte	0x4
 8877 36e6 E7       		.byte	0xe7
 8878 36e7 6F7C0000 		.long	0x7c6f
 8879 36eb 01       		.byte	0x1
 8880 36ec 25       		.uleb128 0x25
 8881 36ed 00000000 		.long	.LASF75
 8882 36f1 04       		.byte	0x4
 8883 36f2 E9       		.byte	0xe9
 8884 36f3 747C0000 		.long	0x7c74
 8885 36f7 01       		.byte	0x1
 8886 36f8 25       		.uleb128 0x25
 8887 36f9 00000000 		.long	.LASF76
 8888 36fd 04       		.byte	0x4
 8889 36fe EA       		.byte	0xea
 8890 36ff 35400000 		.long	0x4035
 8891 3703 01       		.byte	0x1
 8892 3704 25       		.uleb128 0x25
 8893 3705 00000000 		.long	.LASF77
 8894 3709 04       		.byte	0x4
 8895 370a EB       		.byte	0xeb
 8896 370b 3A400000 		.long	0x403a
 8897 370f 01       		.byte	0x1
 8898 3710 25       		.uleb128 0x25
 8899 3711 00000000 		.long	.LASF61
 8900 3715 04       		.byte	0x4
 8901 3716 EC       		.byte	0xec
 8902 3717 DB070000 		.long	0x7db
 8903 371b 01       		.byte	0x1
 8904 371c 25       		.uleb128 0x25
 8905 371d 00000000 		.long	.LASF73
 8906 3721 04       		.byte	0x4
 8907 3722 EE       		.byte	0xee
 8908 3723 B7300000 		.long	0x30b7
 8909 3727 01       		.byte	0x1
 8910 3728 15       		.uleb128 0x15
 8911 3729 00000000 		.long	.LASF558
GAS LISTING /tmp/ccKUqHDa.s 			page 414


 8912 372d 04       		.byte	0x4
 8913 372e FD       		.byte	0xfd
 8914 372f 01       		.byte	0x1
 8915 3730 38370000 		.long	0x3738
 8916 3734 3E370000 		.long	0x373e
 8917 3738 08       		.uleb128 0x8
 8918 3739 8B9D0000 		.long	0x9d8b
 8919 373d 00       		.byte	0
 8920 373e 34       		.uleb128 0x34
 8921 373f 00000000 		.long	.LASF558
 8922 3743 04       		.byte	0x4
 8923 3744 0801     		.value	0x108
 8924 3746 01       		.byte	0x1
 8925 3747 4F370000 		.long	0x374f
 8926 374b 5A370000 		.long	0x375a
 8927 374f 08       		.uleb128 0x8
 8928 3750 8B9D0000 		.long	0x9d8b
 8929 3754 13       		.uleb128 0x13
 8930 3755 919D0000 		.long	0x9d91
 8931 3759 00       		.byte	0
 8932 375a 0B       		.uleb128 0xb
 8933 375b 1C370000 		.long	0x371c
 8934 375f 34       		.uleb128 0x34
 8935 3760 00000000 		.long	.LASF558
 8936 3764 04       		.byte	0x4
 8937 3765 1501     		.value	0x115
 8938 3767 01       		.byte	0x1
 8939 3768 70370000 		.long	0x3770
 8940 376c 80370000 		.long	0x3780
 8941 3770 08       		.uleb128 0x8
 8942 3771 8B9D0000 		.long	0x9d8b
 8943 3775 13       		.uleb128 0x13
 8944 3776 10370000 		.long	0x3710
 8945 377a 13       		.uleb128 0x13
 8946 377b 919D0000 		.long	0x9d91
 8947 377f 00       		.byte	0
 8948 3780 33       		.uleb128 0x33
 8949 3781 00000000 		.long	.LASF558
 8950 3785 04       		.byte	0x4
 8951 3786 2101     		.value	0x121
 8952 3788 01       		.byte	0x1
 8953 3789 91370000 		.long	0x3791
 8954 378d A6370000 		.long	0x37a6
 8955 3791 08       		.uleb128 0x8
 8956 3792 8B9D0000 		.long	0x9d8b
 8957 3796 13       		.uleb128 0x13
 8958 3797 10370000 		.long	0x3710
 8959 379b 13       		.uleb128 0x13
 8960 379c 979D0000 		.long	0x9d97
 8961 37a0 13       		.uleb128 0x13
 8962 37a1 919D0000 		.long	0x9d91
 8963 37a5 00       		.byte	0
 8964 37a6 0B       		.uleb128 0xb
 8965 37a7 B0360000 		.long	0x36b0
 8966 37ab 33       		.uleb128 0x33
 8967 37ac 00000000 		.long	.LASF558
 8968 37b0 04       		.byte	0x4
GAS LISTING /tmp/ccKUqHDa.s 			page 415


 8969 37b1 3E01     		.value	0x13e
 8970 37b3 01       		.byte	0x1
 8971 37b4 BC370000 		.long	0x37bc
 8972 37b8 C7370000 		.long	0x37c7
 8973 37bc 08       		.uleb128 0x8
 8974 37bd 8B9D0000 		.long	0x9d8b
 8975 37c1 13       		.uleb128 0x13
 8976 37c2 9D9D0000 		.long	0x9d9d
 8977 37c6 00       		.byte	0
 8978 37c7 33       		.uleb128 0x33
 8979 37c8 00000000 		.long	.LASF558
 8980 37cc 04       		.byte	0x4
 8981 37cd 4F01     		.value	0x14f
 8982 37cf 01       		.byte	0x1
 8983 37d0 D8370000 		.long	0x37d8
 8984 37d4 E3370000 		.long	0x37e3
 8985 37d8 08       		.uleb128 0x8
 8986 37d9 8B9D0000 		.long	0x9d8b
 8987 37dd 13       		.uleb128 0x13
 8988 37de A39D0000 		.long	0x9da3
 8989 37e2 00       		.byte	0
 8990 37e3 33       		.uleb128 0x33
 8991 37e4 00000000 		.long	.LASF558
 8992 37e8 04       		.byte	0x4
 8993 37e9 5301     		.value	0x153
 8994 37eb 01       		.byte	0x1
 8995 37ec F4370000 		.long	0x37f4
 8996 37f0 04380000 		.long	0x3804
 8997 37f4 08       		.uleb128 0x8
 8998 37f5 8B9D0000 		.long	0x9d8b
 8999 37f9 13       		.uleb128 0x13
 9000 37fa 9D9D0000 		.long	0x9d9d
 9001 37fe 13       		.uleb128 0x13
 9002 37ff 919D0000 		.long	0x9d91
 9003 3803 00       		.byte	0
 9004 3804 33       		.uleb128 0x33
 9005 3805 00000000 		.long	.LASF558
 9006 3809 04       		.byte	0x4
 9007 380a 5C01     		.value	0x15c
 9008 380c 01       		.byte	0x1
 9009 380d 15380000 		.long	0x3815
 9010 3811 25380000 		.long	0x3825
 9011 3815 08       		.uleb128 0x8
 9012 3816 8B9D0000 		.long	0x9d8b
 9013 381a 13       		.uleb128 0x13
 9014 381b A39D0000 		.long	0x9da3
 9015 381f 13       		.uleb128 0x13
 9016 3820 919D0000 		.long	0x9d91
 9017 3824 00       		.byte	0
 9018 3825 33       		.uleb128 0x33
 9019 3826 00000000 		.long	.LASF558
 9020 382a 04       		.byte	0x4
 9021 382b 7501     		.value	0x175
 9022 382d 01       		.byte	0x1
 9023 382e 36380000 		.long	0x3836
 9024 3832 46380000 		.long	0x3846
 9025 3836 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 416


 9026 3837 8B9D0000 		.long	0x9d8b
 9027 383b 13       		.uleb128 0x13
 9028 383c 44400000 		.long	0x4044
 9029 3840 13       		.uleb128 0x13
 9030 3841 919D0000 		.long	0x9d91
 9031 3845 00       		.byte	0
 9032 3846 33       		.uleb128 0x33
 9033 3847 00000000 		.long	.LASF559
 9034 384b 04       		.byte	0x4
 9035 384c A701     		.value	0x1a7
 9036 384e 01       		.byte	0x1
 9037 384f 57380000 		.long	0x3857
 9038 3853 62380000 		.long	0x3862
 9039 3857 08       		.uleb128 0x8
 9040 3858 8B9D0000 		.long	0x9d8b
 9041 385c 08       		.uleb128 0x8
 9042 385d E5710000 		.long	0x71e5
 9043 3861 00       		.byte	0
 9044 3862 16       		.uleb128 0x16
 9045 3863 00000000 		.long	.LASF18
 9046 3867 27       		.byte	0x27
 9047 3868 A7       		.byte	0xa7
 9048 3869 00000000 		.long	.LASF560
 9049 386d A99D0000 		.long	0x9da9
 9050 3871 01       		.byte	0x1
 9051 3872 7A380000 		.long	0x387a
 9052 3876 85380000 		.long	0x3885
 9053 387a 08       		.uleb128 0x8
 9054 387b 8B9D0000 		.long	0x9d8b
 9055 387f 13       		.uleb128 0x13
 9056 3880 9D9D0000 		.long	0x9d9d
 9057 3884 00       		.byte	0
 9058 3885 35       		.uleb128 0x35
 9059 3886 00000000 		.long	.LASF18
 9060 388a 04       		.byte	0x4
 9061 388b C001     		.value	0x1c0
 9062 388d 00000000 		.long	.LASF561
 9063 3891 A99D0000 		.long	0x9da9
 9064 3895 01       		.byte	0x1
 9065 3896 9E380000 		.long	0x389e
 9066 389a A9380000 		.long	0x38a9
 9067 389e 08       		.uleb128 0x8
 9068 389f 8B9D0000 		.long	0x9d8b
 9069 38a3 13       		.uleb128 0x13
 9070 38a4 A39D0000 		.long	0x9da3
 9071 38a8 00       		.byte	0
 9072 38a9 35       		.uleb128 0x35
 9073 38aa 00000000 		.long	.LASF18
 9074 38ae 04       		.byte	0x4
 9075 38af D601     		.value	0x1d6
 9076 38b1 00000000 		.long	.LASF562
 9077 38b5 A99D0000 		.long	0x9da9
 9078 38b9 01       		.byte	0x1
 9079 38ba C2380000 		.long	0x38c2
 9080 38be CD380000 		.long	0x38cd
 9081 38c2 08       		.uleb128 0x8
 9082 38c3 8B9D0000 		.long	0x9d8b
GAS LISTING /tmp/ccKUqHDa.s 			page 417


 9083 38c7 13       		.uleb128 0x13
 9084 38c8 44400000 		.long	0x4044
 9085 38cc 00       		.byte	0
 9086 38cd 37       		.uleb128 0x37
 9087 38ce 00000000 		.long	.LASF48
 9088 38d2 04       		.byte	0x4
 9089 38d3 E801     		.value	0x1e8
 9090 38d5 00000000 		.long	.LASF563
 9091 38d9 01       		.byte	0x1
 9092 38da E2380000 		.long	0x38e2
 9093 38de F2380000 		.long	0x38f2
 9094 38e2 08       		.uleb128 0x8
 9095 38e3 8B9D0000 		.long	0x9d8b
 9096 38e7 13       		.uleb128 0x13
 9097 38e8 10370000 		.long	0x3710
 9098 38ec 13       		.uleb128 0x13
 9099 38ed 979D0000 		.long	0x9d97
 9100 38f1 00       		.byte	0
 9101 38f2 37       		.uleb128 0x37
 9102 38f3 00000000 		.long	.LASF48
 9103 38f7 04       		.byte	0x4
 9104 38f8 1502     		.value	0x215
 9105 38fa 00000000 		.long	.LASF564
 9106 38fe 01       		.byte	0x1
 9107 38ff 07390000 		.long	0x3907
 9108 3903 12390000 		.long	0x3912
 9109 3907 08       		.uleb128 0x8
 9110 3908 8B9D0000 		.long	0x9d8b
 9111 390c 13       		.uleb128 0x13
 9112 390d 44400000 		.long	0x4044
 9113 3911 00       		.byte	0
 9114 3912 35       		.uleb128 0x35
 9115 3913 00000000 		.long	.LASF155
 9116 3917 04       		.byte	0x4
 9117 3918 2302     		.value	0x223
 9118 391a 00000000 		.long	.LASF565
 9119 391e E0360000 		.long	0x36e0
 9120 3922 01       		.byte	0x1
 9121 3923 2B390000 		.long	0x392b
 9122 3927 31390000 		.long	0x3931
 9123 392b 08       		.uleb128 0x8
 9124 392c 8B9D0000 		.long	0x9d8b
 9125 3930 00       		.byte	0
 9126 3931 35       		.uleb128 0x35
 9127 3932 00000000 		.long	.LASF155
 9128 3936 04       		.byte	0x4
 9129 3937 2C02     		.value	0x22c
 9130 3939 00000000 		.long	.LASF566
 9131 393d EC360000 		.long	0x36ec
 9132 3941 01       		.byte	0x1
 9133 3942 4A390000 		.long	0x394a
 9134 3946 50390000 		.long	0x3950
 9135 394a 08       		.uleb128 0x8
 9136 394b AF9D0000 		.long	0x9daf
 9137 394f 00       		.byte	0
 9138 3950 36       		.uleb128 0x36
 9139 3951 656E6400 		.string	"end"
GAS LISTING /tmp/ccKUqHDa.s 			page 418


 9140 3955 04       		.byte	0x4
 9141 3956 3502     		.value	0x235
 9142 3958 00000000 		.long	.LASF567
 9143 395c E0360000 		.long	0x36e0
 9144 3960 01       		.byte	0x1
 9145 3961 69390000 		.long	0x3969
 9146 3965 6F390000 		.long	0x396f
 9147 3969 08       		.uleb128 0x8
 9148 396a 8B9D0000 		.long	0x9d8b
 9149 396e 00       		.byte	0
 9150 396f 36       		.uleb128 0x36
 9151 3970 656E6400 		.string	"end"
 9152 3974 04       		.byte	0x4
 9153 3975 3E02     		.value	0x23e
 9154 3977 00000000 		.long	.LASF568
 9155 397b EC360000 		.long	0x36ec
 9156 397f 01       		.byte	0x1
 9157 3980 88390000 		.long	0x3988
 9158 3984 8E390000 		.long	0x398e
 9159 3988 08       		.uleb128 0x8
 9160 3989 AF9D0000 		.long	0x9daf
 9161 398d 00       		.byte	0
 9162 398e 35       		.uleb128 0x35
 9163 398f 00000000 		.long	.LASF160
 9164 3993 04       		.byte	0x4
 9165 3994 4702     		.value	0x247
 9166 3996 00000000 		.long	.LASF569
 9167 399a 04370000 		.long	0x3704
 9168 399e 01       		.byte	0x1
 9169 399f A7390000 		.long	0x39a7
 9170 39a3 AD390000 		.long	0x39ad
 9171 39a7 08       		.uleb128 0x8
 9172 39a8 8B9D0000 		.long	0x9d8b
 9173 39ac 00       		.byte	0
 9174 39ad 35       		.uleb128 0x35
 9175 39ae 00000000 		.long	.LASF160
 9176 39b2 04       		.byte	0x4
 9177 39b3 5002     		.value	0x250
 9178 39b5 00000000 		.long	.LASF570
 9179 39b9 F8360000 		.long	0x36f8
 9180 39bd 01       		.byte	0x1
 9181 39be C6390000 		.long	0x39c6
 9182 39c2 CC390000 		.long	0x39cc
 9183 39c6 08       		.uleb128 0x8
 9184 39c7 AF9D0000 		.long	0x9daf
 9185 39cb 00       		.byte	0
 9186 39cc 35       		.uleb128 0x35
 9187 39cd 00000000 		.long	.LASF163
 9188 39d1 04       		.byte	0x4
 9189 39d2 5902     		.value	0x259
 9190 39d4 00000000 		.long	.LASF571
 9191 39d8 04370000 		.long	0x3704
 9192 39dc 01       		.byte	0x1
 9193 39dd E5390000 		.long	0x39e5
 9194 39e1 EB390000 		.long	0x39eb
 9195 39e5 08       		.uleb128 0x8
 9196 39e6 8B9D0000 		.long	0x9d8b
GAS LISTING /tmp/ccKUqHDa.s 			page 419


 9197 39ea 00       		.byte	0
 9198 39eb 35       		.uleb128 0x35
 9199 39ec 00000000 		.long	.LASF163
 9200 39f0 04       		.byte	0x4
 9201 39f1 6202     		.value	0x262
 9202 39f3 00000000 		.long	.LASF572
 9203 39f7 F8360000 		.long	0x36f8
 9204 39fb 01       		.byte	0x1
 9205 39fc 043A0000 		.long	0x3a04
 9206 3a00 0A3A0000 		.long	0x3a0a
 9207 3a04 08       		.uleb128 0x8
 9208 3a05 AF9D0000 		.long	0x9daf
 9209 3a09 00       		.byte	0
 9210 3a0a 35       		.uleb128 0x35
 9211 3a0b 00000000 		.long	.LASF166
 9212 3a0f 04       		.byte	0x4
 9213 3a10 6C02     		.value	0x26c
 9214 3a12 00000000 		.long	.LASF573
 9215 3a16 EC360000 		.long	0x36ec
 9216 3a1a 01       		.byte	0x1
 9217 3a1b 233A0000 		.long	0x3a23
 9218 3a1f 293A0000 		.long	0x3a29
 9219 3a23 08       		.uleb128 0x8
 9220 3a24 AF9D0000 		.long	0x9daf
 9221 3a28 00       		.byte	0
 9222 3a29 35       		.uleb128 0x35
 9223 3a2a 00000000 		.long	.LASF168
 9224 3a2e 04       		.byte	0x4
 9225 3a2f 7502     		.value	0x275
 9226 3a31 00000000 		.long	.LASF574
 9227 3a35 EC360000 		.long	0x36ec
 9228 3a39 01       		.byte	0x1
 9229 3a3a 423A0000 		.long	0x3a42
 9230 3a3e 483A0000 		.long	0x3a48
 9231 3a42 08       		.uleb128 0x8
 9232 3a43 AF9D0000 		.long	0x9daf
 9233 3a47 00       		.byte	0
 9234 3a48 35       		.uleb128 0x35
 9235 3a49 00000000 		.long	.LASF170
 9236 3a4d 04       		.byte	0x4
 9237 3a4e 7E02     		.value	0x27e
 9238 3a50 00000000 		.long	.LASF575
 9239 3a54 F8360000 		.long	0x36f8
 9240 3a58 01       		.byte	0x1
 9241 3a59 613A0000 		.long	0x3a61
 9242 3a5d 673A0000 		.long	0x3a67
 9243 3a61 08       		.uleb128 0x8
 9244 3a62 AF9D0000 		.long	0x9daf
 9245 3a66 00       		.byte	0
 9246 3a67 35       		.uleb128 0x35
 9247 3a68 00000000 		.long	.LASF172
 9248 3a6c 04       		.byte	0x4
 9249 3a6d 8702     		.value	0x287
 9250 3a6f 00000000 		.long	.LASF576
 9251 3a73 F8360000 		.long	0x36f8
 9252 3a77 01       		.byte	0x1
 9253 3a78 803A0000 		.long	0x3a80
GAS LISTING /tmp/ccKUqHDa.s 			page 420


 9254 3a7c 863A0000 		.long	0x3a86
 9255 3a80 08       		.uleb128 0x8
 9256 3a81 AF9D0000 		.long	0x9daf
 9257 3a85 00       		.byte	0
 9258 3a86 35       		.uleb128 0x35
 9259 3a87 00000000 		.long	.LASF174
 9260 3a8b 04       		.byte	0x4
 9261 3a8c 8E02     		.value	0x28e
 9262 3a8e 00000000 		.long	.LASF577
 9263 3a92 10370000 		.long	0x3710
 9264 3a96 01       		.byte	0x1
 9265 3a97 9F3A0000 		.long	0x3a9f
 9266 3a9b A53A0000 		.long	0x3aa5
 9267 3a9f 08       		.uleb128 0x8
 9268 3aa0 AF9D0000 		.long	0x9daf
 9269 3aa4 00       		.byte	0
 9270 3aa5 35       		.uleb128 0x35
 9271 3aa6 00000000 		.long	.LASF177
 9272 3aaa 04       		.byte	0x4
 9273 3aab 9302     		.value	0x293
 9274 3aad 00000000 		.long	.LASF578
 9275 3ab1 10370000 		.long	0x3710
 9276 3ab5 01       		.byte	0x1
 9277 3ab6 BE3A0000 		.long	0x3abe
 9278 3aba C43A0000 		.long	0x3ac4
 9279 3abe 08       		.uleb128 0x8
 9280 3abf AF9D0000 		.long	0x9daf
 9281 3ac3 00       		.byte	0
 9282 3ac4 37       		.uleb128 0x37
 9283 3ac5 00000000 		.long	.LASF179
 9284 3ac9 04       		.byte	0x4
 9285 3aca A102     		.value	0x2a1
 9286 3acc 00000000 		.long	.LASF579
 9287 3ad0 01       		.byte	0x1
 9288 3ad1 D93A0000 		.long	0x3ad9
 9289 3ad5 E43A0000 		.long	0x3ae4
 9290 3ad9 08       		.uleb128 0x8
 9291 3ada 8B9D0000 		.long	0x9d8b
 9292 3ade 13       		.uleb128 0x13
 9293 3adf 10370000 		.long	0x3710
 9294 3ae3 00       		.byte	0
 9295 3ae4 37       		.uleb128 0x37
 9296 3ae5 00000000 		.long	.LASF179
 9297 3ae9 04       		.byte	0x4
 9298 3aea B502     		.value	0x2b5
 9299 3aec 00000000 		.long	.LASF580
 9300 3af0 01       		.byte	0x1
 9301 3af1 F93A0000 		.long	0x3af9
 9302 3af5 093B0000 		.long	0x3b09
 9303 3af9 08       		.uleb128 0x8
 9304 3afa 8B9D0000 		.long	0x9d8b
 9305 3afe 13       		.uleb128 0x13
 9306 3aff 10370000 		.long	0x3710
 9307 3b03 13       		.uleb128 0x13
 9308 3b04 979D0000 		.long	0x9d97
 9309 3b08 00       		.byte	0
 9310 3b09 37       		.uleb128 0x37
GAS LISTING /tmp/ccKUqHDa.s 			page 421


 9311 3b0a 00000000 		.long	.LASF182
 9312 3b0e 04       		.byte	0x4
 9313 3b0f D502     		.value	0x2d5
 9314 3b11 00000000 		.long	.LASF581
 9315 3b15 01       		.byte	0x1
 9316 3b16 1E3B0000 		.long	0x3b1e
 9317 3b1a 243B0000 		.long	0x3b24
 9318 3b1e 08       		.uleb128 0x8
 9319 3b1f 8B9D0000 		.long	0x9d8b
 9320 3b23 00       		.byte	0
 9321 3b24 35       		.uleb128 0x35
 9322 3b25 00000000 		.long	.LASF184
 9323 3b29 04       		.byte	0x4
 9324 3b2a DE02     		.value	0x2de
 9325 3b2c 00000000 		.long	.LASF582
 9326 3b30 10370000 		.long	0x3710
 9327 3b34 01       		.byte	0x1
 9328 3b35 3D3B0000 		.long	0x3b3d
 9329 3b39 433B0000 		.long	0x3b43
 9330 3b3d 08       		.uleb128 0x8
 9331 3b3e AF9D0000 		.long	0x9daf
 9332 3b42 00       		.byte	0
 9333 3b43 35       		.uleb128 0x35
 9334 3b44 00000000 		.long	.LASF190
 9335 3b48 04       		.byte	0x4
 9336 3b49 E702     		.value	0x2e7
 9337 3b4b 00000000 		.long	.LASF583
 9338 3b4f A3710000 		.long	0x71a3
 9339 3b53 01       		.byte	0x1
 9340 3b54 5C3B0000 		.long	0x3b5c
 9341 3b58 623B0000 		.long	0x3b62
 9342 3b5c 08       		.uleb128 0x8
 9343 3b5d AF9D0000 		.long	0x9daf
 9344 3b61 00       		.byte	0
 9345 3b62 17       		.uleb128 0x17
 9346 3b63 00000000 		.long	.LASF186
 9347 3b67 27       		.byte	0x27
 9348 3b68 41       		.byte	0x41
 9349 3b69 00000000 		.long	.LASF584
 9350 3b6d 01       		.byte	0x1
 9351 3b6e 763B0000 		.long	0x3b76
 9352 3b72 813B0000 		.long	0x3b81
 9353 3b76 08       		.uleb128 0x8
 9354 3b77 8B9D0000 		.long	0x9d8b
 9355 3b7b 13       		.uleb128 0x13
 9356 3b7c 10370000 		.long	0x3710
 9357 3b80 00       		.byte	0
 9358 3b81 35       		.uleb128 0x35
 9359 3b82 00000000 		.long	.LASF192
 9360 3b86 04       		.byte	0x4
 9361 3b87 0B03     		.value	0x30b
 9362 3b89 00000000 		.long	.LASF585
 9363 3b8d C8360000 		.long	0x36c8
 9364 3b91 01       		.byte	0x1
 9365 3b92 9A3B0000 		.long	0x3b9a
 9366 3b96 A53B0000 		.long	0x3ba5
 9367 3b9a 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 422


 9368 3b9b 8B9D0000 		.long	0x9d8b
 9369 3b9f 13       		.uleb128 0x13
 9370 3ba0 10370000 		.long	0x3710
 9371 3ba4 00       		.byte	0
 9372 3ba5 35       		.uleb128 0x35
 9373 3ba6 00000000 		.long	.LASF192
 9374 3baa 04       		.byte	0x4
 9375 3bab 1A03     		.value	0x31a
 9376 3bad 00000000 		.long	.LASF586
 9377 3bb1 D4360000 		.long	0x36d4
 9378 3bb5 01       		.byte	0x1
 9379 3bb6 BE3B0000 		.long	0x3bbe
 9380 3bba C93B0000 		.long	0x3bc9
 9381 3bbe 08       		.uleb128 0x8
 9382 3bbf AF9D0000 		.long	0x9daf
 9383 3bc3 13       		.uleb128 0x13
 9384 3bc4 10370000 		.long	0x3710
 9385 3bc8 00       		.byte	0
 9386 3bc9 37       		.uleb128 0x37
 9387 3bca 00000000 		.long	.LASF587
 9388 3bce 04       		.byte	0x4
 9389 3bcf 2003     		.value	0x320
 9390 3bd1 00000000 		.long	.LASF588
 9391 3bd5 02       		.byte	0x2
 9392 3bd6 DE3B0000 		.long	0x3bde
 9393 3bda E93B0000 		.long	0x3be9
 9394 3bde 08       		.uleb128 0x8
 9395 3bdf AF9D0000 		.long	0x9daf
 9396 3be3 13       		.uleb128 0x13
 9397 3be4 10370000 		.long	0x3710
 9398 3be8 00       		.byte	0
 9399 3be9 36       		.uleb128 0x36
 9400 3bea 617400   		.string	"at"
 9401 3bed 04       		.byte	0x4
 9402 3bee 3603     		.value	0x336
 9403 3bf0 00000000 		.long	.LASF589
 9404 3bf4 C8360000 		.long	0x36c8
 9405 3bf8 01       		.byte	0x1
 9406 3bf9 013C0000 		.long	0x3c01
 9407 3bfd 0C3C0000 		.long	0x3c0c
 9408 3c01 08       		.uleb128 0x8
 9409 3c02 8B9D0000 		.long	0x9d8b
 9410 3c06 13       		.uleb128 0x13
 9411 3c07 10370000 		.long	0x3710
 9412 3c0b 00       		.byte	0
 9413 3c0c 36       		.uleb128 0x36
 9414 3c0d 617400   		.string	"at"
 9415 3c10 04       		.byte	0x4
 9416 3c11 4803     		.value	0x348
 9417 3c13 00000000 		.long	.LASF590
 9418 3c17 D4360000 		.long	0x36d4
 9419 3c1b 01       		.byte	0x1
 9420 3c1c 243C0000 		.long	0x3c24
 9421 3c20 2F3C0000 		.long	0x3c2f
 9422 3c24 08       		.uleb128 0x8
 9423 3c25 AF9D0000 		.long	0x9daf
 9424 3c29 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 423


 9425 3c2a 10370000 		.long	0x3710
 9426 3c2e 00       		.byte	0
 9427 3c2f 35       		.uleb128 0x35
 9428 3c30 00000000 		.long	.LASF197
 9429 3c34 04       		.byte	0x4
 9430 3c35 5303     		.value	0x353
 9431 3c37 00000000 		.long	.LASF591
 9432 3c3b C8360000 		.long	0x36c8
 9433 3c3f 01       		.byte	0x1
 9434 3c40 483C0000 		.long	0x3c48
 9435 3c44 4E3C0000 		.long	0x3c4e
 9436 3c48 08       		.uleb128 0x8
 9437 3c49 8B9D0000 		.long	0x9d8b
 9438 3c4d 00       		.byte	0
 9439 3c4e 35       		.uleb128 0x35
 9440 3c4f 00000000 		.long	.LASF197
 9441 3c53 04       		.byte	0x4
 9442 3c54 5B03     		.value	0x35b
 9443 3c56 00000000 		.long	.LASF592
 9444 3c5a D4360000 		.long	0x36d4
 9445 3c5e 01       		.byte	0x1
 9446 3c5f 673C0000 		.long	0x3c67
 9447 3c63 6D3C0000 		.long	0x3c6d
 9448 3c67 08       		.uleb128 0x8
 9449 3c68 AF9D0000 		.long	0x9daf
 9450 3c6c 00       		.byte	0
 9451 3c6d 35       		.uleb128 0x35
 9452 3c6e 00000000 		.long	.LASF200
 9453 3c72 04       		.byte	0x4
 9454 3c73 6303     		.value	0x363
 9455 3c75 00000000 		.long	.LASF593
 9456 3c79 C8360000 		.long	0x36c8
 9457 3c7d 01       		.byte	0x1
 9458 3c7e 863C0000 		.long	0x3c86
 9459 3c82 8C3C0000 		.long	0x3c8c
 9460 3c86 08       		.uleb128 0x8
 9461 3c87 8B9D0000 		.long	0x9d8b
 9462 3c8b 00       		.byte	0
 9463 3c8c 35       		.uleb128 0x35
 9464 3c8d 00000000 		.long	.LASF200
 9465 3c91 04       		.byte	0x4
 9466 3c92 6B03     		.value	0x36b
 9467 3c94 00000000 		.long	.LASF594
 9468 3c98 D4360000 		.long	0x36d4
 9469 3c9c 01       		.byte	0x1
 9470 3c9d A53C0000 		.long	0x3ca5
 9471 3ca1 AB3C0000 		.long	0x3cab
 9472 3ca5 08       		.uleb128 0x8
 9473 3ca6 AF9D0000 		.long	0x9daf
 9474 3caa 00       		.byte	0
 9475 3cab 35       		.uleb128 0x35
 9476 3cac 00000000 		.long	.LASF266
 9477 3cb0 04       		.byte	0x4
 9478 3cb1 7A03     		.value	0x37a
 9479 3cb3 00000000 		.long	.LASF595
 9480 3cb7 829C0000 		.long	0x9c82
 9481 3cbb 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 424


 9482 3cbc C43C0000 		.long	0x3cc4
 9483 3cc0 CA3C0000 		.long	0x3cca
 9484 3cc4 08       		.uleb128 0x8
 9485 3cc5 8B9D0000 		.long	0x9d8b
 9486 3cc9 00       		.byte	0
 9487 3cca 35       		.uleb128 0x35
 9488 3ccb 00000000 		.long	.LASF266
 9489 3ccf 04       		.byte	0x4
 9490 3cd0 8203     		.value	0x382
 9491 3cd2 00000000 		.long	.LASF596
 9492 3cd6 029D0000 		.long	0x9d02
 9493 3cda 01       		.byte	0x1
 9494 3cdb E33C0000 		.long	0x3ce3
 9495 3cdf E93C0000 		.long	0x3ce9
 9496 3ce3 08       		.uleb128 0x8
 9497 3ce4 AF9D0000 		.long	0x9daf
 9498 3ce8 00       		.byte	0
 9499 3ce9 37       		.uleb128 0x37
 9500 3cea 00000000 		.long	.LASF215
 9501 3cee 04       		.byte	0x4
 9502 3cef 9103     		.value	0x391
 9503 3cf1 00000000 		.long	.LASF597
 9504 3cf5 01       		.byte	0x1
 9505 3cf6 FE3C0000 		.long	0x3cfe
 9506 3cfa 093D0000 		.long	0x3d09
 9507 3cfe 08       		.uleb128 0x8
 9508 3cff 8B9D0000 		.long	0x9d8b
 9509 3d03 13       		.uleb128 0x13
 9510 3d04 979D0000 		.long	0x9d97
 9511 3d08 00       		.byte	0
 9512 3d09 37       		.uleb128 0x37
 9513 3d0a 00000000 		.long	.LASF215
 9514 3d0e 04       		.byte	0x4
 9515 3d0f A303     		.value	0x3a3
 9516 3d11 00000000 		.long	.LASF598
 9517 3d15 01       		.byte	0x1
 9518 3d16 1E3D0000 		.long	0x3d1e
 9519 3d1a 293D0000 		.long	0x3d29
 9520 3d1e 08       		.uleb128 0x8
 9521 3d1f 8B9D0000 		.long	0x9d8b
 9522 3d23 13       		.uleb128 0x13
 9523 3d24 B59D0000 		.long	0x9db5
 9524 3d28 00       		.byte	0
 9525 3d29 37       		.uleb128 0x37
 9526 3d2a 00000000 		.long	.LASF237
 9527 3d2e 04       		.byte	0x4
 9528 3d2f B503     		.value	0x3b5
 9529 3d31 00000000 		.long	.LASF599
 9530 3d35 01       		.byte	0x1
 9531 3d36 3E3D0000 		.long	0x3d3e
 9532 3d3a 443D0000 		.long	0x3d44
 9533 3d3e 08       		.uleb128 0x8
 9534 3d3f 8B9D0000 		.long	0x9d8b
 9535 3d43 00       		.byte	0
 9536 3d44 16       		.uleb128 0x16
 9537 3d45 00000000 		.long	.LASF224
 9538 3d49 27       		.byte	0x27
GAS LISTING /tmp/ccKUqHDa.s 			page 425


 9539 3d4a 6B       		.byte	0x6b
 9540 3d4b 00000000 		.long	.LASF600
 9541 3d4f E0360000 		.long	0x36e0
 9542 3d53 01       		.byte	0x1
 9543 3d54 5C3D0000 		.long	0x3d5c
 9544 3d58 6C3D0000 		.long	0x3d6c
 9545 3d5c 08       		.uleb128 0x8
 9546 3d5d 8B9D0000 		.long	0x9d8b
 9547 3d61 13       		.uleb128 0x13
 9548 3d62 EC360000 		.long	0x36ec
 9549 3d66 13       		.uleb128 0x13
 9550 3d67 979D0000 		.long	0x9d97
 9551 3d6b 00       		.byte	0
 9552 3d6c 35       		.uleb128 0x35
 9553 3d6d 00000000 		.long	.LASF224
 9554 3d71 04       		.byte	0x4
 9555 3d72 F603     		.value	0x3f6
 9556 3d74 00000000 		.long	.LASF601
 9557 3d78 E0360000 		.long	0x36e0
 9558 3d7c 01       		.byte	0x1
 9559 3d7d 853D0000 		.long	0x3d85
 9560 3d81 953D0000 		.long	0x3d95
 9561 3d85 08       		.uleb128 0x8
 9562 3d86 8B9D0000 		.long	0x9d8b
 9563 3d8a 13       		.uleb128 0x13
 9564 3d8b EC360000 		.long	0x36ec
 9565 3d8f 13       		.uleb128 0x13
 9566 3d90 B59D0000 		.long	0x9db5
 9567 3d94 00       		.byte	0
 9568 3d95 35       		.uleb128 0x35
 9569 3d96 00000000 		.long	.LASF224
 9570 3d9a 04       		.byte	0x4
 9571 3d9b 0704     		.value	0x407
 9572 3d9d 00000000 		.long	.LASF602
 9573 3da1 E0360000 		.long	0x36e0
 9574 3da5 01       		.byte	0x1
 9575 3da6 AE3D0000 		.long	0x3dae
 9576 3daa BE3D0000 		.long	0x3dbe
 9577 3dae 08       		.uleb128 0x8
 9578 3daf 8B9D0000 		.long	0x9d8b
 9579 3db3 13       		.uleb128 0x13
 9580 3db4 EC360000 		.long	0x36ec
 9581 3db8 13       		.uleb128 0x13
 9582 3db9 44400000 		.long	0x4044
 9583 3dbd 00       		.byte	0
 9584 3dbe 35       		.uleb128 0x35
 9585 3dbf 00000000 		.long	.LASF224
 9586 3dc3 04       		.byte	0x4
 9587 3dc4 1B04     		.value	0x41b
 9588 3dc6 00000000 		.long	.LASF603
 9589 3dca E0360000 		.long	0x36e0
 9590 3dce 01       		.byte	0x1
 9591 3dcf D73D0000 		.long	0x3dd7
 9592 3dd3 EC3D0000 		.long	0x3dec
 9593 3dd7 08       		.uleb128 0x8
 9594 3dd8 8B9D0000 		.long	0x9d8b
 9595 3ddc 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 426


 9596 3ddd EC360000 		.long	0x36ec
 9597 3de1 13       		.uleb128 0x13
 9598 3de2 10370000 		.long	0x3710
 9599 3de6 13       		.uleb128 0x13
 9600 3de7 979D0000 		.long	0x9d97
 9601 3deb 00       		.byte	0
 9602 3dec 35       		.uleb128 0x35
 9603 3ded 00000000 		.long	.LASF233
 9604 3df1 04       		.byte	0x4
 9605 3df2 7A04     		.value	0x47a
 9606 3df4 00000000 		.long	.LASF604
 9607 3df8 E0360000 		.long	0x36e0
 9608 3dfc 01       		.byte	0x1
 9609 3dfd 053E0000 		.long	0x3e05
 9610 3e01 103E0000 		.long	0x3e10
 9611 3e05 08       		.uleb128 0x8
 9612 3e06 8B9D0000 		.long	0x9d8b
 9613 3e0a 13       		.uleb128 0x13
 9614 3e0b EC360000 		.long	0x36ec
 9615 3e0f 00       		.byte	0
 9616 3e10 35       		.uleb128 0x35
 9617 3e11 00000000 		.long	.LASF233
 9618 3e15 04       		.byte	0x4
 9619 3e16 9504     		.value	0x495
 9620 3e18 00000000 		.long	.LASF605
 9621 3e1c E0360000 		.long	0x36e0
 9622 3e20 01       		.byte	0x1
 9623 3e21 293E0000 		.long	0x3e29
 9624 3e25 393E0000 		.long	0x3e39
 9625 3e29 08       		.uleb128 0x8
 9626 3e2a 8B9D0000 		.long	0x9d8b
 9627 3e2e 13       		.uleb128 0x13
 9628 3e2f EC360000 		.long	0x36ec
 9629 3e33 13       		.uleb128 0x13
 9630 3e34 EC360000 		.long	0x36ec
 9631 3e38 00       		.byte	0
 9632 3e39 37       		.uleb128 0x37
 9633 3e3a 00000000 		.long	.LASF22
 9634 3e3e 04       		.byte	0x4
 9635 3e3f AA04     		.value	0x4aa
 9636 3e41 00000000 		.long	.LASF606
 9637 3e45 01       		.byte	0x1
 9638 3e46 4E3E0000 		.long	0x3e4e
 9639 3e4a 593E0000 		.long	0x3e59
 9640 3e4e 08       		.uleb128 0x8
 9641 3e4f 8B9D0000 		.long	0x9d8b
 9642 3e53 13       		.uleb128 0x13
 9643 3e54 A99D0000 		.long	0x9da9
 9644 3e58 00       		.byte	0
 9645 3e59 37       		.uleb128 0x37
 9646 3e5a 00000000 		.long	.LASF188
 9647 3e5e 04       		.byte	0x4
 9648 3e5f BB04     		.value	0x4bb
 9649 3e61 00000000 		.long	.LASF607
 9650 3e65 01       		.byte	0x1
 9651 3e66 6E3E0000 		.long	0x3e6e
 9652 3e6a 743E0000 		.long	0x3e74
GAS LISTING /tmp/ccKUqHDa.s 			page 427


 9653 3e6e 08       		.uleb128 0x8
 9654 3e6f 8B9D0000 		.long	0x9d8b
 9655 3e73 00       		.byte	0
 9656 3e74 37       		.uleb128 0x37
 9657 3e75 00000000 		.long	.LASF608
 9658 3e79 04       		.byte	0x4
 9659 3e7a 1205     		.value	0x512
 9660 3e7c 00000000 		.long	.LASF609
 9661 3e80 02       		.byte	0x2
 9662 3e81 893E0000 		.long	0x3e89
 9663 3e85 993E0000 		.long	0x3e99
 9664 3e89 08       		.uleb128 0x8
 9665 3e8a 8B9D0000 		.long	0x9d8b
 9666 3e8e 13       		.uleb128 0x13
 9667 3e8f 10370000 		.long	0x3710
 9668 3e93 13       		.uleb128 0x13
 9669 3e94 979D0000 		.long	0x9d97
 9670 3e98 00       		.byte	0
 9671 3e99 37       		.uleb128 0x37
 9672 3e9a 00000000 		.long	.LASF610
 9673 3e9e 04       		.byte	0x4
 9674 3e9f 1C05     		.value	0x51c
 9675 3ea1 00000000 		.long	.LASF611
 9676 3ea5 02       		.byte	0x2
 9677 3ea6 AE3E0000 		.long	0x3eae
 9678 3eaa B93E0000 		.long	0x3eb9
 9679 3eae 08       		.uleb128 0x8
 9680 3eaf 8B9D0000 		.long	0x9d8b
 9681 3eb3 13       		.uleb128 0x13
 9682 3eb4 10370000 		.long	0x3710
 9683 3eb8 00       		.byte	0
 9684 3eb9 17       		.uleb128 0x17
 9685 3eba 00000000 		.long	.LASF612
 9686 3ebe 27       		.byte	0x27
 9687 3ebf E1       		.byte	0xe1
 9688 3ec0 00000000 		.long	.LASF613
 9689 3ec4 02       		.byte	0x2
 9690 3ec5 CD3E0000 		.long	0x3ecd
 9691 3ec9 DD3E0000 		.long	0x3edd
 9692 3ecd 08       		.uleb128 0x8
 9693 3ece 8B9D0000 		.long	0x9d8b
 9694 3ed2 13       		.uleb128 0x13
 9695 3ed3 DB070000 		.long	0x7db
 9696 3ed7 13       		.uleb128 0x13
 9697 3ed8 979D0000 		.long	0x9d97
 9698 3edc 00       		.byte	0
 9699 3edd 37       		.uleb128 0x37
 9700 3ede 00000000 		.long	.LASF614
 9701 3ee2 27       		.byte	0x27
 9702 3ee3 C101     		.value	0x1c1
 9703 3ee5 00000000 		.long	.LASF615
 9704 3ee9 02       		.byte	0x2
 9705 3eea F23E0000 		.long	0x3ef2
 9706 3eee 073F0000 		.long	0x3f07
 9707 3ef2 08       		.uleb128 0x8
 9708 3ef3 8B9D0000 		.long	0x9d8b
 9709 3ef7 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 428


 9710 3ef8 E0360000 		.long	0x36e0
 9711 3efc 13       		.uleb128 0x13
 9712 3efd 10370000 		.long	0x3710
 9713 3f01 13       		.uleb128 0x13
 9714 3f02 979D0000 		.long	0x9d97
 9715 3f06 00       		.byte	0
 9716 3f07 37       		.uleb128 0x37
 9717 3f08 00000000 		.long	.LASF616
 9718 3f0c 27       		.byte	0x27
 9719 3f0d 1C02     		.value	0x21c
 9720 3f0f 00000000 		.long	.LASF617
 9721 3f13 02       		.byte	0x2
 9722 3f14 1C3F0000 		.long	0x3f1c
 9723 3f18 273F0000 		.long	0x3f27
 9724 3f1c 08       		.uleb128 0x8
 9725 3f1d 8B9D0000 		.long	0x9d8b
 9726 3f21 13       		.uleb128 0x13
 9727 3f22 10370000 		.long	0x3710
 9728 3f26 00       		.byte	0
 9729 3f27 35       		.uleb128 0x35
 9730 3f28 00000000 		.long	.LASF618
 9731 3f2c 27       		.byte	0x27
 9732 3f2d 4E02     		.value	0x24e
 9733 3f2f 00000000 		.long	.LASF619
 9734 3f33 A3710000 		.long	0x71a3
 9735 3f37 02       		.byte	0x2
 9736 3f38 403F0000 		.long	0x3f40
 9737 3f3c 463F0000 		.long	0x3f46
 9738 3f40 08       		.uleb128 0x8
 9739 3f41 8B9D0000 		.long	0x9d8b
 9740 3f45 00       		.byte	0
 9741 3f46 35       		.uleb128 0x35
 9742 3f47 00000000 		.long	.LASF620
 9743 3f4b 04       		.byte	0x4
 9744 3f4c 8E05     		.value	0x58e
 9745 3f4e 00000000 		.long	.LASF621
 9746 3f52 10370000 		.long	0x3710
 9747 3f56 02       		.byte	0x2
 9748 3f57 5F3F0000 		.long	0x3f5f
 9749 3f5b 6F3F0000 		.long	0x3f6f
 9750 3f5f 08       		.uleb128 0x8
 9751 3f60 AF9D0000 		.long	0x9daf
 9752 3f64 13       		.uleb128 0x13
 9753 3f65 10370000 		.long	0x3710
 9754 3f69 13       		.uleb128 0x13
 9755 3f6a CD840000 		.long	0x84cd
 9756 3f6e 00       		.byte	0
 9757 3f6f 37       		.uleb128 0x37
 9758 3f70 00000000 		.long	.LASF622
 9759 3f74 04       		.byte	0x4
 9760 3f75 9C05     		.value	0x59c
 9761 3f77 00000000 		.long	.LASF623
 9762 3f7b 02       		.byte	0x2
 9763 3f7c 843F0000 		.long	0x3f84
 9764 3f80 8F3F0000 		.long	0x3f8f
 9765 3f84 08       		.uleb128 0x8
 9766 3f85 8B9D0000 		.long	0x9d8b
GAS LISTING /tmp/ccKUqHDa.s 			page 429


 9767 3f89 13       		.uleb128 0x13
 9768 3f8a BC360000 		.long	0x36bc
 9769 3f8e 00       		.byte	0
 9770 3f8f 16       		.uleb128 0x16
 9771 3f90 00000000 		.long	.LASF624
 9772 3f94 27       		.byte	0x27
 9773 3f95 8D       		.byte	0x8d
 9774 3f96 00000000 		.long	.LASF625
 9775 3f9a E0360000 		.long	0x36e0
 9776 3f9e 02       		.byte	0x2
 9777 3f9f A73F0000 		.long	0x3fa7
 9778 3fa3 B23F0000 		.long	0x3fb2
 9779 3fa7 08       		.uleb128 0x8
 9780 3fa8 8B9D0000 		.long	0x9d8b
 9781 3fac 13       		.uleb128 0x13
 9782 3fad E0360000 		.long	0x36e0
 9783 3fb1 00       		.byte	0
 9784 3fb2 16       		.uleb128 0x16
 9785 3fb3 00000000 		.long	.LASF624
 9786 3fb7 27       		.byte	0x27
 9787 3fb8 99       		.byte	0x99
 9788 3fb9 00000000 		.long	.LASF626
 9789 3fbd E0360000 		.long	0x36e0
 9790 3fc1 02       		.byte	0x2
 9791 3fc2 CA3F0000 		.long	0x3fca
 9792 3fc6 DA3F0000 		.long	0x3fda
 9793 3fca 08       		.uleb128 0x8
 9794 3fcb 8B9D0000 		.long	0x9d8b
 9795 3fcf 13       		.uleb128 0x13
 9796 3fd0 E0360000 		.long	0x36e0
 9797 3fd4 13       		.uleb128 0x13
 9798 3fd5 E0360000 		.long	0x36e0
 9799 3fd9 00       		.byte	0
 9800 3fda 2E       		.uleb128 0x2e
 9801 3fdb 00000000 		.long	.LASF627
 9802 3fdf 04       		.byte	0x4
 9803 3fe0 AE05     		.value	0x5ae
 9804 3fe2 00000000 		.long	.LASF628
 9805 3fe6 EE3F0000 		.long	0x3fee
 9806 3fea FE3F0000 		.long	0x3ffe
 9807 3fee 08       		.uleb128 0x8
 9808 3fef 8B9D0000 		.long	0x9d8b
 9809 3ff3 13       		.uleb128 0x13
 9810 3ff4 A39D0000 		.long	0x9da3
 9811 3ff8 13       		.uleb128 0x13
 9812 3ff9 B5080000 		.long	0x8b5
 9813 3ffd 00       		.byte	0
 9814 3ffe 2E       		.uleb128 0x2e
 9815 3fff 00000000 		.long	.LASF627
 9816 4003 04       		.byte	0x4
 9817 4004 B905     		.value	0x5b9
 9818 4006 00000000 		.long	.LASF629
 9819 400a 12400000 		.long	0x4012
 9820 400e 22400000 		.long	0x4022
 9821 4012 08       		.uleb128 0x8
 9822 4013 8B9D0000 		.long	0x9d8b
 9823 4017 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 430


 9824 4018 A39D0000 		.long	0x9da3
 9825 401c 13       		.uleb128 0x13
 9826 401d 942B0000 		.long	0x2b94
 9827 4021 00       		.byte	0
 9828 4022 09       		.uleb128 0x9
 9829 4023 5F547000 		.string	"_Tp"
 9830 4027 29000000 		.long	0x29
 9831 402b 38       		.uleb128 0x38
 9832 402c 00000000 		.long	.LASF309
 9833 4030 B7300000 		.long	0x30b7
 9834 4034 00       		.byte	0
 9835 4035 1A       		.uleb128 0x1a
 9836 4036 00000000 		.long	.LASF630
 9837 403a 1A       		.uleb128 0x1a
 9838 403b 00000000 		.long	.LASF631
 9839 403f 0B       		.uleb128 0xb
 9840 4040 7A360000 		.long	0x367a
 9841 4044 10       		.uleb128 0x10
 9842 4045 00000000 		.long	.LASF632
 9843 4049 10       		.byte	0x10
 9844 404a 1D       		.byte	0x1d
 9845 404b 2F       		.byte	0x2f
 9846 404c 24410000 		.long	0x4124
 9847 4050 25       		.uleb128 0x25
 9848 4051 00000000 		.long	.LASF74
 9849 4055 1D       		.byte	0x1d
 9850 4056 36       		.byte	0x36
 9851 4057 029D0000 		.long	0x9d02
 9852 405b 01       		.byte	0x1
 9853 405c 11       		.uleb128 0x11
 9854 405d 00000000 		.long	.LASF314
 9855 4061 1D       		.byte	0x1d
 9856 4062 3A       		.byte	0x3a
 9857 4063 50400000 		.long	0x4050
 9858 4067 00       		.byte	0
 9859 4068 25       		.uleb128 0x25
 9860 4069 00000000 		.long	.LASF61
 9861 406d 1D       		.byte	0x1d
 9862 406e 35       		.byte	0x35
 9863 406f DB070000 		.long	0x7db
 9864 4073 01       		.byte	0x1
 9865 4074 11       		.uleb128 0x11
 9866 4075 00000000 		.long	.LASF315
 9867 4079 1D       		.byte	0x1d
 9868 407a 3B       		.byte	0x3b
 9869 407b 68400000 		.long	0x4068
 9870 407f 08       		.byte	0x8
 9871 4080 25       		.uleb128 0x25
 9872 4081 00000000 		.long	.LASF75
 9873 4085 1D       		.byte	0x1d
 9874 4086 37       		.byte	0x37
 9875 4087 029D0000 		.long	0x9d02
 9876 408b 01       		.byte	0x1
 9877 408c 39       		.uleb128 0x39
 9878 408d 00000000 		.long	.LASF316
 9879 4091 1D       		.byte	0x1d
 9880 4092 3E       		.byte	0x3e
GAS LISTING /tmp/ccKUqHDa.s 			page 431


 9881 4093 9B400000 		.long	0x409b
 9882 4097 AB400000 		.long	0x40ab
 9883 409b 08       		.uleb128 0x8
 9884 409c BB9D0000 		.long	0x9dbb
 9885 40a0 13       		.uleb128 0x13
 9886 40a1 80400000 		.long	0x4080
 9887 40a5 13       		.uleb128 0x13
 9888 40a6 68400000 		.long	0x4068
 9889 40aa 00       		.byte	0
 9890 40ab 15       		.uleb128 0x15
 9891 40ac 00000000 		.long	.LASF316
 9892 40b0 1D       		.byte	0x1d
 9893 40b1 42       		.byte	0x42
 9894 40b2 01       		.byte	0x1
 9895 40b3 BB400000 		.long	0x40bb
 9896 40b7 C1400000 		.long	0x40c1
 9897 40bb 08       		.uleb128 0x8
 9898 40bc BB9D0000 		.long	0x9dbb
 9899 40c0 00       		.byte	0
 9900 40c1 16       		.uleb128 0x16
 9901 40c2 00000000 		.long	.LASF174
 9902 40c6 1D       		.byte	0x1d
 9903 40c7 47       		.byte	0x47
 9904 40c8 00000000 		.long	.LASF633
 9905 40cc 68400000 		.long	0x4068
 9906 40d0 01       		.byte	0x1
 9907 40d1 D9400000 		.long	0x40d9
 9908 40d5 DF400000 		.long	0x40df
 9909 40d9 08       		.uleb128 0x8
 9910 40da C19D0000 		.long	0x9dc1
 9911 40de 00       		.byte	0
 9912 40df 16       		.uleb128 0x16
 9913 40e0 00000000 		.long	.LASF155
 9914 40e4 1D       		.byte	0x1d
 9915 40e5 4B       		.byte	0x4b
 9916 40e6 00000000 		.long	.LASF634
 9917 40ea 80400000 		.long	0x4080
 9918 40ee 01       		.byte	0x1
 9919 40ef F7400000 		.long	0x40f7
 9920 40f3 FD400000 		.long	0x40fd
 9921 40f7 08       		.uleb128 0x8
 9922 40f8 C19D0000 		.long	0x9dc1
 9923 40fc 00       		.byte	0
 9924 40fd 3A       		.uleb128 0x3a
 9925 40fe 656E6400 		.string	"end"
 9926 4102 1D       		.byte	0x1d
 9927 4103 4F       		.byte	0x4f
 9928 4104 00000000 		.long	.LASF636
 9929 4108 80400000 		.long	0x4080
 9930 410c 01       		.byte	0x1
 9931 410d 15410000 		.long	0x4115
 9932 4111 1B410000 		.long	0x411b
 9933 4115 08       		.uleb128 0x8
 9934 4116 C19D0000 		.long	0x9dc1
 9935 411a 00       		.byte	0
 9936 411b 09       		.uleb128 0x9
 9937 411c 5F4500   		.string	"_E"
GAS LISTING /tmp/ccKUqHDa.s 			page 432


 9938 411f 29000000 		.long	0x29
 9939 4123 00       		.byte	0
 9940 4124 0B       		.uleb128 0xb
 9941 4125 44400000 		.long	0x4044
 9942 4129 10       		.uleb128 0x10
 9943 412a 00000000 		.long	.LASF637
 9944 412e 01       		.byte	0x1
 9945 412f 19       		.byte	0x19
 9946 4130 5C       		.byte	0x5c
 9947 4131 CB410000 		.long	0x41cb
 9948 4135 24       		.uleb128 0x24
 9949 4136 797C0000 		.long	0x7c79
 9950 413a 00       		.byte	0
 9951 413b 01       		.byte	0x1
 9952 413c 25       		.uleb128 0x25
 9953 413d 00000000 		.long	.LASF61
 9954 4141 19       		.byte	0x19
 9955 4142 5F       		.byte	0x5f
 9956 4143 DB070000 		.long	0x7db
 9957 4147 01       		.byte	0x1
 9958 4148 25       		.uleb128 0x25
 9959 4149 00000000 		.long	.LASF490
 9960 414d 19       		.byte	0x19
 9961 414e 61       		.byte	0x61
 9962 414f 5E9B0000 		.long	0x9b5e
 9963 4153 01       		.byte	0x1
 9964 4154 25       		.uleb128 0x25
 9965 4155 00000000 		.long	.LASF5
 9966 4159 19       		.byte	0x19
 9967 415a 65       		.byte	0x65
 9968 415b BB710000 		.long	0x71bb
 9969 415f 01       		.byte	0x1
 9970 4160 15       		.uleb128 0x15
 9971 4161 00000000 		.long	.LASF64
 9972 4165 19       		.byte	0x19
 9973 4166 71       		.byte	0x71
 9974 4167 01       		.byte	0x1
 9975 4168 70410000 		.long	0x4170
 9976 416c 76410000 		.long	0x4176
 9977 4170 08       		.uleb128 0x8
 9978 4171 E59D0000 		.long	0x9de5
 9979 4175 00       		.byte	0
 9980 4176 15       		.uleb128 0x15
 9981 4177 00000000 		.long	.LASF64
 9982 417b 19       		.byte	0x19
 9983 417c 73       		.byte	0x73
 9984 417d 01       		.byte	0x1
 9985 417e 86410000 		.long	0x4186
 9986 4182 91410000 		.long	0x4191
 9987 4186 08       		.uleb128 0x8
 9988 4187 E59D0000 		.long	0x9de5
 9989 418b 13       		.uleb128 0x13
 9990 418c EB9D0000 		.long	0x9deb
 9991 4190 00       		.byte	0
 9992 4191 15       		.uleb128 0x15
 9993 4192 00000000 		.long	.LASF65
 9994 4196 19       		.byte	0x19
GAS LISTING /tmp/ccKUqHDa.s 			page 433


 9995 4197 79       		.byte	0x79
 9996 4198 01       		.byte	0x1
 9997 4199 A1410000 		.long	0x41a1
 9998 419d AC410000 		.long	0x41ac
 9999 41a1 08       		.uleb128 0x8
 10000 41a2 E59D0000 		.long	0x9de5
 10001 41a6 08       		.uleb128 0x8
 10002 41a7 E5710000 		.long	0x71e5
 10003 41ab 00       		.byte	0
 10004 41ac 58       		.uleb128 0x58
 10005 41ad 00000000 		.long	.LASF638
 10006 41b1 01       		.byte	0x1
 10007 41b2 19       		.byte	0x19
 10008 41b3 68       		.byte	0x68
 10009 41b4 01       		.byte	0x1
 10010 41b5 06       		.uleb128 0x6
 10011 41b6 00000000 		.long	.LASF494
 10012 41ba 19       		.byte	0x19
 10013 41bb 69       		.byte	0x69
 10014 41bc 29410000 		.long	0x4129
 10015 41c0 1C       		.uleb128 0x1c
 10016 41c1 00000000 		.long	.LASF495
 10017 41c5 BB710000 		.long	0x71bb
 10018 41c9 00       		.byte	0
 10019 41ca 00       		.byte	0
 10020 41cb 0B       		.uleb128 0xb
 10021 41cc 29410000 		.long	0x4129
 10022 41d0 04       		.uleb128 0x4
 10023 41d1 00000000 		.long	.LASF639
 10024 41d5 01       		.byte	0x1
 10025 41d6 25       		.byte	0x25
 10026 41d7 69       		.byte	0x69
 10027 41d8 F1410000 		.long	0x41f1
 10028 41dc 06       		.uleb128 0x6
 10029 41dd 00000000 		.long	.LASF394
 10030 41e1 25       		.byte	0x25
 10031 41e2 6B       		.byte	0x6b
 10032 41e3 BB710000 		.long	0x71bb
 10033 41e7 09       		.uleb128 0x9
 10034 41e8 5F547000 		.string	"_Tp"
 10035 41ec BB710000 		.long	0x71bb
 10036 41f0 00       		.byte	0
 10037 41f1 04       		.uleb128 0x4
 10038 41f2 00000000 		.long	.LASF640
 10039 41f6 01       		.byte	0x1
 10040 41f7 25       		.byte	0x25
 10041 41f8 96       		.byte	0x96
 10042 41f9 57420000 		.long	0x4257
 10043 41fd 06       		.uleb128 0x6
 10044 41fe 00000000 		.long	.LASF490
 10045 4202 25       		.byte	0x25
 10046 4203 99       		.byte	0x99
 10047 4204 5E9B0000 		.long	0x9b5e
 10048 4208 06       		.uleb128 0x6
 10049 4209 00000000 		.long	.LASF489
 10050 420d 25       		.byte	0x25
 10051 420e 9D       		.byte	0x9d
GAS LISTING /tmp/ccKUqHDa.s 			page 434


 10052 420f AA080000 		.long	0x8aa
 10053 4213 3E       		.uleb128 0x3e
 10054 4214 00000000 		.long	.LASF498
 10055 4218 25       		.byte	0x25
 10056 4219 A8       		.byte	0xa8
 10057 421a 00000000 		.long	.LASF641
 10058 421e FD410000 		.long	0x41fd
 10059 4222 2C420000 		.long	0x422c
 10060 4226 13       		.uleb128 0x13
 10061 4227 F19D0000 		.long	0x9df1
 10062 422b 00       		.byte	0
 10063 422c 06       		.uleb128 0x6
 10064 422d 00000000 		.long	.LASF500
 10065 4231 25       		.byte	0x25
 10066 4232 A0       		.byte	0xa0
 10067 4233 16850000 		.long	0x8516
 10068 4237 06       		.uleb128 0x6
 10069 4238 00000000 		.long	.LASF500
 10070 423c 25       		.byte	0x25
 10071 423d A0       		.byte	0xa0
 10072 423e 96850000 		.long	0x8596
 10073 4242 06       		.uleb128 0x6
 10074 4243 00000000 		.long	.LASF500
 10075 4247 25       		.byte	0x25
 10076 4248 A0       		.byte	0xa0
 10077 4249 6A9B0000 		.long	0x9b6a
 10078 424d 1C       		.uleb128 0x1c
 10079 424e 00000000 		.long	.LASF501
 10080 4252 5E9B0000 		.long	0x9b5e
 10081 4256 00       		.byte	0
 10082 4257 04       		.uleb128 0x4
 10083 4258 00000000 		.long	.LASF642
 10084 425c 01       		.byte	0x1
 10085 425d 26       		.byte	0x26
 10086 425e 50       		.byte	0x50
 10087 425f 25440000 		.long	0x4425
 10088 4263 06       		.uleb128 0x6
 10089 4264 00000000 		.long	.LASF5
 10090 4268 26       		.byte	0x26
 10091 4269 55       		.byte	0x55
 10092 426a 54410000 		.long	0x4154
 10093 426e 25       		.uleb128 0x25
 10094 426f 00000000 		.long	.LASF503
 10095 4273 26       		.byte	0x26
 10096 4274 5F       		.byte	0x5f
 10097 4275 48410000 		.long	0x4148
 10098 4279 03       		.byte	0x3
 10099 427a 06       		.uleb128 0x6
 10100 427b 00000000 		.long	.LASF490
 10101 427f 26       		.byte	0x26
 10102 4280 66       		.byte	0x66
 10103 4281 6E420000 		.long	0x426e
 10104 4285 25       		.uleb128 0x25
 10105 4286 00000000 		.long	.LASF504
 10106 428a 26       		.byte	0x26
 10107 428b 7E       		.byte	0x7e
 10108 428c 37420000 		.long	0x4237
GAS LISTING /tmp/ccKUqHDa.s 			page 435


 10109 4290 03       		.byte	0x3
 10110 4291 06       		.uleb128 0x6
 10111 4292 00000000 		.long	.LASF505
 10112 4296 26       		.byte	0x26
 10113 4297 87       		.byte	0x87
 10114 4298 85420000 		.long	0x4285
 10115 429c 25       		.uleb128 0x25
 10116 429d 00000000 		.long	.LASF506
 10117 42a1 26       		.byte	0x26
 10118 42a2 94       		.byte	0x94
 10119 42a3 3C410000 		.long	0x413c
 10120 42a7 03       		.byte	0x3
 10121 42a8 06       		.uleb128 0x6
 10122 42a9 00000000 		.long	.LASF61
 10123 42ad 26       		.byte	0x26
 10124 42ae 9D       		.byte	0x9d
 10125 42af 9C420000 		.long	0x429c
 10126 42b3 59       		.uleb128 0x59
 10127 42b4 00000000 		.long	.LASF507
 10128 42b8 26       		.byte	0x26
 10129 42b9 5F       		.byte	0x5f
 10130 42ba 00000000 		.long	.LASF643
 10131 42be F79D0000 		.long	0x9df7
 10132 42c2 03       		.byte	0x3
 10133 42c3 C9420000 		.long	0x42c9
 10134 42c7 5A       		.uleb128 0x5a
 10135 42c8 00       		.byte	0
 10136 42c9 59       		.uleb128 0x59
 10137 42ca 00000000 		.long	.LASF509
 10138 42ce 26       		.byte	0x26
 10139 42cf 68       		.byte	0x68
 10140 42d0 00000000 		.long	.LASF644
 10141 42d4 42420000 		.long	0x4242
 10142 42d8 03       		.byte	0x3
 10143 42d9 DF420000 		.long	0x42df
 10144 42dd 5A       		.uleb128 0x5a
 10145 42de 00       		.byte	0
 10146 42df 59       		.uleb128 0x59
 10147 42e0 00000000 		.long	.LASF511
 10148 42e4 26       		.byte	0x26
 10149 42e5 73       		.byte	0x73
 10150 42e6 00000000 		.long	.LASF645
 10151 42ea 2C420000 		.long	0x422c
 10152 42ee 03       		.byte	0x3
 10153 42ef F5420000 		.long	0x42f5
 10154 42f3 5A       		.uleb128 0x5a
 10155 42f4 00       		.byte	0
 10156 42f5 59       		.uleb128 0x59
 10157 42f6 00000000 		.long	.LASF513
 10158 42fa 26       		.byte	0x26
 10159 42fb 7E       		.byte	0x7e
 10160 42fc 00000000 		.long	.LASF646
 10161 4300 37420000 		.long	0x4237
 10162 4304 03       		.byte	0x3
 10163 4305 0B430000 		.long	0x430b
 10164 4309 5A       		.uleb128 0x5a
 10165 430a 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 436


 10166 430b 59       		.uleb128 0x59
 10167 430c 00000000 		.long	.LASF515
 10168 4310 26       		.byte	0x26
 10169 4311 89       		.byte	0x89
 10170 4312 00000000 		.long	.LASF647
 10171 4316 08420000 		.long	0x4208
 10172 431a 03       		.byte	0x3
 10173 431b 21430000 		.long	0x4321
 10174 431f 5A       		.uleb128 0x5a
 10175 4320 00       		.byte	0
 10176 4321 59       		.uleb128 0x59
 10177 4322 00000000 		.long	.LASF517
 10178 4326 26       		.byte	0x26
 10179 4327 94       		.byte	0x94
 10180 4328 00000000 		.long	.LASF648
 10181 432c 7E2B0000 		.long	0x2b7e
 10182 4330 03       		.byte	0x3
 10183 4331 37430000 		.long	0x4337
 10184 4335 5A       		.uleb128 0x5a
 10185 4336 00       		.byte	0
 10186 4337 59       		.uleb128 0x59
 10187 4338 00000000 		.long	.LASF519
 10188 433c 26       		.byte	0x26
 10189 433d 9F       		.byte	0x9f
 10190 433e 00000000 		.long	.LASF649
 10191 4342 942B0000 		.long	0x2b94
 10192 4346 03       		.byte	0x3
 10193 4347 4D430000 		.long	0x434d
 10194 434b 5A       		.uleb128 0x5a
 10195 434c 00       		.byte	0
 10196 434d 59       		.uleb128 0x59
 10197 434e 00000000 		.long	.LASF521
 10198 4352 26       		.byte	0x26
 10199 4353 AB       		.byte	0xab
 10200 4354 00000000 		.long	.LASF650
 10201 4358 942B0000 		.long	0x2b94
 10202 435c 03       		.byte	0x3
 10203 435d 63430000 		.long	0x4363
 10204 4361 5A       		.uleb128 0x5a
 10205 4362 00       		.byte	0
 10206 4363 59       		.uleb128 0x59
 10207 4364 00000000 		.long	.LASF523
 10208 4368 26       		.byte	0x26
 10209 4369 B7       		.byte	0xb7
 10210 436a 00000000 		.long	.LASF651
 10211 436e 942B0000 		.long	0x2b94
 10212 4372 03       		.byte	0x3
 10213 4373 79430000 		.long	0x4379
 10214 4377 5A       		.uleb128 0x5a
 10215 4378 00       		.byte	0
 10216 4379 21       		.uleb128 0x21
 10217 437a 00000000 		.long	.LASF525
 10218 437e 26       		.byte	0x26
 10219 437f 6401     		.value	0x164
 10220 4381 00000000 		.long	.LASF652
 10221 4385 7A420000 		.long	0x427a
 10222 4389 98430000 		.long	0x4398
GAS LISTING /tmp/ccKUqHDa.s 			page 437


 10223 438d 13       		.uleb128 0x13
 10224 438e FD9D0000 		.long	0x9dfd
 10225 4392 13       		.uleb128 0x13
 10226 4393 A8420000 		.long	0x42a8
 10227 4397 00       		.byte	0
 10228 4398 21       		.uleb128 0x21
 10229 4399 00000000 		.long	.LASF525
 10230 439d 26       		.byte	0x26
 10231 439e 7301     		.value	0x173
 10232 43a0 00000000 		.long	.LASF653
 10233 43a4 7A420000 		.long	0x427a
 10234 43a8 BC430000 		.long	0x43bc
 10235 43ac 13       		.uleb128 0x13
 10236 43ad FD9D0000 		.long	0x9dfd
 10237 43b1 13       		.uleb128 0x13
 10238 43b2 A8420000 		.long	0x42a8
 10239 43b6 13       		.uleb128 0x13
 10240 43b7 91420000 		.long	0x4291
 10241 43bb 00       		.byte	0
 10242 43bc 31       		.uleb128 0x31
 10243 43bd 00000000 		.long	.LASF528
 10244 43c1 26       		.byte	0x26
 10245 43c2 7E01     		.value	0x17e
 10246 43c4 00000000 		.long	.LASF654
 10247 43c8 DC430000 		.long	0x43dc
 10248 43cc 13       		.uleb128 0x13
 10249 43cd FD9D0000 		.long	0x9dfd
 10250 43d1 13       		.uleb128 0x13
 10251 43d2 7A420000 		.long	0x427a
 10252 43d6 13       		.uleb128 0x13
 10253 43d7 A8420000 		.long	0x42a8
 10254 43db 00       		.byte	0
 10255 43dc 21       		.uleb128 0x21
 10256 43dd 00000000 		.long	.LASF177
 10257 43e1 26       		.byte	0x26
 10258 43e2 A501     		.value	0x1a5
 10259 43e4 00000000 		.long	.LASF655
 10260 43e8 A8420000 		.long	0x42a8
 10261 43ec F6430000 		.long	0x43f6
 10262 43f0 13       		.uleb128 0x13
 10263 43f1 EB9D0000 		.long	0x9deb
 10264 43f5 00       		.byte	0
 10265 43f6 21       		.uleb128 0x21
 10266 43f7 00000000 		.long	.LASF531
 10267 43fb 26       		.byte	0x26
 10268 43fc B101     		.value	0x1b1
 10269 43fe 00000000 		.long	.LASF656
 10270 4402 29410000 		.long	0x4129
 10271 4406 10440000 		.long	0x4410
 10272 440a 13       		.uleb128 0x13
 10273 440b EB9D0000 		.long	0x9deb
 10274 440f 00       		.byte	0
 10275 4410 06       		.uleb128 0x6
 10276 4411 00000000 		.long	.LASF533
 10277 4415 26       		.byte	0x26
 10278 4416 C5       		.byte	0xc5
 10279 4417 31440000 		.long	0x4431
GAS LISTING /tmp/ccKUqHDa.s 			page 438


 10280 441b 1C       		.uleb128 0x1c
 10281 441c 00000000 		.long	.LASF309
 10282 4420 29410000 		.long	0x4129
 10283 4424 00       		.byte	0
 10284 4425 04       		.uleb128 0x4
 10285 4426 00000000 		.long	.LASF657
 10286 442a 01       		.byte	0x1
 10287 442b 26       		.byte	0x26
 10288 442c 3F       		.byte	0x3f
 10289 442d 4F440000 		.long	0x444f
 10290 4431 06       		.uleb128 0x6
 10291 4432 00000000 		.long	.LASF394
 10292 4436 26       		.byte	0x26
 10293 4437 41       		.byte	0x41
 10294 4438 B5410000 		.long	0x41b5
 10295 443c 1C       		.uleb128 0x1c
 10296 443d 00000000 		.long	.LASF309
 10297 4441 29410000 		.long	0x4129
 10298 4445 09       		.uleb128 0x9
 10299 4446 5F547000 		.string	"_Tp"
 10300 444a BB710000 		.long	0x71bb
 10301 444e 00       		.byte	0
 10302 444f 04       		.uleb128 0x4
 10303 4450 00000000 		.long	.LASF658
 10304 4454 18       		.byte	0x18
 10305 4455 04       		.byte	0x4
 10306 4456 48       		.byte	0x48
 10307 4457 E7460000 		.long	0x46e7
 10308 445b 04       		.uleb128 0x4
 10309 445c 00000000 		.long	.LASF536
 10310 4460 18       		.byte	0x18
 10311 4461 04       		.byte	0x4
 10312 4462 4F       		.byte	0x4f
 10313 4463 0D450000 		.long	0x450d
 10314 4467 28       		.uleb128 0x28
 10315 4468 29410000 		.long	0x4129
 10316 446c 00       		.byte	0
 10317 446d 11       		.uleb128 0x11
 10318 446e 00000000 		.long	.LASF537
 10319 4472 04       		.byte	0x4
 10320 4473 52       		.byte	0x52
 10321 4474 0D450000 		.long	0x450d
 10322 4478 00       		.byte	0
 10323 4479 11       		.uleb128 0x11
 10324 447a 00000000 		.long	.LASF538
 10325 447e 04       		.byte	0x4
 10326 447f 53       		.byte	0x53
 10327 4480 0D450000 		.long	0x450d
 10328 4484 08       		.byte	0x8
 10329 4485 11       		.uleb128 0x11
 10330 4486 00000000 		.long	.LASF539
 10331 448a 04       		.byte	0x4
 10332 448b 54       		.byte	0x54
 10333 448c 0D450000 		.long	0x450d
 10334 4490 10       		.byte	0x10
 10335 4491 39       		.uleb128 0x39
 10336 4492 00000000 		.long	.LASF536
GAS LISTING /tmp/ccKUqHDa.s 			page 439


 10337 4496 04       		.byte	0x4
 10338 4497 56       		.byte	0x56
 10339 4498 A0440000 		.long	0x44a0
 10340 449c A6440000 		.long	0x44a6
 10341 44a0 08       		.uleb128 0x8
 10342 44a1 0F9E0000 		.long	0x9e0f
 10343 44a5 00       		.byte	0
 10344 44a6 39       		.uleb128 0x39
 10345 44a7 00000000 		.long	.LASF536
 10346 44ab 04       		.byte	0x4
 10347 44ac 5A       		.byte	0x5a
 10348 44ad B5440000 		.long	0x44b5
 10349 44b1 C0440000 		.long	0x44c0
 10350 44b5 08       		.uleb128 0x8
 10351 44b6 0F9E0000 		.long	0x9e0f
 10352 44ba 13       		.uleb128 0x13
 10353 44bb 159E0000 		.long	0x9e15
 10354 44bf 00       		.byte	0
 10355 44c0 39       		.uleb128 0x39
 10356 44c1 00000000 		.long	.LASF536
 10357 44c5 04       		.byte	0x4
 10358 44c6 5F       		.byte	0x5f
 10359 44c7 CF440000 		.long	0x44cf
 10360 44cb DA440000 		.long	0x44da
 10361 44cf 08       		.uleb128 0x8
 10362 44d0 0F9E0000 		.long	0x9e0f
 10363 44d4 13       		.uleb128 0x13
 10364 44d5 1B9E0000 		.long	0x9e1b
 10365 44d9 00       		.byte	0
 10366 44da 14       		.uleb128 0x14
 10367 44db 00000000 		.long	.LASF540
 10368 44df 04       		.byte	0x4
 10369 44e0 65       		.byte	0x65
 10370 44e1 00000000 		.long	.LASF659
 10371 44e5 ED440000 		.long	0x44ed
 10372 44e9 F8440000 		.long	0x44f8
 10373 44ed 08       		.uleb128 0x8
 10374 44ee 0F9E0000 		.long	0x9e0f
 10375 44f2 13       		.uleb128 0x13
 10376 44f3 219E0000 		.long	0x9e21
 10377 44f7 00       		.byte	0
 10378 44f8 2B       		.uleb128 0x2b
 10379 44f9 00000000 		.long	.LASF542
 10380 44fd 01450000 		.long	0x4501
 10381 4501 08       		.uleb128 0x8
 10382 4502 0F9E0000 		.long	0x9e0f
 10383 4506 08       		.uleb128 0x8
 10384 4507 E5710000 		.long	0x71e5
 10385 450b 00       		.byte	0
 10386 450c 00       		.byte	0
 10387 450d 06       		.uleb128 0x6
 10388 450e 00000000 		.long	.LASF490
 10389 4512 04       		.byte	0x4
 10390 4513 4D       		.byte	0x4d
 10391 4514 F17D0000 		.long	0x7df1
 10392 4518 0B       		.uleb128 0xb
 10393 4519 1D450000 		.long	0x451d
GAS LISTING /tmp/ccKUqHDa.s 			page 440


 10394 451d 06       		.uleb128 0x6
 10395 451e 00000000 		.long	.LASF543
 10396 4522 04       		.byte	0x4
 10397 4523 4B       		.byte	0x4b
 10398 4524 B07E0000 		.long	0x7eb0
 10399 4528 11       		.uleb128 0x11
 10400 4529 00000000 		.long	.LASF544
 10401 452d 04       		.byte	0x4
 10402 452e A4       		.byte	0xa4
 10403 452f 5B440000 		.long	0x445b
 10404 4533 00       		.byte	0
 10405 4534 06       		.uleb128 0x6
 10406 4535 00000000 		.long	.LASF73
 10407 4539 04       		.byte	0x4
 10408 453a 6E       		.byte	0x6e
 10409 453b 29410000 		.long	0x4129
 10410 453f 07       		.uleb128 0x7
 10411 4540 00000000 		.long	.LASF545
 10412 4544 04       		.byte	0x4
 10413 4545 71       		.byte	0x71
 10414 4546 00000000 		.long	.LASF660
 10415 454a 279E0000 		.long	0x9e27
 10416 454e 56450000 		.long	0x4556
 10417 4552 5C450000 		.long	0x455c
 10418 4556 08       		.uleb128 0x8
 10419 4557 2D9E0000 		.long	0x9e2d
 10420 455b 00       		.byte	0
 10421 455c 07       		.uleb128 0x7
 10422 455d 00000000 		.long	.LASF545
 10423 4561 04       		.byte	0x4
 10424 4562 75       		.byte	0x75
 10425 4563 00000000 		.long	.LASF661
 10426 4567 159E0000 		.long	0x9e15
 10427 456b 73450000 		.long	0x4573
 10428 456f 79450000 		.long	0x4579
 10429 4573 08       		.uleb128 0x8
 10430 4574 339E0000 		.long	0x9e33
 10431 4578 00       		.byte	0
 10432 4579 07       		.uleb128 0x7
 10433 457a 00000000 		.long	.LASF268
 10434 457e 04       		.byte	0x4
 10435 457f 79       		.byte	0x79
 10436 4580 00000000 		.long	.LASF662
 10437 4584 34450000 		.long	0x4534
 10438 4588 90450000 		.long	0x4590
 10439 458c 96450000 		.long	0x4596
 10440 4590 08       		.uleb128 0x8
 10441 4591 339E0000 		.long	0x9e33
 10442 4595 00       		.byte	0
 10443 4596 39       		.uleb128 0x39
 10444 4597 00000000 		.long	.LASF549
 10445 459b 04       		.byte	0x4
 10446 459c 7C       		.byte	0x7c
 10447 459d A5450000 		.long	0x45a5
 10448 45a1 AB450000 		.long	0x45ab
 10449 45a5 08       		.uleb128 0x8
 10450 45a6 2D9E0000 		.long	0x9e2d
GAS LISTING /tmp/ccKUqHDa.s 			page 441


 10451 45aa 00       		.byte	0
 10452 45ab 39       		.uleb128 0x39
 10453 45ac 00000000 		.long	.LASF549
 10454 45b0 04       		.byte	0x4
 10455 45b1 7F       		.byte	0x7f
 10456 45b2 BA450000 		.long	0x45ba
 10457 45b6 C5450000 		.long	0x45c5
 10458 45ba 08       		.uleb128 0x8
 10459 45bb 2D9E0000 		.long	0x9e2d
 10460 45bf 13       		.uleb128 0x13
 10461 45c0 399E0000 		.long	0x9e39
 10462 45c4 00       		.byte	0
 10463 45c5 0B       		.uleb128 0xb
 10464 45c6 34450000 		.long	0x4534
 10465 45ca 39       		.uleb128 0x39
 10466 45cb 00000000 		.long	.LASF549
 10467 45cf 04       		.byte	0x4
 10468 45d0 82       		.byte	0x82
 10469 45d1 D9450000 		.long	0x45d9
 10470 45d5 E4450000 		.long	0x45e4
 10471 45d9 08       		.uleb128 0x8
 10472 45da 2D9E0000 		.long	0x9e2d
 10473 45de 13       		.uleb128 0x13
 10474 45df DB070000 		.long	0x7db
 10475 45e3 00       		.byte	0
 10476 45e4 39       		.uleb128 0x39
 10477 45e5 00000000 		.long	.LASF549
 10478 45e9 04       		.byte	0x4
 10479 45ea 86       		.byte	0x86
 10480 45eb F3450000 		.long	0x45f3
 10481 45ef 03460000 		.long	0x4603
 10482 45f3 08       		.uleb128 0x8
 10483 45f4 2D9E0000 		.long	0x9e2d
 10484 45f8 13       		.uleb128 0x13
 10485 45f9 DB070000 		.long	0x7db
 10486 45fd 13       		.uleb128 0x13
 10487 45fe 399E0000 		.long	0x9e39
 10488 4602 00       		.byte	0
 10489 4603 39       		.uleb128 0x39
 10490 4604 00000000 		.long	.LASF549
 10491 4608 04       		.byte	0x4
 10492 4609 8B       		.byte	0x8b
 10493 460a 12460000 		.long	0x4612
 10494 460e 1D460000 		.long	0x461d
 10495 4612 08       		.uleb128 0x8
 10496 4613 2D9E0000 		.long	0x9e2d
 10497 4617 13       		.uleb128 0x13
 10498 4618 1B9E0000 		.long	0x9e1b
 10499 461c 00       		.byte	0
 10500 461d 39       		.uleb128 0x39
 10501 461e 00000000 		.long	.LASF549
 10502 4622 04       		.byte	0x4
 10503 4623 8E       		.byte	0x8e
 10504 4624 2C460000 		.long	0x462c
 10505 4628 37460000 		.long	0x4637
 10506 462c 08       		.uleb128 0x8
 10507 462d 2D9E0000 		.long	0x9e2d
GAS LISTING /tmp/ccKUqHDa.s 			page 442


 10508 4631 13       		.uleb128 0x13
 10509 4632 3F9E0000 		.long	0x9e3f
 10510 4636 00       		.byte	0
 10511 4637 39       		.uleb128 0x39
 10512 4638 00000000 		.long	.LASF549
 10513 463c 04       		.byte	0x4
 10514 463d 92       		.byte	0x92
 10515 463e 46460000 		.long	0x4646
 10516 4642 56460000 		.long	0x4656
 10517 4646 08       		.uleb128 0x8
 10518 4647 2D9E0000 		.long	0x9e2d
 10519 464b 13       		.uleb128 0x13
 10520 464c 3F9E0000 		.long	0x9e3f
 10521 4650 13       		.uleb128 0x13
 10522 4651 399E0000 		.long	0x9e39
 10523 4655 00       		.byte	0
 10524 4656 39       		.uleb128 0x39
 10525 4657 00000000 		.long	.LASF550
 10526 465b 04       		.byte	0x4
 10527 465c 9F       		.byte	0x9f
 10528 465d 65460000 		.long	0x4665
 10529 4661 70460000 		.long	0x4670
 10530 4665 08       		.uleb128 0x8
 10531 4666 2D9E0000 		.long	0x9e2d
 10532 466a 08       		.uleb128 0x8
 10533 466b E5710000 		.long	0x71e5
 10534 466f 00       		.byte	0
 10535 4670 07       		.uleb128 0x7
 10536 4671 00000000 		.long	.LASF551
 10537 4675 04       		.byte	0x4
 10538 4676 A7       		.byte	0xa7
 10539 4677 00000000 		.long	.LASF663
 10540 467b 0D450000 		.long	0x450d
 10541 467f 87460000 		.long	0x4687
 10542 4683 92460000 		.long	0x4692
 10543 4687 08       		.uleb128 0x8
 10544 4688 2D9E0000 		.long	0x9e2d
 10545 468c 13       		.uleb128 0x13
 10546 468d DB070000 		.long	0x7db
 10547 4691 00       		.byte	0
 10548 4692 14       		.uleb128 0x14
 10549 4693 00000000 		.long	.LASF553
 10550 4697 04       		.byte	0x4
 10551 4698 AE       		.byte	0xae
 10552 4699 00000000 		.long	.LASF664
 10553 469d A5460000 		.long	0x46a5
 10554 46a1 B5460000 		.long	0x46b5
 10555 46a5 08       		.uleb128 0x8
 10556 46a6 2D9E0000 		.long	0x9e2d
 10557 46aa 13       		.uleb128 0x13
 10558 46ab 0D450000 		.long	0x450d
 10559 46af 13       		.uleb128 0x13
 10560 46b0 DB070000 		.long	0x7db
 10561 46b4 00       		.byte	0
 10562 46b5 17       		.uleb128 0x17
 10563 46b6 00000000 		.long	.LASF555
 10564 46ba 04       		.byte	0x4
GAS LISTING /tmp/ccKUqHDa.s 			page 443


 10565 46bb B7       		.byte	0xb7
 10566 46bc 00000000 		.long	.LASF665
 10567 46c0 03       		.byte	0x3
 10568 46c1 C9460000 		.long	0x46c9
 10569 46c5 D4460000 		.long	0x46d4
 10570 46c9 08       		.uleb128 0x8
 10571 46ca 2D9E0000 		.long	0x9e2d
 10572 46ce 13       		.uleb128 0x13
 10573 46cf DB070000 		.long	0x7db
 10574 46d3 00       		.byte	0
 10575 46d4 09       		.uleb128 0x9
 10576 46d5 5F547000 		.string	"_Tp"
 10577 46d9 BB710000 		.long	0x71bb
 10578 46dd 1C       		.uleb128 0x1c
 10579 46de 00000000 		.long	.LASF309
 10580 46e2 29410000 		.long	0x4129
 10581 46e6 00       		.byte	0
 10582 46e7 0B       		.uleb128 0xb
 10583 46e8 4F440000 		.long	0x444f
 10584 46ec 10       		.uleb128 0x10
 10585 46ed 00000000 		.long	.LASF666
 10586 46f1 18       		.byte	0x18
 10587 46f2 04       		.byte	0x4
 10588 46f3 D6       		.byte	0xd6
 10589 46f4 A7500000 		.long	0x50a7
 10590 46f8 0E       		.uleb128 0xe
 10591 46f9 04       		.byte	0x4
 10592 46fa D6       		.byte	0xd6
 10593 46fb 70460000 		.long	0x4670
 10594 46ff 0E       		.uleb128 0xe
 10595 4700 04       		.byte	0x4
 10596 4701 D6       		.byte	0xd6
 10597 4702 92460000 		.long	0x4692
 10598 4706 0E       		.uleb128 0xe
 10599 4707 04       		.byte	0x4
 10600 4708 D6       		.byte	0xd6
 10601 4709 28450000 		.long	0x4528
 10602 470d 0E       		.uleb128 0xe
 10603 470e 04       		.byte	0x4
 10604 470f D6       		.byte	0xd6
 10605 4710 5C450000 		.long	0x455c
 10606 4714 0E       		.uleb128 0xe
 10607 4715 04       		.byte	0x4
 10608 4716 D6       		.byte	0xd6
 10609 4717 79450000 		.long	0x4579
 10610 471b 24       		.uleb128 0x24
 10611 471c 4F440000 		.long	0x444f
 10612 4720 00       		.byte	0
 10613 4721 02       		.byte	0x2
 10614 4722 25       		.uleb128 0x25
 10615 4723 00000000 		.long	.LASF5
 10616 4727 04       		.byte	0x4
 10617 4728 E2       		.byte	0xe2
 10618 4729 BB710000 		.long	0x71bb
 10619 472d 01       		.byte	0x1
 10620 472e 25       		.uleb128 0x25
 10621 472f 00000000 		.long	.LASF490
GAS LISTING /tmp/ccKUqHDa.s 			page 444


 10622 4733 04       		.byte	0x4
 10623 4734 E3       		.byte	0xe3
 10624 4735 0D450000 		.long	0x450d
 10625 4739 01       		.byte	0x1
 10626 473a 25       		.uleb128 0x25
 10627 473b 00000000 		.long	.LASF62
 10628 473f 04       		.byte	0x4
 10629 4740 E5       		.byte	0xe5
 10630 4741 FC7D0000 		.long	0x7dfc
 10631 4745 01       		.byte	0x1
 10632 4746 25       		.uleb128 0x25
 10633 4747 00000000 		.long	.LASF63
 10634 474b 04       		.byte	0x4
 10635 474c E6       		.byte	0xe6
 10636 474d 077E0000 		.long	0x7e07
 10637 4751 01       		.byte	0x1
 10638 4752 25       		.uleb128 0x25
 10639 4753 00000000 		.long	.LASF74
 10640 4757 04       		.byte	0x4
 10641 4758 E7       		.byte	0xe7
 10642 4759 CF7E0000 		.long	0x7ecf
 10643 475d 01       		.byte	0x1
 10644 475e 25       		.uleb128 0x25
 10645 475f 00000000 		.long	.LASF75
 10646 4763 04       		.byte	0x4
 10647 4764 E9       		.byte	0xe9
 10648 4765 D47E0000 		.long	0x7ed4
 10649 4769 01       		.byte	0x1
 10650 476a 25       		.uleb128 0x25
 10651 476b 00000000 		.long	.LASF76
 10652 476f 04       		.byte	0x4
 10653 4770 EA       		.byte	0xea
 10654 4771 A7500000 		.long	0x50a7
 10655 4775 01       		.byte	0x1
 10656 4776 25       		.uleb128 0x25
 10657 4777 00000000 		.long	.LASF77
 10658 477b 04       		.byte	0x4
 10659 477c EB       		.byte	0xeb
 10660 477d AC500000 		.long	0x50ac
 10661 4781 01       		.byte	0x1
 10662 4782 25       		.uleb128 0x25
 10663 4783 00000000 		.long	.LASF61
 10664 4787 04       		.byte	0x4
 10665 4788 EC       		.byte	0xec
 10666 4789 DB070000 		.long	0x7db
 10667 478d 01       		.byte	0x1
 10668 478e 25       		.uleb128 0x25
 10669 478f 00000000 		.long	.LASF73
 10670 4793 04       		.byte	0x4
 10671 4794 EE       		.byte	0xee
 10672 4795 29410000 		.long	0x4129
 10673 4799 01       		.byte	0x1
 10674 479a 15       		.uleb128 0x15
 10675 479b 00000000 		.long	.LASF558
 10676 479f 04       		.byte	0x4
 10677 47a0 FD       		.byte	0xfd
 10678 47a1 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 445


 10679 47a2 AA470000 		.long	0x47aa
 10680 47a6 B0470000 		.long	0x47b0
 10681 47aa 08       		.uleb128 0x8
 10682 47ab 459E0000 		.long	0x9e45
 10683 47af 00       		.byte	0
 10684 47b0 34       		.uleb128 0x34
 10685 47b1 00000000 		.long	.LASF558
 10686 47b5 04       		.byte	0x4
 10687 47b6 0801     		.value	0x108
 10688 47b8 01       		.byte	0x1
 10689 47b9 C1470000 		.long	0x47c1
 10690 47bd CC470000 		.long	0x47cc
 10691 47c1 08       		.uleb128 0x8
 10692 47c2 459E0000 		.long	0x9e45
 10693 47c6 13       		.uleb128 0x13
 10694 47c7 4B9E0000 		.long	0x9e4b
 10695 47cb 00       		.byte	0
 10696 47cc 0B       		.uleb128 0xb
 10697 47cd 8E470000 		.long	0x478e
 10698 47d1 34       		.uleb128 0x34
 10699 47d2 00000000 		.long	.LASF558
 10700 47d6 04       		.byte	0x4
 10701 47d7 1501     		.value	0x115
 10702 47d9 01       		.byte	0x1
 10703 47da E2470000 		.long	0x47e2
 10704 47de F2470000 		.long	0x47f2
 10705 47e2 08       		.uleb128 0x8
 10706 47e3 459E0000 		.long	0x9e45
 10707 47e7 13       		.uleb128 0x13
 10708 47e8 82470000 		.long	0x4782
 10709 47ec 13       		.uleb128 0x13
 10710 47ed 4B9E0000 		.long	0x9e4b
 10711 47f1 00       		.byte	0
 10712 47f2 33       		.uleb128 0x33
 10713 47f3 00000000 		.long	.LASF558
 10714 47f7 04       		.byte	0x4
 10715 47f8 2101     		.value	0x121
 10716 47fa 01       		.byte	0x1
 10717 47fb 03480000 		.long	0x4803
 10718 47ff 18480000 		.long	0x4818
 10719 4803 08       		.uleb128 0x8
 10720 4804 459E0000 		.long	0x9e45
 10721 4808 13       		.uleb128 0x13
 10722 4809 82470000 		.long	0x4782
 10723 480d 13       		.uleb128 0x13
 10724 480e 519E0000 		.long	0x9e51
 10725 4812 13       		.uleb128 0x13
 10726 4813 4B9E0000 		.long	0x9e4b
 10727 4817 00       		.byte	0
 10728 4818 0B       		.uleb128 0xb
 10729 4819 22470000 		.long	0x4722
 10730 481d 33       		.uleb128 0x33
 10731 481e 00000000 		.long	.LASF558
 10732 4822 04       		.byte	0x4
 10733 4823 3E01     		.value	0x13e
 10734 4825 01       		.byte	0x1
 10735 4826 2E480000 		.long	0x482e
GAS LISTING /tmp/ccKUqHDa.s 			page 446


 10736 482a 39480000 		.long	0x4839
 10737 482e 08       		.uleb128 0x8
 10738 482f 459E0000 		.long	0x9e45
 10739 4833 13       		.uleb128 0x13
 10740 4834 579E0000 		.long	0x9e57
 10741 4838 00       		.byte	0
 10742 4839 33       		.uleb128 0x33
 10743 483a 00000000 		.long	.LASF558
 10744 483e 04       		.byte	0x4
 10745 483f 4F01     		.value	0x14f
 10746 4841 01       		.byte	0x1
 10747 4842 4A480000 		.long	0x484a
 10748 4846 55480000 		.long	0x4855
 10749 484a 08       		.uleb128 0x8
 10750 484b 459E0000 		.long	0x9e45
 10751 484f 13       		.uleb128 0x13
 10752 4850 5D9E0000 		.long	0x9e5d
 10753 4854 00       		.byte	0
 10754 4855 33       		.uleb128 0x33
 10755 4856 00000000 		.long	.LASF558
 10756 485a 04       		.byte	0x4
 10757 485b 5301     		.value	0x153
 10758 485d 01       		.byte	0x1
 10759 485e 66480000 		.long	0x4866
 10760 4862 76480000 		.long	0x4876
 10761 4866 08       		.uleb128 0x8
 10762 4867 459E0000 		.long	0x9e45
 10763 486b 13       		.uleb128 0x13
 10764 486c 579E0000 		.long	0x9e57
 10765 4870 13       		.uleb128 0x13
 10766 4871 4B9E0000 		.long	0x9e4b
 10767 4875 00       		.byte	0
 10768 4876 33       		.uleb128 0x33
 10769 4877 00000000 		.long	.LASF558
 10770 487b 04       		.byte	0x4
 10771 487c 5C01     		.value	0x15c
 10772 487e 01       		.byte	0x1
 10773 487f 87480000 		.long	0x4887
 10774 4883 97480000 		.long	0x4897
 10775 4887 08       		.uleb128 0x8
 10776 4888 459E0000 		.long	0x9e45
 10777 488c 13       		.uleb128 0x13
 10778 488d 5D9E0000 		.long	0x9e5d
 10779 4891 13       		.uleb128 0x13
 10780 4892 4B9E0000 		.long	0x9e4b
 10781 4896 00       		.byte	0
 10782 4897 33       		.uleb128 0x33
 10783 4898 00000000 		.long	.LASF558
 10784 489c 04       		.byte	0x4
 10785 489d 7501     		.value	0x175
 10786 489f 01       		.byte	0x1
 10787 48a0 A8480000 		.long	0x48a8
 10788 48a4 B8480000 		.long	0x48b8
 10789 48a8 08       		.uleb128 0x8
 10790 48a9 459E0000 		.long	0x9e45
 10791 48ad 13       		.uleb128 0x13
 10792 48ae B6500000 		.long	0x50b6
GAS LISTING /tmp/ccKUqHDa.s 			page 447


 10793 48b2 13       		.uleb128 0x13
 10794 48b3 4B9E0000 		.long	0x9e4b
 10795 48b7 00       		.byte	0
 10796 48b8 33       		.uleb128 0x33
 10797 48b9 00000000 		.long	.LASF559
 10798 48bd 04       		.byte	0x4
 10799 48be A701     		.value	0x1a7
 10800 48c0 01       		.byte	0x1
 10801 48c1 C9480000 		.long	0x48c9
 10802 48c5 D4480000 		.long	0x48d4
 10803 48c9 08       		.uleb128 0x8
 10804 48ca 459E0000 		.long	0x9e45
 10805 48ce 08       		.uleb128 0x8
 10806 48cf E5710000 		.long	0x71e5
 10807 48d3 00       		.byte	0
 10808 48d4 16       		.uleb128 0x16
 10809 48d5 00000000 		.long	.LASF18
 10810 48d9 27       		.byte	0x27
 10811 48da A7       		.byte	0xa7
 10812 48db 00000000 		.long	.LASF667
 10813 48df 639E0000 		.long	0x9e63
 10814 48e3 01       		.byte	0x1
 10815 48e4 EC480000 		.long	0x48ec
 10816 48e8 F7480000 		.long	0x48f7
 10817 48ec 08       		.uleb128 0x8
 10818 48ed 459E0000 		.long	0x9e45
 10819 48f1 13       		.uleb128 0x13
 10820 48f2 579E0000 		.long	0x9e57
 10821 48f6 00       		.byte	0
 10822 48f7 35       		.uleb128 0x35
 10823 48f8 00000000 		.long	.LASF18
 10824 48fc 04       		.byte	0x4
 10825 48fd C001     		.value	0x1c0
 10826 48ff 00000000 		.long	.LASF668
 10827 4903 639E0000 		.long	0x9e63
 10828 4907 01       		.byte	0x1
 10829 4908 10490000 		.long	0x4910
 10830 490c 1B490000 		.long	0x491b
 10831 4910 08       		.uleb128 0x8
 10832 4911 459E0000 		.long	0x9e45
 10833 4915 13       		.uleb128 0x13
 10834 4916 5D9E0000 		.long	0x9e5d
 10835 491a 00       		.byte	0
 10836 491b 35       		.uleb128 0x35
 10837 491c 00000000 		.long	.LASF18
 10838 4920 04       		.byte	0x4
 10839 4921 D601     		.value	0x1d6
 10840 4923 00000000 		.long	.LASF669
 10841 4927 639E0000 		.long	0x9e63
 10842 492b 01       		.byte	0x1
 10843 492c 34490000 		.long	0x4934
 10844 4930 3F490000 		.long	0x493f
 10845 4934 08       		.uleb128 0x8
 10846 4935 459E0000 		.long	0x9e45
 10847 4939 13       		.uleb128 0x13
 10848 493a B6500000 		.long	0x50b6
 10849 493e 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 448


 10850 493f 37       		.uleb128 0x37
 10851 4940 00000000 		.long	.LASF48
 10852 4944 04       		.byte	0x4
 10853 4945 E801     		.value	0x1e8
 10854 4947 00000000 		.long	.LASF670
 10855 494b 01       		.byte	0x1
 10856 494c 54490000 		.long	0x4954
 10857 4950 64490000 		.long	0x4964
 10858 4954 08       		.uleb128 0x8
 10859 4955 459E0000 		.long	0x9e45
 10860 4959 13       		.uleb128 0x13
 10861 495a 82470000 		.long	0x4782
 10862 495e 13       		.uleb128 0x13
 10863 495f 519E0000 		.long	0x9e51
 10864 4963 00       		.byte	0
 10865 4964 37       		.uleb128 0x37
 10866 4965 00000000 		.long	.LASF48
 10867 4969 04       		.byte	0x4
 10868 496a 1502     		.value	0x215
 10869 496c 00000000 		.long	.LASF671
 10870 4970 01       		.byte	0x1
 10871 4971 79490000 		.long	0x4979
 10872 4975 84490000 		.long	0x4984
 10873 4979 08       		.uleb128 0x8
 10874 497a 459E0000 		.long	0x9e45
 10875 497e 13       		.uleb128 0x13
 10876 497f B6500000 		.long	0x50b6
 10877 4983 00       		.byte	0
 10878 4984 35       		.uleb128 0x35
 10879 4985 00000000 		.long	.LASF155
 10880 4989 04       		.byte	0x4
 10881 498a 2302     		.value	0x223
 10882 498c 00000000 		.long	.LASF672
 10883 4990 52470000 		.long	0x4752
 10884 4994 01       		.byte	0x1
 10885 4995 9D490000 		.long	0x499d
 10886 4999 A3490000 		.long	0x49a3
 10887 499d 08       		.uleb128 0x8
 10888 499e 459E0000 		.long	0x9e45
 10889 49a2 00       		.byte	0
 10890 49a3 35       		.uleb128 0x35
 10891 49a4 00000000 		.long	.LASF155
 10892 49a8 04       		.byte	0x4
 10893 49a9 2C02     		.value	0x22c
 10894 49ab 00000000 		.long	.LASF673
 10895 49af 5E470000 		.long	0x475e
 10896 49b3 01       		.byte	0x1
 10897 49b4 BC490000 		.long	0x49bc
 10898 49b8 C2490000 		.long	0x49c2
 10899 49bc 08       		.uleb128 0x8
 10900 49bd 699E0000 		.long	0x9e69
 10901 49c1 00       		.byte	0
 10902 49c2 36       		.uleb128 0x36
 10903 49c3 656E6400 		.string	"end"
 10904 49c7 04       		.byte	0x4
 10905 49c8 3502     		.value	0x235
 10906 49ca 00000000 		.long	.LASF674
GAS LISTING /tmp/ccKUqHDa.s 			page 449


 10907 49ce 52470000 		.long	0x4752
 10908 49d2 01       		.byte	0x1
 10909 49d3 DB490000 		.long	0x49db
 10910 49d7 E1490000 		.long	0x49e1
 10911 49db 08       		.uleb128 0x8
 10912 49dc 459E0000 		.long	0x9e45
 10913 49e0 00       		.byte	0
 10914 49e1 36       		.uleb128 0x36
 10915 49e2 656E6400 		.string	"end"
 10916 49e6 04       		.byte	0x4
 10917 49e7 3E02     		.value	0x23e
 10918 49e9 00000000 		.long	.LASF675
 10919 49ed 5E470000 		.long	0x475e
 10920 49f1 01       		.byte	0x1
 10921 49f2 FA490000 		.long	0x49fa
 10922 49f6 004A0000 		.long	0x4a00
 10923 49fa 08       		.uleb128 0x8
 10924 49fb 699E0000 		.long	0x9e69
 10925 49ff 00       		.byte	0
 10926 4a00 35       		.uleb128 0x35
 10927 4a01 00000000 		.long	.LASF160
 10928 4a05 04       		.byte	0x4
 10929 4a06 4702     		.value	0x247
 10930 4a08 00000000 		.long	.LASF676
 10931 4a0c 76470000 		.long	0x4776
 10932 4a10 01       		.byte	0x1
 10933 4a11 194A0000 		.long	0x4a19
 10934 4a15 1F4A0000 		.long	0x4a1f
 10935 4a19 08       		.uleb128 0x8
 10936 4a1a 459E0000 		.long	0x9e45
 10937 4a1e 00       		.byte	0
 10938 4a1f 35       		.uleb128 0x35
 10939 4a20 00000000 		.long	.LASF160
 10940 4a24 04       		.byte	0x4
 10941 4a25 5002     		.value	0x250
 10942 4a27 00000000 		.long	.LASF677
 10943 4a2b 6A470000 		.long	0x476a
 10944 4a2f 01       		.byte	0x1
 10945 4a30 384A0000 		.long	0x4a38
 10946 4a34 3E4A0000 		.long	0x4a3e
 10947 4a38 08       		.uleb128 0x8
 10948 4a39 699E0000 		.long	0x9e69
 10949 4a3d 00       		.byte	0
 10950 4a3e 35       		.uleb128 0x35
 10951 4a3f 00000000 		.long	.LASF163
 10952 4a43 04       		.byte	0x4
 10953 4a44 5902     		.value	0x259
 10954 4a46 00000000 		.long	.LASF678
 10955 4a4a 76470000 		.long	0x4776
 10956 4a4e 01       		.byte	0x1
 10957 4a4f 574A0000 		.long	0x4a57
 10958 4a53 5D4A0000 		.long	0x4a5d
 10959 4a57 08       		.uleb128 0x8
 10960 4a58 459E0000 		.long	0x9e45
 10961 4a5c 00       		.byte	0
 10962 4a5d 35       		.uleb128 0x35
 10963 4a5e 00000000 		.long	.LASF163
GAS LISTING /tmp/ccKUqHDa.s 			page 450


 10964 4a62 04       		.byte	0x4
 10965 4a63 6202     		.value	0x262
 10966 4a65 00000000 		.long	.LASF679
 10967 4a69 6A470000 		.long	0x476a
 10968 4a6d 01       		.byte	0x1
 10969 4a6e 764A0000 		.long	0x4a76
 10970 4a72 7C4A0000 		.long	0x4a7c
 10971 4a76 08       		.uleb128 0x8
 10972 4a77 699E0000 		.long	0x9e69
 10973 4a7b 00       		.byte	0
 10974 4a7c 35       		.uleb128 0x35
 10975 4a7d 00000000 		.long	.LASF166
 10976 4a81 04       		.byte	0x4
 10977 4a82 6C02     		.value	0x26c
 10978 4a84 00000000 		.long	.LASF680
 10979 4a88 5E470000 		.long	0x475e
 10980 4a8c 01       		.byte	0x1
 10981 4a8d 954A0000 		.long	0x4a95
 10982 4a91 9B4A0000 		.long	0x4a9b
 10983 4a95 08       		.uleb128 0x8
 10984 4a96 699E0000 		.long	0x9e69
 10985 4a9a 00       		.byte	0
 10986 4a9b 35       		.uleb128 0x35
 10987 4a9c 00000000 		.long	.LASF168
 10988 4aa0 04       		.byte	0x4
 10989 4aa1 7502     		.value	0x275
 10990 4aa3 00000000 		.long	.LASF681
 10991 4aa7 5E470000 		.long	0x475e
 10992 4aab 01       		.byte	0x1
 10993 4aac B44A0000 		.long	0x4ab4
 10994 4ab0 BA4A0000 		.long	0x4aba
 10995 4ab4 08       		.uleb128 0x8
 10996 4ab5 699E0000 		.long	0x9e69
 10997 4ab9 00       		.byte	0
 10998 4aba 35       		.uleb128 0x35
 10999 4abb 00000000 		.long	.LASF170
 11000 4abf 04       		.byte	0x4
 11001 4ac0 7E02     		.value	0x27e
 11002 4ac2 00000000 		.long	.LASF682
 11003 4ac6 6A470000 		.long	0x476a
 11004 4aca 01       		.byte	0x1
 11005 4acb D34A0000 		.long	0x4ad3
 11006 4acf D94A0000 		.long	0x4ad9
 11007 4ad3 08       		.uleb128 0x8
 11008 4ad4 699E0000 		.long	0x9e69
 11009 4ad8 00       		.byte	0
 11010 4ad9 35       		.uleb128 0x35
 11011 4ada 00000000 		.long	.LASF172
 11012 4ade 04       		.byte	0x4
 11013 4adf 8702     		.value	0x287
 11014 4ae1 00000000 		.long	.LASF683
 11015 4ae5 6A470000 		.long	0x476a
 11016 4ae9 01       		.byte	0x1
 11017 4aea F24A0000 		.long	0x4af2
 11018 4aee F84A0000 		.long	0x4af8
 11019 4af2 08       		.uleb128 0x8
 11020 4af3 699E0000 		.long	0x9e69
GAS LISTING /tmp/ccKUqHDa.s 			page 451


 11021 4af7 00       		.byte	0
 11022 4af8 35       		.uleb128 0x35
 11023 4af9 00000000 		.long	.LASF174
 11024 4afd 04       		.byte	0x4
 11025 4afe 8E02     		.value	0x28e
 11026 4b00 00000000 		.long	.LASF684
 11027 4b04 82470000 		.long	0x4782
 11028 4b08 01       		.byte	0x1
 11029 4b09 114B0000 		.long	0x4b11
 11030 4b0d 174B0000 		.long	0x4b17
 11031 4b11 08       		.uleb128 0x8
 11032 4b12 699E0000 		.long	0x9e69
 11033 4b16 00       		.byte	0
 11034 4b17 35       		.uleb128 0x35
 11035 4b18 00000000 		.long	.LASF177
 11036 4b1c 04       		.byte	0x4
 11037 4b1d 9302     		.value	0x293
 11038 4b1f 00000000 		.long	.LASF685
 11039 4b23 82470000 		.long	0x4782
 11040 4b27 01       		.byte	0x1
 11041 4b28 304B0000 		.long	0x4b30
 11042 4b2c 364B0000 		.long	0x4b36
 11043 4b30 08       		.uleb128 0x8
 11044 4b31 699E0000 		.long	0x9e69
 11045 4b35 00       		.byte	0
 11046 4b36 37       		.uleb128 0x37
 11047 4b37 00000000 		.long	.LASF179
 11048 4b3b 04       		.byte	0x4
 11049 4b3c A102     		.value	0x2a1
 11050 4b3e 00000000 		.long	.LASF686
 11051 4b42 01       		.byte	0x1
 11052 4b43 4B4B0000 		.long	0x4b4b
 11053 4b47 564B0000 		.long	0x4b56
 11054 4b4b 08       		.uleb128 0x8
 11055 4b4c 459E0000 		.long	0x9e45
 11056 4b50 13       		.uleb128 0x13
 11057 4b51 82470000 		.long	0x4782
 11058 4b55 00       		.byte	0
 11059 4b56 37       		.uleb128 0x37
 11060 4b57 00000000 		.long	.LASF179
 11061 4b5b 04       		.byte	0x4
 11062 4b5c B502     		.value	0x2b5
 11063 4b5e 00000000 		.long	.LASF687
 11064 4b62 01       		.byte	0x1
 11065 4b63 6B4B0000 		.long	0x4b6b
 11066 4b67 7B4B0000 		.long	0x4b7b
 11067 4b6b 08       		.uleb128 0x8
 11068 4b6c 459E0000 		.long	0x9e45
 11069 4b70 13       		.uleb128 0x13
 11070 4b71 82470000 		.long	0x4782
 11071 4b75 13       		.uleb128 0x13
 11072 4b76 519E0000 		.long	0x9e51
 11073 4b7a 00       		.byte	0
 11074 4b7b 37       		.uleb128 0x37
 11075 4b7c 00000000 		.long	.LASF182
 11076 4b80 04       		.byte	0x4
 11077 4b81 D502     		.value	0x2d5
GAS LISTING /tmp/ccKUqHDa.s 			page 452


 11078 4b83 00000000 		.long	.LASF688
 11079 4b87 01       		.byte	0x1
 11080 4b88 904B0000 		.long	0x4b90
 11081 4b8c 964B0000 		.long	0x4b96
 11082 4b90 08       		.uleb128 0x8
 11083 4b91 459E0000 		.long	0x9e45
 11084 4b95 00       		.byte	0
 11085 4b96 35       		.uleb128 0x35
 11086 4b97 00000000 		.long	.LASF184
 11087 4b9b 04       		.byte	0x4
 11088 4b9c DE02     		.value	0x2de
 11089 4b9e 00000000 		.long	.LASF689
 11090 4ba2 82470000 		.long	0x4782
 11091 4ba6 01       		.byte	0x1
 11092 4ba7 AF4B0000 		.long	0x4baf
 11093 4bab B54B0000 		.long	0x4bb5
 11094 4baf 08       		.uleb128 0x8
 11095 4bb0 699E0000 		.long	0x9e69
 11096 4bb4 00       		.byte	0
 11097 4bb5 35       		.uleb128 0x35
 11098 4bb6 00000000 		.long	.LASF190
 11099 4bba 04       		.byte	0x4
 11100 4bbb E702     		.value	0x2e7
 11101 4bbd 00000000 		.long	.LASF690
 11102 4bc1 A3710000 		.long	0x71a3
 11103 4bc5 01       		.byte	0x1
 11104 4bc6 CE4B0000 		.long	0x4bce
 11105 4bca D44B0000 		.long	0x4bd4
 11106 4bce 08       		.uleb128 0x8
 11107 4bcf 699E0000 		.long	0x9e69
 11108 4bd3 00       		.byte	0
 11109 4bd4 17       		.uleb128 0x17
 11110 4bd5 00000000 		.long	.LASF186
 11111 4bd9 27       		.byte	0x27
 11112 4bda 41       		.byte	0x41
 11113 4bdb 00000000 		.long	.LASF691
 11114 4bdf 01       		.byte	0x1
 11115 4be0 E84B0000 		.long	0x4be8
 11116 4be4 F34B0000 		.long	0x4bf3
 11117 4be8 08       		.uleb128 0x8
 11118 4be9 459E0000 		.long	0x9e45
 11119 4bed 13       		.uleb128 0x13
 11120 4bee 82470000 		.long	0x4782
 11121 4bf2 00       		.byte	0
 11122 4bf3 35       		.uleb128 0x35
 11123 4bf4 00000000 		.long	.LASF192
 11124 4bf8 04       		.byte	0x4
 11125 4bf9 0B03     		.value	0x30b
 11126 4bfb 00000000 		.long	.LASF692
 11127 4bff 3A470000 		.long	0x473a
 11128 4c03 01       		.byte	0x1
 11129 4c04 0C4C0000 		.long	0x4c0c
 11130 4c08 174C0000 		.long	0x4c17
 11131 4c0c 08       		.uleb128 0x8
 11132 4c0d 459E0000 		.long	0x9e45
 11133 4c11 13       		.uleb128 0x13
 11134 4c12 82470000 		.long	0x4782
GAS LISTING /tmp/ccKUqHDa.s 			page 453


 11135 4c16 00       		.byte	0
 11136 4c17 35       		.uleb128 0x35
 11137 4c18 00000000 		.long	.LASF192
 11138 4c1c 04       		.byte	0x4
 11139 4c1d 1A03     		.value	0x31a
 11140 4c1f 00000000 		.long	.LASF693
 11141 4c23 46470000 		.long	0x4746
 11142 4c27 01       		.byte	0x1
 11143 4c28 304C0000 		.long	0x4c30
 11144 4c2c 3B4C0000 		.long	0x4c3b
 11145 4c30 08       		.uleb128 0x8
 11146 4c31 699E0000 		.long	0x9e69
 11147 4c35 13       		.uleb128 0x13
 11148 4c36 82470000 		.long	0x4782
 11149 4c3a 00       		.byte	0
 11150 4c3b 37       		.uleb128 0x37
 11151 4c3c 00000000 		.long	.LASF587
 11152 4c40 04       		.byte	0x4
 11153 4c41 2003     		.value	0x320
 11154 4c43 00000000 		.long	.LASF694
 11155 4c47 02       		.byte	0x2
 11156 4c48 504C0000 		.long	0x4c50
 11157 4c4c 5B4C0000 		.long	0x4c5b
 11158 4c50 08       		.uleb128 0x8
 11159 4c51 699E0000 		.long	0x9e69
 11160 4c55 13       		.uleb128 0x13
 11161 4c56 82470000 		.long	0x4782
 11162 4c5a 00       		.byte	0
 11163 4c5b 36       		.uleb128 0x36
 11164 4c5c 617400   		.string	"at"
 11165 4c5f 04       		.byte	0x4
 11166 4c60 3603     		.value	0x336
 11167 4c62 00000000 		.long	.LASF695
 11168 4c66 3A470000 		.long	0x473a
 11169 4c6a 01       		.byte	0x1
 11170 4c6b 734C0000 		.long	0x4c73
 11171 4c6f 7E4C0000 		.long	0x4c7e
 11172 4c73 08       		.uleb128 0x8
 11173 4c74 459E0000 		.long	0x9e45
 11174 4c78 13       		.uleb128 0x13
 11175 4c79 82470000 		.long	0x4782
 11176 4c7d 00       		.byte	0
 11177 4c7e 36       		.uleb128 0x36
 11178 4c7f 617400   		.string	"at"
 11179 4c82 04       		.byte	0x4
 11180 4c83 4803     		.value	0x348
 11181 4c85 00000000 		.long	.LASF696
 11182 4c89 46470000 		.long	0x4746
 11183 4c8d 01       		.byte	0x1
 11184 4c8e 964C0000 		.long	0x4c96
 11185 4c92 A14C0000 		.long	0x4ca1
 11186 4c96 08       		.uleb128 0x8
 11187 4c97 699E0000 		.long	0x9e69
 11188 4c9b 13       		.uleb128 0x13
 11189 4c9c 82470000 		.long	0x4782
 11190 4ca0 00       		.byte	0
 11191 4ca1 35       		.uleb128 0x35
GAS LISTING /tmp/ccKUqHDa.s 			page 454


 11192 4ca2 00000000 		.long	.LASF197
 11193 4ca6 04       		.byte	0x4
 11194 4ca7 5303     		.value	0x353
 11195 4ca9 00000000 		.long	.LASF697
 11196 4cad 3A470000 		.long	0x473a
 11197 4cb1 01       		.byte	0x1
 11198 4cb2 BA4C0000 		.long	0x4cba
 11199 4cb6 C04C0000 		.long	0x4cc0
 11200 4cba 08       		.uleb128 0x8
 11201 4cbb 459E0000 		.long	0x9e45
 11202 4cbf 00       		.byte	0
 11203 4cc0 35       		.uleb128 0x35
 11204 4cc1 00000000 		.long	.LASF197
 11205 4cc5 04       		.byte	0x4
 11206 4cc6 5B03     		.value	0x35b
 11207 4cc8 00000000 		.long	.LASF698
 11208 4ccc 46470000 		.long	0x4746
 11209 4cd0 01       		.byte	0x1
 11210 4cd1 D94C0000 		.long	0x4cd9
 11211 4cd5 DF4C0000 		.long	0x4cdf
 11212 4cd9 08       		.uleb128 0x8
 11213 4cda 699E0000 		.long	0x9e69
 11214 4cde 00       		.byte	0
 11215 4cdf 35       		.uleb128 0x35
 11216 4ce0 00000000 		.long	.LASF200
 11217 4ce4 04       		.byte	0x4
 11218 4ce5 6303     		.value	0x363
 11219 4ce7 00000000 		.long	.LASF699
 11220 4ceb 3A470000 		.long	0x473a
 11221 4cef 01       		.byte	0x1
 11222 4cf0 F84C0000 		.long	0x4cf8
 11223 4cf4 FE4C0000 		.long	0x4cfe
 11224 4cf8 08       		.uleb128 0x8
 11225 4cf9 459E0000 		.long	0x9e45
 11226 4cfd 00       		.byte	0
 11227 4cfe 35       		.uleb128 0x35
 11228 4cff 00000000 		.long	.LASF200
 11229 4d03 04       		.byte	0x4
 11230 4d04 6B03     		.value	0x36b
 11231 4d06 00000000 		.long	.LASF700
 11232 4d0a 46470000 		.long	0x4746
 11233 4d0e 01       		.byte	0x1
 11234 4d0f 174D0000 		.long	0x4d17
 11235 4d13 1D4D0000 		.long	0x4d1d
 11236 4d17 08       		.uleb128 0x8
 11237 4d18 699E0000 		.long	0x9e69
 11238 4d1c 00       		.byte	0
 11239 4d1d 35       		.uleb128 0x35
 11240 4d1e 00000000 		.long	.LASF266
 11241 4d22 04       		.byte	0x4
 11242 4d23 7A03     		.value	0x37a
 11243 4d25 00000000 		.long	.LASF701
 11244 4d29 5E9B0000 		.long	0x9b5e
 11245 4d2d 01       		.byte	0x1
 11246 4d2e 364D0000 		.long	0x4d36
 11247 4d32 3C4D0000 		.long	0x4d3c
 11248 4d36 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 455


 11249 4d37 459E0000 		.long	0x9e45
 11250 4d3b 00       		.byte	0
 11251 4d3c 35       		.uleb128 0x35
 11252 4d3d 00000000 		.long	.LASF266
 11253 4d41 04       		.byte	0x4
 11254 4d42 8203     		.value	0x382
 11255 4d44 00000000 		.long	.LASF702
 11256 4d48 6A9B0000 		.long	0x9b6a
 11257 4d4c 01       		.byte	0x1
 11258 4d4d 554D0000 		.long	0x4d55
 11259 4d51 5B4D0000 		.long	0x4d5b
 11260 4d55 08       		.uleb128 0x8
 11261 4d56 699E0000 		.long	0x9e69
 11262 4d5a 00       		.byte	0
 11263 4d5b 37       		.uleb128 0x37
 11264 4d5c 00000000 		.long	.LASF215
 11265 4d60 04       		.byte	0x4
 11266 4d61 9103     		.value	0x391
 11267 4d63 00000000 		.long	.LASF703
 11268 4d67 01       		.byte	0x1
 11269 4d68 704D0000 		.long	0x4d70
 11270 4d6c 7B4D0000 		.long	0x4d7b
 11271 4d70 08       		.uleb128 0x8
 11272 4d71 459E0000 		.long	0x9e45
 11273 4d75 13       		.uleb128 0x13
 11274 4d76 519E0000 		.long	0x9e51
 11275 4d7a 00       		.byte	0
 11276 4d7b 37       		.uleb128 0x37
 11277 4d7c 00000000 		.long	.LASF215
 11278 4d80 04       		.byte	0x4
 11279 4d81 A303     		.value	0x3a3
 11280 4d83 00000000 		.long	.LASF704
 11281 4d87 01       		.byte	0x1
 11282 4d88 904D0000 		.long	0x4d90
 11283 4d8c 9B4D0000 		.long	0x4d9b
 11284 4d90 08       		.uleb128 0x8
 11285 4d91 459E0000 		.long	0x9e45
 11286 4d95 13       		.uleb128 0x13
 11287 4d96 6F9E0000 		.long	0x9e6f
 11288 4d9a 00       		.byte	0
 11289 4d9b 37       		.uleb128 0x37
 11290 4d9c 00000000 		.long	.LASF237
 11291 4da0 04       		.byte	0x4
 11292 4da1 B503     		.value	0x3b5
 11293 4da3 00000000 		.long	.LASF705
 11294 4da7 01       		.byte	0x1
 11295 4da8 B04D0000 		.long	0x4db0
 11296 4dac B64D0000 		.long	0x4db6
 11297 4db0 08       		.uleb128 0x8
 11298 4db1 459E0000 		.long	0x9e45
 11299 4db5 00       		.byte	0
 11300 4db6 16       		.uleb128 0x16
 11301 4db7 00000000 		.long	.LASF224
 11302 4dbb 27       		.byte	0x27
 11303 4dbc 6B       		.byte	0x6b
 11304 4dbd 00000000 		.long	.LASF706
 11305 4dc1 52470000 		.long	0x4752
GAS LISTING /tmp/ccKUqHDa.s 			page 456


 11306 4dc5 01       		.byte	0x1
 11307 4dc6 CE4D0000 		.long	0x4dce
 11308 4dca DE4D0000 		.long	0x4dde
 11309 4dce 08       		.uleb128 0x8
 11310 4dcf 459E0000 		.long	0x9e45
 11311 4dd3 13       		.uleb128 0x13
 11312 4dd4 5E470000 		.long	0x475e
 11313 4dd8 13       		.uleb128 0x13
 11314 4dd9 519E0000 		.long	0x9e51
 11315 4ddd 00       		.byte	0
 11316 4dde 35       		.uleb128 0x35
 11317 4ddf 00000000 		.long	.LASF224
 11318 4de3 04       		.byte	0x4
 11319 4de4 F603     		.value	0x3f6
 11320 4de6 00000000 		.long	.LASF707
 11321 4dea 52470000 		.long	0x4752
 11322 4dee 01       		.byte	0x1
 11323 4def F74D0000 		.long	0x4df7
 11324 4df3 074E0000 		.long	0x4e07
 11325 4df7 08       		.uleb128 0x8
 11326 4df8 459E0000 		.long	0x9e45
 11327 4dfc 13       		.uleb128 0x13
 11328 4dfd 5E470000 		.long	0x475e
 11329 4e01 13       		.uleb128 0x13
 11330 4e02 6F9E0000 		.long	0x9e6f
 11331 4e06 00       		.byte	0
 11332 4e07 35       		.uleb128 0x35
 11333 4e08 00000000 		.long	.LASF224
 11334 4e0c 04       		.byte	0x4
 11335 4e0d 0704     		.value	0x407
 11336 4e0f 00000000 		.long	.LASF708
 11337 4e13 52470000 		.long	0x4752
 11338 4e17 01       		.byte	0x1
 11339 4e18 204E0000 		.long	0x4e20
 11340 4e1c 304E0000 		.long	0x4e30
 11341 4e20 08       		.uleb128 0x8
 11342 4e21 459E0000 		.long	0x9e45
 11343 4e25 13       		.uleb128 0x13
 11344 4e26 5E470000 		.long	0x475e
 11345 4e2a 13       		.uleb128 0x13
 11346 4e2b B6500000 		.long	0x50b6
 11347 4e2f 00       		.byte	0
 11348 4e30 35       		.uleb128 0x35
 11349 4e31 00000000 		.long	.LASF224
 11350 4e35 04       		.byte	0x4
 11351 4e36 1B04     		.value	0x41b
 11352 4e38 00000000 		.long	.LASF709
 11353 4e3c 52470000 		.long	0x4752
 11354 4e40 01       		.byte	0x1
 11355 4e41 494E0000 		.long	0x4e49
 11356 4e45 5E4E0000 		.long	0x4e5e
 11357 4e49 08       		.uleb128 0x8
 11358 4e4a 459E0000 		.long	0x9e45
 11359 4e4e 13       		.uleb128 0x13
 11360 4e4f 5E470000 		.long	0x475e
 11361 4e53 13       		.uleb128 0x13
 11362 4e54 82470000 		.long	0x4782
GAS LISTING /tmp/ccKUqHDa.s 			page 457


 11363 4e58 13       		.uleb128 0x13
 11364 4e59 519E0000 		.long	0x9e51
 11365 4e5d 00       		.byte	0
 11366 4e5e 35       		.uleb128 0x35
 11367 4e5f 00000000 		.long	.LASF233
 11368 4e63 04       		.byte	0x4
 11369 4e64 7A04     		.value	0x47a
 11370 4e66 00000000 		.long	.LASF710
 11371 4e6a 52470000 		.long	0x4752
 11372 4e6e 01       		.byte	0x1
 11373 4e6f 774E0000 		.long	0x4e77
 11374 4e73 824E0000 		.long	0x4e82
 11375 4e77 08       		.uleb128 0x8
 11376 4e78 459E0000 		.long	0x9e45
 11377 4e7c 13       		.uleb128 0x13
 11378 4e7d 5E470000 		.long	0x475e
 11379 4e81 00       		.byte	0
 11380 4e82 35       		.uleb128 0x35
 11381 4e83 00000000 		.long	.LASF233
 11382 4e87 04       		.byte	0x4
 11383 4e88 9504     		.value	0x495
 11384 4e8a 00000000 		.long	.LASF711
 11385 4e8e 52470000 		.long	0x4752
 11386 4e92 01       		.byte	0x1
 11387 4e93 9B4E0000 		.long	0x4e9b
 11388 4e97 AB4E0000 		.long	0x4eab
 11389 4e9b 08       		.uleb128 0x8
 11390 4e9c 459E0000 		.long	0x9e45
 11391 4ea0 13       		.uleb128 0x13
 11392 4ea1 5E470000 		.long	0x475e
 11393 4ea5 13       		.uleb128 0x13
 11394 4ea6 5E470000 		.long	0x475e
 11395 4eaa 00       		.byte	0
 11396 4eab 37       		.uleb128 0x37
 11397 4eac 00000000 		.long	.LASF22
 11398 4eb0 04       		.byte	0x4
 11399 4eb1 AA04     		.value	0x4aa
 11400 4eb3 00000000 		.long	.LASF712
 11401 4eb7 01       		.byte	0x1
 11402 4eb8 C04E0000 		.long	0x4ec0
 11403 4ebc CB4E0000 		.long	0x4ecb
 11404 4ec0 08       		.uleb128 0x8
 11405 4ec1 459E0000 		.long	0x9e45
 11406 4ec5 13       		.uleb128 0x13
 11407 4ec6 639E0000 		.long	0x9e63
 11408 4eca 00       		.byte	0
 11409 4ecb 37       		.uleb128 0x37
 11410 4ecc 00000000 		.long	.LASF188
 11411 4ed0 04       		.byte	0x4
 11412 4ed1 BB04     		.value	0x4bb
 11413 4ed3 00000000 		.long	.LASF713
 11414 4ed7 01       		.byte	0x1
 11415 4ed8 E04E0000 		.long	0x4ee0
 11416 4edc E64E0000 		.long	0x4ee6
 11417 4ee0 08       		.uleb128 0x8
 11418 4ee1 459E0000 		.long	0x9e45
 11419 4ee5 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 458


 11420 4ee6 37       		.uleb128 0x37
 11421 4ee7 00000000 		.long	.LASF608
 11422 4eeb 04       		.byte	0x4
 11423 4eec 1205     		.value	0x512
 11424 4eee 00000000 		.long	.LASF714
 11425 4ef2 02       		.byte	0x2
 11426 4ef3 FB4E0000 		.long	0x4efb
 11427 4ef7 0B4F0000 		.long	0x4f0b
 11428 4efb 08       		.uleb128 0x8
 11429 4efc 459E0000 		.long	0x9e45
 11430 4f00 13       		.uleb128 0x13
 11431 4f01 82470000 		.long	0x4782
 11432 4f05 13       		.uleb128 0x13
 11433 4f06 519E0000 		.long	0x9e51
 11434 4f0a 00       		.byte	0
 11435 4f0b 37       		.uleb128 0x37
 11436 4f0c 00000000 		.long	.LASF610
 11437 4f10 04       		.byte	0x4
 11438 4f11 1C05     		.value	0x51c
 11439 4f13 00000000 		.long	.LASF715
 11440 4f17 02       		.byte	0x2
 11441 4f18 204F0000 		.long	0x4f20
 11442 4f1c 2B4F0000 		.long	0x4f2b
 11443 4f20 08       		.uleb128 0x8
 11444 4f21 459E0000 		.long	0x9e45
 11445 4f25 13       		.uleb128 0x13
 11446 4f26 82470000 		.long	0x4782
 11447 4f2a 00       		.byte	0
 11448 4f2b 17       		.uleb128 0x17
 11449 4f2c 00000000 		.long	.LASF612
 11450 4f30 27       		.byte	0x27
 11451 4f31 E1       		.byte	0xe1
 11452 4f32 00000000 		.long	.LASF716
 11453 4f36 02       		.byte	0x2
 11454 4f37 3F4F0000 		.long	0x4f3f
 11455 4f3b 4F4F0000 		.long	0x4f4f
 11456 4f3f 08       		.uleb128 0x8
 11457 4f40 459E0000 		.long	0x9e45
 11458 4f44 13       		.uleb128 0x13
 11459 4f45 DB070000 		.long	0x7db
 11460 4f49 13       		.uleb128 0x13
 11461 4f4a 519E0000 		.long	0x9e51
 11462 4f4e 00       		.byte	0
 11463 4f4f 37       		.uleb128 0x37
 11464 4f50 00000000 		.long	.LASF614
 11465 4f54 27       		.byte	0x27
 11466 4f55 C101     		.value	0x1c1
 11467 4f57 00000000 		.long	.LASF717
 11468 4f5b 02       		.byte	0x2
 11469 4f5c 644F0000 		.long	0x4f64
 11470 4f60 794F0000 		.long	0x4f79
 11471 4f64 08       		.uleb128 0x8
 11472 4f65 459E0000 		.long	0x9e45
 11473 4f69 13       		.uleb128 0x13
 11474 4f6a 52470000 		.long	0x4752
 11475 4f6e 13       		.uleb128 0x13
 11476 4f6f 82470000 		.long	0x4782
GAS LISTING /tmp/ccKUqHDa.s 			page 459


 11477 4f73 13       		.uleb128 0x13
 11478 4f74 519E0000 		.long	0x9e51
 11479 4f78 00       		.byte	0
 11480 4f79 37       		.uleb128 0x37
 11481 4f7a 00000000 		.long	.LASF616
 11482 4f7e 27       		.byte	0x27
 11483 4f7f 1C02     		.value	0x21c
 11484 4f81 00000000 		.long	.LASF718
 11485 4f85 02       		.byte	0x2
 11486 4f86 8E4F0000 		.long	0x4f8e
 11487 4f8a 994F0000 		.long	0x4f99
 11488 4f8e 08       		.uleb128 0x8
 11489 4f8f 459E0000 		.long	0x9e45
 11490 4f93 13       		.uleb128 0x13
 11491 4f94 82470000 		.long	0x4782
 11492 4f98 00       		.byte	0
 11493 4f99 35       		.uleb128 0x35
 11494 4f9a 00000000 		.long	.LASF618
 11495 4f9e 27       		.byte	0x27
 11496 4f9f 4E02     		.value	0x24e
 11497 4fa1 00000000 		.long	.LASF719
 11498 4fa5 A3710000 		.long	0x71a3
 11499 4fa9 02       		.byte	0x2
 11500 4faa B24F0000 		.long	0x4fb2
 11501 4fae B84F0000 		.long	0x4fb8
 11502 4fb2 08       		.uleb128 0x8
 11503 4fb3 459E0000 		.long	0x9e45
 11504 4fb7 00       		.byte	0
 11505 4fb8 35       		.uleb128 0x35
 11506 4fb9 00000000 		.long	.LASF620
 11507 4fbd 04       		.byte	0x4
 11508 4fbe 8E05     		.value	0x58e
 11509 4fc0 00000000 		.long	.LASF720
 11510 4fc4 82470000 		.long	0x4782
 11511 4fc8 02       		.byte	0x2
 11512 4fc9 D14F0000 		.long	0x4fd1
 11513 4fcd E14F0000 		.long	0x4fe1
 11514 4fd1 08       		.uleb128 0x8
 11515 4fd2 699E0000 		.long	0x9e69
 11516 4fd6 13       		.uleb128 0x13
 11517 4fd7 82470000 		.long	0x4782
 11518 4fdb 13       		.uleb128 0x13
 11519 4fdc CD840000 		.long	0x84cd
 11520 4fe0 00       		.byte	0
 11521 4fe1 37       		.uleb128 0x37
 11522 4fe2 00000000 		.long	.LASF622
 11523 4fe6 04       		.byte	0x4
 11524 4fe7 9C05     		.value	0x59c
 11525 4fe9 00000000 		.long	.LASF721
 11526 4fed 02       		.byte	0x2
 11527 4fee F64F0000 		.long	0x4ff6
 11528 4ff2 01500000 		.long	0x5001
 11529 4ff6 08       		.uleb128 0x8
 11530 4ff7 459E0000 		.long	0x9e45
 11531 4ffb 13       		.uleb128 0x13
 11532 4ffc 2E470000 		.long	0x472e
 11533 5000 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 460


 11534 5001 16       		.uleb128 0x16
 11535 5002 00000000 		.long	.LASF624
 11536 5006 27       		.byte	0x27
 11537 5007 8D       		.byte	0x8d
 11538 5008 00000000 		.long	.LASF722
 11539 500c 52470000 		.long	0x4752
 11540 5010 02       		.byte	0x2
 11541 5011 19500000 		.long	0x5019
 11542 5015 24500000 		.long	0x5024
 11543 5019 08       		.uleb128 0x8
 11544 501a 459E0000 		.long	0x9e45
 11545 501e 13       		.uleb128 0x13
 11546 501f 52470000 		.long	0x4752
 11547 5023 00       		.byte	0
 11548 5024 16       		.uleb128 0x16
 11549 5025 00000000 		.long	.LASF624
 11550 5029 27       		.byte	0x27
 11551 502a 99       		.byte	0x99
 11552 502b 00000000 		.long	.LASF723
 11553 502f 52470000 		.long	0x4752
 11554 5033 02       		.byte	0x2
 11555 5034 3C500000 		.long	0x503c
 11556 5038 4C500000 		.long	0x504c
 11557 503c 08       		.uleb128 0x8
 11558 503d 459E0000 		.long	0x9e45
 11559 5041 13       		.uleb128 0x13
 11560 5042 52470000 		.long	0x4752
 11561 5046 13       		.uleb128 0x13
 11562 5047 52470000 		.long	0x4752
 11563 504b 00       		.byte	0
 11564 504c 2E       		.uleb128 0x2e
 11565 504d 00000000 		.long	.LASF627
 11566 5051 04       		.byte	0x4
 11567 5052 AE05     		.value	0x5ae
 11568 5054 00000000 		.long	.LASF724
 11569 5058 60500000 		.long	0x5060
 11570 505c 70500000 		.long	0x5070
 11571 5060 08       		.uleb128 0x8
 11572 5061 459E0000 		.long	0x9e45
 11573 5065 13       		.uleb128 0x13
 11574 5066 5D9E0000 		.long	0x9e5d
 11575 506a 13       		.uleb128 0x13
 11576 506b B5080000 		.long	0x8b5
 11577 506f 00       		.byte	0
 11578 5070 2E       		.uleb128 0x2e
 11579 5071 00000000 		.long	.LASF627
 11580 5075 04       		.byte	0x4
 11581 5076 B905     		.value	0x5b9
 11582 5078 00000000 		.long	.LASF725
 11583 507c 84500000 		.long	0x5084
 11584 5080 94500000 		.long	0x5094
 11585 5084 08       		.uleb128 0x8
 11586 5085 459E0000 		.long	0x9e45
 11587 5089 13       		.uleb128 0x13
 11588 508a 5D9E0000 		.long	0x9e5d
 11589 508e 13       		.uleb128 0x13
 11590 508f 942B0000 		.long	0x2b94
GAS LISTING /tmp/ccKUqHDa.s 			page 461


 11591 5093 00       		.byte	0
 11592 5094 09       		.uleb128 0x9
 11593 5095 5F547000 		.string	"_Tp"
 11594 5099 BB710000 		.long	0x71bb
 11595 509d 38       		.uleb128 0x38
 11596 509e 00000000 		.long	.LASF309
 11597 50a2 29410000 		.long	0x4129
 11598 50a6 00       		.byte	0
 11599 50a7 1A       		.uleb128 0x1a
 11600 50a8 00000000 		.long	.LASF726
 11601 50ac 1A       		.uleb128 0x1a
 11602 50ad 00000000 		.long	.LASF727
 11603 50b1 0B       		.uleb128 0xb
 11604 50b2 EC460000 		.long	0x46ec
 11605 50b6 10       		.uleb128 0x10
 11606 50b7 00000000 		.long	.LASF728
 11607 50bb 10       		.byte	0x10
 11608 50bc 1D       		.byte	0x1d
 11609 50bd 2F       		.byte	0x2f
 11610 50be 96510000 		.long	0x5196
 11611 50c2 25       		.uleb128 0x25
 11612 50c3 00000000 		.long	.LASF74
 11613 50c7 1D       		.byte	0x1d
 11614 50c8 36       		.byte	0x36
 11615 50c9 6A9B0000 		.long	0x9b6a
 11616 50cd 01       		.byte	0x1
 11617 50ce 11       		.uleb128 0x11
 11618 50cf 00000000 		.long	.LASF314
 11619 50d3 1D       		.byte	0x1d
 11620 50d4 3A       		.byte	0x3a
 11621 50d5 C2500000 		.long	0x50c2
 11622 50d9 00       		.byte	0
 11623 50da 25       		.uleb128 0x25
 11624 50db 00000000 		.long	.LASF61
 11625 50df 1D       		.byte	0x1d
 11626 50e0 35       		.byte	0x35
 11627 50e1 DB070000 		.long	0x7db
 11628 50e5 01       		.byte	0x1
 11629 50e6 11       		.uleb128 0x11
 11630 50e7 00000000 		.long	.LASF315
 11631 50eb 1D       		.byte	0x1d
 11632 50ec 3B       		.byte	0x3b
 11633 50ed DA500000 		.long	0x50da
 11634 50f1 08       		.byte	0x8
 11635 50f2 25       		.uleb128 0x25
 11636 50f3 00000000 		.long	.LASF75
 11637 50f7 1D       		.byte	0x1d
 11638 50f8 37       		.byte	0x37
 11639 50f9 6A9B0000 		.long	0x9b6a
 11640 50fd 01       		.byte	0x1
 11641 50fe 39       		.uleb128 0x39
 11642 50ff 00000000 		.long	.LASF316
 11643 5103 1D       		.byte	0x1d
 11644 5104 3E       		.byte	0x3e
 11645 5105 0D510000 		.long	0x510d
 11646 5109 1D510000 		.long	0x511d
 11647 510d 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 462


 11648 510e 759E0000 		.long	0x9e75
 11649 5112 13       		.uleb128 0x13
 11650 5113 F2500000 		.long	0x50f2
 11651 5117 13       		.uleb128 0x13
 11652 5118 DA500000 		.long	0x50da
 11653 511c 00       		.byte	0
 11654 511d 15       		.uleb128 0x15
 11655 511e 00000000 		.long	.LASF316
 11656 5122 1D       		.byte	0x1d
 11657 5123 42       		.byte	0x42
 11658 5124 01       		.byte	0x1
 11659 5125 2D510000 		.long	0x512d
 11660 5129 33510000 		.long	0x5133
 11661 512d 08       		.uleb128 0x8
 11662 512e 759E0000 		.long	0x9e75
 11663 5132 00       		.byte	0
 11664 5133 16       		.uleb128 0x16
 11665 5134 00000000 		.long	.LASF174
 11666 5138 1D       		.byte	0x1d
 11667 5139 47       		.byte	0x47
 11668 513a 00000000 		.long	.LASF729
 11669 513e DA500000 		.long	0x50da
 11670 5142 01       		.byte	0x1
 11671 5143 4B510000 		.long	0x514b
 11672 5147 51510000 		.long	0x5151
 11673 514b 08       		.uleb128 0x8
 11674 514c 7B9E0000 		.long	0x9e7b
 11675 5150 00       		.byte	0
 11676 5151 16       		.uleb128 0x16
 11677 5152 00000000 		.long	.LASF155
 11678 5156 1D       		.byte	0x1d
 11679 5157 4B       		.byte	0x4b
 11680 5158 00000000 		.long	.LASF730
 11681 515c F2500000 		.long	0x50f2
 11682 5160 01       		.byte	0x1
 11683 5161 69510000 		.long	0x5169
 11684 5165 6F510000 		.long	0x516f
 11685 5169 08       		.uleb128 0x8
 11686 516a 7B9E0000 		.long	0x9e7b
 11687 516e 00       		.byte	0
 11688 516f 3A       		.uleb128 0x3a
 11689 5170 656E6400 		.string	"end"
 11690 5174 1D       		.byte	0x1d
 11691 5175 4F       		.byte	0x4f
 11692 5176 00000000 		.long	.LASF731
 11693 517a F2500000 		.long	0x50f2
 11694 517e 01       		.byte	0x1
 11695 517f 87510000 		.long	0x5187
 11696 5183 8D510000 		.long	0x518d
 11697 5187 08       		.uleb128 0x8
 11698 5188 7B9E0000 		.long	0x9e7b
 11699 518c 00       		.byte	0
 11700 518d 09       		.uleb128 0x9
 11701 518e 5F4500   		.string	"_E"
 11702 5191 BB710000 		.long	0x71bb
 11703 5195 00       		.byte	0
 11704 5196 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 463


 11705 5197 B6500000 		.long	0x50b6
 11706 519b 04       		.uleb128 0x4
 11707 519c 00000000 		.long	.LASF732
 11708 51a0 01       		.byte	0x1
 11709 51a1 28       		.byte	0x28
 11710 51a2 2F       		.byte	0x2f
 11711 51a3 E4510000 		.long	0x51e4
 11712 51a7 06       		.uleb128 0x6
 11713 51a8 00000000 		.long	.LASF733
 11714 51ac 28       		.byte	0x28
 11715 51ad 31       		.byte	0x31
 11716 51ae 819E0000 		.long	0x9e81
 11717 51b2 3E       		.uleb128 0x3e
 11718 51b3 00000000 		.long	.LASF734
 11719 51b7 28       		.byte	0x28
 11720 51b8 34       		.byte	0x34
 11721 51b9 00000000 		.long	.LASF735
 11722 51bd 979E0000 		.long	0x9e97
 11723 51c1 D0510000 		.long	0x51d0
 11724 51c5 13       		.uleb128 0x13
 11725 51c6 9D9E0000 		.long	0x9e9d
 11726 51ca 13       		.uleb128 0x13
 11727 51cb DB070000 		.long	0x7db
 11728 51cf 00       		.byte	0
 11729 51d0 09       		.uleb128 0x9
 11730 51d1 5F547000 		.string	"_Tp"
 11731 51d5 919E0000 		.long	0x9e91
 11732 51d9 0A       		.uleb128 0xa
 11733 51da 5F4E6D00 		.string	"_Nm"
 11734 51de 30000000 		.long	0x30
 11735 51e2 05       		.byte	0x5
 11736 51e3 00       		.byte	0
 11737 51e4 04       		.uleb128 0x4
 11738 51e5 00000000 		.long	.LASF736
 11739 51e9 28       		.byte	0x28
 11740 51ea 28       		.byte	0x28
 11741 51eb 51       		.byte	0x51
 11742 51ec A6550000 		.long	0x55a6
 11743 51f0 11       		.uleb128 0x11
 11744 51f1 00000000 		.long	.LASF737
 11745 51f5 28       		.byte	0x28
 11746 51f6 61       		.byte	0x61
 11747 51f7 A7510000 		.long	0x51a7
 11748 51fb 00       		.byte	0
 11749 51fc 06       		.uleb128 0x6
 11750 51fd 00000000 		.long	.LASF5
 11751 5201 28       		.byte	0x28
 11752 5202 53       		.byte	0x53
 11753 5203 919E0000 		.long	0x9e91
 11754 5207 06       		.uleb128 0x6
 11755 5208 00000000 		.long	.LASF490
 11756 520c 28       		.byte	0x28
 11757 520d 54       		.byte	0x54
 11758 520e A39E0000 		.long	0x9ea3
 11759 5212 06       		.uleb128 0x6
 11760 5213 00000000 		.long	.LASF738
 11761 5217 28       		.byte	0x28
GAS LISTING /tmp/ccKUqHDa.s 			page 464


 11762 5218 55       		.byte	0x55
 11763 5219 A99E0000 		.long	0x9ea9
 11764 521d 0B       		.uleb128 0xb
 11765 521e FC510000 		.long	0x51fc
 11766 5222 06       		.uleb128 0x6
 11767 5223 00000000 		.long	.LASF62
 11768 5227 28       		.byte	0x28
 11769 5228 56       		.byte	0x56
 11770 5229 AF9E0000 		.long	0x9eaf
 11771 522d 06       		.uleb128 0x6
 11772 522e 00000000 		.long	.LASF63
 11773 5232 28       		.byte	0x28
 11774 5233 57       		.byte	0x57
 11775 5234 B59E0000 		.long	0x9eb5
 11776 5238 06       		.uleb128 0x6
 11777 5239 00000000 		.long	.LASF74
 11778 523d 28       		.byte	0x28
 11779 523e 58       		.byte	0x58
 11780 523f A39E0000 		.long	0x9ea3
 11781 5243 06       		.uleb128 0x6
 11782 5244 00000000 		.long	.LASF75
 11783 5248 28       		.byte	0x28
 11784 5249 59       		.byte	0x59
 11785 524a A99E0000 		.long	0x9ea9
 11786 524e 06       		.uleb128 0x6
 11787 524f 00000000 		.long	.LASF61
 11788 5253 28       		.byte	0x28
 11789 5254 5A       		.byte	0x5a
 11790 5255 DB070000 		.long	0x7db
 11791 5259 06       		.uleb128 0x6
 11792 525a 00000000 		.long	.LASF77
 11793 525e 28       		.byte	0x28
 11794 525f 5C       		.byte	0x5c
 11795 5260 A6550000 		.long	0x55a6
 11796 5264 06       		.uleb128 0x6
 11797 5265 00000000 		.long	.LASF76
 11798 5269 28       		.byte	0x28
 11799 526a 5D       		.byte	0x5d
 11800 526b AB550000 		.long	0x55ab
 11801 526f 14       		.uleb128 0x14
 11802 5270 00000000 		.long	.LASF739
 11803 5274 28       		.byte	0x28
 11804 5275 67       		.byte	0x67
 11805 5276 00000000 		.long	.LASF740
 11806 527a 82520000 		.long	0x5282
 11807 527e 8D520000 		.long	0x528d
 11808 5282 08       		.uleb128 0x8
 11809 5283 BB9E0000 		.long	0x9ebb
 11810 5287 13       		.uleb128 0x13
 11811 5288 B59E0000 		.long	0x9eb5
 11812 528c 00       		.byte	0
 11813 528d 14       		.uleb128 0x14
 11814 528e 00000000 		.long	.LASF22
 11815 5292 28       		.byte	0x28
 11816 5293 6B       		.byte	0x6b
 11817 5294 00000000 		.long	.LASF741
 11818 5298 A0520000 		.long	0x52a0
GAS LISTING /tmp/ccKUqHDa.s 			page 465


 11819 529c AB520000 		.long	0x52ab
 11820 52a0 08       		.uleb128 0x8
 11821 52a1 BB9E0000 		.long	0x9ebb
 11822 52a5 13       		.uleb128 0x13
 11823 52a6 C19E0000 		.long	0x9ec1
 11824 52aa 00       		.byte	0
 11825 52ab 07       		.uleb128 0x7
 11826 52ac 00000000 		.long	.LASF155
 11827 52b0 28       		.byte	0x28
 11828 52b1 71       		.byte	0x71
 11829 52b2 00000000 		.long	.LASF742
 11830 52b6 38520000 		.long	0x5238
 11831 52ba C2520000 		.long	0x52c2
 11832 52be C8520000 		.long	0x52c8
 11833 52c2 08       		.uleb128 0x8
 11834 52c3 BB9E0000 		.long	0x9ebb
 11835 52c7 00       		.byte	0
 11836 52c8 07       		.uleb128 0x7
 11837 52c9 00000000 		.long	.LASF155
 11838 52cd 28       		.byte	0x28
 11839 52ce 75       		.byte	0x75
 11840 52cf 00000000 		.long	.LASF743
 11841 52d3 43520000 		.long	0x5243
 11842 52d7 DF520000 		.long	0x52df
 11843 52db E5520000 		.long	0x52e5
 11844 52df 08       		.uleb128 0x8
 11845 52e0 C79E0000 		.long	0x9ec7
 11846 52e4 00       		.byte	0
 11847 52e5 3D       		.uleb128 0x3d
 11848 52e6 656E6400 		.string	"end"
 11849 52ea 28       		.byte	0x28
 11850 52eb 79       		.byte	0x79
 11851 52ec 00000000 		.long	.LASF744
 11852 52f0 38520000 		.long	0x5238
 11853 52f4 FC520000 		.long	0x52fc
 11854 52f8 02530000 		.long	0x5302
 11855 52fc 08       		.uleb128 0x8
 11856 52fd BB9E0000 		.long	0x9ebb
 11857 5301 00       		.byte	0
 11858 5302 3D       		.uleb128 0x3d
 11859 5303 656E6400 		.string	"end"
 11860 5307 28       		.byte	0x28
 11861 5308 7D       		.byte	0x7d
 11862 5309 00000000 		.long	.LASF745
 11863 530d 43520000 		.long	0x5243
 11864 5311 19530000 		.long	0x5319
 11865 5315 1F530000 		.long	0x531f
 11866 5319 08       		.uleb128 0x8
 11867 531a C79E0000 		.long	0x9ec7
 11868 531e 00       		.byte	0
 11869 531f 07       		.uleb128 0x7
 11870 5320 00000000 		.long	.LASF160
 11871 5324 28       		.byte	0x28
 11872 5325 81       		.byte	0x81
 11873 5326 00000000 		.long	.LASF746
 11874 532a 59520000 		.long	0x5259
 11875 532e 36530000 		.long	0x5336
GAS LISTING /tmp/ccKUqHDa.s 			page 466


 11876 5332 3C530000 		.long	0x533c
 11877 5336 08       		.uleb128 0x8
 11878 5337 BB9E0000 		.long	0x9ebb
 11879 533b 00       		.byte	0
 11880 533c 07       		.uleb128 0x7
 11881 533d 00000000 		.long	.LASF160
 11882 5341 28       		.byte	0x28
 11883 5342 85       		.byte	0x85
 11884 5343 00000000 		.long	.LASF747
 11885 5347 64520000 		.long	0x5264
 11886 534b 53530000 		.long	0x5353
 11887 534f 59530000 		.long	0x5359
 11888 5353 08       		.uleb128 0x8
 11889 5354 C79E0000 		.long	0x9ec7
 11890 5358 00       		.byte	0
 11891 5359 07       		.uleb128 0x7
 11892 535a 00000000 		.long	.LASF163
 11893 535e 28       		.byte	0x28
 11894 535f 89       		.byte	0x89
 11895 5360 00000000 		.long	.LASF748
 11896 5364 59520000 		.long	0x5259
 11897 5368 70530000 		.long	0x5370
 11898 536c 76530000 		.long	0x5376
 11899 5370 08       		.uleb128 0x8
 11900 5371 BB9E0000 		.long	0x9ebb
 11901 5375 00       		.byte	0
 11902 5376 07       		.uleb128 0x7
 11903 5377 00000000 		.long	.LASF163
 11904 537b 28       		.byte	0x28
 11905 537c 8D       		.byte	0x8d
 11906 537d 00000000 		.long	.LASF749
 11907 5381 64520000 		.long	0x5264
 11908 5385 8D530000 		.long	0x538d
 11909 5389 93530000 		.long	0x5393
 11910 538d 08       		.uleb128 0x8
 11911 538e C79E0000 		.long	0x9ec7
 11912 5392 00       		.byte	0
 11913 5393 07       		.uleb128 0x7
 11914 5394 00000000 		.long	.LASF166
 11915 5398 28       		.byte	0x28
 11916 5399 91       		.byte	0x91
 11917 539a 00000000 		.long	.LASF750
 11918 539e 43520000 		.long	0x5243
 11919 53a2 AA530000 		.long	0x53aa
 11920 53a6 B0530000 		.long	0x53b0
 11921 53aa 08       		.uleb128 0x8
 11922 53ab C79E0000 		.long	0x9ec7
 11923 53af 00       		.byte	0
 11924 53b0 07       		.uleb128 0x7
 11925 53b1 00000000 		.long	.LASF168
 11926 53b5 28       		.byte	0x28
 11927 53b6 95       		.byte	0x95
 11928 53b7 00000000 		.long	.LASF751
 11929 53bb 43520000 		.long	0x5243
 11930 53bf C7530000 		.long	0x53c7
 11931 53c3 CD530000 		.long	0x53cd
 11932 53c7 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 467


 11933 53c8 C79E0000 		.long	0x9ec7
 11934 53cc 00       		.byte	0
 11935 53cd 07       		.uleb128 0x7
 11936 53ce 00000000 		.long	.LASF170
 11937 53d2 28       		.byte	0x28
 11938 53d3 99       		.byte	0x99
 11939 53d4 00000000 		.long	.LASF752
 11940 53d8 64520000 		.long	0x5264
 11941 53dc E4530000 		.long	0x53e4
 11942 53e0 EA530000 		.long	0x53ea
 11943 53e4 08       		.uleb128 0x8
 11944 53e5 C79E0000 		.long	0x9ec7
 11945 53e9 00       		.byte	0
 11946 53ea 07       		.uleb128 0x7
 11947 53eb 00000000 		.long	.LASF172
 11948 53ef 28       		.byte	0x28
 11949 53f0 9D       		.byte	0x9d
 11950 53f1 00000000 		.long	.LASF753
 11951 53f5 64520000 		.long	0x5264
 11952 53f9 01540000 		.long	0x5401
 11953 53fd 07540000 		.long	0x5407
 11954 5401 08       		.uleb128 0x8
 11955 5402 C79E0000 		.long	0x9ec7
 11956 5406 00       		.byte	0
 11957 5407 07       		.uleb128 0x7
 11958 5408 00000000 		.long	.LASF174
 11959 540c 28       		.byte	0x28
 11960 540d A2       		.byte	0xa2
 11961 540e 00000000 		.long	.LASF754
 11962 5412 4E520000 		.long	0x524e
 11963 5416 1E540000 		.long	0x541e
 11964 541a 24540000 		.long	0x5424
 11965 541e 08       		.uleb128 0x8
 11966 541f C79E0000 		.long	0x9ec7
 11967 5423 00       		.byte	0
 11968 5424 07       		.uleb128 0x7
 11969 5425 00000000 		.long	.LASF177
 11970 5429 28       		.byte	0x28
 11971 542a A5       		.byte	0xa5
 11972 542b 00000000 		.long	.LASF755
 11973 542f 4E520000 		.long	0x524e
 11974 5433 3B540000 		.long	0x543b
 11975 5437 41540000 		.long	0x5441
 11976 543b 08       		.uleb128 0x8
 11977 543c C79E0000 		.long	0x9ec7
 11978 5440 00       		.byte	0
 11979 5441 07       		.uleb128 0x7
 11980 5442 00000000 		.long	.LASF190
 11981 5446 28       		.byte	0x28
 11982 5447 A8       		.byte	0xa8
 11983 5448 00000000 		.long	.LASF756
 11984 544c A3710000 		.long	0x71a3
 11985 5450 58540000 		.long	0x5458
 11986 5454 5E540000 		.long	0x545e
 11987 5458 08       		.uleb128 0x8
 11988 5459 C79E0000 		.long	0x9ec7
 11989 545d 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 468


 11990 545e 07       		.uleb128 0x7
 11991 545f 00000000 		.long	.LASF192
 11992 5463 28       		.byte	0x28
 11993 5464 AC       		.byte	0xac
 11994 5465 00000000 		.long	.LASF757
 11995 5469 22520000 		.long	0x5222
 11996 546d 75540000 		.long	0x5475
 11997 5471 80540000 		.long	0x5480
 11998 5475 08       		.uleb128 0x8
 11999 5476 BB9E0000 		.long	0x9ebb
 12000 547a 13       		.uleb128 0x13
 12001 547b 4E520000 		.long	0x524e
 12002 547f 00       		.byte	0
 12003 5480 07       		.uleb128 0x7
 12004 5481 00000000 		.long	.LASF192
 12005 5485 28       		.byte	0x28
 12006 5486 B0       		.byte	0xb0
 12007 5487 00000000 		.long	.LASF758
 12008 548b 2D520000 		.long	0x522d
 12009 548f 97540000 		.long	0x5497
 12010 5493 A2540000 		.long	0x54a2
 12011 5497 08       		.uleb128 0x8
 12012 5498 C79E0000 		.long	0x9ec7
 12013 549c 13       		.uleb128 0x13
 12014 549d 4E520000 		.long	0x524e
 12015 54a1 00       		.byte	0
 12016 54a2 3D       		.uleb128 0x3d
 12017 54a3 617400   		.string	"at"
 12018 54a6 28       		.byte	0x28
 12019 54a7 B4       		.byte	0xb4
 12020 54a8 00000000 		.long	.LASF759
 12021 54ac 22520000 		.long	0x5222
 12022 54b0 B8540000 		.long	0x54b8
 12023 54b4 C3540000 		.long	0x54c3
 12024 54b8 08       		.uleb128 0x8
 12025 54b9 BB9E0000 		.long	0x9ebb
 12026 54bd 13       		.uleb128 0x13
 12027 54be 4E520000 		.long	0x524e
 12028 54c2 00       		.byte	0
 12029 54c3 3D       		.uleb128 0x3d
 12030 54c4 617400   		.string	"at"
 12031 54c7 28       		.byte	0x28
 12032 54c8 BE       		.byte	0xbe
 12033 54c9 00000000 		.long	.LASF760
 12034 54cd 2D520000 		.long	0x522d
 12035 54d1 D9540000 		.long	0x54d9
 12036 54d5 E4540000 		.long	0x54e4
 12037 54d9 08       		.uleb128 0x8
 12038 54da C79E0000 		.long	0x9ec7
 12039 54de 13       		.uleb128 0x13
 12040 54df 4E520000 		.long	0x524e
 12041 54e3 00       		.byte	0
 12042 54e4 07       		.uleb128 0x7
 12043 54e5 00000000 		.long	.LASF197
 12044 54e9 28       		.byte	0x28
 12045 54ea CA       		.byte	0xca
 12046 54eb 00000000 		.long	.LASF761
GAS LISTING /tmp/ccKUqHDa.s 			page 469


 12047 54ef 22520000 		.long	0x5222
 12048 54f3 FB540000 		.long	0x54fb
 12049 54f7 01550000 		.long	0x5501
 12050 54fb 08       		.uleb128 0x8
 12051 54fc BB9E0000 		.long	0x9ebb
 12052 5500 00       		.byte	0
 12053 5501 07       		.uleb128 0x7
 12054 5502 00000000 		.long	.LASF197
 12055 5506 28       		.byte	0x28
 12056 5507 CE       		.byte	0xce
 12057 5508 00000000 		.long	.LASF762
 12058 550c 2D520000 		.long	0x522d
 12059 5510 18550000 		.long	0x5518
 12060 5514 1E550000 		.long	0x551e
 12061 5518 08       		.uleb128 0x8
 12062 5519 C79E0000 		.long	0x9ec7
 12063 551d 00       		.byte	0
 12064 551e 07       		.uleb128 0x7
 12065 551f 00000000 		.long	.LASF200
 12066 5523 28       		.byte	0x28
 12067 5524 D2       		.byte	0xd2
 12068 5525 00000000 		.long	.LASF763
 12069 5529 22520000 		.long	0x5222
 12070 552d 35550000 		.long	0x5535
 12071 5531 3B550000 		.long	0x553b
 12072 5535 08       		.uleb128 0x8
 12073 5536 BB9E0000 		.long	0x9ebb
 12074 553a 00       		.byte	0
 12075 553b 07       		.uleb128 0x7
 12076 553c 00000000 		.long	.LASF200
 12077 5540 28       		.byte	0x28
 12078 5541 D6       		.byte	0xd6
 12079 5542 00000000 		.long	.LASF764
 12080 5546 2D520000 		.long	0x522d
 12081 554a 52550000 		.long	0x5552
 12082 554e 58550000 		.long	0x5558
 12083 5552 08       		.uleb128 0x8
 12084 5553 C79E0000 		.long	0x9ec7
 12085 5557 00       		.byte	0
 12086 5558 07       		.uleb128 0x7
 12087 5559 00000000 		.long	.LASF266
 12088 555d 28       		.byte	0x28
 12089 555e DD       		.byte	0xdd
 12090 555f 00000000 		.long	.LASF765
 12091 5563 07520000 		.long	0x5207
 12092 5567 6F550000 		.long	0x556f
 12093 556b 75550000 		.long	0x5575
 12094 556f 08       		.uleb128 0x8
 12095 5570 BB9E0000 		.long	0x9ebb
 12096 5574 00       		.byte	0
 12097 5575 07       		.uleb128 0x7
 12098 5576 00000000 		.long	.LASF266
 12099 557a 28       		.byte	0x28
 12100 557b E1       		.byte	0xe1
 12101 557c 00000000 		.long	.LASF766
 12102 5580 12520000 		.long	0x5212
 12103 5584 8C550000 		.long	0x558c
GAS LISTING /tmp/ccKUqHDa.s 			page 470


 12104 5588 92550000 		.long	0x5592
 12105 558c 08       		.uleb128 0x8
 12106 558d C79E0000 		.long	0x9ec7
 12107 5591 00       		.byte	0
 12108 5592 09       		.uleb128 0x9
 12109 5593 5F547000 		.string	"_Tp"
 12110 5597 919E0000 		.long	0x9e91
 12111 559b 0A       		.uleb128 0xa
 12112 559c 5F4E6D00 		.string	"_Nm"
 12113 55a0 30000000 		.long	0x30
 12114 55a4 05       		.byte	0x5
 12115 55a5 00       		.byte	0
 12116 55a6 1A       		.uleb128 0x1a
 12117 55a7 00000000 		.long	.LASF767
 12118 55ab 1A       		.uleb128 0x1a
 12119 55ac 00000000 		.long	.LASF768
 12120 55b0 0B       		.uleb128 0xb
 12121 55b1 E4510000 		.long	0x51e4
 12122 55b5 4F       		.uleb128 0x4f
 12123 55b6 00000000 		.long	.LASF769
 12124 55ba 10       		.byte	0x10
 12125 55bb 0B       		.byte	0xb
 12126 55bc 2708     		.value	0x827
 12127 55be F7570000 		.long	0x57f7
 12128 55c2 5B       		.uleb128 0x5b
 12129 55c3 00000000 		.long	.LASF772
 12130 55c7 08       		.byte	0x8
 12131 55c8 0B       		.byte	0xb
 12132 55c9 3008     		.value	0x830
 12133 55cb 01       		.byte	0x1
 12134 55cc 45560000 		.long	0x5645
 12135 55d0 5C       		.uleb128 0x5c
 12136 55d1 00000000 		.long	.LASF770
 12137 55d5 0B       		.byte	0xb
 12138 55d6 4A08     		.value	0x84a
 12139 55d8 29000000 		.long	0x29
 12140 55dc 00       		.byte	0
 12141 55dd 03       		.byte	0x3
 12142 55de 5C       		.uleb128 0x5c
 12143 55df 00000000 		.long	.LASF771
 12144 55e3 0B       		.byte	0xb
 12145 55e4 4B08     		.value	0x84b
 12146 55e6 29000000 		.long	0x29
 12147 55ea 04       		.byte	0x4
 12148 55eb 03       		.byte	0x3
 12149 55ec 5D       		.uleb128 0x5d
 12150 55ed 00000000 		.long	.LASF772
 12151 55f1 0B       		.byte	0xb
 12152 55f2 3508     		.value	0x835
 12153 55f4 FC550000 		.long	0x55fc
 12154 55f8 0C560000 		.long	0x560c
 12155 55fc 08       		.uleb128 0x8
 12156 55fd CD9E0000 		.long	0x9ecd
 12157 5601 13       		.uleb128 0x13
 12158 5602 29000000 		.long	0x29
 12159 5606 13       		.uleb128 0x13
 12160 5607 29000000 		.long	0x29
GAS LISTING /tmp/ccKUqHDa.s 			page 471


 12161 560b 00       		.byte	0
 12162 560c 2F       		.uleb128 0x2f
 12163 560d 00000000 		.long	.LASF773
 12164 5611 0B       		.byte	0xb
 12165 5612 3D08     		.value	0x83d
 12166 5614 00000000 		.long	.LASF774
 12167 5618 29000000 		.long	0x29
 12168 561c 24560000 		.long	0x5624
 12169 5620 2A560000 		.long	0x562a
 12170 5624 08       		.uleb128 0x8
 12171 5625 D39E0000 		.long	0x9ed3
 12172 5629 00       		.byte	0
 12173 562a 30       		.uleb128 0x30
 12174 562b 00000000 		.long	.LASF775
 12175 562f 0B       		.byte	0xb
 12176 5630 4108     		.value	0x841
 12177 5632 00000000 		.long	.LASF776
 12178 5636 29000000 		.long	0x29
 12179 563a 3E560000 		.long	0x563e
 12180 563e 08       		.uleb128 0x8
 12181 563f D39E0000 		.long	0x9ed3
 12182 5643 00       		.byte	0
 12183 5644 00       		.byte	0
 12184 5645 0B       		.uleb128 0xb
 12185 5646 C2550000 		.long	0x55c2
 12186 564a 29       		.uleb128 0x29
 12187 564b 00000000 		.long	.LASF777
 12188 564f 0B       		.byte	0xb
 12189 5650 E308     		.value	0x8e3
 12190 5652 C2550000 		.long	0x55c2
 12191 5656 00       		.byte	0
 12192 5657 46       		.uleb128 0x46
 12193 5658 00000000 		.long	.LASF349
 12194 565c 0B       		.byte	0xb
 12195 565d 2E08     		.value	0x82e
 12196 565f 29000000 		.long	0x29
 12197 5663 01       		.byte	0x1
 12198 5664 29       		.uleb128 0x29
 12199 5665 00000000 		.long	.LASF778
 12200 5669 0B       		.byte	0xb
 12201 566a E408     		.value	0x8e4
 12202 566c 57560000 		.long	0x5657
 12203 5670 08       		.byte	0x8
 12204 5671 29       		.uleb128 0x29
 12205 5672 00000000 		.long	.LASF779
 12206 5676 0B       		.byte	0xb
 12207 5677 E508     		.value	0x8e5
 12208 5679 A3710000 		.long	0x71a3
 12209 567d 0C       		.byte	0xc
 12210 567e 34       		.uleb128 0x34
 12211 567f 00000000 		.long	.LASF780
 12212 5683 0B       		.byte	0xb
 12213 5684 5408     		.value	0x854
 12214 5686 01       		.byte	0x1
 12215 5687 8F560000 		.long	0x568f
 12216 568b 9F560000 		.long	0x569f
 12217 568f 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 472


 12218 5690 D99E0000 		.long	0x9ed9
 12219 5694 13       		.uleb128 0x13
 12220 5695 57560000 		.long	0x5657
 12221 5699 13       		.uleb128 0x13
 12222 569a 57560000 		.long	0x5657
 12223 569e 00       		.byte	0
 12224 569f 34       		.uleb128 0x34
 12225 56a0 00000000 		.long	.LASF780
 12226 56a4 0B       		.byte	0xb
 12227 56a5 5A08     		.value	0x85a
 12228 56a7 01       		.byte	0x1
 12229 56a8 B0560000 		.long	0x56b0
 12230 56ac BB560000 		.long	0x56bb
 12231 56b0 08       		.uleb128 0x8
 12232 56b1 D99E0000 		.long	0x9ed9
 12233 56b5 13       		.uleb128 0x13
 12234 56b6 DF9E0000 		.long	0x9edf
 12235 56ba 00       		.byte	0
 12236 56bb 37       		.uleb128 0x37
 12237 56bc 00000000 		.long	.LASF781
 12238 56c0 0B       		.byte	0xb
 12239 56c1 6208     		.value	0x862
 12240 56c3 00000000 		.long	.LASF782
 12241 56c7 01       		.byte	0x1
 12242 56c8 D0560000 		.long	0x56d0
 12243 56cc D6560000 		.long	0x56d6
 12244 56d0 08       		.uleb128 0x8
 12245 56d1 D99E0000 		.long	0x9ed9
 12246 56d5 00       		.byte	0
 12247 56d6 35       		.uleb128 0x35
 12248 56d7 00000000 		.long	.LASF773
 12249 56db 0B       		.byte	0xb
 12250 56dc 6908     		.value	0x869
 12251 56de 00000000 		.long	.LASF783
 12252 56e2 29000000 		.long	0x29
 12253 56e6 01       		.byte	0x1
 12254 56e7 EF560000 		.long	0x56ef
 12255 56eb F5560000 		.long	0x56f5
 12256 56ef 08       		.uleb128 0x8
 12257 56f0 E59E0000 		.long	0x9ee5
 12258 56f4 00       		.byte	0
 12259 56f5 35       		.uleb128 0x35
 12260 56f6 00000000 		.long	.LASF775
 12261 56fa 0B       		.byte	0xb
 12262 56fb 7008     		.value	0x870
 12263 56fd 00000000 		.long	.LASF784
 12264 5701 29000000 		.long	0x29
 12265 5705 01       		.byte	0x1
 12266 5706 0E570000 		.long	0x570e
 12267 570a 14570000 		.long	0x5714
 12268 570e 08       		.uleb128 0x8
 12269 570f E59E0000 		.long	0x9ee5
 12270 5713 00       		.byte	0
 12271 5714 35       		.uleb128 0x35
 12272 5715 00000000 		.long	.LASF785
 12273 5719 0B       		.byte	0xb
 12274 571a 7708     		.value	0x877
GAS LISTING /tmp/ccKUqHDa.s 			page 473


 12275 571c 00000000 		.long	.LASF786
 12276 5720 C2550000 		.long	0x55c2
 12277 5724 01       		.byte	0x1
 12278 5725 2D570000 		.long	0x572d
 12279 5729 33570000 		.long	0x5733
 12280 572d 08       		.uleb128 0x8
 12281 572e E59E0000 		.long	0x9ee5
 12282 5732 00       		.byte	0
 12283 5733 37       		.uleb128 0x37
 12284 5734 00000000 		.long	.LASF785
 12285 5738 0B       		.byte	0xb
 12286 5739 7F08     		.value	0x87f
 12287 573b 00000000 		.long	.LASF787
 12288 573f 01       		.byte	0x1
 12289 5740 48570000 		.long	0x5748
 12290 5744 53570000 		.long	0x5753
 12291 5748 08       		.uleb128 0x8
 12292 5749 D99E0000 		.long	0x9ed9
 12293 574d 13       		.uleb128 0x13
 12294 574e DF9E0000 		.long	0x9edf
 12295 5752 00       		.byte	0
 12296 5753 36       		.uleb128 0x36
 12297 5754 6D696E00 		.string	"min"
 12298 5758 0B       		.byte	0xb
 12299 5759 8608     		.value	0x886
 12300 575b 00000000 		.long	.LASF788
 12301 575f 57560000 		.long	0x5657
 12302 5763 01       		.byte	0x1
 12303 5764 6C570000 		.long	0x576c
 12304 5768 72570000 		.long	0x5772
 12305 576c 08       		.uleb128 0x8
 12306 576d E59E0000 		.long	0x9ee5
 12307 5771 00       		.byte	0
 12308 5772 36       		.uleb128 0x36
 12309 5773 6D617800 		.string	"max"
 12310 5777 0B       		.byte	0xb
 12311 5778 8D08     		.value	0x88d
 12312 577a 00000000 		.long	.LASF789
 12313 577e 57560000 		.long	0x5657
 12314 5782 01       		.byte	0x1
 12315 5783 8B570000 		.long	0x578b
 12316 5787 91570000 		.long	0x5791
 12317 578b 08       		.uleb128 0x8
 12318 578c E59E0000 		.long	0x9ee5
 12319 5790 00       		.byte	0
 12320 5791 5E       		.uleb128 0x5e
 12321 5792 00000000 		.long	.LASF790
 12322 5796 0B       		.byte	0xb
 12323 5797 9508     		.value	0x895
 12324 5799 57560000 		.long	0x5657
 12325 579d 01       		.byte	0x1
 12326 579e AF570000 		.long	0x57af
 12327 57a2 BA570000 		.long	0x57ba
 12328 57a6 1C       		.uleb128 0x1c
 12329 57a7 00000000 		.long	.LASF791
 12330 57ab B0260000 		.long	0x26b0
 12331 57af 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 474


 12332 57b0 D99E0000 		.long	0x9ed9
 12333 57b4 13       		.uleb128 0x13
 12334 57b5 DF9F0000 		.long	0x9fdf
 12335 57b9 00       		.byte	0
 12336 57ba 5E       		.uleb128 0x5e
 12337 57bb 00000000 		.long	.LASF790
 12338 57bf 07       		.byte	0x7
 12339 57c0 8E07     		.value	0x78e
 12340 57c2 57560000 		.long	0x5657
 12341 57c6 01       		.byte	0x1
 12342 57c7 D8570000 		.long	0x57d8
 12343 57cb E8570000 		.long	0x57e8
 12344 57cf 1C       		.uleb128 0x1c
 12345 57d0 00000000 		.long	.LASF791
 12346 57d4 B0260000 		.long	0x26b0
 12347 57d8 08       		.uleb128 0x8
 12348 57d9 D99E0000 		.long	0x9ed9
 12349 57dd 13       		.uleb128 0x13
 12350 57de DF9F0000 		.long	0x9fdf
 12351 57e2 13       		.uleb128 0x13
 12352 57e3 DF9E0000 		.long	0x9edf
 12353 57e7 00       		.byte	0
 12354 57e8 0B       		.uleb128 0xb
 12355 57e9 57560000 		.long	0x5657
 12356 57ed 1C       		.uleb128 0x1c
 12357 57ee 00000000 		.long	.LASF792
 12358 57f2 29000000 		.long	0x29
 12359 57f6 00       		.byte	0
 12360 57f7 0B       		.uleb128 0xb
 12361 57f8 B5550000 		.long	0x55b5
 12362 57fc 04       		.uleb128 0x4
 12363 57fd 00000000 		.long	.LASF793
 12364 5801 08       		.byte	0x8
 12365 5802 0D       		.byte	0xd
 12366 5803 60       		.byte	0x60
 12367 5804 2E590000 		.long	0x592e
 12368 5808 11       		.uleb128 0x11
 12369 5809 00000000 		.long	.LASF794
 12370 580d 0D       		.byte	0xd
 12371 580e 65       		.byte	0x65
 12372 580f 29000000 		.long	0x29
 12373 5813 00       		.byte	0
 12374 5814 11       		.uleb128 0x11
 12375 5815 00000000 		.long	.LASF795
 12376 5819 0D       		.byte	0xd
 12377 581a 66       		.byte	0x66
 12378 581b 29000000 		.long	0x29
 12379 581f 04       		.byte	0x4
 12380 5820 39       		.uleb128 0x39
 12381 5821 00000000 		.long	.LASF796
 12382 5825 0D       		.byte	0xd
 12383 5826 6C       		.byte	0x6c
 12384 5827 2F580000 		.long	0x582f
 12385 582b 35580000 		.long	0x5835
 12386 582f 08       		.uleb128 0x8
 12387 5830 EB9E0000 		.long	0x9eeb
 12388 5834 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 475


 12389 5835 39       		.uleb128 0x39
 12390 5836 00000000 		.long	.LASF796
 12391 583a 0D       		.byte	0xd
 12392 583b 70       		.byte	0x70
 12393 583c 44580000 		.long	0x5844
 12394 5840 54580000 		.long	0x5854
 12395 5844 08       		.uleb128 0x8
 12396 5845 EB9E0000 		.long	0x9eeb
 12397 5849 13       		.uleb128 0x13
 12398 584a 139D0000 		.long	0x9d13
 12399 584e 13       		.uleb128 0x13
 12400 584f 139D0000 		.long	0x9d13
 12401 5853 00       		.byte	0
 12402 5854 39       		.uleb128 0x39
 12403 5855 00000000 		.long	.LASF796
 12404 5859 0D       		.byte	0xd
 12405 585a 7F       		.byte	0x7f
 12406 585b 63580000 		.long	0x5863
 12407 585f 6E580000 		.long	0x586e
 12408 5863 08       		.uleb128 0x8
 12409 5864 EB9E0000 		.long	0x9eeb
 12410 5868 13       		.uleb128 0x13
 12411 5869 FD9E0000 		.long	0x9efd
 12412 586d 00       		.byte	0
 12413 586e 39       		.uleb128 0x39
 12414 586f 00000000 		.long	.LASF796
 12415 5873 0D       		.byte	0xd
 12416 5874 80       		.byte	0x80
 12417 5875 7D580000 		.long	0x587d
 12418 5879 88580000 		.long	0x5888
 12419 587d 08       		.uleb128 0x8
 12420 587e EB9E0000 		.long	0x9eeb
 12421 5882 13       		.uleb128 0x13
 12422 5883 CE9F0000 		.long	0x9fce
 12423 5887 00       		.byte	0
 12424 5888 07       		.uleb128 0x7
 12425 5889 00000000 		.long	.LASF18
 12426 588d 0D       		.byte	0xd
 12427 588e 9E       		.byte	0x9e
 12428 588f 00000000 		.long	.LASF797
 12429 5893 F79E0000 		.long	0x9ef7
 12430 5897 9F580000 		.long	0x589f
 12431 589b AA580000 		.long	0x58aa
 12432 589f 08       		.uleb128 0x8
 12433 58a0 EB9E0000 		.long	0x9eeb
 12434 58a4 13       		.uleb128 0x13
 12435 58a5 FD9E0000 		.long	0x9efd
 12436 58a9 00       		.byte	0
 12437 58aa 07       		.uleb128 0x7
 12438 58ab 00000000 		.long	.LASF18
 12439 58af 0D       		.byte	0xd
 12440 58b0 A6       		.byte	0xa6
 12441 58b1 00000000 		.long	.LASF798
 12442 58b5 F79E0000 		.long	0x9ef7
 12443 58b9 C1580000 		.long	0x58c1
 12444 58bd CC580000 		.long	0x58cc
 12445 58c1 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 476


 12446 58c2 EB9E0000 		.long	0x9eeb
 12447 58c6 13       		.uleb128 0x13
 12448 58c7 CE9F0000 		.long	0x9fce
 12449 58cb 00       		.byte	0
 12450 58cc 14       		.uleb128 0x14
 12451 58cd 00000000 		.long	.LASF22
 12452 58d1 0D       		.byte	0xd
 12453 58d2 C2       		.byte	0xc2
 12454 58d3 00000000 		.long	.LASF799
 12455 58d7 DF580000 		.long	0x58df
 12456 58db EA580000 		.long	0x58ea
 12457 58df 08       		.uleb128 0x8
 12458 58e0 EB9E0000 		.long	0x9eeb
 12459 58e4 13       		.uleb128 0x13
 12460 58e5 F79E0000 		.long	0x9ef7
 12461 58e9 00       		.byte	0
 12462 58ea 39       		.uleb128 0x39
 12463 58eb 00000000 		.long	.LASF800
 12464 58ef 0D       		.byte	0xd
 12465 58f0 90       		.byte	0x90
 12466 58f1 0B590000 		.long	0x590b
 12467 58f5 1B590000 		.long	0x591b
 12468 58f9 09       		.uleb128 0x9
 12469 58fa 5F553100 		.string	"_U1"
 12470 58fe 29000000 		.long	0x29
 12471 5902 09       		.uleb128 0x9
 12472 5903 5F553200 		.string	"_U2"
 12473 5907 29000000 		.long	0x29
 12474 590b 08       		.uleb128 0x8
 12475 590c EB9E0000 		.long	0x9eeb
 12476 5910 13       		.uleb128 0x13
 12477 5911 D49F0000 		.long	0x9fd4
 12478 5915 13       		.uleb128 0x13
 12479 5916 D49F0000 		.long	0x9fd4
 12480 591a 00       		.byte	0
 12481 591b 09       		.uleb128 0x9
 12482 591c 5F543100 		.string	"_T1"
 12483 5920 29000000 		.long	0x29
 12484 5924 09       		.uleb128 0x9
 12485 5925 5F543200 		.string	"_T2"
 12486 5929 29000000 		.long	0x29
 12487 592d 00       		.byte	0
 12488 592e 0B       		.uleb128 0xb
 12489 592f FC570000 		.long	0x57fc
 12490 5933 10       		.uleb128 0x10
 12491 5934 00000000 		.long	.LASF801
 12492 5938 01       		.byte	0x1
 12493 5939 19       		.byte	0x19
 12494 593a 5C       		.byte	0x5c
 12495 593b D5590000 		.long	0x59d5
 12496 593f 24       		.uleb128 0x24
 12497 5940 D97E0000 		.long	0x7ed9
 12498 5944 00       		.byte	0
 12499 5945 01       		.byte	0x1
 12500 5946 25       		.uleb128 0x25
 12501 5947 00000000 		.long	.LASF61
 12502 594b 19       		.byte	0x19
GAS LISTING /tmp/ccKUqHDa.s 			page 477


 12503 594c 5F       		.byte	0x5f
 12504 594d DB070000 		.long	0x7db
 12505 5951 01       		.byte	0x1
 12506 5952 25       		.uleb128 0x25
 12507 5953 00000000 		.long	.LASF490
 12508 5957 19       		.byte	0x19
 12509 5958 61       		.byte	0x61
 12510 5959 EB9E0000 		.long	0x9eeb
 12511 595d 01       		.byte	0x1
 12512 595e 25       		.uleb128 0x25
 12513 595f 00000000 		.long	.LASF5
 12514 5963 19       		.byte	0x19
 12515 5964 65       		.byte	0x65
 12516 5965 FC570000 		.long	0x57fc
 12517 5969 01       		.byte	0x1
 12518 596a 15       		.uleb128 0x15
 12519 596b 00000000 		.long	.LASF64
 12520 596f 19       		.byte	0x19
 12521 5970 71       		.byte	0x71
 12522 5971 01       		.byte	0x1
 12523 5972 7A590000 		.long	0x597a
 12524 5976 80590000 		.long	0x5980
 12525 597a 08       		.uleb128 0x8
 12526 597b 159F0000 		.long	0x9f15
 12527 597f 00       		.byte	0
 12528 5980 15       		.uleb128 0x15
 12529 5981 00000000 		.long	.LASF64
 12530 5985 19       		.byte	0x19
 12531 5986 73       		.byte	0x73
 12532 5987 01       		.byte	0x1
 12533 5988 90590000 		.long	0x5990
 12534 598c 9B590000 		.long	0x599b
 12535 5990 08       		.uleb128 0x8
 12536 5991 159F0000 		.long	0x9f15
 12537 5995 13       		.uleb128 0x13
 12538 5996 1B9F0000 		.long	0x9f1b
 12539 599a 00       		.byte	0
 12540 599b 15       		.uleb128 0x15
 12541 599c 00000000 		.long	.LASF65
 12542 59a0 19       		.byte	0x19
 12543 59a1 79       		.byte	0x79
 12544 59a2 01       		.byte	0x1
 12545 59a3 AB590000 		.long	0x59ab
 12546 59a7 B6590000 		.long	0x59b6
 12547 59ab 08       		.uleb128 0x8
 12548 59ac 159F0000 		.long	0x9f15
 12549 59b0 08       		.uleb128 0x8
 12550 59b1 E5710000 		.long	0x71e5
 12551 59b5 00       		.byte	0
 12552 59b6 58       		.uleb128 0x58
 12553 59b7 00000000 		.long	.LASF802
 12554 59bb 01       		.byte	0x1
 12555 59bc 19       		.byte	0x19
 12556 59bd 68       		.byte	0x68
 12557 59be 01       		.byte	0x1
 12558 59bf 06       		.uleb128 0x6
 12559 59c0 00000000 		.long	.LASF494
GAS LISTING /tmp/ccKUqHDa.s 			page 478


 12560 59c4 19       		.byte	0x19
 12561 59c5 69       		.byte	0x69
 12562 59c6 33590000 		.long	0x5933
 12563 59ca 1C       		.uleb128 0x1c
 12564 59cb 00000000 		.long	.LASF495
 12565 59cf FC570000 		.long	0x57fc
 12566 59d3 00       		.byte	0
 12567 59d4 00       		.byte	0
 12568 59d5 0B       		.uleb128 0xb
 12569 59d6 33590000 		.long	0x5933
 12570 59da 04       		.uleb128 0x4
 12571 59db 00000000 		.long	.LASF803
 12572 59df 01       		.byte	0x1
 12573 59e0 25       		.byte	0x25
 12574 59e1 69       		.byte	0x69
 12575 59e2 FB590000 		.long	0x59fb
 12576 59e6 06       		.uleb128 0x6
 12577 59e7 00000000 		.long	.LASF394
 12578 59eb 25       		.byte	0x25
 12579 59ec 6B       		.byte	0x6b
 12580 59ed FC570000 		.long	0x57fc
 12581 59f1 09       		.uleb128 0x9
 12582 59f2 5F547000 		.string	"_Tp"
 12583 59f6 FC570000 		.long	0x57fc
 12584 59fa 00       		.byte	0
 12585 59fb 04       		.uleb128 0x4
 12586 59fc 00000000 		.long	.LASF804
 12587 5a00 01       		.byte	0x1
 12588 5a01 25       		.byte	0x25
 12589 5a02 96       		.byte	0x96
 12590 5a03 615A0000 		.long	0x5a61
 12591 5a07 06       		.uleb128 0x6
 12592 5a08 00000000 		.long	.LASF490
 12593 5a0c 25       		.byte	0x25
 12594 5a0d 99       		.byte	0x99
 12595 5a0e EB9E0000 		.long	0x9eeb
 12596 5a12 06       		.uleb128 0x6
 12597 5a13 00000000 		.long	.LASF489
 12598 5a17 25       		.byte	0x25
 12599 5a18 9D       		.byte	0x9d
 12600 5a19 AA080000 		.long	0x8aa
 12601 5a1d 3E       		.uleb128 0x3e
 12602 5a1e 00000000 		.long	.LASF498
 12603 5a22 25       		.byte	0x25
 12604 5a23 A8       		.byte	0xa8
 12605 5a24 00000000 		.long	.LASF805
 12606 5a28 075A0000 		.long	0x5a07
 12607 5a2c 365A0000 		.long	0x5a36
 12608 5a30 13       		.uleb128 0x13
 12609 5a31 219F0000 		.long	0x9f21
 12610 5a35 00       		.byte	0
 12611 5a36 06       		.uleb128 0x6
 12612 5a37 00000000 		.long	.LASF500
 12613 5a3b 25       		.byte	0x25
 12614 5a3c A0       		.byte	0xa0
 12615 5a3d 16850000 		.long	0x8516
 12616 5a41 06       		.uleb128 0x6
GAS LISTING /tmp/ccKUqHDa.s 			page 479


 12617 5a42 00000000 		.long	.LASF500
 12618 5a46 25       		.byte	0x25
 12619 5a47 A0       		.byte	0xa0
 12620 5a48 96850000 		.long	0x8596
 12621 5a4c 06       		.uleb128 0x6
 12622 5a4d 00000000 		.long	.LASF500
 12623 5a51 25       		.byte	0x25
 12624 5a52 A0       		.byte	0xa0
 12625 5a53 F19E0000 		.long	0x9ef1
 12626 5a57 1C       		.uleb128 0x1c
 12627 5a58 00000000 		.long	.LASF501
 12628 5a5c EB9E0000 		.long	0x9eeb
 12629 5a60 00       		.byte	0
 12630 5a61 04       		.uleb128 0x4
 12631 5a62 00000000 		.long	.LASF806
 12632 5a66 01       		.byte	0x1
 12633 5a67 26       		.byte	0x26
 12634 5a68 50       		.byte	0x50
 12635 5a69 2F5C0000 		.long	0x5c2f
 12636 5a6d 06       		.uleb128 0x6
 12637 5a6e 00000000 		.long	.LASF5
 12638 5a72 26       		.byte	0x26
 12639 5a73 55       		.byte	0x55
 12640 5a74 5E590000 		.long	0x595e
 12641 5a78 25       		.uleb128 0x25
 12642 5a79 00000000 		.long	.LASF503
 12643 5a7d 26       		.byte	0x26
 12644 5a7e 5F       		.byte	0x5f
 12645 5a7f 52590000 		.long	0x5952
 12646 5a83 03       		.byte	0x3
 12647 5a84 06       		.uleb128 0x6
 12648 5a85 00000000 		.long	.LASF490
 12649 5a89 26       		.byte	0x26
 12650 5a8a 66       		.byte	0x66
 12651 5a8b 785A0000 		.long	0x5a78
 12652 5a8f 25       		.uleb128 0x25
 12653 5a90 00000000 		.long	.LASF504
 12654 5a94 26       		.byte	0x26
 12655 5a95 7E       		.byte	0x7e
 12656 5a96 415A0000 		.long	0x5a41
 12657 5a9a 03       		.byte	0x3
 12658 5a9b 06       		.uleb128 0x6
 12659 5a9c 00000000 		.long	.LASF505
 12660 5aa0 26       		.byte	0x26
 12661 5aa1 87       		.byte	0x87
 12662 5aa2 8F5A0000 		.long	0x5a8f
 12663 5aa6 25       		.uleb128 0x25
 12664 5aa7 00000000 		.long	.LASF506
 12665 5aab 26       		.byte	0x26
 12666 5aac 94       		.byte	0x94
 12667 5aad 46590000 		.long	0x5946
 12668 5ab1 03       		.byte	0x3
 12669 5ab2 06       		.uleb128 0x6
 12670 5ab3 00000000 		.long	.LASF61
 12671 5ab7 26       		.byte	0x26
 12672 5ab8 9D       		.byte	0x9d
 12673 5ab9 A65A0000 		.long	0x5aa6
GAS LISTING /tmp/ccKUqHDa.s 			page 480


 12674 5abd 59       		.uleb128 0x59
 12675 5abe 00000000 		.long	.LASF507
 12676 5ac2 26       		.byte	0x26
 12677 5ac3 5F       		.byte	0x5f
 12678 5ac4 00000000 		.long	.LASF807
 12679 5ac8 279F0000 		.long	0x9f27
 12680 5acc 03       		.byte	0x3
 12681 5acd D35A0000 		.long	0x5ad3
 12682 5ad1 5A       		.uleb128 0x5a
 12683 5ad2 00       		.byte	0
 12684 5ad3 59       		.uleb128 0x59
 12685 5ad4 00000000 		.long	.LASF509
 12686 5ad8 26       		.byte	0x26
 12687 5ad9 68       		.byte	0x68
 12688 5ada 00000000 		.long	.LASF808
 12689 5ade 4C5A0000 		.long	0x5a4c
 12690 5ae2 03       		.byte	0x3
 12691 5ae3 E95A0000 		.long	0x5ae9
 12692 5ae7 5A       		.uleb128 0x5a
 12693 5ae8 00       		.byte	0
 12694 5ae9 59       		.uleb128 0x59
 12695 5aea 00000000 		.long	.LASF511
 12696 5aee 26       		.byte	0x26
 12697 5aef 73       		.byte	0x73
 12698 5af0 00000000 		.long	.LASF809
 12699 5af4 365A0000 		.long	0x5a36
 12700 5af8 03       		.byte	0x3
 12701 5af9 FF5A0000 		.long	0x5aff
 12702 5afd 5A       		.uleb128 0x5a
 12703 5afe 00       		.byte	0
 12704 5aff 59       		.uleb128 0x59
 12705 5b00 00000000 		.long	.LASF513
 12706 5b04 26       		.byte	0x26
 12707 5b05 7E       		.byte	0x7e
 12708 5b06 00000000 		.long	.LASF810
 12709 5b0a 415A0000 		.long	0x5a41
 12710 5b0e 03       		.byte	0x3
 12711 5b0f 155B0000 		.long	0x5b15
 12712 5b13 5A       		.uleb128 0x5a
 12713 5b14 00       		.byte	0
 12714 5b15 59       		.uleb128 0x59
 12715 5b16 00000000 		.long	.LASF515
 12716 5b1a 26       		.byte	0x26
 12717 5b1b 89       		.byte	0x89
 12718 5b1c 00000000 		.long	.LASF811
 12719 5b20 125A0000 		.long	0x5a12
 12720 5b24 03       		.byte	0x3
 12721 5b25 2B5B0000 		.long	0x5b2b
 12722 5b29 5A       		.uleb128 0x5a
 12723 5b2a 00       		.byte	0
 12724 5b2b 59       		.uleb128 0x59
 12725 5b2c 00000000 		.long	.LASF517
 12726 5b30 26       		.byte	0x26
 12727 5b31 94       		.byte	0x94
 12728 5b32 00000000 		.long	.LASF812
 12729 5b36 7E2B0000 		.long	0x2b7e
 12730 5b3a 03       		.byte	0x3
GAS LISTING /tmp/ccKUqHDa.s 			page 481


 12731 5b3b 415B0000 		.long	0x5b41
 12732 5b3f 5A       		.uleb128 0x5a
 12733 5b40 00       		.byte	0
 12734 5b41 59       		.uleb128 0x59
 12735 5b42 00000000 		.long	.LASF519
 12736 5b46 26       		.byte	0x26
 12737 5b47 9F       		.byte	0x9f
 12738 5b48 00000000 		.long	.LASF813
 12739 5b4c 942B0000 		.long	0x2b94
 12740 5b50 03       		.byte	0x3
 12741 5b51 575B0000 		.long	0x5b57
 12742 5b55 5A       		.uleb128 0x5a
 12743 5b56 00       		.byte	0
 12744 5b57 59       		.uleb128 0x59
 12745 5b58 00000000 		.long	.LASF521
 12746 5b5c 26       		.byte	0x26
 12747 5b5d AB       		.byte	0xab
 12748 5b5e 00000000 		.long	.LASF814
 12749 5b62 942B0000 		.long	0x2b94
 12750 5b66 03       		.byte	0x3
 12751 5b67 6D5B0000 		.long	0x5b6d
 12752 5b6b 5A       		.uleb128 0x5a
 12753 5b6c 00       		.byte	0
 12754 5b6d 59       		.uleb128 0x59
 12755 5b6e 00000000 		.long	.LASF523
 12756 5b72 26       		.byte	0x26
 12757 5b73 B7       		.byte	0xb7
 12758 5b74 00000000 		.long	.LASF815
 12759 5b78 942B0000 		.long	0x2b94
 12760 5b7c 03       		.byte	0x3
 12761 5b7d 835B0000 		.long	0x5b83
 12762 5b81 5A       		.uleb128 0x5a
 12763 5b82 00       		.byte	0
 12764 5b83 21       		.uleb128 0x21
 12765 5b84 00000000 		.long	.LASF525
 12766 5b88 26       		.byte	0x26
 12767 5b89 6401     		.value	0x164
 12768 5b8b 00000000 		.long	.LASF816
 12769 5b8f 845A0000 		.long	0x5a84
 12770 5b93 A25B0000 		.long	0x5ba2
 12771 5b97 13       		.uleb128 0x13
 12772 5b98 2D9F0000 		.long	0x9f2d
 12773 5b9c 13       		.uleb128 0x13
 12774 5b9d B25A0000 		.long	0x5ab2
 12775 5ba1 00       		.byte	0
 12776 5ba2 21       		.uleb128 0x21
 12777 5ba3 00000000 		.long	.LASF525
 12778 5ba7 26       		.byte	0x26
 12779 5ba8 7301     		.value	0x173
 12780 5baa 00000000 		.long	.LASF817
 12781 5bae 845A0000 		.long	0x5a84
 12782 5bb2 C65B0000 		.long	0x5bc6
 12783 5bb6 13       		.uleb128 0x13
 12784 5bb7 2D9F0000 		.long	0x9f2d
 12785 5bbb 13       		.uleb128 0x13
 12786 5bbc B25A0000 		.long	0x5ab2
 12787 5bc0 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 482


 12788 5bc1 9B5A0000 		.long	0x5a9b
 12789 5bc5 00       		.byte	0
 12790 5bc6 31       		.uleb128 0x31
 12791 5bc7 00000000 		.long	.LASF528
 12792 5bcb 26       		.byte	0x26
 12793 5bcc 7E01     		.value	0x17e
 12794 5bce 00000000 		.long	.LASF818
 12795 5bd2 E65B0000 		.long	0x5be6
 12796 5bd6 13       		.uleb128 0x13
 12797 5bd7 2D9F0000 		.long	0x9f2d
 12798 5bdb 13       		.uleb128 0x13
 12799 5bdc 845A0000 		.long	0x5a84
 12800 5be0 13       		.uleb128 0x13
 12801 5be1 B25A0000 		.long	0x5ab2
 12802 5be5 00       		.byte	0
 12803 5be6 21       		.uleb128 0x21
 12804 5be7 00000000 		.long	.LASF177
 12805 5beb 26       		.byte	0x26
 12806 5bec A501     		.value	0x1a5
 12807 5bee 00000000 		.long	.LASF819
 12808 5bf2 B25A0000 		.long	0x5ab2
 12809 5bf6 005C0000 		.long	0x5c00
 12810 5bfa 13       		.uleb128 0x13
 12811 5bfb 1B9F0000 		.long	0x9f1b
 12812 5bff 00       		.byte	0
 12813 5c00 21       		.uleb128 0x21
 12814 5c01 00000000 		.long	.LASF531
 12815 5c05 26       		.byte	0x26
 12816 5c06 B101     		.value	0x1b1
 12817 5c08 00000000 		.long	.LASF820
 12818 5c0c 33590000 		.long	0x5933
 12819 5c10 1A5C0000 		.long	0x5c1a
 12820 5c14 13       		.uleb128 0x13
 12821 5c15 1B9F0000 		.long	0x9f1b
 12822 5c19 00       		.byte	0
 12823 5c1a 06       		.uleb128 0x6
 12824 5c1b 00000000 		.long	.LASF533
 12825 5c1f 26       		.byte	0x26
 12826 5c20 C5       		.byte	0xc5
 12827 5c21 3B5C0000 		.long	0x5c3b
 12828 5c25 1C       		.uleb128 0x1c
 12829 5c26 00000000 		.long	.LASF309
 12830 5c2a 33590000 		.long	0x5933
 12831 5c2e 00       		.byte	0
 12832 5c2f 04       		.uleb128 0x4
 12833 5c30 00000000 		.long	.LASF821
 12834 5c34 01       		.byte	0x1
 12835 5c35 26       		.byte	0x26
 12836 5c36 3F       		.byte	0x3f
 12837 5c37 595C0000 		.long	0x5c59
 12838 5c3b 06       		.uleb128 0x6
 12839 5c3c 00000000 		.long	.LASF394
 12840 5c40 26       		.byte	0x26
 12841 5c41 41       		.byte	0x41
 12842 5c42 BF590000 		.long	0x59bf
 12843 5c46 1C       		.uleb128 0x1c
 12844 5c47 00000000 		.long	.LASF309
GAS LISTING /tmp/ccKUqHDa.s 			page 483


 12845 5c4b 33590000 		.long	0x5933
 12846 5c4f 09       		.uleb128 0x9
 12847 5c50 5F547000 		.string	"_Tp"
 12848 5c54 FC570000 		.long	0x57fc
 12849 5c58 00       		.byte	0
 12850 5c59 04       		.uleb128 0x4
 12851 5c5a 00000000 		.long	.LASF822
 12852 5c5e 18       		.byte	0x18
 12853 5c5f 04       		.byte	0x4
 12854 5c60 48       		.byte	0x48
 12855 5c61 F15E0000 		.long	0x5ef1
 12856 5c65 04       		.uleb128 0x4
 12857 5c66 00000000 		.long	.LASF536
 12858 5c6a 18       		.byte	0x18
 12859 5c6b 04       		.byte	0x4
 12860 5c6c 4F       		.byte	0x4f
 12861 5c6d 175D0000 		.long	0x5d17
 12862 5c71 28       		.uleb128 0x28
 12863 5c72 33590000 		.long	0x5933
 12864 5c76 00       		.byte	0
 12865 5c77 11       		.uleb128 0x11
 12866 5c78 00000000 		.long	.LASF537
 12867 5c7c 04       		.byte	0x4
 12868 5c7d 52       		.byte	0x52
 12869 5c7e 175D0000 		.long	0x5d17
 12870 5c82 00       		.byte	0
 12871 5c83 11       		.uleb128 0x11
 12872 5c84 00000000 		.long	.LASF538
 12873 5c88 04       		.byte	0x4
 12874 5c89 53       		.byte	0x53
 12875 5c8a 175D0000 		.long	0x5d17
 12876 5c8e 08       		.byte	0x8
 12877 5c8f 11       		.uleb128 0x11
 12878 5c90 00000000 		.long	.LASF539
 12879 5c94 04       		.byte	0x4
 12880 5c95 54       		.byte	0x54
 12881 5c96 175D0000 		.long	0x5d17
 12882 5c9a 10       		.byte	0x10
 12883 5c9b 39       		.uleb128 0x39
 12884 5c9c 00000000 		.long	.LASF536
 12885 5ca0 04       		.byte	0x4
 12886 5ca1 56       		.byte	0x56
 12887 5ca2 AA5C0000 		.long	0x5caa
 12888 5ca6 B05C0000 		.long	0x5cb0
 12889 5caa 08       		.uleb128 0x8
 12890 5cab 3F9F0000 		.long	0x9f3f
 12891 5caf 00       		.byte	0
 12892 5cb0 39       		.uleb128 0x39
 12893 5cb1 00000000 		.long	.LASF536
 12894 5cb5 04       		.byte	0x4
 12895 5cb6 5A       		.byte	0x5a
 12896 5cb7 BF5C0000 		.long	0x5cbf
 12897 5cbb CA5C0000 		.long	0x5cca
 12898 5cbf 08       		.uleb128 0x8
 12899 5cc0 3F9F0000 		.long	0x9f3f
 12900 5cc4 13       		.uleb128 0x13
 12901 5cc5 459F0000 		.long	0x9f45
GAS LISTING /tmp/ccKUqHDa.s 			page 484


 12902 5cc9 00       		.byte	0
 12903 5cca 39       		.uleb128 0x39
 12904 5ccb 00000000 		.long	.LASF536
 12905 5ccf 04       		.byte	0x4
 12906 5cd0 5F       		.byte	0x5f
 12907 5cd1 D95C0000 		.long	0x5cd9
 12908 5cd5 E45C0000 		.long	0x5ce4
 12909 5cd9 08       		.uleb128 0x8
 12910 5cda 3F9F0000 		.long	0x9f3f
 12911 5cde 13       		.uleb128 0x13
 12912 5cdf 4B9F0000 		.long	0x9f4b
 12913 5ce3 00       		.byte	0
 12914 5ce4 14       		.uleb128 0x14
 12915 5ce5 00000000 		.long	.LASF540
 12916 5ce9 04       		.byte	0x4
 12917 5cea 65       		.byte	0x65
 12918 5ceb 00000000 		.long	.LASF823
 12919 5cef F75C0000 		.long	0x5cf7
 12920 5cf3 025D0000 		.long	0x5d02
 12921 5cf7 08       		.uleb128 0x8
 12922 5cf8 3F9F0000 		.long	0x9f3f
 12923 5cfc 13       		.uleb128 0x13
 12924 5cfd 519F0000 		.long	0x9f51
 12925 5d01 00       		.byte	0
 12926 5d02 2B       		.uleb128 0x2b
 12927 5d03 00000000 		.long	.LASF542
 12928 5d07 0B5D0000 		.long	0x5d0b
 12929 5d0b 08       		.uleb128 0x8
 12930 5d0c 3F9F0000 		.long	0x9f3f
 12931 5d10 08       		.uleb128 0x8
 12932 5d11 E5710000 		.long	0x71e5
 12933 5d15 00       		.byte	0
 12934 5d16 00       		.byte	0
 12935 5d17 06       		.uleb128 0x6
 12936 5d18 00000000 		.long	.LASF490
 12937 5d1c 04       		.byte	0x4
 12938 5d1d 4D       		.byte	0x4d
 12939 5d1e 51800000 		.long	0x8051
 12940 5d22 0B       		.uleb128 0xb
 12941 5d23 275D0000 		.long	0x5d27
 12942 5d27 06       		.uleb128 0x6
 12943 5d28 00000000 		.long	.LASF543
 12944 5d2c 04       		.byte	0x4
 12945 5d2d 4B       		.byte	0x4b
 12946 5d2e 10810000 		.long	0x8110
 12947 5d32 11       		.uleb128 0x11
 12948 5d33 00000000 		.long	.LASF544
 12949 5d37 04       		.byte	0x4
 12950 5d38 A4       		.byte	0xa4
 12951 5d39 655C0000 		.long	0x5c65
 12952 5d3d 00       		.byte	0
 12953 5d3e 06       		.uleb128 0x6
 12954 5d3f 00000000 		.long	.LASF73
 12955 5d43 04       		.byte	0x4
 12956 5d44 6E       		.byte	0x6e
 12957 5d45 33590000 		.long	0x5933
 12958 5d49 07       		.uleb128 0x7
GAS LISTING /tmp/ccKUqHDa.s 			page 485


 12959 5d4a 00000000 		.long	.LASF545
 12960 5d4e 04       		.byte	0x4
 12961 5d4f 71       		.byte	0x71
 12962 5d50 00000000 		.long	.LASF824
 12963 5d54 579F0000 		.long	0x9f57
 12964 5d58 605D0000 		.long	0x5d60
 12965 5d5c 665D0000 		.long	0x5d66
 12966 5d60 08       		.uleb128 0x8
 12967 5d61 5D9F0000 		.long	0x9f5d
 12968 5d65 00       		.byte	0
 12969 5d66 07       		.uleb128 0x7
 12970 5d67 00000000 		.long	.LASF545
 12971 5d6b 04       		.byte	0x4
 12972 5d6c 75       		.byte	0x75
 12973 5d6d 00000000 		.long	.LASF825
 12974 5d71 459F0000 		.long	0x9f45
 12975 5d75 7D5D0000 		.long	0x5d7d
 12976 5d79 835D0000 		.long	0x5d83
 12977 5d7d 08       		.uleb128 0x8
 12978 5d7e 639F0000 		.long	0x9f63
 12979 5d82 00       		.byte	0
 12980 5d83 07       		.uleb128 0x7
 12981 5d84 00000000 		.long	.LASF268
 12982 5d88 04       		.byte	0x4
 12983 5d89 79       		.byte	0x79
 12984 5d8a 00000000 		.long	.LASF826
 12985 5d8e 3E5D0000 		.long	0x5d3e
 12986 5d92 9A5D0000 		.long	0x5d9a
 12987 5d96 A05D0000 		.long	0x5da0
 12988 5d9a 08       		.uleb128 0x8
 12989 5d9b 639F0000 		.long	0x9f63
 12990 5d9f 00       		.byte	0
 12991 5da0 39       		.uleb128 0x39
 12992 5da1 00000000 		.long	.LASF549
 12993 5da5 04       		.byte	0x4
 12994 5da6 7C       		.byte	0x7c
 12995 5da7 AF5D0000 		.long	0x5daf
 12996 5dab B55D0000 		.long	0x5db5
 12997 5daf 08       		.uleb128 0x8
 12998 5db0 5D9F0000 		.long	0x9f5d
 12999 5db4 00       		.byte	0
 13000 5db5 39       		.uleb128 0x39
 13001 5db6 00000000 		.long	.LASF549
 13002 5dba 04       		.byte	0x4
 13003 5dbb 7F       		.byte	0x7f
 13004 5dbc C45D0000 		.long	0x5dc4
 13005 5dc0 CF5D0000 		.long	0x5dcf
 13006 5dc4 08       		.uleb128 0x8
 13007 5dc5 5D9F0000 		.long	0x9f5d
 13008 5dc9 13       		.uleb128 0x13
 13009 5dca 699F0000 		.long	0x9f69
 13010 5dce 00       		.byte	0
 13011 5dcf 0B       		.uleb128 0xb
 13012 5dd0 3E5D0000 		.long	0x5d3e
 13013 5dd4 39       		.uleb128 0x39
 13014 5dd5 00000000 		.long	.LASF549
 13015 5dd9 04       		.byte	0x4
GAS LISTING /tmp/ccKUqHDa.s 			page 486


 13016 5dda 82       		.byte	0x82
 13017 5ddb E35D0000 		.long	0x5de3
 13018 5ddf EE5D0000 		.long	0x5dee
 13019 5de3 08       		.uleb128 0x8
 13020 5de4 5D9F0000 		.long	0x9f5d
 13021 5de8 13       		.uleb128 0x13
 13022 5de9 DB070000 		.long	0x7db
 13023 5ded 00       		.byte	0
 13024 5dee 39       		.uleb128 0x39
 13025 5def 00000000 		.long	.LASF549
 13026 5df3 04       		.byte	0x4
 13027 5df4 86       		.byte	0x86
 13028 5df5 FD5D0000 		.long	0x5dfd
 13029 5df9 0D5E0000 		.long	0x5e0d
 13030 5dfd 08       		.uleb128 0x8
 13031 5dfe 5D9F0000 		.long	0x9f5d
 13032 5e02 13       		.uleb128 0x13
 13033 5e03 DB070000 		.long	0x7db
 13034 5e07 13       		.uleb128 0x13
 13035 5e08 699F0000 		.long	0x9f69
 13036 5e0c 00       		.byte	0
 13037 5e0d 39       		.uleb128 0x39
 13038 5e0e 00000000 		.long	.LASF549
 13039 5e12 04       		.byte	0x4
 13040 5e13 8B       		.byte	0x8b
 13041 5e14 1C5E0000 		.long	0x5e1c
 13042 5e18 275E0000 		.long	0x5e27
 13043 5e1c 08       		.uleb128 0x8
 13044 5e1d 5D9F0000 		.long	0x9f5d
 13045 5e21 13       		.uleb128 0x13
 13046 5e22 4B9F0000 		.long	0x9f4b
 13047 5e26 00       		.byte	0
 13048 5e27 39       		.uleb128 0x39
 13049 5e28 00000000 		.long	.LASF549
 13050 5e2c 04       		.byte	0x4
 13051 5e2d 8E       		.byte	0x8e
 13052 5e2e 365E0000 		.long	0x5e36
 13053 5e32 415E0000 		.long	0x5e41
 13054 5e36 08       		.uleb128 0x8
 13055 5e37 5D9F0000 		.long	0x9f5d
 13056 5e3b 13       		.uleb128 0x13
 13057 5e3c 6F9F0000 		.long	0x9f6f
 13058 5e40 00       		.byte	0
 13059 5e41 39       		.uleb128 0x39
 13060 5e42 00000000 		.long	.LASF549
 13061 5e46 04       		.byte	0x4
 13062 5e47 92       		.byte	0x92
 13063 5e48 505E0000 		.long	0x5e50
 13064 5e4c 605E0000 		.long	0x5e60
 13065 5e50 08       		.uleb128 0x8
 13066 5e51 5D9F0000 		.long	0x9f5d
 13067 5e55 13       		.uleb128 0x13
 13068 5e56 6F9F0000 		.long	0x9f6f
 13069 5e5a 13       		.uleb128 0x13
 13070 5e5b 699F0000 		.long	0x9f69
 13071 5e5f 00       		.byte	0
 13072 5e60 39       		.uleb128 0x39
GAS LISTING /tmp/ccKUqHDa.s 			page 487


 13073 5e61 00000000 		.long	.LASF550
 13074 5e65 04       		.byte	0x4
 13075 5e66 9F       		.byte	0x9f
 13076 5e67 6F5E0000 		.long	0x5e6f
 13077 5e6b 7A5E0000 		.long	0x5e7a
 13078 5e6f 08       		.uleb128 0x8
 13079 5e70 5D9F0000 		.long	0x9f5d
 13080 5e74 08       		.uleb128 0x8
 13081 5e75 E5710000 		.long	0x71e5
 13082 5e79 00       		.byte	0
 13083 5e7a 07       		.uleb128 0x7
 13084 5e7b 00000000 		.long	.LASF551
 13085 5e7f 04       		.byte	0x4
 13086 5e80 A7       		.byte	0xa7
 13087 5e81 00000000 		.long	.LASF827
 13088 5e85 175D0000 		.long	0x5d17
 13089 5e89 915E0000 		.long	0x5e91
 13090 5e8d 9C5E0000 		.long	0x5e9c
 13091 5e91 08       		.uleb128 0x8
 13092 5e92 5D9F0000 		.long	0x9f5d
 13093 5e96 13       		.uleb128 0x13
 13094 5e97 DB070000 		.long	0x7db
 13095 5e9b 00       		.byte	0
 13096 5e9c 14       		.uleb128 0x14
 13097 5e9d 00000000 		.long	.LASF553
 13098 5ea1 04       		.byte	0x4
 13099 5ea2 AE       		.byte	0xae
 13100 5ea3 00000000 		.long	.LASF828
 13101 5ea7 AF5E0000 		.long	0x5eaf
 13102 5eab BF5E0000 		.long	0x5ebf
 13103 5eaf 08       		.uleb128 0x8
 13104 5eb0 5D9F0000 		.long	0x9f5d
 13105 5eb4 13       		.uleb128 0x13
 13106 5eb5 175D0000 		.long	0x5d17
 13107 5eb9 13       		.uleb128 0x13
 13108 5eba DB070000 		.long	0x7db
 13109 5ebe 00       		.byte	0
 13110 5ebf 17       		.uleb128 0x17
 13111 5ec0 00000000 		.long	.LASF555
 13112 5ec4 04       		.byte	0x4
 13113 5ec5 B7       		.byte	0xb7
 13114 5ec6 00000000 		.long	.LASF829
 13115 5eca 03       		.byte	0x3
 13116 5ecb D35E0000 		.long	0x5ed3
 13117 5ecf DE5E0000 		.long	0x5ede
 13118 5ed3 08       		.uleb128 0x8
 13119 5ed4 5D9F0000 		.long	0x9f5d
 13120 5ed8 13       		.uleb128 0x13
 13121 5ed9 DB070000 		.long	0x7db
 13122 5edd 00       		.byte	0
 13123 5ede 09       		.uleb128 0x9
 13124 5edf 5F547000 		.string	"_Tp"
 13125 5ee3 FC570000 		.long	0x57fc
 13126 5ee7 1C       		.uleb128 0x1c
 13127 5ee8 00000000 		.long	.LASF309
 13128 5eec 33590000 		.long	0x5933
 13129 5ef0 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 488


 13130 5ef1 0B       		.uleb128 0xb
 13131 5ef2 595C0000 		.long	0x5c59
 13132 5ef6 10       		.uleb128 0x10
 13133 5ef7 00000000 		.long	.LASF830
 13134 5efb 18       		.byte	0x18
 13135 5efc 04       		.byte	0x4
 13136 5efd D6       		.byte	0xd6
 13137 5efe B1680000 		.long	0x68b1
 13138 5f02 0E       		.uleb128 0xe
 13139 5f03 04       		.byte	0x4
 13140 5f04 D6       		.byte	0xd6
 13141 5f05 7A5E0000 		.long	0x5e7a
 13142 5f09 0E       		.uleb128 0xe
 13143 5f0a 04       		.byte	0x4
 13144 5f0b D6       		.byte	0xd6
 13145 5f0c 9C5E0000 		.long	0x5e9c
 13146 5f10 0E       		.uleb128 0xe
 13147 5f11 04       		.byte	0x4
 13148 5f12 D6       		.byte	0xd6
 13149 5f13 325D0000 		.long	0x5d32
 13150 5f17 0E       		.uleb128 0xe
 13151 5f18 04       		.byte	0x4
 13152 5f19 D6       		.byte	0xd6
 13153 5f1a 665D0000 		.long	0x5d66
 13154 5f1e 0E       		.uleb128 0xe
 13155 5f1f 04       		.byte	0x4
 13156 5f20 D6       		.byte	0xd6
 13157 5f21 835D0000 		.long	0x5d83
 13158 5f25 24       		.uleb128 0x24
 13159 5f26 595C0000 		.long	0x5c59
 13160 5f2a 00       		.byte	0
 13161 5f2b 02       		.byte	0x2
 13162 5f2c 25       		.uleb128 0x25
 13163 5f2d 00000000 		.long	.LASF5
 13164 5f31 04       		.byte	0x4
 13165 5f32 E2       		.byte	0xe2
 13166 5f33 FC570000 		.long	0x57fc
 13167 5f37 01       		.byte	0x1
 13168 5f38 25       		.uleb128 0x25
 13169 5f39 00000000 		.long	.LASF490
 13170 5f3d 04       		.byte	0x4
 13171 5f3e E3       		.byte	0xe3
 13172 5f3f 175D0000 		.long	0x5d17
 13173 5f43 01       		.byte	0x1
 13174 5f44 25       		.uleb128 0x25
 13175 5f45 00000000 		.long	.LASF62
 13176 5f49 04       		.byte	0x4
 13177 5f4a E5       		.byte	0xe5
 13178 5f4b 5C800000 		.long	0x805c
 13179 5f4f 01       		.byte	0x1
 13180 5f50 25       		.uleb128 0x25
 13181 5f51 00000000 		.long	.LASF63
 13182 5f55 04       		.byte	0x4
 13183 5f56 E6       		.byte	0xe6
 13184 5f57 67800000 		.long	0x8067
 13185 5f5b 01       		.byte	0x1
 13186 5f5c 25       		.uleb128 0x25
GAS LISTING /tmp/ccKUqHDa.s 			page 489


 13187 5f5d 00000000 		.long	.LASF74
 13188 5f61 04       		.byte	0x4
 13189 5f62 E7       		.byte	0xe7
 13190 5f63 2F810000 		.long	0x812f
 13191 5f67 01       		.byte	0x1
 13192 5f68 25       		.uleb128 0x25
 13193 5f69 00000000 		.long	.LASF75
 13194 5f6d 04       		.byte	0x4
 13195 5f6e E9       		.byte	0xe9
 13196 5f6f 4E830000 		.long	0x834e
 13197 5f73 01       		.byte	0x1
 13198 5f74 25       		.uleb128 0x25
 13199 5f75 00000000 		.long	.LASF76
 13200 5f79 04       		.byte	0x4
 13201 5f7a EA       		.byte	0xea
 13202 5f7b B1680000 		.long	0x68b1
 13203 5f7f 01       		.byte	0x1
 13204 5f80 25       		.uleb128 0x25
 13205 5f81 00000000 		.long	.LASF77
 13206 5f85 04       		.byte	0x4
 13207 5f86 EB       		.byte	0xeb
 13208 5f87 B6680000 		.long	0x68b6
 13209 5f8b 01       		.byte	0x1
 13210 5f8c 25       		.uleb128 0x25
 13211 5f8d 00000000 		.long	.LASF61
 13212 5f91 04       		.byte	0x4
 13213 5f92 EC       		.byte	0xec
 13214 5f93 DB070000 		.long	0x7db
 13215 5f97 01       		.byte	0x1
 13216 5f98 25       		.uleb128 0x25
 13217 5f99 00000000 		.long	.LASF73
 13218 5f9d 04       		.byte	0x4
 13219 5f9e EE       		.byte	0xee
 13220 5f9f 33590000 		.long	0x5933
 13221 5fa3 01       		.byte	0x1
 13222 5fa4 15       		.uleb128 0x15
 13223 5fa5 00000000 		.long	.LASF558
 13224 5fa9 04       		.byte	0x4
 13225 5faa FD       		.byte	0xfd
 13226 5fab 01       		.byte	0x1
 13227 5fac B45F0000 		.long	0x5fb4
 13228 5fb0 BA5F0000 		.long	0x5fba
 13229 5fb4 08       		.uleb128 0x8
 13230 5fb5 759F0000 		.long	0x9f75
 13231 5fb9 00       		.byte	0
 13232 5fba 34       		.uleb128 0x34
 13233 5fbb 00000000 		.long	.LASF558
 13234 5fbf 04       		.byte	0x4
 13235 5fc0 0801     		.value	0x108
 13236 5fc2 01       		.byte	0x1
 13237 5fc3 CB5F0000 		.long	0x5fcb
 13238 5fc7 D65F0000 		.long	0x5fd6
 13239 5fcb 08       		.uleb128 0x8
 13240 5fcc 759F0000 		.long	0x9f75
 13241 5fd0 13       		.uleb128 0x13
 13242 5fd1 7B9F0000 		.long	0x9f7b
 13243 5fd5 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 490


 13244 5fd6 0B       		.uleb128 0xb
 13245 5fd7 985F0000 		.long	0x5f98
 13246 5fdb 34       		.uleb128 0x34
 13247 5fdc 00000000 		.long	.LASF558
 13248 5fe0 04       		.byte	0x4
 13249 5fe1 1501     		.value	0x115
 13250 5fe3 01       		.byte	0x1
 13251 5fe4 EC5F0000 		.long	0x5fec
 13252 5fe8 FC5F0000 		.long	0x5ffc
 13253 5fec 08       		.uleb128 0x8
 13254 5fed 759F0000 		.long	0x9f75
 13255 5ff1 13       		.uleb128 0x13
 13256 5ff2 8C5F0000 		.long	0x5f8c
 13257 5ff6 13       		.uleb128 0x13
 13258 5ff7 7B9F0000 		.long	0x9f7b
 13259 5ffb 00       		.byte	0
 13260 5ffc 33       		.uleb128 0x33
 13261 5ffd 00000000 		.long	.LASF558
 13262 6001 04       		.byte	0x4
 13263 6002 2101     		.value	0x121
 13264 6004 01       		.byte	0x1
 13265 6005 0D600000 		.long	0x600d
 13266 6009 22600000 		.long	0x6022
 13267 600d 08       		.uleb128 0x8
 13268 600e 759F0000 		.long	0x9f75
 13269 6012 13       		.uleb128 0x13
 13270 6013 8C5F0000 		.long	0x5f8c
 13271 6017 13       		.uleb128 0x13
 13272 6018 819F0000 		.long	0x9f81
 13273 601c 13       		.uleb128 0x13
 13274 601d 7B9F0000 		.long	0x9f7b
 13275 6021 00       		.byte	0
 13276 6022 0B       		.uleb128 0xb
 13277 6023 2C5F0000 		.long	0x5f2c
 13278 6027 33       		.uleb128 0x33
 13279 6028 00000000 		.long	.LASF558
 13280 602c 04       		.byte	0x4
 13281 602d 3E01     		.value	0x13e
 13282 602f 01       		.byte	0x1
 13283 6030 38600000 		.long	0x6038
 13284 6034 43600000 		.long	0x6043
 13285 6038 08       		.uleb128 0x8
 13286 6039 759F0000 		.long	0x9f75
 13287 603d 13       		.uleb128 0x13
 13288 603e 879F0000 		.long	0x9f87
 13289 6042 00       		.byte	0
 13290 6043 33       		.uleb128 0x33
 13291 6044 00000000 		.long	.LASF558
 13292 6048 04       		.byte	0x4
 13293 6049 4F01     		.value	0x14f
 13294 604b 01       		.byte	0x1
 13295 604c 54600000 		.long	0x6054
 13296 6050 5F600000 		.long	0x605f
 13297 6054 08       		.uleb128 0x8
 13298 6055 759F0000 		.long	0x9f75
 13299 6059 13       		.uleb128 0x13
 13300 605a 8D9F0000 		.long	0x9f8d
GAS LISTING /tmp/ccKUqHDa.s 			page 491


 13301 605e 00       		.byte	0
 13302 605f 33       		.uleb128 0x33
 13303 6060 00000000 		.long	.LASF558
 13304 6064 04       		.byte	0x4
 13305 6065 5301     		.value	0x153
 13306 6067 01       		.byte	0x1
 13307 6068 70600000 		.long	0x6070
 13308 606c 80600000 		.long	0x6080
 13309 6070 08       		.uleb128 0x8
 13310 6071 759F0000 		.long	0x9f75
 13311 6075 13       		.uleb128 0x13
 13312 6076 879F0000 		.long	0x9f87
 13313 607a 13       		.uleb128 0x13
 13314 607b 7B9F0000 		.long	0x9f7b
 13315 607f 00       		.byte	0
 13316 6080 33       		.uleb128 0x33
 13317 6081 00000000 		.long	.LASF558
 13318 6085 04       		.byte	0x4
 13319 6086 5C01     		.value	0x15c
 13320 6088 01       		.byte	0x1
 13321 6089 91600000 		.long	0x6091
 13322 608d A1600000 		.long	0x60a1
 13323 6091 08       		.uleb128 0x8
 13324 6092 759F0000 		.long	0x9f75
 13325 6096 13       		.uleb128 0x13
 13326 6097 8D9F0000 		.long	0x9f8d
 13327 609b 13       		.uleb128 0x13
 13328 609c 7B9F0000 		.long	0x9f7b
 13329 60a0 00       		.byte	0
 13330 60a1 33       		.uleb128 0x33
 13331 60a2 00000000 		.long	.LASF558
 13332 60a6 04       		.byte	0x4
 13333 60a7 7501     		.value	0x175
 13334 60a9 01       		.byte	0x1
 13335 60aa B2600000 		.long	0x60b2
 13336 60ae C2600000 		.long	0x60c2
 13337 60b2 08       		.uleb128 0x8
 13338 60b3 759F0000 		.long	0x9f75
 13339 60b7 13       		.uleb128 0x13
 13340 60b8 C0680000 		.long	0x68c0
 13341 60bc 13       		.uleb128 0x13
 13342 60bd 7B9F0000 		.long	0x9f7b
 13343 60c1 00       		.byte	0
 13344 60c2 33       		.uleb128 0x33
 13345 60c3 00000000 		.long	.LASF559
 13346 60c7 04       		.byte	0x4
 13347 60c8 A701     		.value	0x1a7
 13348 60ca 01       		.byte	0x1
 13349 60cb D3600000 		.long	0x60d3
 13350 60cf DE600000 		.long	0x60de
 13351 60d3 08       		.uleb128 0x8
 13352 60d4 759F0000 		.long	0x9f75
 13353 60d8 08       		.uleb128 0x8
 13354 60d9 E5710000 		.long	0x71e5
 13355 60dd 00       		.byte	0
 13356 60de 16       		.uleb128 0x16
 13357 60df 00000000 		.long	.LASF18
GAS LISTING /tmp/ccKUqHDa.s 			page 492


 13358 60e3 27       		.byte	0x27
 13359 60e4 A7       		.byte	0xa7
 13360 60e5 00000000 		.long	.LASF831
 13361 60e9 939F0000 		.long	0x9f93
 13362 60ed 01       		.byte	0x1
 13363 60ee F6600000 		.long	0x60f6
 13364 60f2 01610000 		.long	0x6101
 13365 60f6 08       		.uleb128 0x8
 13366 60f7 759F0000 		.long	0x9f75
 13367 60fb 13       		.uleb128 0x13
 13368 60fc 879F0000 		.long	0x9f87
 13369 6100 00       		.byte	0
 13370 6101 35       		.uleb128 0x35
 13371 6102 00000000 		.long	.LASF18
 13372 6106 04       		.byte	0x4
 13373 6107 C001     		.value	0x1c0
 13374 6109 00000000 		.long	.LASF832
 13375 610d 939F0000 		.long	0x9f93
 13376 6111 01       		.byte	0x1
 13377 6112 1A610000 		.long	0x611a
 13378 6116 25610000 		.long	0x6125
 13379 611a 08       		.uleb128 0x8
 13380 611b 759F0000 		.long	0x9f75
 13381 611f 13       		.uleb128 0x13
 13382 6120 8D9F0000 		.long	0x9f8d
 13383 6124 00       		.byte	0
 13384 6125 35       		.uleb128 0x35
 13385 6126 00000000 		.long	.LASF18
 13386 612a 04       		.byte	0x4
 13387 612b D601     		.value	0x1d6
 13388 612d 00000000 		.long	.LASF833
 13389 6131 939F0000 		.long	0x9f93
 13390 6135 01       		.byte	0x1
 13391 6136 3E610000 		.long	0x613e
 13392 613a 49610000 		.long	0x6149
 13393 613e 08       		.uleb128 0x8
 13394 613f 759F0000 		.long	0x9f75
 13395 6143 13       		.uleb128 0x13
 13396 6144 C0680000 		.long	0x68c0
 13397 6148 00       		.byte	0
 13398 6149 37       		.uleb128 0x37
 13399 614a 00000000 		.long	.LASF48
 13400 614e 04       		.byte	0x4
 13401 614f E801     		.value	0x1e8
 13402 6151 00000000 		.long	.LASF834
 13403 6155 01       		.byte	0x1
 13404 6156 5E610000 		.long	0x615e
 13405 615a 6E610000 		.long	0x616e
 13406 615e 08       		.uleb128 0x8
 13407 615f 759F0000 		.long	0x9f75
 13408 6163 13       		.uleb128 0x13
 13409 6164 8C5F0000 		.long	0x5f8c
 13410 6168 13       		.uleb128 0x13
 13411 6169 819F0000 		.long	0x9f81
 13412 616d 00       		.byte	0
 13413 616e 37       		.uleb128 0x37
 13414 616f 00000000 		.long	.LASF48
GAS LISTING /tmp/ccKUqHDa.s 			page 493


 13415 6173 04       		.byte	0x4
 13416 6174 1502     		.value	0x215
 13417 6176 00000000 		.long	.LASF835
 13418 617a 01       		.byte	0x1
 13419 617b 83610000 		.long	0x6183
 13420 617f 8E610000 		.long	0x618e
 13421 6183 08       		.uleb128 0x8
 13422 6184 759F0000 		.long	0x9f75
 13423 6188 13       		.uleb128 0x13
 13424 6189 C0680000 		.long	0x68c0
 13425 618d 00       		.byte	0
 13426 618e 35       		.uleb128 0x35
 13427 618f 00000000 		.long	.LASF155
 13428 6193 04       		.byte	0x4
 13429 6194 2302     		.value	0x223
 13430 6196 00000000 		.long	.LASF836
 13431 619a 5C5F0000 		.long	0x5f5c
 13432 619e 01       		.byte	0x1
 13433 619f A7610000 		.long	0x61a7
 13434 61a3 AD610000 		.long	0x61ad
 13435 61a7 08       		.uleb128 0x8
 13436 61a8 759F0000 		.long	0x9f75
 13437 61ac 00       		.byte	0
 13438 61ad 35       		.uleb128 0x35
 13439 61ae 00000000 		.long	.LASF155
 13440 61b2 04       		.byte	0x4
 13441 61b3 2C02     		.value	0x22c
 13442 61b5 00000000 		.long	.LASF837
 13443 61b9 685F0000 		.long	0x5f68
 13444 61bd 01       		.byte	0x1
 13445 61be C6610000 		.long	0x61c6
 13446 61c2 CC610000 		.long	0x61cc
 13447 61c6 08       		.uleb128 0x8
 13448 61c7 999F0000 		.long	0x9f99
 13449 61cb 00       		.byte	0
 13450 61cc 36       		.uleb128 0x36
 13451 61cd 656E6400 		.string	"end"
 13452 61d1 04       		.byte	0x4
 13453 61d2 3502     		.value	0x235
 13454 61d4 00000000 		.long	.LASF838
 13455 61d8 5C5F0000 		.long	0x5f5c
 13456 61dc 01       		.byte	0x1
 13457 61dd E5610000 		.long	0x61e5
 13458 61e1 EB610000 		.long	0x61eb
 13459 61e5 08       		.uleb128 0x8
 13460 61e6 759F0000 		.long	0x9f75
 13461 61ea 00       		.byte	0
 13462 61eb 36       		.uleb128 0x36
 13463 61ec 656E6400 		.string	"end"
 13464 61f0 04       		.byte	0x4
 13465 61f1 3E02     		.value	0x23e
 13466 61f3 00000000 		.long	.LASF839
 13467 61f7 685F0000 		.long	0x5f68
 13468 61fb 01       		.byte	0x1
 13469 61fc 04620000 		.long	0x6204
 13470 6200 0A620000 		.long	0x620a
 13471 6204 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 494


 13472 6205 999F0000 		.long	0x9f99
 13473 6209 00       		.byte	0
 13474 620a 35       		.uleb128 0x35
 13475 620b 00000000 		.long	.LASF160
 13476 620f 04       		.byte	0x4
 13477 6210 4702     		.value	0x247
 13478 6212 00000000 		.long	.LASF840
 13479 6216 805F0000 		.long	0x5f80
 13480 621a 01       		.byte	0x1
 13481 621b 23620000 		.long	0x6223
 13482 621f 29620000 		.long	0x6229
 13483 6223 08       		.uleb128 0x8
 13484 6224 759F0000 		.long	0x9f75
 13485 6228 00       		.byte	0
 13486 6229 35       		.uleb128 0x35
 13487 622a 00000000 		.long	.LASF160
 13488 622e 04       		.byte	0x4
 13489 622f 5002     		.value	0x250
 13490 6231 00000000 		.long	.LASF841
 13491 6235 745F0000 		.long	0x5f74
 13492 6239 01       		.byte	0x1
 13493 623a 42620000 		.long	0x6242
 13494 623e 48620000 		.long	0x6248
 13495 6242 08       		.uleb128 0x8
 13496 6243 999F0000 		.long	0x9f99
 13497 6247 00       		.byte	0
 13498 6248 35       		.uleb128 0x35
 13499 6249 00000000 		.long	.LASF163
 13500 624d 04       		.byte	0x4
 13501 624e 5902     		.value	0x259
 13502 6250 00000000 		.long	.LASF842
 13503 6254 805F0000 		.long	0x5f80
 13504 6258 01       		.byte	0x1
 13505 6259 61620000 		.long	0x6261
 13506 625d 67620000 		.long	0x6267
 13507 6261 08       		.uleb128 0x8
 13508 6262 759F0000 		.long	0x9f75
 13509 6266 00       		.byte	0
 13510 6267 35       		.uleb128 0x35
 13511 6268 00000000 		.long	.LASF163
 13512 626c 04       		.byte	0x4
 13513 626d 6202     		.value	0x262
 13514 626f 00000000 		.long	.LASF843
 13515 6273 745F0000 		.long	0x5f74
 13516 6277 01       		.byte	0x1
 13517 6278 80620000 		.long	0x6280
 13518 627c 86620000 		.long	0x6286
 13519 6280 08       		.uleb128 0x8
 13520 6281 999F0000 		.long	0x9f99
 13521 6285 00       		.byte	0
 13522 6286 35       		.uleb128 0x35
 13523 6287 00000000 		.long	.LASF166
 13524 628b 04       		.byte	0x4
 13525 628c 6C02     		.value	0x26c
 13526 628e 00000000 		.long	.LASF844
 13527 6292 685F0000 		.long	0x5f68
 13528 6296 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 495


 13529 6297 9F620000 		.long	0x629f
 13530 629b A5620000 		.long	0x62a5
 13531 629f 08       		.uleb128 0x8
 13532 62a0 999F0000 		.long	0x9f99
 13533 62a4 00       		.byte	0
 13534 62a5 35       		.uleb128 0x35
 13535 62a6 00000000 		.long	.LASF168
 13536 62aa 04       		.byte	0x4
 13537 62ab 7502     		.value	0x275
 13538 62ad 00000000 		.long	.LASF845
 13539 62b1 685F0000 		.long	0x5f68
 13540 62b5 01       		.byte	0x1
 13541 62b6 BE620000 		.long	0x62be
 13542 62ba C4620000 		.long	0x62c4
 13543 62be 08       		.uleb128 0x8
 13544 62bf 999F0000 		.long	0x9f99
 13545 62c3 00       		.byte	0
 13546 62c4 35       		.uleb128 0x35
 13547 62c5 00000000 		.long	.LASF170
 13548 62c9 04       		.byte	0x4
 13549 62ca 7E02     		.value	0x27e
 13550 62cc 00000000 		.long	.LASF846
 13551 62d0 745F0000 		.long	0x5f74
 13552 62d4 01       		.byte	0x1
 13553 62d5 DD620000 		.long	0x62dd
 13554 62d9 E3620000 		.long	0x62e3
 13555 62dd 08       		.uleb128 0x8
 13556 62de 999F0000 		.long	0x9f99
 13557 62e2 00       		.byte	0
 13558 62e3 35       		.uleb128 0x35
 13559 62e4 00000000 		.long	.LASF172
 13560 62e8 04       		.byte	0x4
 13561 62e9 8702     		.value	0x287
 13562 62eb 00000000 		.long	.LASF847
 13563 62ef 745F0000 		.long	0x5f74
 13564 62f3 01       		.byte	0x1
 13565 62f4 FC620000 		.long	0x62fc
 13566 62f8 02630000 		.long	0x6302
 13567 62fc 08       		.uleb128 0x8
 13568 62fd 999F0000 		.long	0x9f99
 13569 6301 00       		.byte	0
 13570 6302 35       		.uleb128 0x35
 13571 6303 00000000 		.long	.LASF174
 13572 6307 04       		.byte	0x4
 13573 6308 8E02     		.value	0x28e
 13574 630a 00000000 		.long	.LASF848
 13575 630e 8C5F0000 		.long	0x5f8c
 13576 6312 01       		.byte	0x1
 13577 6313 1B630000 		.long	0x631b
 13578 6317 21630000 		.long	0x6321
 13579 631b 08       		.uleb128 0x8
 13580 631c 999F0000 		.long	0x9f99
 13581 6320 00       		.byte	0
 13582 6321 35       		.uleb128 0x35
 13583 6322 00000000 		.long	.LASF177
 13584 6326 04       		.byte	0x4
 13585 6327 9302     		.value	0x293
GAS LISTING /tmp/ccKUqHDa.s 			page 496


 13586 6329 00000000 		.long	.LASF849
 13587 632d 8C5F0000 		.long	0x5f8c
 13588 6331 01       		.byte	0x1
 13589 6332 3A630000 		.long	0x633a
 13590 6336 40630000 		.long	0x6340
 13591 633a 08       		.uleb128 0x8
 13592 633b 999F0000 		.long	0x9f99
 13593 633f 00       		.byte	0
 13594 6340 37       		.uleb128 0x37
 13595 6341 00000000 		.long	.LASF179
 13596 6345 04       		.byte	0x4
 13597 6346 A102     		.value	0x2a1
 13598 6348 00000000 		.long	.LASF850
 13599 634c 01       		.byte	0x1
 13600 634d 55630000 		.long	0x6355
 13601 6351 60630000 		.long	0x6360
 13602 6355 08       		.uleb128 0x8
 13603 6356 759F0000 		.long	0x9f75
 13604 635a 13       		.uleb128 0x13
 13605 635b 8C5F0000 		.long	0x5f8c
 13606 635f 00       		.byte	0
 13607 6360 37       		.uleb128 0x37
 13608 6361 00000000 		.long	.LASF179
 13609 6365 04       		.byte	0x4
 13610 6366 B502     		.value	0x2b5
 13611 6368 00000000 		.long	.LASF851
 13612 636c 01       		.byte	0x1
 13613 636d 75630000 		.long	0x6375
 13614 6371 85630000 		.long	0x6385
 13615 6375 08       		.uleb128 0x8
 13616 6376 759F0000 		.long	0x9f75
 13617 637a 13       		.uleb128 0x13
 13618 637b 8C5F0000 		.long	0x5f8c
 13619 637f 13       		.uleb128 0x13
 13620 6380 819F0000 		.long	0x9f81
 13621 6384 00       		.byte	0
 13622 6385 37       		.uleb128 0x37
 13623 6386 00000000 		.long	.LASF182
 13624 638a 04       		.byte	0x4
 13625 638b D502     		.value	0x2d5
 13626 638d 00000000 		.long	.LASF852
 13627 6391 01       		.byte	0x1
 13628 6392 9A630000 		.long	0x639a
 13629 6396 A0630000 		.long	0x63a0
 13630 639a 08       		.uleb128 0x8
 13631 639b 759F0000 		.long	0x9f75
 13632 639f 00       		.byte	0
 13633 63a0 35       		.uleb128 0x35
 13634 63a1 00000000 		.long	.LASF184
 13635 63a5 04       		.byte	0x4
 13636 63a6 DE02     		.value	0x2de
 13637 63a8 00000000 		.long	.LASF853
 13638 63ac 8C5F0000 		.long	0x5f8c
 13639 63b0 01       		.byte	0x1
 13640 63b1 B9630000 		.long	0x63b9
 13641 63b5 BF630000 		.long	0x63bf
 13642 63b9 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 497


 13643 63ba 999F0000 		.long	0x9f99
 13644 63be 00       		.byte	0
 13645 63bf 35       		.uleb128 0x35
 13646 63c0 00000000 		.long	.LASF190
 13647 63c4 04       		.byte	0x4
 13648 63c5 E702     		.value	0x2e7
 13649 63c7 00000000 		.long	.LASF854
 13650 63cb A3710000 		.long	0x71a3
 13651 63cf 01       		.byte	0x1
 13652 63d0 D8630000 		.long	0x63d8
 13653 63d4 DE630000 		.long	0x63de
 13654 63d8 08       		.uleb128 0x8
 13655 63d9 999F0000 		.long	0x9f99
 13656 63dd 00       		.byte	0
 13657 63de 17       		.uleb128 0x17
 13658 63df 00000000 		.long	.LASF186
 13659 63e3 27       		.byte	0x27
 13660 63e4 41       		.byte	0x41
 13661 63e5 00000000 		.long	.LASF855
 13662 63e9 01       		.byte	0x1
 13663 63ea F2630000 		.long	0x63f2
 13664 63ee FD630000 		.long	0x63fd
 13665 63f2 08       		.uleb128 0x8
 13666 63f3 759F0000 		.long	0x9f75
 13667 63f7 13       		.uleb128 0x13
 13668 63f8 8C5F0000 		.long	0x5f8c
 13669 63fc 00       		.byte	0
 13670 63fd 35       		.uleb128 0x35
 13671 63fe 00000000 		.long	.LASF192
 13672 6402 04       		.byte	0x4
 13673 6403 0B03     		.value	0x30b
 13674 6405 00000000 		.long	.LASF856
 13675 6409 445F0000 		.long	0x5f44
 13676 640d 01       		.byte	0x1
 13677 640e 16640000 		.long	0x6416
 13678 6412 21640000 		.long	0x6421
 13679 6416 08       		.uleb128 0x8
 13680 6417 759F0000 		.long	0x9f75
 13681 641b 13       		.uleb128 0x13
 13682 641c 8C5F0000 		.long	0x5f8c
 13683 6420 00       		.byte	0
 13684 6421 35       		.uleb128 0x35
 13685 6422 00000000 		.long	.LASF192
 13686 6426 04       		.byte	0x4
 13687 6427 1A03     		.value	0x31a
 13688 6429 00000000 		.long	.LASF857
 13689 642d 505F0000 		.long	0x5f50
 13690 6431 01       		.byte	0x1
 13691 6432 3A640000 		.long	0x643a
 13692 6436 45640000 		.long	0x6445
 13693 643a 08       		.uleb128 0x8
 13694 643b 999F0000 		.long	0x9f99
 13695 643f 13       		.uleb128 0x13
 13696 6440 8C5F0000 		.long	0x5f8c
 13697 6444 00       		.byte	0
 13698 6445 37       		.uleb128 0x37
 13699 6446 00000000 		.long	.LASF587
GAS LISTING /tmp/ccKUqHDa.s 			page 498


 13700 644a 04       		.byte	0x4
 13701 644b 2003     		.value	0x320
 13702 644d 00000000 		.long	.LASF858
 13703 6451 02       		.byte	0x2
 13704 6452 5A640000 		.long	0x645a
 13705 6456 65640000 		.long	0x6465
 13706 645a 08       		.uleb128 0x8
 13707 645b 999F0000 		.long	0x9f99
 13708 645f 13       		.uleb128 0x13
 13709 6460 8C5F0000 		.long	0x5f8c
 13710 6464 00       		.byte	0
 13711 6465 36       		.uleb128 0x36
 13712 6466 617400   		.string	"at"
 13713 6469 04       		.byte	0x4
 13714 646a 3603     		.value	0x336
 13715 646c 00000000 		.long	.LASF859
 13716 6470 445F0000 		.long	0x5f44
 13717 6474 01       		.byte	0x1
 13718 6475 7D640000 		.long	0x647d
 13719 6479 88640000 		.long	0x6488
 13720 647d 08       		.uleb128 0x8
 13721 647e 759F0000 		.long	0x9f75
 13722 6482 13       		.uleb128 0x13
 13723 6483 8C5F0000 		.long	0x5f8c
 13724 6487 00       		.byte	0
 13725 6488 36       		.uleb128 0x36
 13726 6489 617400   		.string	"at"
 13727 648c 04       		.byte	0x4
 13728 648d 4803     		.value	0x348
 13729 648f 00000000 		.long	.LASF860
 13730 6493 505F0000 		.long	0x5f50
 13731 6497 01       		.byte	0x1
 13732 6498 A0640000 		.long	0x64a0
 13733 649c AB640000 		.long	0x64ab
 13734 64a0 08       		.uleb128 0x8
 13735 64a1 999F0000 		.long	0x9f99
 13736 64a5 13       		.uleb128 0x13
 13737 64a6 8C5F0000 		.long	0x5f8c
 13738 64aa 00       		.byte	0
 13739 64ab 35       		.uleb128 0x35
 13740 64ac 00000000 		.long	.LASF197
 13741 64b0 04       		.byte	0x4
 13742 64b1 5303     		.value	0x353
 13743 64b3 00000000 		.long	.LASF861
 13744 64b7 445F0000 		.long	0x5f44
 13745 64bb 01       		.byte	0x1
 13746 64bc C4640000 		.long	0x64c4
 13747 64c0 CA640000 		.long	0x64ca
 13748 64c4 08       		.uleb128 0x8
 13749 64c5 759F0000 		.long	0x9f75
 13750 64c9 00       		.byte	0
 13751 64ca 35       		.uleb128 0x35
 13752 64cb 00000000 		.long	.LASF197
 13753 64cf 04       		.byte	0x4
 13754 64d0 5B03     		.value	0x35b
 13755 64d2 00000000 		.long	.LASF862
 13756 64d6 505F0000 		.long	0x5f50
GAS LISTING /tmp/ccKUqHDa.s 			page 499


 13757 64da 01       		.byte	0x1
 13758 64db E3640000 		.long	0x64e3
 13759 64df E9640000 		.long	0x64e9
 13760 64e3 08       		.uleb128 0x8
 13761 64e4 999F0000 		.long	0x9f99
 13762 64e8 00       		.byte	0
 13763 64e9 35       		.uleb128 0x35
 13764 64ea 00000000 		.long	.LASF200
 13765 64ee 04       		.byte	0x4
 13766 64ef 6303     		.value	0x363
 13767 64f1 00000000 		.long	.LASF863
 13768 64f5 445F0000 		.long	0x5f44
 13769 64f9 01       		.byte	0x1
 13770 64fa 02650000 		.long	0x6502
 13771 64fe 08650000 		.long	0x6508
 13772 6502 08       		.uleb128 0x8
 13773 6503 759F0000 		.long	0x9f75
 13774 6507 00       		.byte	0
 13775 6508 35       		.uleb128 0x35
 13776 6509 00000000 		.long	.LASF200
 13777 650d 04       		.byte	0x4
 13778 650e 6B03     		.value	0x36b
 13779 6510 00000000 		.long	.LASF864
 13780 6514 505F0000 		.long	0x5f50
 13781 6518 01       		.byte	0x1
 13782 6519 21650000 		.long	0x6521
 13783 651d 27650000 		.long	0x6527
 13784 6521 08       		.uleb128 0x8
 13785 6522 999F0000 		.long	0x9f99
 13786 6526 00       		.byte	0
 13787 6527 35       		.uleb128 0x35
 13788 6528 00000000 		.long	.LASF266
 13789 652c 04       		.byte	0x4
 13790 652d 7A03     		.value	0x37a
 13791 652f 00000000 		.long	.LASF865
 13792 6533 EB9E0000 		.long	0x9eeb
 13793 6537 01       		.byte	0x1
 13794 6538 40650000 		.long	0x6540
 13795 653c 46650000 		.long	0x6546
 13796 6540 08       		.uleb128 0x8
 13797 6541 759F0000 		.long	0x9f75
 13798 6545 00       		.byte	0
 13799 6546 35       		.uleb128 0x35
 13800 6547 00000000 		.long	.LASF266
 13801 654b 04       		.byte	0x4
 13802 654c 8203     		.value	0x382
 13803 654e 00000000 		.long	.LASF866
 13804 6552 F19E0000 		.long	0x9ef1
 13805 6556 01       		.byte	0x1
 13806 6557 5F650000 		.long	0x655f
 13807 655b 65650000 		.long	0x6565
 13808 655f 08       		.uleb128 0x8
 13809 6560 999F0000 		.long	0x9f99
 13810 6564 00       		.byte	0
 13811 6565 37       		.uleb128 0x37
 13812 6566 00000000 		.long	.LASF215
 13813 656a 04       		.byte	0x4
GAS LISTING /tmp/ccKUqHDa.s 			page 500


 13814 656b 9103     		.value	0x391
 13815 656d 00000000 		.long	.LASF867
 13816 6571 01       		.byte	0x1
 13817 6572 7A650000 		.long	0x657a
 13818 6576 85650000 		.long	0x6585
 13819 657a 08       		.uleb128 0x8
 13820 657b 759F0000 		.long	0x9f75
 13821 657f 13       		.uleb128 0x13
 13822 6580 819F0000 		.long	0x9f81
 13823 6584 00       		.byte	0
 13824 6585 37       		.uleb128 0x37
 13825 6586 00000000 		.long	.LASF215
 13826 658a 04       		.byte	0x4
 13827 658b A303     		.value	0x3a3
 13828 658d 00000000 		.long	.LASF868
 13829 6591 01       		.byte	0x1
 13830 6592 9A650000 		.long	0x659a
 13831 6596 A5650000 		.long	0x65a5
 13832 659a 08       		.uleb128 0x8
 13833 659b 759F0000 		.long	0x9f75
 13834 659f 13       		.uleb128 0x13
 13835 65a0 9F9F0000 		.long	0x9f9f
 13836 65a4 00       		.byte	0
 13837 65a5 37       		.uleb128 0x37
 13838 65a6 00000000 		.long	.LASF237
 13839 65aa 04       		.byte	0x4
 13840 65ab B503     		.value	0x3b5
 13841 65ad 00000000 		.long	.LASF869
 13842 65b1 01       		.byte	0x1
 13843 65b2 BA650000 		.long	0x65ba
 13844 65b6 C0650000 		.long	0x65c0
 13845 65ba 08       		.uleb128 0x8
 13846 65bb 759F0000 		.long	0x9f75
 13847 65bf 00       		.byte	0
 13848 65c0 16       		.uleb128 0x16
 13849 65c1 00000000 		.long	.LASF224
 13850 65c5 27       		.byte	0x27
 13851 65c6 6B       		.byte	0x6b
 13852 65c7 00000000 		.long	.LASF870
 13853 65cb 5C5F0000 		.long	0x5f5c
 13854 65cf 01       		.byte	0x1
 13855 65d0 D8650000 		.long	0x65d8
 13856 65d4 E8650000 		.long	0x65e8
 13857 65d8 08       		.uleb128 0x8
 13858 65d9 759F0000 		.long	0x9f75
 13859 65dd 13       		.uleb128 0x13
 13860 65de 685F0000 		.long	0x5f68
 13861 65e2 13       		.uleb128 0x13
 13862 65e3 819F0000 		.long	0x9f81
 13863 65e7 00       		.byte	0
 13864 65e8 35       		.uleb128 0x35
 13865 65e9 00000000 		.long	.LASF224
 13866 65ed 04       		.byte	0x4
 13867 65ee F603     		.value	0x3f6
 13868 65f0 00000000 		.long	.LASF871
 13869 65f4 5C5F0000 		.long	0x5f5c
 13870 65f8 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 501


 13871 65f9 01660000 		.long	0x6601
 13872 65fd 11660000 		.long	0x6611
 13873 6601 08       		.uleb128 0x8
 13874 6602 759F0000 		.long	0x9f75
 13875 6606 13       		.uleb128 0x13
 13876 6607 685F0000 		.long	0x5f68
 13877 660b 13       		.uleb128 0x13
 13878 660c 9F9F0000 		.long	0x9f9f
 13879 6610 00       		.byte	0
 13880 6611 35       		.uleb128 0x35
 13881 6612 00000000 		.long	.LASF224
 13882 6616 04       		.byte	0x4
 13883 6617 0704     		.value	0x407
 13884 6619 00000000 		.long	.LASF872
 13885 661d 5C5F0000 		.long	0x5f5c
 13886 6621 01       		.byte	0x1
 13887 6622 2A660000 		.long	0x662a
 13888 6626 3A660000 		.long	0x663a
 13889 662a 08       		.uleb128 0x8
 13890 662b 759F0000 		.long	0x9f75
 13891 662f 13       		.uleb128 0x13
 13892 6630 685F0000 		.long	0x5f68
 13893 6634 13       		.uleb128 0x13
 13894 6635 C0680000 		.long	0x68c0
 13895 6639 00       		.byte	0
 13896 663a 35       		.uleb128 0x35
 13897 663b 00000000 		.long	.LASF224
 13898 663f 04       		.byte	0x4
 13899 6640 1B04     		.value	0x41b
 13900 6642 00000000 		.long	.LASF873
 13901 6646 5C5F0000 		.long	0x5f5c
 13902 664a 01       		.byte	0x1
 13903 664b 53660000 		.long	0x6653
 13904 664f 68660000 		.long	0x6668
 13905 6653 08       		.uleb128 0x8
 13906 6654 759F0000 		.long	0x9f75
 13907 6658 13       		.uleb128 0x13
 13908 6659 685F0000 		.long	0x5f68
 13909 665d 13       		.uleb128 0x13
 13910 665e 8C5F0000 		.long	0x5f8c
 13911 6662 13       		.uleb128 0x13
 13912 6663 819F0000 		.long	0x9f81
 13913 6667 00       		.byte	0
 13914 6668 35       		.uleb128 0x35
 13915 6669 00000000 		.long	.LASF233
 13916 666d 04       		.byte	0x4
 13917 666e 7A04     		.value	0x47a
 13918 6670 00000000 		.long	.LASF874
 13919 6674 5C5F0000 		.long	0x5f5c
 13920 6678 01       		.byte	0x1
 13921 6679 81660000 		.long	0x6681
 13922 667d 8C660000 		.long	0x668c
 13923 6681 08       		.uleb128 0x8
 13924 6682 759F0000 		.long	0x9f75
 13925 6686 13       		.uleb128 0x13
 13926 6687 685F0000 		.long	0x5f68
 13927 668b 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 502


 13928 668c 35       		.uleb128 0x35
 13929 668d 00000000 		.long	.LASF233
 13930 6691 04       		.byte	0x4
 13931 6692 9504     		.value	0x495
 13932 6694 00000000 		.long	.LASF875
 13933 6698 5C5F0000 		.long	0x5f5c
 13934 669c 01       		.byte	0x1
 13935 669d A5660000 		.long	0x66a5
 13936 66a1 B5660000 		.long	0x66b5
 13937 66a5 08       		.uleb128 0x8
 13938 66a6 759F0000 		.long	0x9f75
 13939 66aa 13       		.uleb128 0x13
 13940 66ab 685F0000 		.long	0x5f68
 13941 66af 13       		.uleb128 0x13
 13942 66b0 685F0000 		.long	0x5f68
 13943 66b4 00       		.byte	0
 13944 66b5 37       		.uleb128 0x37
 13945 66b6 00000000 		.long	.LASF22
 13946 66ba 04       		.byte	0x4
 13947 66bb AA04     		.value	0x4aa
 13948 66bd 00000000 		.long	.LASF876
 13949 66c1 01       		.byte	0x1
 13950 66c2 CA660000 		.long	0x66ca
 13951 66c6 D5660000 		.long	0x66d5
 13952 66ca 08       		.uleb128 0x8
 13953 66cb 759F0000 		.long	0x9f75
 13954 66cf 13       		.uleb128 0x13
 13955 66d0 939F0000 		.long	0x9f93
 13956 66d4 00       		.byte	0
 13957 66d5 37       		.uleb128 0x37
 13958 66d6 00000000 		.long	.LASF188
 13959 66da 04       		.byte	0x4
 13960 66db BB04     		.value	0x4bb
 13961 66dd 00000000 		.long	.LASF877
 13962 66e1 01       		.byte	0x1
 13963 66e2 EA660000 		.long	0x66ea
 13964 66e6 F0660000 		.long	0x66f0
 13965 66ea 08       		.uleb128 0x8
 13966 66eb 759F0000 		.long	0x9f75
 13967 66ef 00       		.byte	0
 13968 66f0 37       		.uleb128 0x37
 13969 66f1 00000000 		.long	.LASF608
 13970 66f5 04       		.byte	0x4
 13971 66f6 1205     		.value	0x512
 13972 66f8 00000000 		.long	.LASF878
 13973 66fc 02       		.byte	0x2
 13974 66fd 05670000 		.long	0x6705
 13975 6701 15670000 		.long	0x6715
 13976 6705 08       		.uleb128 0x8
 13977 6706 759F0000 		.long	0x9f75
 13978 670a 13       		.uleb128 0x13
 13979 670b 8C5F0000 		.long	0x5f8c
 13980 670f 13       		.uleb128 0x13
 13981 6710 819F0000 		.long	0x9f81
 13982 6714 00       		.byte	0
 13983 6715 37       		.uleb128 0x37
 13984 6716 00000000 		.long	.LASF610
GAS LISTING /tmp/ccKUqHDa.s 			page 503


 13985 671a 04       		.byte	0x4
 13986 671b 1C05     		.value	0x51c
 13987 671d 00000000 		.long	.LASF879
 13988 6721 02       		.byte	0x2
 13989 6722 2A670000 		.long	0x672a
 13990 6726 35670000 		.long	0x6735
 13991 672a 08       		.uleb128 0x8
 13992 672b 759F0000 		.long	0x9f75
 13993 672f 13       		.uleb128 0x13
 13994 6730 8C5F0000 		.long	0x5f8c
 13995 6734 00       		.byte	0
 13996 6735 17       		.uleb128 0x17
 13997 6736 00000000 		.long	.LASF612
 13998 673a 27       		.byte	0x27
 13999 673b E1       		.byte	0xe1
 14000 673c 00000000 		.long	.LASF880
 14001 6740 02       		.byte	0x2
 14002 6741 49670000 		.long	0x6749
 14003 6745 59670000 		.long	0x6759
 14004 6749 08       		.uleb128 0x8
 14005 674a 759F0000 		.long	0x9f75
 14006 674e 13       		.uleb128 0x13
 14007 674f DB070000 		.long	0x7db
 14008 6753 13       		.uleb128 0x13
 14009 6754 819F0000 		.long	0x9f81
 14010 6758 00       		.byte	0
 14011 6759 37       		.uleb128 0x37
 14012 675a 00000000 		.long	.LASF614
 14013 675e 27       		.byte	0x27
 14014 675f C101     		.value	0x1c1
 14015 6761 00000000 		.long	.LASF881
 14016 6765 02       		.byte	0x2
 14017 6766 6E670000 		.long	0x676e
 14018 676a 83670000 		.long	0x6783
 14019 676e 08       		.uleb128 0x8
 14020 676f 759F0000 		.long	0x9f75
 14021 6773 13       		.uleb128 0x13
 14022 6774 5C5F0000 		.long	0x5f5c
 14023 6778 13       		.uleb128 0x13
 14024 6779 8C5F0000 		.long	0x5f8c
 14025 677d 13       		.uleb128 0x13
 14026 677e 819F0000 		.long	0x9f81
 14027 6782 00       		.byte	0
 14028 6783 37       		.uleb128 0x37
 14029 6784 00000000 		.long	.LASF616
 14030 6788 27       		.byte	0x27
 14031 6789 1C02     		.value	0x21c
 14032 678b 00000000 		.long	.LASF882
 14033 678f 02       		.byte	0x2
 14034 6790 98670000 		.long	0x6798
 14035 6794 A3670000 		.long	0x67a3
 14036 6798 08       		.uleb128 0x8
 14037 6799 759F0000 		.long	0x9f75
 14038 679d 13       		.uleb128 0x13
 14039 679e 8C5F0000 		.long	0x5f8c
 14040 67a2 00       		.byte	0
 14041 67a3 35       		.uleb128 0x35
GAS LISTING /tmp/ccKUqHDa.s 			page 504


 14042 67a4 00000000 		.long	.LASF618
 14043 67a8 27       		.byte	0x27
 14044 67a9 4E02     		.value	0x24e
 14045 67ab 00000000 		.long	.LASF883
 14046 67af A3710000 		.long	0x71a3
 14047 67b3 02       		.byte	0x2
 14048 67b4 BC670000 		.long	0x67bc
 14049 67b8 C2670000 		.long	0x67c2
 14050 67bc 08       		.uleb128 0x8
 14051 67bd 759F0000 		.long	0x9f75
 14052 67c1 00       		.byte	0
 14053 67c2 35       		.uleb128 0x35
 14054 67c3 00000000 		.long	.LASF620
 14055 67c7 04       		.byte	0x4
 14056 67c8 8E05     		.value	0x58e
 14057 67ca 00000000 		.long	.LASF884
 14058 67ce 8C5F0000 		.long	0x5f8c
 14059 67d2 02       		.byte	0x2
 14060 67d3 DB670000 		.long	0x67db
 14061 67d7 EB670000 		.long	0x67eb
 14062 67db 08       		.uleb128 0x8
 14063 67dc 999F0000 		.long	0x9f99
 14064 67e0 13       		.uleb128 0x13
 14065 67e1 8C5F0000 		.long	0x5f8c
 14066 67e5 13       		.uleb128 0x13
 14067 67e6 CD840000 		.long	0x84cd
 14068 67ea 00       		.byte	0
 14069 67eb 37       		.uleb128 0x37
 14070 67ec 00000000 		.long	.LASF622
 14071 67f0 04       		.byte	0x4
 14072 67f1 9C05     		.value	0x59c
 14073 67f3 00000000 		.long	.LASF885
 14074 67f7 02       		.byte	0x2
 14075 67f8 00680000 		.long	0x6800
 14076 67fc 0B680000 		.long	0x680b
 14077 6800 08       		.uleb128 0x8
 14078 6801 759F0000 		.long	0x9f75
 14079 6805 13       		.uleb128 0x13
 14080 6806 385F0000 		.long	0x5f38
 14081 680a 00       		.byte	0
 14082 680b 16       		.uleb128 0x16
 14083 680c 00000000 		.long	.LASF624
 14084 6810 27       		.byte	0x27
 14085 6811 8D       		.byte	0x8d
 14086 6812 00000000 		.long	.LASF886
 14087 6816 5C5F0000 		.long	0x5f5c
 14088 681a 02       		.byte	0x2
 14089 681b 23680000 		.long	0x6823
 14090 681f 2E680000 		.long	0x682e
 14091 6823 08       		.uleb128 0x8
 14092 6824 759F0000 		.long	0x9f75
 14093 6828 13       		.uleb128 0x13
 14094 6829 5C5F0000 		.long	0x5f5c
 14095 682d 00       		.byte	0
 14096 682e 16       		.uleb128 0x16
 14097 682f 00000000 		.long	.LASF624
 14098 6833 27       		.byte	0x27
GAS LISTING /tmp/ccKUqHDa.s 			page 505


 14099 6834 99       		.byte	0x99
 14100 6835 00000000 		.long	.LASF887
 14101 6839 5C5F0000 		.long	0x5f5c
 14102 683d 02       		.byte	0x2
 14103 683e 46680000 		.long	0x6846
 14104 6842 56680000 		.long	0x6856
 14105 6846 08       		.uleb128 0x8
 14106 6847 759F0000 		.long	0x9f75
 14107 684b 13       		.uleb128 0x13
 14108 684c 5C5F0000 		.long	0x5f5c
 14109 6850 13       		.uleb128 0x13
 14110 6851 5C5F0000 		.long	0x5f5c
 14111 6855 00       		.byte	0
 14112 6856 2E       		.uleb128 0x2e
 14113 6857 00000000 		.long	.LASF627
 14114 685b 04       		.byte	0x4
 14115 685c AE05     		.value	0x5ae
 14116 685e 00000000 		.long	.LASF888
 14117 6862 6A680000 		.long	0x686a
 14118 6866 7A680000 		.long	0x687a
 14119 686a 08       		.uleb128 0x8
 14120 686b 759F0000 		.long	0x9f75
 14121 686f 13       		.uleb128 0x13
 14122 6870 8D9F0000 		.long	0x9f8d
 14123 6874 13       		.uleb128 0x13
 14124 6875 B5080000 		.long	0x8b5
 14125 6879 00       		.byte	0
 14126 687a 2E       		.uleb128 0x2e
 14127 687b 00000000 		.long	.LASF627
 14128 687f 04       		.byte	0x4
 14129 6880 B905     		.value	0x5b9
 14130 6882 00000000 		.long	.LASF889
 14131 6886 8E680000 		.long	0x688e
 14132 688a 9E680000 		.long	0x689e
 14133 688e 08       		.uleb128 0x8
 14134 688f 759F0000 		.long	0x9f75
 14135 6893 13       		.uleb128 0x13
 14136 6894 8D9F0000 		.long	0x9f8d
 14137 6898 13       		.uleb128 0x13
 14138 6899 942B0000 		.long	0x2b94
 14139 689d 00       		.byte	0
 14140 689e 09       		.uleb128 0x9
 14141 689f 5F547000 		.string	"_Tp"
 14142 68a3 FC570000 		.long	0x57fc
 14143 68a7 38       		.uleb128 0x38
 14144 68a8 00000000 		.long	.LASF309
 14145 68ac 33590000 		.long	0x5933
 14146 68b0 00       		.byte	0
 14147 68b1 1A       		.uleb128 0x1a
 14148 68b2 00000000 		.long	.LASF890
 14149 68b6 1A       		.uleb128 0x1a
 14150 68b7 00000000 		.long	.LASF891
 14151 68bb 0B       		.uleb128 0xb
 14152 68bc F65E0000 		.long	0x5ef6
 14153 68c0 10       		.uleb128 0x10
 14154 68c1 00000000 		.long	.LASF892
 14155 68c5 10       		.byte	0x10
GAS LISTING /tmp/ccKUqHDa.s 			page 506


 14156 68c6 1D       		.byte	0x1d
 14157 68c7 2F       		.byte	0x2f
 14158 68c8 A0690000 		.long	0x69a0
 14159 68cc 25       		.uleb128 0x25
 14160 68cd 00000000 		.long	.LASF74
 14161 68d1 1D       		.byte	0x1d
 14162 68d2 36       		.byte	0x36
 14163 68d3 F19E0000 		.long	0x9ef1
 14164 68d7 01       		.byte	0x1
 14165 68d8 11       		.uleb128 0x11
 14166 68d9 00000000 		.long	.LASF314
 14167 68dd 1D       		.byte	0x1d
 14168 68de 3A       		.byte	0x3a
 14169 68df CC680000 		.long	0x68cc
 14170 68e3 00       		.byte	0
 14171 68e4 25       		.uleb128 0x25
 14172 68e5 00000000 		.long	.LASF61
 14173 68e9 1D       		.byte	0x1d
 14174 68ea 35       		.byte	0x35
 14175 68eb DB070000 		.long	0x7db
 14176 68ef 01       		.byte	0x1
 14177 68f0 11       		.uleb128 0x11
 14178 68f1 00000000 		.long	.LASF315
 14179 68f5 1D       		.byte	0x1d
 14180 68f6 3B       		.byte	0x3b
 14181 68f7 E4680000 		.long	0x68e4
 14182 68fb 08       		.byte	0x8
 14183 68fc 25       		.uleb128 0x25
 14184 68fd 00000000 		.long	.LASF75
 14185 6901 1D       		.byte	0x1d
 14186 6902 37       		.byte	0x37
 14187 6903 F19E0000 		.long	0x9ef1
 14188 6907 01       		.byte	0x1
 14189 6908 39       		.uleb128 0x39
 14190 6909 00000000 		.long	.LASF316
 14191 690d 1D       		.byte	0x1d
 14192 690e 3E       		.byte	0x3e
 14193 690f 17690000 		.long	0x6917
 14194 6913 27690000 		.long	0x6927
 14195 6917 08       		.uleb128 0x8
 14196 6918 A59F0000 		.long	0x9fa5
 14197 691c 13       		.uleb128 0x13
 14198 691d FC680000 		.long	0x68fc
 14199 6921 13       		.uleb128 0x13
 14200 6922 E4680000 		.long	0x68e4
 14201 6926 00       		.byte	0
 14202 6927 15       		.uleb128 0x15
 14203 6928 00000000 		.long	.LASF316
 14204 692c 1D       		.byte	0x1d
 14205 692d 42       		.byte	0x42
 14206 692e 01       		.byte	0x1
 14207 692f 37690000 		.long	0x6937
 14208 6933 3D690000 		.long	0x693d
 14209 6937 08       		.uleb128 0x8
 14210 6938 A59F0000 		.long	0x9fa5
 14211 693c 00       		.byte	0
 14212 693d 16       		.uleb128 0x16
GAS LISTING /tmp/ccKUqHDa.s 			page 507


 14213 693e 00000000 		.long	.LASF174
 14214 6942 1D       		.byte	0x1d
 14215 6943 47       		.byte	0x47
 14216 6944 00000000 		.long	.LASF893
 14217 6948 E4680000 		.long	0x68e4
 14218 694c 01       		.byte	0x1
 14219 694d 55690000 		.long	0x6955
 14220 6951 5B690000 		.long	0x695b
 14221 6955 08       		.uleb128 0x8
 14222 6956 AB9F0000 		.long	0x9fab
 14223 695a 00       		.byte	0
 14224 695b 16       		.uleb128 0x16
 14225 695c 00000000 		.long	.LASF155
 14226 6960 1D       		.byte	0x1d
 14227 6961 4B       		.byte	0x4b
 14228 6962 00000000 		.long	.LASF894
 14229 6966 FC680000 		.long	0x68fc
 14230 696a 01       		.byte	0x1
 14231 696b 73690000 		.long	0x6973
 14232 696f 79690000 		.long	0x6979
 14233 6973 08       		.uleb128 0x8
 14234 6974 AB9F0000 		.long	0x9fab
 14235 6978 00       		.byte	0
 14236 6979 3A       		.uleb128 0x3a
 14237 697a 656E6400 		.string	"end"
 14238 697e 1D       		.byte	0x1d
 14239 697f 4F       		.byte	0x4f
 14240 6980 00000000 		.long	.LASF895
 14241 6984 FC680000 		.long	0x68fc
 14242 6988 01       		.byte	0x1
 14243 6989 91690000 		.long	0x6991
 14244 698d 97690000 		.long	0x6997
 14245 6991 08       		.uleb128 0x8
 14246 6992 AB9F0000 		.long	0x9fab
 14247 6996 00       		.byte	0
 14248 6997 09       		.uleb128 0x9
 14249 6998 5F4500   		.string	"_E"
 14250 699b FC570000 		.long	0x57fc
 14251 699f 00       		.byte	0
 14252 69a0 0B       		.uleb128 0xb
 14253 69a1 C0680000 		.long	0x68c0
 14254 69a5 04       		.uleb128 0x4
 14255 69a6 00000000 		.long	.LASF896
 14256 69aa 01       		.byte	0x1
 14257 69ab 24       		.byte	0x24
 14258 69ac AF       		.byte	0xaf
 14259 69ad DC690000 		.long	0x69dc
 14260 69b1 06       		.uleb128 0x6
 14261 69b2 00000000 		.long	.LASF489
 14262 69b6 24       		.byte	0x24
 14263 69b7 B3       		.byte	0xb3
 14264 69b8 AA080000 		.long	0x8aa
 14265 69bc 06       		.uleb128 0x6
 14266 69bd 00000000 		.long	.LASF490
 14267 69c1 24       		.byte	0x24
 14268 69c2 B4       		.byte	0xb4
 14269 69c3 EB9E0000 		.long	0x9eeb
GAS LISTING /tmp/ccKUqHDa.s 			page 508


 14270 69c7 06       		.uleb128 0x6
 14271 69c8 00000000 		.long	.LASF62
 14272 69cc 24       		.byte	0x24
 14273 69cd B5       		.byte	0xb5
 14274 69ce F79E0000 		.long	0x9ef7
 14275 69d2 1C       		.uleb128 0x1c
 14276 69d3 00000000 		.long	.LASF491
 14277 69d7 EB9E0000 		.long	0x9eeb
 14278 69db 00       		.byte	0
 14279 69dc 27       		.uleb128 0x27
 14280 69dd 00000000 		.long	.LASF897
 14281 69e1 01       		.byte	0x1
 14282 69e2 12       		.byte	0x12
 14283 69e3 DC05     		.value	0x5dc
 14284 69e5 F6690000 		.long	0x69f6
 14285 69e9 4E       		.uleb128 0x4e
 14286 69ea 00000000 		.long	.LASF404
 14287 69ee 12       		.byte	0x12
 14288 69ef DD05     		.value	0x5dd
 14289 69f1 29000000 		.long	0x29
 14290 69f5 00       		.byte	0
 14291 69f6 27       		.uleb128 0x27
 14292 69f7 00000000 		.long	.LASF898
 14293 69fb 01       		.byte	0x1
 14294 69fc 0E       		.byte	0xe
 14295 69fd F901     		.value	0x1f9
 14296 69ff 376A0000 		.long	0x6a37
 14297 6a03 5F       		.uleb128 0x5f
 14298 6a04 00000000 		.long	.LASF899
 14299 6a08 0E       		.byte	0xe
 14300 6a09 FD01     		.value	0x1fd
 14301 6a0b 2C6A0000 		.long	0x6a2c
 14302 6a0f 1C       		.uleb128 0x1c
 14303 6a10 00000000 		.long	.LASF30
 14304 6a14 EB9E0000 		.long	0x9eeb
 14305 6a18 1C       		.uleb128 0x1c
 14306 6a19 00000000 		.long	.LASF322
 14307 6a1d 30000000 		.long	0x30
 14308 6a21 13       		.uleb128 0x13
 14309 6a22 EB9E0000 		.long	0x9eeb
 14310 6a26 13       		.uleb128 0x13
 14311 6a27 30000000 		.long	0x30
 14312 6a2b 00       		.byte	0
 14313 6a2c 40       		.uleb128 0x40
 14314 6a2d 00000000 		.long	.LASF900
 14315 6a31 A3710000 		.long	0x71a3
 14316 6a35 00       		.byte	0
 14317 6a36 00       		.byte	0
 14318 6a37 04       		.uleb128 0x4
 14319 6a38 00000000 		.long	.LASF901
 14320 6a3c 01       		.byte	0x1
 14321 6a3d 24       		.byte	0x24
 14322 6a3e BA       		.byte	0xba
 14323 6a3f 6E6A0000 		.long	0x6a6e
 14324 6a43 06       		.uleb128 0x6
 14325 6a44 00000000 		.long	.LASF489
 14326 6a48 24       		.byte	0x24
GAS LISTING /tmp/ccKUqHDa.s 			page 509


 14327 6a49 BE       		.byte	0xbe
 14328 6a4a AA080000 		.long	0x8aa
 14329 6a4e 06       		.uleb128 0x6
 14330 6a4f 00000000 		.long	.LASF490
 14331 6a53 24       		.byte	0x24
 14332 6a54 BF       		.byte	0xbf
 14333 6a55 CD840000 		.long	0x84cd
 14334 6a59 06       		.uleb128 0x6
 14335 6a5a 00000000 		.long	.LASF62
 14336 6a5e 24       		.byte	0x24
 14337 6a5f C0       		.byte	0xc0
 14338 6a60 D8930000 		.long	0x93d8
 14339 6a64 1C       		.uleb128 0x1c
 14340 6a65 00000000 		.long	.LASF491
 14341 6a69 CD840000 		.long	0x84cd
 14342 6a6d 00       		.byte	0
 14343 6a6e 04       		.uleb128 0x4
 14344 6a6f 00000000 		.long	.LASF902
 14345 6a73 01       		.byte	0x1
 14346 6a74 24       		.byte	0x24
 14347 6a75 D1       		.byte	0xd1
 14348 6a76 B26A0000 		.long	0x6ab2
 14349 6a7a 06       		.uleb128 0x6
 14350 6a7b 00000000 		.long	.LASF903
 14351 6a7f 24       		.byte	0x24
 14352 6a80 D3       		.byte	0xd3
 14353 6a81 829C0000 		.long	0x9c82
 14354 6a85 3E       		.uleb128 0x3e
 14355 6a86 00000000 		.long	.LASF904
 14356 6a8a 24       		.byte	0x24
 14357 6a8b D4       		.byte	0xd4
 14358 6a8c 00000000 		.long	.LASF905
 14359 6a90 7A6A0000 		.long	0x6a7a
 14360 6a94 9E6A0000 		.long	0x6a9e
 14361 6a98 13       		.uleb128 0x13
 14362 6a99 829C0000 		.long	0x9c82
 14363 6a9d 00       		.byte	0
 14364 6a9e 1C       		.uleb128 0x1c
 14365 6a9f 00000000 		.long	.LASF491
 14366 6aa3 829C0000 		.long	0x9c82
 14367 6aa7 40       		.uleb128 0x40
 14368 6aa8 00000000 		.long	.LASF906
 14369 6aac A3710000 		.long	0x71a3
 14370 6ab0 00       		.byte	0
 14371 6ab1 00       		.byte	0
 14372 6ab2 04       		.uleb128 0x4
 14373 6ab3 00000000 		.long	.LASF907
 14374 6ab7 01       		.byte	0x1
 14375 6ab8 24       		.byte	0x24
 14376 6ab9 D1       		.byte	0xd1
 14377 6aba F66A0000 		.long	0x6af6
 14378 6abe 06       		.uleb128 0x6
 14379 6abf 00000000 		.long	.LASF903
 14380 6ac3 24       		.byte	0x24
 14381 6ac4 D3       		.byte	0xd3
 14382 6ac5 5E9B0000 		.long	0x9b5e
 14383 6ac9 3E       		.uleb128 0x3e
GAS LISTING /tmp/ccKUqHDa.s 			page 510


 14384 6aca 00000000 		.long	.LASF904
 14385 6ace 24       		.byte	0x24
 14386 6acf D4       		.byte	0xd4
 14387 6ad0 00000000 		.long	.LASF908
 14388 6ad4 BE6A0000 		.long	0x6abe
 14389 6ad8 E26A0000 		.long	0x6ae2
 14390 6adc 13       		.uleb128 0x13
 14391 6add 5E9B0000 		.long	0x9b5e
 14392 6ae1 00       		.byte	0
 14393 6ae2 1C       		.uleb128 0x1c
 14394 6ae3 00000000 		.long	.LASF491
 14395 6ae7 5E9B0000 		.long	0x9b5e
 14396 6aeb 40       		.uleb128 0x40
 14397 6aec 00000000 		.long	.LASF906
 14398 6af0 A3710000 		.long	0x71a3
 14399 6af4 00       		.byte	0
 14400 6af5 00       		.byte	0
 14401 6af6 52       		.uleb128 0x52
 14402 6af7 00000000 		.long	.LASF909
 14403 6afb 4F6B0000 		.long	0x6b4f
 14404 6aff 16       		.uleb128 0x16
 14405 6b00 00000000 		.long	.LASF910
 14406 6b04 29       		.byte	0x29
 14407 6b05 83       		.byte	0x83
 14408 6b06 00000000 		.long	.LASF911
 14409 6b0a 262D0000 		.long	0x2d26
 14410 6b0e 01       		.byte	0x1
 14411 6b0f 176B0000 		.long	0x6b17
 14412 6b13 1D6B0000 		.long	0x6b1d
 14413 6b17 08       		.uleb128 0x8
 14414 6b18 61A00000 		.long	0xa061
 14415 6b1c 00       		.byte	0
 14416 6b1d 17       		.uleb128 0x17
 14417 6b1e 00000000 		.long	.LASF912
 14418 6b22 29       		.byte	0x29
 14419 6b23 97       		.byte	0x97
 14420 6b24 00000000 		.long	.LASF913
 14421 6b28 01       		.byte	0x1
 14422 6b29 316B0000 		.long	0x6b31
 14423 6b2d 3C6B0000 		.long	0x6b3c
 14424 6b31 08       		.uleb128 0x8
 14425 6b32 E3A10000 		.long	0xa1e3
 14426 6b36 13       		.uleb128 0x13
 14427 6b37 262D0000 		.long	0x2d26
 14428 6b3b 00       		.byte	0
 14429 6b3c 1C       		.uleb128 0x1c
 14430 6b3d 00000000 		.long	.LASF307
 14431 6b41 D8840000 		.long	0x84d8
 14432 6b45 38       		.uleb128 0x38
 14433 6b46 00000000 		.long	.LASF308
 14434 6b4a 13060000 		.long	0x613
 14435 6b4e 00       		.byte	0
 14436 6b4f 0B       		.uleb128 0xb
 14437 6b50 F66A0000 		.long	0x6af6
 14438 6b54 42       		.uleb128 0x42
 14439 6b55 00000000 		.long	.LASF914
 14440 6b59 1F       		.byte	0x1f
GAS LISTING /tmp/ccKUqHDa.s 			page 511


 14441 6b5a 9D       		.byte	0x9d
 14442 6b5b 672C0000 		.long	0x2c67
 14443 6b5f 6E6B0000 		.long	0x6b6e
 14444 6b63 13       		.uleb128 0x13
 14445 6b64 672C0000 		.long	0x2c67
 14446 6b68 13       		.uleb128 0x13
 14447 6b69 672C0000 		.long	0x2c67
 14448 6b6d 00       		.byte	0
 14449 6b6e 60       		.uleb128 0x60
 14450 6b6f 00000000 		.long	.LASF915
 14451 6b73 08       		.byte	0x8
 14452 6b74 1202     		.value	0x212
 14453 6b76 AD990000 		.long	0x99ad
 14454 6b7a 926B0000 		.long	0x6b92
 14455 6b7e 1C       		.uleb128 0x1c
 14456 6b7f 00000000 		.long	.LASF308
 14457 6b83 13060000 		.long	0x613
 14458 6b87 13       		.uleb128 0x13
 14459 6b88 AD990000 		.long	0x99ad
 14460 6b8c 13       		.uleb128 0x13
 14461 6b8d CD840000 		.long	0x84cd
 14462 6b91 00       		.byte	0
 14463 6b92 0B       		.uleb128 0xb
 14464 6b93 E22F0000 		.long	0x2fe2
 14465 6b97 42       		.uleb128 0x42
 14466 6b98 00000000 		.long	.LASF916
 14467 6b9c 2A       		.byte	0x2a
 14468 6b9d 4C       		.byte	0x4c
 14469 6b9e D49F0000 		.long	0x9fd4
 14470 6ba2 B56B0000 		.long	0x6bb5
 14471 6ba6 09       		.uleb128 0x9
 14472 6ba7 5F547000 		.string	"_Tp"
 14473 6bab 29000000 		.long	0x29
 14474 6baf 13       		.uleb128 0x13
 14475 6bb0 92A20000 		.long	0xa292
 14476 6bb4 00       		.byte	0
 14477 6bb5 60       		.uleb128 0x60
 14478 6bb6 00000000 		.long	.LASF917
 14479 6bba 0D       		.byte	0xd
 14480 6bbb 1401     		.value	0x114
 14481 6bbd FC570000 		.long	0x57fc
 14482 6bc1 E26B0000 		.long	0x6be2
 14483 6bc5 09       		.uleb128 0x9
 14484 6bc6 5F543100 		.string	"_T1"
 14485 6bca 29000000 		.long	0x29
 14486 6bce 09       		.uleb128 0x9
 14487 6bcf 5F543200 		.string	"_T2"
 14488 6bd3 29000000 		.long	0x29
 14489 6bd7 13       		.uleb128 0x13
 14490 6bd8 D49F0000 		.long	0x9fd4
 14491 6bdc 13       		.uleb128 0x13
 14492 6bdd D49F0000 		.long	0x9fd4
 14493 6be1 00       		.byte	0
 14494 6be2 42       		.uleb128 0x42
 14495 6be3 00000000 		.long	.LASF918
 14496 6be7 29       		.byte	0x29
 14497 6be8 2E       		.byte	0x2e
GAS LISTING /tmp/ccKUqHDa.s 			page 512


 14498 6be9 D1A60000 		.long	0xa6d1
 14499 6bed 006C0000 		.long	0x6c00
 14500 6bf1 1C       		.uleb128 0x1c
 14501 6bf2 00000000 		.long	.LASF919
 14502 6bf6 E22F0000 		.long	0x2fe2
 14503 6bfa 13       		.uleb128 0x13
 14504 6bfb 60A20000 		.long	0xa260
 14505 6bff 00       		.byte	0
 14506 6c00 60       		.uleb128 0x60
 14507 6c01 00000000 		.long	.LASF920
 14508 6c05 08       		.byte	0x8
 14509 6c06 4A02     		.value	0x24a
 14510 6c08 AD990000 		.long	0x99ad
 14511 6c0c 286C0000 		.long	0x6c28
 14512 6c10 1C       		.uleb128 0x1c
 14513 6c11 00000000 		.long	.LASF307
 14514 6c15 D8840000 		.long	0x84d8
 14515 6c19 1C       		.uleb128 0x1c
 14516 6c1a 00000000 		.long	.LASF308
 14517 6c1e 13060000 		.long	0x613
 14518 6c22 13       		.uleb128 0x13
 14519 6c23 AD990000 		.long	0x99ad
 14520 6c27 00       		.byte	0
 14521 6c28 42       		.uleb128 0x42
 14522 6c29 00000000 		.long	.LASF921
 14523 6c2d 2A       		.byte	0x2a
 14524 6c2e 2F       		.byte	0x2f
 14525 6c2f 27A70000 		.long	0xa727
 14526 6c33 466C0000 		.long	0x6c46
 14527 6c37 09       		.uleb128 0x9
 14528 6c38 5F547000 		.string	"_Tp"
 14529 6c3c 919E0000 		.long	0x9e91
 14530 6c40 13       		.uleb128 0x13
 14531 6c41 979E0000 		.long	0x9e97
 14532 6c45 00       		.byte	0
 14533 6c46 1B       		.uleb128 0x1b
 14534 6c47 00000000 		.long	.LASF922
 14535 6c4b 0C       		.byte	0xc
 14536 6c4c 7A       		.byte	0x7a
 14537 6c4d 656C0000 		.long	0x6c65
 14538 6c51 1C       		.uleb128 0x1c
 14539 6c52 00000000 		.long	.LASF30
 14540 6c56 829C0000 		.long	0x9c82
 14541 6c5a 13       		.uleb128 0x13
 14542 6c5b 829C0000 		.long	0x9c82
 14543 6c5f 13       		.uleb128 0x13
 14544 6c60 829C0000 		.long	0x9c82
 14545 6c64 00       		.byte	0
 14546 6c65 1B       		.uleb128 0x1b
 14547 6c66 00000000 		.long	.LASF923
 14548 6c6a 0C       		.byte	0xc
 14549 6c6b 94       		.byte	0x94
 14550 6c6c 926C0000 		.long	0x6c92
 14551 6c70 1C       		.uleb128 0x1c
 14552 6c71 00000000 		.long	.LASF30
 14553 6c75 829C0000 		.long	0x9c82
 14554 6c79 09       		.uleb128 0x9
GAS LISTING /tmp/ccKUqHDa.s 			page 513


 14555 6c7a 5F547000 		.string	"_Tp"
 14556 6c7e 29000000 		.long	0x29
 14557 6c82 13       		.uleb128 0x13
 14558 6c83 829C0000 		.long	0x9c82
 14559 6c87 13       		.uleb128 0x13
 14560 6c88 829C0000 		.long	0x9c82
 14561 6c8c 13       		.uleb128 0x13
 14562 6c8d 439D0000 		.long	0x9d43
 14563 6c91 00       		.byte	0
 14564 6c92 1B       		.uleb128 0x1b
 14565 6c93 00000000 		.long	.LASF924
 14566 6c97 0C       		.byte	0xc
 14567 6c98 7A       		.byte	0x7a
 14568 6c99 B16C0000 		.long	0x6cb1
 14569 6c9d 1C       		.uleb128 0x1c
 14570 6c9e 00000000 		.long	.LASF30
 14571 6ca2 5E9B0000 		.long	0x9b5e
 14572 6ca6 13       		.uleb128 0x13
 14573 6ca7 5E9B0000 		.long	0x9b5e
 14574 6cab 13       		.uleb128 0x13
 14575 6cac 5E9B0000 		.long	0x9b5e
 14576 6cb0 00       		.byte	0
 14577 6cb1 1B       		.uleb128 0x1b
 14578 6cb2 00000000 		.long	.LASF925
 14579 6cb6 0C       		.byte	0xc
 14580 6cb7 94       		.byte	0x94
 14581 6cb8 DE6C0000 		.long	0x6cde
 14582 6cbc 1C       		.uleb128 0x1c
 14583 6cbd 00000000 		.long	.LASF30
 14584 6cc1 5E9B0000 		.long	0x9b5e
 14585 6cc5 09       		.uleb128 0x9
 14586 6cc6 5F547000 		.string	"_Tp"
 14587 6cca BB710000 		.long	0x71bb
 14588 6cce 13       		.uleb128 0x13
 14589 6ccf 5E9B0000 		.long	0x9b5e
 14590 6cd3 13       		.uleb128 0x13
 14591 6cd4 5E9B0000 		.long	0x9b5e
 14592 6cd8 13       		.uleb128 0x13
 14593 6cd9 FD9D0000 		.long	0x9dfd
 14594 6cdd 00       		.byte	0
 14595 6cde 1B       		.uleb128 0x1b
 14596 6cdf 00000000 		.long	.LASF926
 14597 6ce3 0C       		.byte	0xc
 14598 6ce4 7A       		.byte	0x7a
 14599 6ce5 FD6C0000 		.long	0x6cfd
 14600 6ce9 1C       		.uleb128 0x1c
 14601 6cea 00000000 		.long	.LASF30
 14602 6cee EB9E0000 		.long	0x9eeb
 14603 6cf2 13       		.uleb128 0x13
 14604 6cf3 EB9E0000 		.long	0x9eeb
 14605 6cf7 13       		.uleb128 0x13
 14606 6cf8 EB9E0000 		.long	0x9eeb
 14607 6cfc 00       		.byte	0
 14608 6cfd 1B       		.uleb128 0x1b
 14609 6cfe 00000000 		.long	.LASF927
 14610 6d02 0C       		.byte	0xc
 14611 6d03 94       		.byte	0x94
GAS LISTING /tmp/ccKUqHDa.s 			page 514


 14612 6d04 2A6D0000 		.long	0x6d2a
 14613 6d08 1C       		.uleb128 0x1c
 14614 6d09 00000000 		.long	.LASF30
 14615 6d0d EB9E0000 		.long	0x9eeb
 14616 6d11 09       		.uleb128 0x9
 14617 6d12 5F547000 		.string	"_Tp"
 14618 6d16 FC570000 		.long	0x57fc
 14619 6d1a 13       		.uleb128 0x13
 14620 6d1b EB9E0000 		.long	0x9eeb
 14621 6d1f 13       		.uleb128 0x13
 14622 6d20 EB9E0000 		.long	0x9eeb
 14623 6d24 13       		.uleb128 0x13
 14624 6d25 2D9F0000 		.long	0x9f2d
 14625 6d29 00       		.byte	0
 14626 6d2a 42       		.uleb128 0x42
 14627 6d2b 00000000 		.long	.LASF928
 14628 6d2f 2A       		.byte	0x2a
 14629 6d30 2F       		.byte	0x2f
 14630 6d31 EB9E0000 		.long	0x9eeb
 14631 6d35 486D0000 		.long	0x6d48
 14632 6d39 09       		.uleb128 0x9
 14633 6d3a 5F547000 		.string	"_Tp"
 14634 6d3e FC570000 		.long	0x57fc
 14635 6d42 13       		.uleb128 0x13
 14636 6d43 F79E0000 		.long	0x9ef7
 14637 6d47 00       		.byte	0
 14638 6d48 1B       		.uleb128 0x1b
 14639 6d49 00000000 		.long	.LASF929
 14640 6d4d 0C       		.byte	0xc
 14641 6d4e 4A       		.byte	0x4a
 14642 6d4f 676D0000 		.long	0x6d67
 14643 6d53 09       		.uleb128 0x9
 14644 6d54 5F543100 		.string	"_T1"
 14645 6d58 FC570000 		.long	0x57fc
 14646 6d5c 61       		.uleb128 0x61
 14647 6d5d 00000000 		.long	.LASF1436
 14648 6d61 13       		.uleb128 0x13
 14649 6d62 EB9E0000 		.long	0x9eeb
 14650 6d66 00       		.byte	0
 14651 6d67 5F       		.uleb128 0x5f
 14652 6d68 00000000 		.long	.LASF930
 14653 6d6c 0E       		.byte	0xe
 14654 6d6d 3102     		.value	0x231
 14655 6d6f 906D0000 		.long	0x6d90
 14656 6d73 1C       		.uleb128 0x1c
 14657 6d74 00000000 		.long	.LASF30
 14658 6d78 EB9E0000 		.long	0x9eeb
 14659 6d7c 1C       		.uleb128 0x1c
 14660 6d7d 00000000 		.long	.LASF322
 14661 6d81 30000000 		.long	0x30
 14662 6d85 13       		.uleb128 0x13
 14663 6d86 EB9E0000 		.long	0x9eeb
 14664 6d8a 13       		.uleb128 0x13
 14665 6d8b 30000000 		.long	0x30
 14666 6d8f 00       		.byte	0
 14667 6d90 5F       		.uleb128 0x5f
 14668 6d91 00000000 		.long	.LASF931
GAS LISTING /tmp/ccKUqHDa.s 			page 515


 14669 6d95 0E       		.byte	0xe
 14670 6d96 7502     		.value	0x275
 14671 6d98 C76D0000 		.long	0x6dc7
 14672 6d9c 1C       		.uleb128 0x1c
 14673 6d9d 00000000 		.long	.LASF30
 14674 6da1 EB9E0000 		.long	0x9eeb
 14675 6da5 1C       		.uleb128 0x1c
 14676 6da6 00000000 		.long	.LASF322
 14677 6daa 30000000 		.long	0x30
 14678 6dae 09       		.uleb128 0x9
 14679 6daf 5F547000 		.string	"_Tp"
 14680 6db3 FC570000 		.long	0x57fc
 14681 6db7 13       		.uleb128 0x13
 14682 6db8 EB9E0000 		.long	0x9eeb
 14683 6dbc 13       		.uleb128 0x13
 14684 6dbd 30000000 		.long	0x30
 14685 6dc1 13       		.uleb128 0x13
 14686 6dc2 2D9F0000 		.long	0x9f2d
 14687 6dc6 00       		.byte	0
 14688 6dc7 42       		.uleb128 0x42
 14689 6dc8 00000000 		.long	.LASF932
 14690 6dcc 06       		.byte	0x6
 14691 6dcd C2       		.byte	0xc2
 14692 6dce 1D990000 		.long	0x991d
 14693 6dd2 EA6D0000 		.long	0x6dea
 14694 6dd6 09       		.uleb128 0x9
 14695 6dd7 5F547000 		.string	"_Tp"
 14696 6ddb 30000000 		.long	0x30
 14697 6ddf 13       		.uleb128 0x13
 14698 6de0 1D990000 		.long	0x991d
 14699 6de4 13       		.uleb128 0x13
 14700 6de5 1D990000 		.long	0x991d
 14701 6de9 00       		.byte	0
 14702 6dea 62       		.uleb128 0x62
 14703 6deb 6C6F6700 		.string	"log"
 14704 6def 0F       		.byte	0xf
 14705 6df0 6901     		.value	0x169
 14706 6df2 05840000 		.long	0x8405
 14707 6df6 006E0000 		.long	0x6e00
 14708 6dfa 13       		.uleb128 0x13
 14709 6dfb 05840000 		.long	0x8405
 14710 6dff 00       		.byte	0
 14711 6e00 42       		.uleb128 0x42
 14712 6e01 00000000 		.long	.LASF933
 14713 6e05 06       		.byte	0x6
 14714 6e06 D9       		.byte	0xd9
 14715 6e07 1D990000 		.long	0x991d
 14716 6e0b 236E0000 		.long	0x6e23
 14717 6e0f 09       		.uleb128 0x9
 14718 6e10 5F547000 		.string	"_Tp"
 14719 6e14 30000000 		.long	0x30
 14720 6e18 13       		.uleb128 0x13
 14721 6e19 1D990000 		.long	0x991d
 14722 6e1d 13       		.uleb128 0x13
 14723 6e1e 1D990000 		.long	0x991d
 14724 6e22 00       		.byte	0
 14725 6e23 62       		.uleb128 0x62
GAS LISTING /tmp/ccKUqHDa.s 			page 516


 14726 6e24 6C6F6700 		.string	"log"
 14727 6e28 0F       		.byte	0xf
 14728 6e29 6501     		.value	0x165
 14729 6e2b 29000000 		.long	0x29
 14730 6e2f 396E0000 		.long	0x6e39
 14731 6e33 13       		.uleb128 0x13
 14732 6e34 29000000 		.long	0x29
 14733 6e38 00       		.byte	0
 14734 6e39 60       		.uleb128 0x60
 14735 6e3a 00000000 		.long	.LASF934
 14736 6e3e 0F       		.byte	0xf
 14737 6e3f E201     		.value	0x1e2
 14738 6e41 29000000 		.long	0x29
 14739 6e45 4F6E0000 		.long	0x6e4f
 14740 6e49 13       		.uleb128 0x13
 14741 6e4a 29000000 		.long	0x29
 14742 6e4e 00       		.byte	0
 14743 6e4f 60       		.uleb128 0x60
 14744 6e50 00000000 		.long	.LASF935
 14745 6e54 06       		.byte	0x6
 14746 6e55 F502     		.value	0x2f5
 14747 6e57 69830000 		.long	0x8369
 14748 6e5b 8A6E0000 		.long	0x6e8a
 14749 6e5f 1C       		.uleb128 0x1c
 14750 6e60 00000000 		.long	.LASF936
 14751 6e64 829C0000 		.long	0x9c82
 14752 6e68 1C       		.uleb128 0x1c
 14753 6e69 00000000 		.long	.LASF322
 14754 6e6d 30000000 		.long	0x30
 14755 6e71 09       		.uleb128 0x9
 14756 6e72 5F547000 		.string	"_Tp"
 14757 6e76 29000000 		.long	0x29
 14758 6e7a 13       		.uleb128 0x13
 14759 6e7b 829C0000 		.long	0x9c82
 14760 6e7f 13       		.uleb128 0x13
 14761 6e80 30000000 		.long	0x30
 14762 6e84 13       		.uleb128 0x13
 14763 6e85 139D0000 		.long	0x9d13
 14764 6e89 00       		.byte	0
 14765 6e8a 60       		.uleb128 0x60
 14766 6e8b 00000000 		.long	.LASF937
 14767 6e8f 06       		.byte	0x6
 14768 6e90 1601     		.value	0x116
 14769 6e92 7A6A0000 		.long	0x6a7a
 14770 6e96 A96E0000 		.long	0x6ea9
 14771 6e9a 1C       		.uleb128 0x1c
 14772 6e9b 00000000 		.long	.LASF491
 14773 6e9f 829C0000 		.long	0x9c82
 14774 6ea3 13       		.uleb128 0x13
 14775 6ea4 829C0000 		.long	0x9c82
 14776 6ea8 00       		.byte	0
 14777 6ea9 60       		.uleb128 0x60
 14778 6eaa 00000000 		.long	.LASF938
 14779 6eae 06       		.byte	0x6
 14780 6eaf 1803     		.value	0x318
 14781 6eb1 829C0000 		.long	0x9c82
 14782 6eb5 E46E0000 		.long	0x6ee4
GAS LISTING /tmp/ccKUqHDa.s 			page 517


 14783 6eb9 09       		.uleb128 0x9
 14784 6eba 5F4F4900 		.string	"_OI"
 14785 6ebe 829C0000 		.long	0x9c82
 14786 6ec2 1C       		.uleb128 0x1c
 14787 6ec3 00000000 		.long	.LASF322
 14788 6ec7 30000000 		.long	0x30
 14789 6ecb 09       		.uleb128 0x9
 14790 6ecc 5F547000 		.string	"_Tp"
 14791 6ed0 29000000 		.long	0x29
 14792 6ed4 13       		.uleb128 0x13
 14793 6ed5 829C0000 		.long	0x9c82
 14794 6ed9 13       		.uleb128 0x13
 14795 6eda 30000000 		.long	0x30
 14796 6ede 13       		.uleb128 0x13
 14797 6edf 139D0000 		.long	0x9d13
 14798 6ee3 00       		.byte	0
 14799 6ee4 1B       		.uleb128 0x1b
 14800 6ee5 00000000 		.long	.LASF939
 14801 6ee9 0E       		.byte	0xe
 14802 6eea E8       		.byte	0xe8
 14803 6eeb 1A6F0000 		.long	0x6f1a
 14804 6eef 1C       		.uleb128 0x1c
 14805 6ef0 00000000 		.long	.LASF30
 14806 6ef4 829C0000 		.long	0x9c82
 14807 6ef8 1C       		.uleb128 0x1c
 14808 6ef9 00000000 		.long	.LASF322
 14809 6efd 30000000 		.long	0x30
 14810 6f01 09       		.uleb128 0x9
 14811 6f02 5F547000 		.string	"_Tp"
 14812 6f06 29000000 		.long	0x29
 14813 6f0a 13       		.uleb128 0x13
 14814 6f0b 829C0000 		.long	0x9c82
 14815 6f0f 13       		.uleb128 0x13
 14816 6f10 30000000 		.long	0x30
 14817 6f14 13       		.uleb128 0x13
 14818 6f15 139D0000 		.long	0x9d13
 14819 6f19 00       		.byte	0
 14820 6f1a 5F       		.uleb128 0x5f
 14821 6f1b 00000000 		.long	.LASF940
 14822 6f1f 0E       		.byte	0xe
 14823 6f20 6001     		.value	0x160
 14824 6f22 5F6F0000 		.long	0x6f5f
 14825 6f26 1C       		.uleb128 0x1c
 14826 6f27 00000000 		.long	.LASF30
 14827 6f2b 829C0000 		.long	0x9c82
 14828 6f2f 1C       		.uleb128 0x1c
 14829 6f30 00000000 		.long	.LASF322
 14830 6f34 30000000 		.long	0x30
 14831 6f38 09       		.uleb128 0x9
 14832 6f39 5F547000 		.string	"_Tp"
 14833 6f3d 29000000 		.long	0x29
 14834 6f41 1C       		.uleb128 0x1c
 14835 6f42 00000000 		.long	.LASF941
 14836 6f46 29000000 		.long	0x29
 14837 6f4a 13       		.uleb128 0x13
 14838 6f4b 829C0000 		.long	0x9c82
 14839 6f4f 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 518


 14840 6f50 30000000 		.long	0x30
 14841 6f54 13       		.uleb128 0x13
 14842 6f55 139D0000 		.long	0x9d13
 14843 6f59 13       		.uleb128 0x13
 14844 6f5a 439D0000 		.long	0x9d43
 14845 6f5e 00       		.byte	0
 14846 6f5f 5F       		.uleb128 0x5f
 14847 6f60 00000000 		.long	.LASF942
 14848 6f64 06       		.byte	0x6
 14849 6f65 C702     		.value	0x2c7
 14850 6f67 846F0000 		.long	0x6f84
 14851 6f6b 09       		.uleb128 0x9
 14852 6f6c 5F547000 		.string	"_Tp"
 14853 6f70 BB710000 		.long	0x71bb
 14854 6f74 13       		.uleb128 0x13
 14855 6f75 5E9B0000 		.long	0x9b5e
 14856 6f79 13       		.uleb128 0x13
 14857 6f7a 5E9B0000 		.long	0x9b5e
 14858 6f7e 13       		.uleb128 0x13
 14859 6f7f CD9D0000 		.long	0x9dcd
 14860 6f83 00       		.byte	0
 14861 6f84 60       		.uleb128 0x60
 14862 6f85 00000000 		.long	.LASF943
 14863 6f89 06       		.byte	0x6
 14864 6f8a 0103     		.value	0x301
 14865 6f8c 81830000 		.long	0x8381
 14866 6f90 B66F0000 		.long	0x6fb6
 14867 6f94 1C       		.uleb128 0x1c
 14868 6f95 00000000 		.long	.LASF322
 14869 6f99 30000000 		.long	0x30
 14870 6f9d 09       		.uleb128 0x9
 14871 6f9e 5F547000 		.string	"_Tp"
 14872 6fa2 BB710000 		.long	0x71bb
 14873 6fa6 13       		.uleb128 0x13
 14874 6fa7 5E9B0000 		.long	0x9b5e
 14875 6fab 13       		.uleb128 0x13
 14876 6fac 30000000 		.long	0x30
 14877 6fb0 13       		.uleb128 0x13
 14878 6fb1 CD9D0000 		.long	0x9dcd
 14879 6fb5 00       		.byte	0
 14880 6fb6 60       		.uleb128 0x60
 14881 6fb7 00000000 		.long	.LASF944
 14882 6fbb 06       		.byte	0x6
 14883 6fbc 1601     		.value	0x116
 14884 6fbe BE6A0000 		.long	0x6abe
 14885 6fc2 D56F0000 		.long	0x6fd5
 14886 6fc6 1C       		.uleb128 0x1c
 14887 6fc7 00000000 		.long	.LASF491
 14888 6fcb 5E9B0000 		.long	0x9b5e
 14889 6fcf 13       		.uleb128 0x13
 14890 6fd0 5E9B0000 		.long	0x9b5e
 14891 6fd4 00       		.byte	0
 14892 6fd5 60       		.uleb128 0x60
 14893 6fd6 00000000 		.long	.LASF945
 14894 6fda 06       		.byte	0x6
 14895 6fdb 1803     		.value	0x318
 14896 6fdd 5E9B0000 		.long	0x9b5e
GAS LISTING /tmp/ccKUqHDa.s 			page 519


 14897 6fe1 10700000 		.long	0x7010
 14898 6fe5 09       		.uleb128 0x9
 14899 6fe6 5F4F4900 		.string	"_OI"
 14900 6fea 5E9B0000 		.long	0x9b5e
 14901 6fee 1C       		.uleb128 0x1c
 14902 6fef 00000000 		.long	.LASF322
 14903 6ff3 30000000 		.long	0x30
 14904 6ff7 09       		.uleb128 0x9
 14905 6ff8 5F547000 		.string	"_Tp"
 14906 6ffc BB710000 		.long	0x71bb
 14907 7000 13       		.uleb128 0x13
 14908 7001 5E9B0000 		.long	0x9b5e
 14909 7005 13       		.uleb128 0x13
 14910 7006 30000000 		.long	0x30
 14911 700a 13       		.uleb128 0x13
 14912 700b CD9D0000 		.long	0x9dcd
 14913 700f 00       		.byte	0
 14914 7010 5F       		.uleb128 0x5f
 14915 7011 00000000 		.long	.LASF946
 14916 7015 0E       		.byte	0xe
 14917 7016 3102     		.value	0x231
 14918 7018 39700000 		.long	0x7039
 14919 701c 1C       		.uleb128 0x1c
 14920 701d 00000000 		.long	.LASF30
 14921 7021 5E9B0000 		.long	0x9b5e
 14922 7025 1C       		.uleb128 0x1c
 14923 7026 00000000 		.long	.LASF322
 14924 702a 30000000 		.long	0x30
 14925 702e 13       		.uleb128 0x13
 14926 702f 5E9B0000 		.long	0x9b5e
 14927 7033 13       		.uleb128 0x13
 14928 7034 30000000 		.long	0x30
 14929 7038 00       		.byte	0
 14930 7039 5F       		.uleb128 0x5f
 14931 703a 00000000 		.long	.LASF947
 14932 703e 0E       		.byte	0xe
 14933 703f 7502     		.value	0x275
 14934 7041 70700000 		.long	0x7070
 14935 7045 1C       		.uleb128 0x1c
 14936 7046 00000000 		.long	.LASF30
 14937 704a 5E9B0000 		.long	0x9b5e
 14938 704e 1C       		.uleb128 0x1c
 14939 704f 00000000 		.long	.LASF322
 14940 7053 30000000 		.long	0x30
 14941 7057 09       		.uleb128 0x9
 14942 7058 5F547000 		.string	"_Tp"
 14943 705c BB710000 		.long	0x71bb
 14944 7060 13       		.uleb128 0x13
 14945 7061 5E9B0000 		.long	0x9b5e
 14946 7065 13       		.uleb128 0x13
 14947 7066 30000000 		.long	0x30
 14948 706a 13       		.uleb128 0x13
 14949 706b FD9D0000 		.long	0x9dfd
 14950 706f 00       		.byte	0
 14951 7070 63       		.uleb128 0x63
 14952 7071 61627300 		.string	"abs"
 14953 7075 0A       		.byte	0xa
GAS LISTING /tmp/ccKUqHDa.s 			page 520


 14954 7076 A6       		.byte	0xa6
 14955 7077 EC710000 		.long	0x71ec
 14956 707b 85700000 		.long	0x7085
 14957 707f 13       		.uleb128 0x13
 14958 7080 EC710000 		.long	0x71ec
 14959 7084 00       		.byte	0
 14960 7085 42       		.uleb128 0x42
 14961 7086 00000000 		.long	.LASF948
 14962 708a 06       		.byte	0x6
 14963 708b C2       		.byte	0xc2
 14964 708c 139D0000 		.long	0x9d13
 14965 7090 A8700000 		.long	0x70a8
 14966 7094 09       		.uleb128 0x9
 14967 7095 5F547000 		.string	"_Tp"
 14968 7099 29000000 		.long	0x29
 14969 709d 13       		.uleb128 0x13
 14970 709e 139D0000 		.long	0x9d13
 14971 70a2 13       		.uleb128 0x13
 14972 70a3 139D0000 		.long	0x9d13
 14973 70a7 00       		.byte	0
 14974 70a8 64       		.uleb128 0x64
 14975 70a9 00000000 		.long	.LASF1466
 14976 70ad 10       		.byte	0x10
 14977 70ae BD10     		.value	0x10bd
 14978 70b0 D6700000 		.long	0x70d6
 14979 70b4 1C       		.uleb128 0x1c
 14980 70b5 00000000 		.long	.LASF949
 14981 70b9 2F810000 		.long	0x812f
 14982 70bd 1C       		.uleb128 0x1c
 14983 70be 00000000 		.long	.LASF950
 14984 70c2 60D20000 		.long	0xd260
 14985 70c6 13       		.uleb128 0x13
 14986 70c7 2F810000 		.long	0x812f
 14987 70cb 13       		.uleb128 0x13
 14988 70cc 2F810000 		.long	0x812f
 14989 70d0 13       		.uleb128 0x13
 14990 70d1 60D20000 		.long	0xd260
 14991 70d5 00       		.byte	0
 14992 70d6 21       		.uleb128 0x21
 14993 70d7 00000000 		.long	.LASF951
 14994 70db 07       		.byte	0x7
 14995 70dc 880D     		.value	0xd88
 14996 70de 00000000 		.long	.LASF952
 14997 70e2 29000000 		.long	0x29
 14998 70e6 0C710000 		.long	0x710c
 14999 70ea 1C       		.uleb128 0x1c
 15000 70eb 00000000 		.long	.LASF792
 15001 70ef 29000000 		.long	0x29
 15002 70f3 40       		.uleb128 0x40
 15003 70f4 00000000 		.long	.LASF953
 15004 70f8 30000000 		.long	0x30
 15005 70fc 18       		.byte	0x18
 15006 70fd 1C       		.uleb128 0x1c
 15007 70fe 00000000 		.long	.LASF791
 15008 7102 B0260000 		.long	0x26b0
 15009 7106 13       		.uleb128 0x13
 15010 7107 DF9F0000 		.long	0x9fdf
GAS LISTING /tmp/ccKUqHDa.s 			page 521


 15011 710b 00       		.byte	0
 15012 710c 65       		.uleb128 0x65
 15013 710d 00000000 		.long	.LASF1491
 15014 7111 0D       		.byte	0xd
 15015 7112 4F       		.byte	0x4f
 15016 7113 19710000 		.long	0x7119
 15017 7117 01       		.byte	0x1
 15018 7118 00       		.byte	0
 15019 7119 0B       		.uleb128 0xb
 15020 711a F2000000 		.long	0xf2
 15021 711e 66       		.uleb128 0x66
 15022 711f 00000000 		.long	.LASF955
 15023 7123 15       		.byte	0x15
 15024 7124 65       		.byte	0x65
 15025 7125 00000000 		.long	.LASF957
 15026 7129 2D710000 		.long	0x712d
 15027 712d 0B       		.uleb128 0xb
 15028 712e AF030000 		.long	0x3af
 15029 7132 06       		.uleb128 0x6
 15030 7133 00000000 		.long	.LASF954
 15031 7137 2B       		.byte	0x2b
 15032 7138 88       		.byte	0x88
 15033 7139 4C2F0000 		.long	0x2f4c
 15034 713d 66       		.uleb128 0x66
 15035 713e 00000000 		.long	.LASF956
 15036 7142 11       		.byte	0x11
 15037 7143 3D       		.byte	0x3d
 15038 7144 00000000 		.long	.LASF958
 15039 7148 32710000 		.long	0x7132
 15040 714c 66       		.uleb128 0x66
 15041 714d 00000000 		.long	.LASF959
 15042 7151 11       		.byte	0x11
 15043 7152 3E       		.byte	0x3e
 15044 7153 00000000 		.long	.LASF960
 15045 7157 32710000 		.long	0x7132
 15046 715b 67       		.uleb128 0x67
 15047 715c 00000000 		.long	.LASF1457
 15048 7160 11       		.byte	0x11
 15049 7161 4A       		.byte	0x4a
 15050 7162 C42C0000 		.long	0x2cc4
 15051 7166 21       		.uleb128 0x21
 15052 7167 00000000 		.long	.LASF961
 15053 716b 08       		.byte	0x8
 15054 716c 3402     		.value	0x234
 15055 716e 00000000 		.long	.LASF962
 15056 7172 AD990000 		.long	0x99ad
 15057 7176 92710000 		.long	0x7192
 15058 717a 1C       		.uleb128 0x1c
 15059 717b 00000000 		.long	.LASF307
 15060 717f D8840000 		.long	0x84d8
 15061 7183 1C       		.uleb128 0x1c
 15062 7184 00000000 		.long	.LASF308
 15063 7188 13060000 		.long	0x613
 15064 718c 13       		.uleb128 0x13
 15065 718d AD990000 		.long	0x99ad
 15066 7191 00       		.byte	0
 15067 7192 68       		.uleb128 0x68
GAS LISTING /tmp/ccKUqHDa.s 			page 522


 15068 7193 00000000 		.long	.LASF1155
 15069 7197 37       		.byte	0x37
 15070 7198 34       		.byte	0x34
 15071 7199 00000000 		.long	.LASF1542
 15072 719d 00       		.byte	0
 15073 719e 0B       		.uleb128 0xb
 15074 719f A3710000 		.long	0x71a3
 15075 71a3 02       		.uleb128 0x2
 15076 71a4 01       		.byte	0x1
 15077 71a5 02       		.byte	0x2
 15078 71a6 00000000 		.long	.LASF963
 15079 71aa 69       		.uleb128 0x69
 15080 71ab 08       		.byte	0x8
 15081 71ac 95000000 		.long	0x95
 15082 71b0 69       		.uleb128 0x69
 15083 71b1 08       		.byte	0x8
 15084 71b2 ED000000 		.long	0xed
 15085 71b6 0B       		.uleb128 0xb
 15086 71b7 30000000 		.long	0x30
 15087 71bb 02       		.uleb128 0x2
 15088 71bc 01       		.byte	0x1
 15089 71bd 08       		.byte	0x8
 15090 71be 00000000 		.long	.LASF964
 15091 71c2 02       		.uleb128 0x2
 15092 71c3 02       		.byte	0x2
 15093 71c4 07       		.byte	0x7
 15094 71c5 00000000 		.long	.LASF965
 15095 71c9 02       		.uleb128 0x2
 15096 71ca 04       		.byte	0x4
 15097 71cb 07       		.byte	0x7
 15098 71cc 00000000 		.long	.LASF966
 15099 71d0 02       		.uleb128 0x2
 15100 71d1 08       		.byte	0x8
 15101 71d2 07       		.byte	0x7
 15102 71d3 00000000 		.long	.LASF967
 15103 71d7 02       		.uleb128 0x2
 15104 71d8 01       		.byte	0x1
 15105 71d9 06       		.byte	0x6
 15106 71da 00000000 		.long	.LASF968
 15107 71de 02       		.uleb128 0x2
 15108 71df 02       		.byte	0x2
 15109 71e0 05       		.byte	0x5
 15110 71e1 00000000 		.long	.LASF969
 15111 71e5 6A       		.uleb128 0x6a
 15112 71e6 04       		.byte	0x4
 15113 71e7 05       		.byte	0x5
 15114 71e8 696E7400 		.string	"int"
 15115 71ec 02       		.uleb128 0x2
 15116 71ed 08       		.byte	0x8
 15117 71ee 05       		.byte	0x5
 15118 71ef 00000000 		.long	.LASF970
 15119 71f3 02       		.uleb128 0x2
 15120 71f4 08       		.byte	0x8
 15121 71f5 05       		.byte	0x5
 15122 71f6 00000000 		.long	.LASF971
 15123 71fa 0F       		.uleb128 0xf
 15124 71fb 00000000 		.long	.LASF972
GAS LISTING /tmp/ccKUqHDa.s 			page 523


 15125 71ff 2C       		.byte	0x2c
 15126 7200 45       		.byte	0x45
 15127 7201 05840000 		.long	0x8405
 15128 7205 0D       		.uleb128 0xd
 15129 7206 00000000 		.long	.LASF974
 15130 720a 2E       		.byte	0x2e
 15131 720b 24       		.byte	0x24
 15132 720c 0E       		.uleb128 0xe
 15133 720d 0A       		.byte	0xa
 15134 720e C9       		.byte	0xc9
 15135 720f B6840000 		.long	0x84b6
 15136 7213 0E       		.uleb128 0xe
 15137 7214 0A       		.byte	0xa
 15138 7215 D9       		.byte	0xd9
 15139 7216 07880000 		.long	0x8807
 15140 721a 0E       		.uleb128 0xe
 15141 721b 0A       		.byte	0xa
 15142 721c E4       		.byte	0xe4
 15143 721d 22880000 		.long	0x8822
 15144 7221 0E       		.uleb128 0xe
 15145 7222 0A       		.byte	0xa
 15146 7223 E5       		.byte	0xe5
 15147 7224 38880000 		.long	0x8838
 15148 7228 0E       		.uleb128 0xe
 15149 7229 0A       		.byte	0xa
 15150 722a E6       		.byte	0xe6
 15151 722b 57880000 		.long	0x8857
 15152 722f 0E       		.uleb128 0xe
 15153 7230 0A       		.byte	0xa
 15154 7231 E8       		.byte	0xe8
 15155 7232 76880000 		.long	0x8876
 15156 7236 0E       		.uleb128 0xe
 15157 7237 0A       		.byte	0xa
 15158 7238 E9       		.byte	0xe9
 15159 7239 90880000 		.long	0x8890
 15160 723d 20       		.uleb128 0x20
 15161 723e 64697600 		.string	"div"
 15162 7242 0A       		.byte	0xa
 15163 7243 D6       		.byte	0xd6
 15164 7244 00000000 		.long	.LASF975
 15165 7248 B6840000 		.long	0x84b6
 15166 724c 5B720000 		.long	0x725b
 15167 7250 13       		.uleb128 0x13
 15168 7251 F3710000 		.long	0x71f3
 15169 7255 13       		.uleb128 0x13
 15170 7256 F3710000 		.long	0x71f3
 15171 725a 00       		.byte	0
 15172 725b 04       		.uleb128 0x4
 15173 725c 00000000 		.long	.LASF976
 15174 7260 01       		.byte	0x1
 15175 7261 2F       		.byte	0x2f
 15176 7262 37       		.byte	0x37
 15177 7263 9D720000 		.long	0x729d
 15178 7267 05       		.uleb128 0x5
 15179 7268 00000000 		.long	.LASF977
 15180 726c 2F       		.byte	0x2f
 15181 726d 3A       		.byte	0x3a
GAS LISTING /tmp/ccKUqHDa.s 			page 524


 15182 726e D3880000 		.long	0x88d3
 15183 7272 05       		.uleb128 0x5
 15184 7273 00000000 		.long	.LASF978
 15185 7277 2F       		.byte	0x2f
 15186 7278 3B       		.byte	0x3b
 15187 7279 D3880000 		.long	0x88d3
 15188 727d 05       		.uleb128 0x5
 15189 727e 00000000 		.long	.LASF979
 15190 7282 2F       		.byte	0x2f
 15191 7283 3F       		.byte	0x3f
 15192 7284 9E710000 		.long	0x719e
 15193 7288 05       		.uleb128 0x5
 15194 7289 00000000 		.long	.LASF980
 15195 728d 2F       		.byte	0x2f
 15196 728e 40       		.byte	0x40
 15197 728f C8840000 		.long	0x84c8
 15198 7293 1C       		.uleb128 0x1c
 15199 7294 00000000 		.long	.LASF981
 15200 7298 EC710000 		.long	0x71ec
 15201 729c 00       		.byte	0
 15202 729d 0E       		.uleb128 0xe
 15203 729e 16       		.byte	0x16
 15204 729f F8       		.byte	0xf8
 15205 72a0 43920000 		.long	0x9243
 15206 72a4 1E       		.uleb128 0x1e
 15207 72a5 16       		.byte	0x16
 15208 72a6 0101     		.value	0x101
 15209 72a8 5E920000 		.long	0x925e
 15210 72ac 1E       		.uleb128 0x1e
 15211 72ad 16       		.byte	0x16
 15212 72ae 0201     		.value	0x102
 15213 72b0 7E920000 		.long	0x927e
 15214 72b4 0E       		.uleb128 0xe
 15215 72b5 05       		.byte	0x5
 15216 72b6 2C       		.byte	0x2c
 15217 72b7 DB070000 		.long	0x7db
 15218 72bb 0E       		.uleb128 0xe
 15219 72bc 05       		.byte	0x5
 15220 72bd 2D       		.byte	0x2d
 15221 72be AA080000 		.long	0x8aa
 15222 72c2 10       		.uleb128 0x10
 15223 72c3 00000000 		.long	.LASF982
 15224 72c7 01       		.byte	0x1
 15225 72c8 05       		.byte	0x5
 15226 72c9 3A       		.byte	0x3a
 15227 72ca 03740000 		.long	0x7403
 15228 72ce 25       		.uleb128 0x25
 15229 72cf 00000000 		.long	.LASF61
 15230 72d3 05       		.byte	0x5
 15231 72d4 3D       		.byte	0x3d
 15232 72d5 DB070000 		.long	0x7db
 15233 72d9 01       		.byte	0x1
 15234 72da 25       		.uleb128 0x25
 15235 72db 00000000 		.long	.LASF490
 15236 72df 05       		.byte	0x5
 15237 72e0 3F       		.byte	0x3f
 15238 72e1 18850000 		.long	0x8518
GAS LISTING /tmp/ccKUqHDa.s 			page 525


 15239 72e5 01       		.byte	0x1
 15240 72e6 25       		.uleb128 0x25
 15241 72e7 00000000 		.long	.LASF738
 15242 72eb 05       		.byte	0x5
 15243 72ec 40       		.byte	0x40
 15244 72ed CD840000 		.long	0x84cd
 15245 72f1 01       		.byte	0x1
 15246 72f2 25       		.uleb128 0x25
 15247 72f3 00000000 		.long	.LASF62
 15248 72f7 05       		.byte	0x5
 15249 72f8 41       		.byte	0x41
 15250 72f9 D2930000 		.long	0x93d2
 15251 72fd 01       		.byte	0x1
 15252 72fe 25       		.uleb128 0x25
 15253 72ff 00000000 		.long	.LASF63
 15254 7303 05       		.byte	0x5
 15255 7304 42       		.byte	0x42
 15256 7305 D8930000 		.long	0x93d8
 15257 7309 01       		.byte	0x1
 15258 730a 15       		.uleb128 0x15
 15259 730b 00000000 		.long	.LASF983
 15260 730f 05       		.byte	0x5
 15261 7310 4F       		.byte	0x4f
 15262 7311 01       		.byte	0x1
 15263 7312 1A730000 		.long	0x731a
 15264 7316 20730000 		.long	0x7320
 15265 731a 08       		.uleb128 0x8
 15266 731b DE930000 		.long	0x93de
 15267 731f 00       		.byte	0
 15268 7320 15       		.uleb128 0x15
 15269 7321 00000000 		.long	.LASF983
 15270 7325 05       		.byte	0x5
 15271 7326 51       		.byte	0x51
 15272 7327 01       		.byte	0x1
 15273 7328 30730000 		.long	0x7330
 15274 732c 3B730000 		.long	0x733b
 15275 7330 08       		.uleb128 0x8
 15276 7331 DE930000 		.long	0x93de
 15277 7335 13       		.uleb128 0x13
 15278 7336 E4930000 		.long	0x93e4
 15279 733a 00       		.byte	0
 15280 733b 15       		.uleb128 0x15
 15281 733c 00000000 		.long	.LASF984
 15282 7340 05       		.byte	0x5
 15283 7341 56       		.byte	0x56
 15284 7342 01       		.byte	0x1
 15285 7343 4B730000 		.long	0x734b
 15286 7347 56730000 		.long	0x7356
 15287 734b 08       		.uleb128 0x8
 15288 734c DE930000 		.long	0x93de
 15289 7350 08       		.uleb128 0x8
 15290 7351 E5710000 		.long	0x71e5
 15291 7355 00       		.byte	0
 15292 7356 16       		.uleb128 0x16
 15293 7357 00000000 		.long	.LASF985
 15294 735b 05       		.byte	0x5
 15295 735c 59       		.byte	0x59
GAS LISTING /tmp/ccKUqHDa.s 			page 526


 15296 735d 00000000 		.long	.LASF986
 15297 7361 DA720000 		.long	0x72da
 15298 7365 01       		.byte	0x1
 15299 7366 6E730000 		.long	0x736e
 15300 736a 79730000 		.long	0x7379
 15301 736e 08       		.uleb128 0x8
 15302 736f EA930000 		.long	0x93ea
 15303 7373 13       		.uleb128 0x13
 15304 7374 F2720000 		.long	0x72f2
 15305 7378 00       		.byte	0
 15306 7379 16       		.uleb128 0x16
 15307 737a 00000000 		.long	.LASF985
 15308 737e 05       		.byte	0x5
 15309 737f 5D       		.byte	0x5d
 15310 7380 00000000 		.long	.LASF987
 15311 7384 E6720000 		.long	0x72e6
 15312 7388 01       		.byte	0x1
 15313 7389 91730000 		.long	0x7391
 15314 738d 9C730000 		.long	0x739c
 15315 7391 08       		.uleb128 0x8
 15316 7392 EA930000 		.long	0x93ea
 15317 7396 13       		.uleb128 0x13
 15318 7397 FE720000 		.long	0x72fe
 15319 739b 00       		.byte	0
 15320 739c 16       		.uleb128 0x16
 15321 739d 00000000 		.long	.LASF525
 15322 73a1 05       		.byte	0x5
 15323 73a2 63       		.byte	0x63
 15324 73a3 00000000 		.long	.LASF988
 15325 73a7 DA720000 		.long	0x72da
 15326 73ab 01       		.byte	0x1
 15327 73ac B4730000 		.long	0x73b4
 15328 73b0 C4730000 		.long	0x73c4
 15329 73b4 08       		.uleb128 0x8
 15330 73b5 DE930000 		.long	0x93de
 15331 73b9 13       		.uleb128 0x13
 15332 73ba CE720000 		.long	0x72ce
 15333 73be 13       		.uleb128 0x13
 15334 73bf 96850000 		.long	0x8596
 15335 73c3 00       		.byte	0
 15336 73c4 17       		.uleb128 0x17
 15337 73c5 00000000 		.long	.LASF528
 15338 73c9 05       		.byte	0x5
 15339 73ca 6D       		.byte	0x6d
 15340 73cb 00000000 		.long	.LASF989
 15341 73cf 01       		.byte	0x1
 15342 73d0 D8730000 		.long	0x73d8
 15343 73d4 E8730000 		.long	0x73e8
 15344 73d8 08       		.uleb128 0x8
 15345 73d9 DE930000 		.long	0x93de
 15346 73dd 13       		.uleb128 0x13
 15347 73de DA720000 		.long	0x72da
 15348 73e2 13       		.uleb128 0x13
 15349 73e3 CE720000 		.long	0x72ce
 15350 73e7 00       		.byte	0
 15351 73e8 19       		.uleb128 0x19
 15352 73e9 00000000 		.long	.LASF177
GAS LISTING /tmp/ccKUqHDa.s 			page 527


 15353 73ed 05       		.byte	0x5
 15354 73ee 71       		.byte	0x71
 15355 73ef 00000000 		.long	.LASF990
 15356 73f3 CE720000 		.long	0x72ce
 15357 73f7 01       		.byte	0x1
 15358 73f8 FC730000 		.long	0x73fc
 15359 73fc 08       		.uleb128 0x8
 15360 73fd EA930000 		.long	0x93ea
 15361 7401 00       		.byte	0
 15362 7402 00       		.byte	0
 15363 7403 0B       		.uleb128 0xb
 15364 7404 C2720000 		.long	0x72c2
 15365 7408 04       		.uleb128 0x4
 15366 7409 00000000 		.long	.LASF991
 15367 740d 01       		.byte	0x1
 15368 740e 2F       		.byte	0x2f
 15369 740f 37       		.byte	0x37
 15370 7410 4A740000 		.long	0x744a
 15371 7414 05       		.uleb128 0x5
 15372 7415 00000000 		.long	.LASF977
 15373 7419 2F       		.byte	0x2f
 15374 741a 3A       		.byte	0x3a
 15375 741b C8840000 		.long	0x84c8
 15376 741f 05       		.uleb128 0x5
 15377 7420 00000000 		.long	.LASF978
 15378 7424 2F       		.byte	0x2f
 15379 7425 3B       		.byte	0x3b
 15380 7426 C8840000 		.long	0x84c8
 15381 742a 05       		.uleb128 0x5
 15382 742b 00000000 		.long	.LASF979
 15383 742f 2F       		.byte	0x2f
 15384 7430 3F       		.byte	0x3f
 15385 7431 9E710000 		.long	0x719e
 15386 7435 05       		.uleb128 0x5
 15387 7436 00000000 		.long	.LASF980
 15388 743a 2F       		.byte	0x2f
 15389 743b 40       		.byte	0x40
 15390 743c C8840000 		.long	0x84c8
 15391 7440 1C       		.uleb128 0x1c
 15392 7441 00000000 		.long	.LASF981
 15393 7445 E5710000 		.long	0x71e5
 15394 7449 00       		.byte	0
 15395 744a 4F       		.uleb128 0x4f
 15396 744b 00000000 		.long	.LASF992
 15397 744f 08       		.byte	0x8
 15398 7450 30       		.byte	0x30
 15399 7451 C502     		.value	0x2c5
 15400 7453 69760000 		.long	0x7669
 15401 7457 5C       		.uleb128 0x5c
 15402 7458 00000000 		.long	.LASF993
 15403 745c 30       		.byte	0x30
 15404 745d C802     		.value	0x2c8
 15405 745f 18850000 		.long	0x8518
 15406 7463 00       		.byte	0
 15407 7464 02       		.byte	0x2
 15408 7465 46       		.uleb128 0x46
 15409 7466 00000000 		.long	.LASF489
GAS LISTING /tmp/ccKUqHDa.s 			page 528


 15410 746a 30       		.byte	0x30
 15411 746b D002     		.value	0x2d0
 15412 746d 8C300000 		.long	0x308c
 15413 7471 01       		.byte	0x1
 15414 7472 46       		.uleb128 0x46
 15415 7473 00000000 		.long	.LASF62
 15416 7477 30       		.byte	0x30
 15417 7478 D102     		.value	0x2d1
 15418 747a A2300000 		.long	0x30a2
 15419 747e 01       		.byte	0x1
 15420 747f 46       		.uleb128 0x46
 15421 7480 00000000 		.long	.LASF490
 15422 7484 30       		.byte	0x30
 15423 7485 D202     		.value	0x2d2
 15424 7487 97300000 		.long	0x3097
 15425 748b 01       		.byte	0x1
 15426 748c 33       		.uleb128 0x33
 15427 748d 00000000 		.long	.LASF994
 15428 7491 30       		.byte	0x30
 15429 7492 D402     		.value	0x2d4
 15430 7494 01       		.byte	0x1
 15431 7495 9D740000 		.long	0x749d
 15432 7499 A3740000 		.long	0x74a3
 15433 749d 08       		.uleb128 0x8
 15434 749e 979A0000 		.long	0x9a97
 15435 74a2 00       		.byte	0
 15436 74a3 34       		.uleb128 0x34
 15437 74a4 00000000 		.long	.LASF994
 15438 74a8 30       		.byte	0x30
 15439 74a9 D802     		.value	0x2d8
 15440 74ab 01       		.byte	0x1
 15441 74ac B4740000 		.long	0x74b4
 15442 74b0 BF740000 		.long	0x74bf
 15443 74b4 08       		.uleb128 0x8
 15444 74b5 979A0000 		.long	0x9a97
 15445 74b9 13       		.uleb128 0x13
 15446 74ba 9D9A0000 		.long	0x9a9d
 15447 74be 00       		.byte	0
 15448 74bf 35       		.uleb128 0x35
 15449 74c0 00000000 		.long	.LASF995
 15450 74c4 30       		.byte	0x30
 15451 74c5 E502     		.value	0x2e5
 15452 74c7 00000000 		.long	.LASF996
 15453 74cb 72740000 		.long	0x7472
 15454 74cf 01       		.byte	0x1
 15455 74d0 D8740000 		.long	0x74d8
 15456 74d4 DE740000 		.long	0x74de
 15457 74d8 08       		.uleb128 0x8
 15458 74d9 A89A0000 		.long	0x9aa8
 15459 74dd 00       		.byte	0
 15460 74de 35       		.uleb128 0x35
 15461 74df 00000000 		.long	.LASF997
 15462 74e3 30       		.byte	0x30
 15463 74e4 E902     		.value	0x2e9
 15464 74e6 00000000 		.long	.LASF998
 15465 74ea 7F740000 		.long	0x747f
 15466 74ee 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 529


 15467 74ef F7740000 		.long	0x74f7
 15468 74f3 FD740000 		.long	0x74fd
 15469 74f7 08       		.uleb128 0x8
 15470 74f8 A89A0000 		.long	0x9aa8
 15471 74fc 00       		.byte	0
 15472 74fd 35       		.uleb128 0x35
 15473 74fe 00000000 		.long	.LASF999
 15474 7502 30       		.byte	0x30
 15475 7503 ED02     		.value	0x2ed
 15476 7505 00000000 		.long	.LASF1000
 15477 7509 AE9A0000 		.long	0x9aae
 15478 750d 01       		.byte	0x1
 15479 750e 16750000 		.long	0x7516
 15480 7512 1C750000 		.long	0x751c
 15481 7516 08       		.uleb128 0x8
 15482 7517 979A0000 		.long	0x9a97
 15483 751b 00       		.byte	0
 15484 751c 35       		.uleb128 0x35
 15485 751d 00000000 		.long	.LASF999
 15486 7521 30       		.byte	0x30
 15487 7522 F402     		.value	0x2f4
 15488 7524 00000000 		.long	.LASF1001
 15489 7528 4A740000 		.long	0x744a
 15490 752c 01       		.byte	0x1
 15491 752d 35750000 		.long	0x7535
 15492 7531 40750000 		.long	0x7540
 15493 7535 08       		.uleb128 0x8
 15494 7536 979A0000 		.long	0x9a97
 15495 753a 13       		.uleb128 0x13
 15496 753b E5710000 		.long	0x71e5
 15497 753f 00       		.byte	0
 15498 7540 35       		.uleb128 0x35
 15499 7541 00000000 		.long	.LASF1002
 15500 7545 30       		.byte	0x30
 15501 7546 F902     		.value	0x2f9
 15502 7548 00000000 		.long	.LASF1003
 15503 754c AE9A0000 		.long	0x9aae
 15504 7550 01       		.byte	0x1
 15505 7551 59750000 		.long	0x7559
 15506 7555 5F750000 		.long	0x755f
 15507 7559 08       		.uleb128 0x8
 15508 755a 979A0000 		.long	0x9a97
 15509 755e 00       		.byte	0
 15510 755f 35       		.uleb128 0x35
 15511 7560 00000000 		.long	.LASF1002
 15512 7564 30       		.byte	0x30
 15513 7565 0003     		.value	0x300
 15514 7567 00000000 		.long	.LASF1004
 15515 756b 4A740000 		.long	0x744a
 15516 756f 01       		.byte	0x1
 15517 7570 78750000 		.long	0x7578
 15518 7574 83750000 		.long	0x7583
 15519 7578 08       		.uleb128 0x8
 15520 7579 979A0000 		.long	0x9a97
 15521 757d 13       		.uleb128 0x13
 15522 757e E5710000 		.long	0x71e5
 15523 7582 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 530


 15524 7583 35       		.uleb128 0x35
 15525 7584 00000000 		.long	.LASF192
 15526 7588 30       		.byte	0x30
 15527 7589 0503     		.value	0x305
 15528 758b 00000000 		.long	.LASF1005
 15529 758f 72740000 		.long	0x7472
 15530 7593 01       		.byte	0x1
 15531 7594 9C750000 		.long	0x759c
 15532 7598 A7750000 		.long	0x75a7
 15533 759c 08       		.uleb128 0x8
 15534 759d A89A0000 		.long	0x9aa8
 15535 75a1 13       		.uleb128 0x13
 15536 75a2 65740000 		.long	0x7465
 15537 75a6 00       		.byte	0
 15538 75a7 35       		.uleb128 0x35
 15539 75a8 00000000 		.long	.LASF203
 15540 75ac 30       		.byte	0x30
 15541 75ad 0903     		.value	0x309
 15542 75af 00000000 		.long	.LASF1006
 15543 75b3 AE9A0000 		.long	0x9aae
 15544 75b7 01       		.byte	0x1
 15545 75b8 C0750000 		.long	0x75c0
 15546 75bc CB750000 		.long	0x75cb
 15547 75c0 08       		.uleb128 0x8
 15548 75c1 979A0000 		.long	0x9a97
 15549 75c5 13       		.uleb128 0x13
 15550 75c6 65740000 		.long	0x7465
 15551 75ca 00       		.byte	0
 15552 75cb 35       		.uleb128 0x35
 15553 75cc 00000000 		.long	.LASF1007
 15554 75d0 30       		.byte	0x30
 15555 75d1 0D03     		.value	0x30d
 15556 75d3 00000000 		.long	.LASF1008
 15557 75d7 4A740000 		.long	0x744a
 15558 75db 01       		.byte	0x1
 15559 75dc E4750000 		.long	0x75e4
 15560 75e0 EF750000 		.long	0x75ef
 15561 75e4 08       		.uleb128 0x8
 15562 75e5 A89A0000 		.long	0x9aa8
 15563 75e9 13       		.uleb128 0x13
 15564 75ea 65740000 		.long	0x7465
 15565 75ee 00       		.byte	0
 15566 75ef 35       		.uleb128 0x35
 15567 75f0 00000000 		.long	.LASF1009
 15568 75f4 30       		.byte	0x30
 15569 75f5 1103     		.value	0x311
 15570 75f7 00000000 		.long	.LASF1010
 15571 75fb AE9A0000 		.long	0x9aae
 15572 75ff 01       		.byte	0x1
 15573 7600 08760000 		.long	0x7608
 15574 7604 13760000 		.long	0x7613
 15575 7608 08       		.uleb128 0x8
 15576 7609 979A0000 		.long	0x9a97
 15577 760d 13       		.uleb128 0x13
 15578 760e 65740000 		.long	0x7465
 15579 7612 00       		.byte	0
 15580 7613 35       		.uleb128 0x35
GAS LISTING /tmp/ccKUqHDa.s 			page 531


 15581 7614 00000000 		.long	.LASF1011
 15582 7618 30       		.byte	0x30
 15583 7619 1503     		.value	0x315
 15584 761b 00000000 		.long	.LASF1012
 15585 761f 4A740000 		.long	0x744a
 15586 7623 01       		.byte	0x1
 15587 7624 2C760000 		.long	0x762c
 15588 7628 37760000 		.long	0x7637
 15589 762c 08       		.uleb128 0x8
 15590 762d A89A0000 		.long	0x9aa8
 15591 7631 13       		.uleb128 0x13
 15592 7632 65740000 		.long	0x7465
 15593 7636 00       		.byte	0
 15594 7637 35       		.uleb128 0x35
 15595 7638 00000000 		.long	.LASF1013
 15596 763c 30       		.byte	0x30
 15597 763d 1903     		.value	0x319
 15598 763f 00000000 		.long	.LASF1014
 15599 7643 9D9A0000 		.long	0x9a9d
 15600 7647 01       		.byte	0x1
 15601 7648 50760000 		.long	0x7650
 15602 764c 56760000 		.long	0x7656
 15603 7650 08       		.uleb128 0x8
 15604 7651 A89A0000 		.long	0x9aa8
 15605 7655 00       		.byte	0
 15606 7656 1C       		.uleb128 0x1c
 15607 7657 00000000 		.long	.LASF491
 15608 765b 18850000 		.long	0x8518
 15609 765f 1C       		.uleb128 0x1c
 15610 7660 00000000 		.long	.LASF1015
 15611 7664 1E0A0000 		.long	0xa1e
 15612 7668 00       		.byte	0
 15613 7669 4F       		.uleb128 0x4f
 15614 766a 00000000 		.long	.LASF1016
 15615 766e 08       		.byte	0x8
 15616 766f 30       		.byte	0x30
 15617 7670 C502     		.value	0x2c5
 15618 7672 88780000 		.long	0x7888
 15619 7676 5C       		.uleb128 0x5c
 15620 7677 00000000 		.long	.LASF993
 15621 767b 30       		.byte	0x30
 15622 767c C802     		.value	0x2c8
 15623 767e CD840000 		.long	0x84cd
 15624 7682 00       		.byte	0
 15625 7683 02       		.byte	0x2
 15626 7684 46       		.uleb128 0x46
 15627 7685 00000000 		.long	.LASF489
 15628 7689 30       		.byte	0x30
 15629 768a D002     		.value	0x2d0
 15630 768c 436A0000 		.long	0x6a43
 15631 7690 01       		.byte	0x1
 15632 7691 46       		.uleb128 0x46
 15633 7692 00000000 		.long	.LASF62
 15634 7696 30       		.byte	0x30
 15635 7697 D102     		.value	0x2d1
 15636 7699 596A0000 		.long	0x6a59
 15637 769d 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 532


 15638 769e 46       		.uleb128 0x46
 15639 769f 00000000 		.long	.LASF490
 15640 76a3 30       		.byte	0x30
 15641 76a4 D202     		.value	0x2d2
 15642 76a6 4E6A0000 		.long	0x6a4e
 15643 76aa 01       		.byte	0x1
 15644 76ab 33       		.uleb128 0x33
 15645 76ac 00000000 		.long	.LASF994
 15646 76b0 30       		.byte	0x30
 15647 76b1 D402     		.value	0x2d4
 15648 76b3 01       		.byte	0x1
 15649 76b4 BC760000 		.long	0x76bc
 15650 76b8 C2760000 		.long	0x76c2
 15651 76bc 08       		.uleb128 0x8
 15652 76bd F19F0000 		.long	0x9ff1
 15653 76c1 00       		.byte	0
 15654 76c2 34       		.uleb128 0x34
 15655 76c3 00000000 		.long	.LASF994
 15656 76c7 30       		.byte	0x30
 15657 76c8 D802     		.value	0x2d8
 15658 76ca 01       		.byte	0x1
 15659 76cb D3760000 		.long	0x76d3
 15660 76cf DE760000 		.long	0x76de
 15661 76d3 08       		.uleb128 0x8
 15662 76d4 F19F0000 		.long	0x9ff1
 15663 76d8 13       		.uleb128 0x13
 15664 76d9 F79F0000 		.long	0x9ff7
 15665 76dd 00       		.byte	0
 15666 76de 35       		.uleb128 0x35
 15667 76df 00000000 		.long	.LASF995
 15668 76e3 30       		.byte	0x30
 15669 76e4 E502     		.value	0x2e5
 15670 76e6 00000000 		.long	.LASF1017
 15671 76ea 91760000 		.long	0x7691
 15672 76ee 01       		.byte	0x1
 15673 76ef F7760000 		.long	0x76f7
 15674 76f3 FD760000 		.long	0x76fd
 15675 76f7 08       		.uleb128 0x8
 15676 76f8 FD9F0000 		.long	0x9ffd
 15677 76fc 00       		.byte	0
 15678 76fd 35       		.uleb128 0x35
 15679 76fe 00000000 		.long	.LASF997
 15680 7702 30       		.byte	0x30
 15681 7703 E902     		.value	0x2e9
 15682 7705 00000000 		.long	.LASF1018
 15683 7709 9E760000 		.long	0x769e
 15684 770d 01       		.byte	0x1
 15685 770e 16770000 		.long	0x7716
 15686 7712 1C770000 		.long	0x771c
 15687 7716 08       		.uleb128 0x8
 15688 7717 FD9F0000 		.long	0x9ffd
 15689 771b 00       		.byte	0
 15690 771c 35       		.uleb128 0x35
 15691 771d 00000000 		.long	.LASF999
 15692 7721 30       		.byte	0x30
 15693 7722 ED02     		.value	0x2ed
 15694 7724 00000000 		.long	.LASF1019
GAS LISTING /tmp/ccKUqHDa.s 			page 533


 15695 7728 03A00000 		.long	0xa003
 15696 772c 01       		.byte	0x1
 15697 772d 35770000 		.long	0x7735
 15698 7731 3B770000 		.long	0x773b
 15699 7735 08       		.uleb128 0x8
 15700 7736 F19F0000 		.long	0x9ff1
 15701 773a 00       		.byte	0
 15702 773b 35       		.uleb128 0x35
 15703 773c 00000000 		.long	.LASF999
 15704 7740 30       		.byte	0x30
 15705 7741 F402     		.value	0x2f4
 15706 7743 00000000 		.long	.LASF1020
 15707 7747 69760000 		.long	0x7669
 15708 774b 01       		.byte	0x1
 15709 774c 54770000 		.long	0x7754
 15710 7750 5F770000 		.long	0x775f
 15711 7754 08       		.uleb128 0x8
 15712 7755 F19F0000 		.long	0x9ff1
 15713 7759 13       		.uleb128 0x13
 15714 775a E5710000 		.long	0x71e5
 15715 775e 00       		.byte	0
 15716 775f 35       		.uleb128 0x35
 15717 7760 00000000 		.long	.LASF1002
 15718 7764 30       		.byte	0x30
 15719 7765 F902     		.value	0x2f9
 15720 7767 00000000 		.long	.LASF1021
 15721 776b 03A00000 		.long	0xa003
 15722 776f 01       		.byte	0x1
 15723 7770 78770000 		.long	0x7778
 15724 7774 7E770000 		.long	0x777e
 15725 7778 08       		.uleb128 0x8
 15726 7779 F19F0000 		.long	0x9ff1
 15727 777d 00       		.byte	0
 15728 777e 35       		.uleb128 0x35
 15729 777f 00000000 		.long	.LASF1002
 15730 7783 30       		.byte	0x30
 15731 7784 0003     		.value	0x300
 15732 7786 00000000 		.long	.LASF1022
 15733 778a 69760000 		.long	0x7669
 15734 778e 01       		.byte	0x1
 15735 778f 97770000 		.long	0x7797
 15736 7793 A2770000 		.long	0x77a2
 15737 7797 08       		.uleb128 0x8
 15738 7798 F19F0000 		.long	0x9ff1
 15739 779c 13       		.uleb128 0x13
 15740 779d E5710000 		.long	0x71e5
 15741 77a1 00       		.byte	0
 15742 77a2 35       		.uleb128 0x35
 15743 77a3 00000000 		.long	.LASF192
 15744 77a7 30       		.byte	0x30
 15745 77a8 0503     		.value	0x305
 15746 77aa 00000000 		.long	.LASF1023
 15747 77ae 91760000 		.long	0x7691
 15748 77b2 01       		.byte	0x1
 15749 77b3 BB770000 		.long	0x77bb
 15750 77b7 C6770000 		.long	0x77c6
 15751 77bb 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 534


 15752 77bc FD9F0000 		.long	0x9ffd
 15753 77c0 13       		.uleb128 0x13
 15754 77c1 84760000 		.long	0x7684
 15755 77c5 00       		.byte	0
 15756 77c6 35       		.uleb128 0x35
 15757 77c7 00000000 		.long	.LASF203
 15758 77cb 30       		.byte	0x30
 15759 77cc 0903     		.value	0x309
 15760 77ce 00000000 		.long	.LASF1024
 15761 77d2 03A00000 		.long	0xa003
 15762 77d6 01       		.byte	0x1
 15763 77d7 DF770000 		.long	0x77df
 15764 77db EA770000 		.long	0x77ea
 15765 77df 08       		.uleb128 0x8
 15766 77e0 F19F0000 		.long	0x9ff1
 15767 77e4 13       		.uleb128 0x13
 15768 77e5 84760000 		.long	0x7684
 15769 77e9 00       		.byte	0
 15770 77ea 35       		.uleb128 0x35
 15771 77eb 00000000 		.long	.LASF1007
 15772 77ef 30       		.byte	0x30
 15773 77f0 0D03     		.value	0x30d
 15774 77f2 00000000 		.long	.LASF1025
 15775 77f6 69760000 		.long	0x7669
 15776 77fa 01       		.byte	0x1
 15777 77fb 03780000 		.long	0x7803
 15778 77ff 0E780000 		.long	0x780e
 15779 7803 08       		.uleb128 0x8
 15780 7804 FD9F0000 		.long	0x9ffd
 15781 7808 13       		.uleb128 0x13
 15782 7809 84760000 		.long	0x7684
 15783 780d 00       		.byte	0
 15784 780e 35       		.uleb128 0x35
 15785 780f 00000000 		.long	.LASF1009
 15786 7813 30       		.byte	0x30
 15787 7814 1103     		.value	0x311
 15788 7816 00000000 		.long	.LASF1026
 15789 781a 03A00000 		.long	0xa003
 15790 781e 01       		.byte	0x1
 15791 781f 27780000 		.long	0x7827
 15792 7823 32780000 		.long	0x7832
 15793 7827 08       		.uleb128 0x8
 15794 7828 F19F0000 		.long	0x9ff1
 15795 782c 13       		.uleb128 0x13
 15796 782d 84760000 		.long	0x7684
 15797 7831 00       		.byte	0
 15798 7832 35       		.uleb128 0x35
 15799 7833 00000000 		.long	.LASF1011
 15800 7837 30       		.byte	0x30
 15801 7838 1503     		.value	0x315
 15802 783a 00000000 		.long	.LASF1027
 15803 783e 69760000 		.long	0x7669
 15804 7842 01       		.byte	0x1
 15805 7843 4B780000 		.long	0x784b
 15806 7847 56780000 		.long	0x7856
 15807 784b 08       		.uleb128 0x8
 15808 784c FD9F0000 		.long	0x9ffd
GAS LISTING /tmp/ccKUqHDa.s 			page 535


 15809 7850 13       		.uleb128 0x13
 15810 7851 84760000 		.long	0x7684
 15811 7855 00       		.byte	0
 15812 7856 35       		.uleb128 0x35
 15813 7857 00000000 		.long	.LASF1013
 15814 785b 30       		.byte	0x30
 15815 785c 1903     		.value	0x319
 15816 785e 00000000 		.long	.LASF1028
 15817 7862 F79F0000 		.long	0x9ff7
 15818 7866 01       		.byte	0x1
 15819 7867 6F780000 		.long	0x786f
 15820 786b 75780000 		.long	0x7875
 15821 786f 08       		.uleb128 0x8
 15822 7870 FD9F0000 		.long	0x9ffd
 15823 7874 00       		.byte	0
 15824 7875 1C       		.uleb128 0x1c
 15825 7876 00000000 		.long	.LASF491
 15826 787a CD840000 		.long	0x84cd
 15827 787e 1C       		.uleb128 0x1c
 15828 787f 00000000 		.long	.LASF1015
 15829 7883 1E0A0000 		.long	0xa1e
 15830 7887 00       		.byte	0
 15831 7888 04       		.uleb128 0x4
 15832 7889 00000000 		.long	.LASF1029
 15833 788d 01       		.byte	0x1
 15834 788e 2F       		.byte	0x2f
 15835 788f 64       		.byte	0x64
 15836 7890 CA780000 		.long	0x78ca
 15837 7894 05       		.uleb128 0x5
 15838 7895 00000000 		.long	.LASF1030
 15839 7899 2F       		.byte	0x2f
 15840 789a 67       		.byte	0x67
 15841 789b C8840000 		.long	0x84c8
 15842 789f 05       		.uleb128 0x5
 15843 78a0 00000000 		.long	.LASF979
 15844 78a4 2F       		.byte	0x2f
 15845 78a5 6A       		.byte	0x6a
 15846 78a6 9E710000 		.long	0x719e
 15847 78aa 05       		.uleb128 0x5
 15848 78ab 00000000 		.long	.LASF1031
 15849 78af 2F       		.byte	0x2f
 15850 78b0 6B       		.byte	0x6b
 15851 78b1 C8840000 		.long	0x84c8
 15852 78b5 05       		.uleb128 0x5
 15853 78b6 00000000 		.long	.LASF1032
 15854 78ba 2F       		.byte	0x2f
 15855 78bb 6C       		.byte	0x6c
 15856 78bc C8840000 		.long	0x84c8
 15857 78c0 1C       		.uleb128 0x1c
 15858 78c1 00000000 		.long	.LASF981
 15859 78c5 29000000 		.long	0x29
 15860 78c9 00       		.byte	0
 15861 78ca 04       		.uleb128 0x4
 15862 78cb 00000000 		.long	.LASF1033
 15863 78cf 01       		.byte	0x1
 15864 78d0 2F       		.byte	0x2f
 15865 78d1 64       		.byte	0x64
GAS LISTING /tmp/ccKUqHDa.s 			page 536


 15866 78d2 0C790000 		.long	0x790c
 15867 78d6 05       		.uleb128 0x5
 15868 78d7 00000000 		.long	.LASF1030
 15869 78db 2F       		.byte	0x2f
 15870 78dc 67       		.byte	0x67
 15871 78dd C8840000 		.long	0x84c8
 15872 78e1 05       		.uleb128 0x5
 15873 78e2 00000000 		.long	.LASF979
 15874 78e6 2F       		.byte	0x2f
 15875 78e7 6A       		.byte	0x6a
 15876 78e8 9E710000 		.long	0x719e
 15877 78ec 05       		.uleb128 0x5
 15878 78ed 00000000 		.long	.LASF1031
 15879 78f1 2F       		.byte	0x2f
 15880 78f2 6B       		.byte	0x6b
 15881 78f3 C8840000 		.long	0x84c8
 15882 78f7 05       		.uleb128 0x5
 15883 78f8 00000000 		.long	.LASF1032
 15884 78fc 2F       		.byte	0x2f
 15885 78fd 6C       		.byte	0x6c
 15886 78fe C8840000 		.long	0x84c8
 15887 7902 1C       		.uleb128 0x1c
 15888 7903 00000000 		.long	.LASF981
 15889 7907 0C840000 		.long	0x840c
 15890 790b 00       		.byte	0
 15891 790c 04       		.uleb128 0x4
 15892 790d 00000000 		.long	.LASF1034
 15893 7911 01       		.byte	0x1
 15894 7912 2F       		.byte	0x2f
 15895 7913 64       		.byte	0x64
 15896 7914 4E790000 		.long	0x794e
 15897 7918 05       		.uleb128 0x5
 15898 7919 00000000 		.long	.LASF1030
 15899 791d 2F       		.byte	0x2f
 15900 791e 67       		.byte	0x67
 15901 791f C8840000 		.long	0x84c8
 15902 7923 05       		.uleb128 0x5
 15903 7924 00000000 		.long	.LASF979
 15904 7928 2F       		.byte	0x2f
 15905 7929 6A       		.byte	0x6a
 15906 792a 9E710000 		.long	0x719e
 15907 792e 05       		.uleb128 0x5
 15908 792f 00000000 		.long	.LASF1031
 15909 7933 2F       		.byte	0x2f
 15910 7934 6B       		.byte	0x6b
 15911 7935 C8840000 		.long	0x84c8
 15912 7939 05       		.uleb128 0x5
 15913 793a 00000000 		.long	.LASF1032
 15914 793e 2F       		.byte	0x2f
 15915 793f 6C       		.byte	0x6c
 15916 7940 C8840000 		.long	0x84c8
 15917 7944 1C       		.uleb128 0x1c
 15918 7945 00000000 		.long	.LASF981
 15919 7949 05840000 		.long	0x8405
 15920 794d 00       		.byte	0
 15921 794e 04       		.uleb128 0x4
 15922 794f 00000000 		.long	.LASF1035
GAS LISTING /tmp/ccKUqHDa.s 			page 537


 15923 7953 01       		.byte	0x1
 15924 7954 2F       		.byte	0x2f
 15925 7955 37       		.byte	0x37
 15926 7956 90790000 		.long	0x7990
 15927 795a 05       		.uleb128 0x5
 15928 795b 00000000 		.long	.LASF977
 15929 795f 2F       		.byte	0x2f
 15930 7960 3A       		.byte	0x3a
 15931 7961 B6710000 		.long	0x71b6
 15932 7965 05       		.uleb128 0x5
 15933 7966 00000000 		.long	.LASF978
 15934 796a 2F       		.byte	0x2f
 15935 796b 3B       		.byte	0x3b
 15936 796c B6710000 		.long	0x71b6
 15937 7970 05       		.uleb128 0x5
 15938 7971 00000000 		.long	.LASF979
 15939 7975 2F       		.byte	0x2f
 15940 7976 3F       		.byte	0x3f
 15941 7977 9E710000 		.long	0x719e
 15942 797b 05       		.uleb128 0x5
 15943 797c 00000000 		.long	.LASF980
 15944 7980 2F       		.byte	0x2f
 15945 7981 40       		.byte	0x40
 15946 7982 C8840000 		.long	0x84c8
 15947 7986 1C       		.uleb128 0x1c
 15948 7987 00000000 		.long	.LASF981
 15949 798b 30000000 		.long	0x30
 15950 798f 00       		.byte	0
 15951 7990 04       		.uleb128 0x4
 15952 7991 00000000 		.long	.LASF1036
 15953 7995 01       		.byte	0x1
 15954 7996 2F       		.byte	0x2f
 15955 7997 37       		.byte	0x37
 15956 7998 D2790000 		.long	0x79d2
 15957 799c 05       		.uleb128 0x5
 15958 799d 00000000 		.long	.LASF977
 15959 79a1 2F       		.byte	0x2f
 15960 79a2 3A       		.byte	0x3a
 15961 79a3 D3840000 		.long	0x84d3
 15962 79a7 05       		.uleb128 0x5
 15963 79a8 00000000 		.long	.LASF978
 15964 79ac 2F       		.byte	0x2f
 15965 79ad 3B       		.byte	0x3b
 15966 79ae D3840000 		.long	0x84d3
 15967 79b2 05       		.uleb128 0x5
 15968 79b3 00000000 		.long	.LASF979
 15969 79b7 2F       		.byte	0x2f
 15970 79b8 3F       		.byte	0x3f
 15971 79b9 9E710000 		.long	0x719e
 15972 79bd 05       		.uleb128 0x5
 15973 79be 00000000 		.long	.LASF980
 15974 79c2 2F       		.byte	0x2f
 15975 79c3 40       		.byte	0x40
 15976 79c4 C8840000 		.long	0x84c8
 15977 79c8 1C       		.uleb128 0x1c
 15978 79c9 00000000 		.long	.LASF981
 15979 79cd D8840000 		.long	0x84d8
GAS LISTING /tmp/ccKUqHDa.s 			page 538


 15980 79d1 00       		.byte	0
 15981 79d2 04       		.uleb128 0x4
 15982 79d3 00000000 		.long	.LASF1037
 15983 79d7 01       		.byte	0x1
 15984 79d8 2F       		.byte	0x2f
 15985 79d9 37       		.byte	0x37
 15986 79da 147A0000 		.long	0x7a14
 15987 79de 05       		.uleb128 0x5
 15988 79df 00000000 		.long	.LASF977
 15989 79e3 2F       		.byte	0x2f
 15990 79e4 3A       		.byte	0x3a
 15991 79e5 B3990000 		.long	0x99b3
 15992 79e9 05       		.uleb128 0x5
 15993 79ea 00000000 		.long	.LASF978
 15994 79ee 2F       		.byte	0x2f
 15995 79ef 3B       		.byte	0x3b
 15996 79f0 B3990000 		.long	0x99b3
 15997 79f4 05       		.uleb128 0x5
 15998 79f5 00000000 		.long	.LASF979
 15999 79f9 2F       		.byte	0x2f
 16000 79fa 3F       		.byte	0x3f
 16001 79fb 9E710000 		.long	0x719e
 16002 79ff 05       		.uleb128 0x5
 16003 7a00 00000000 		.long	.LASF980
 16004 7a04 2F       		.byte	0x2f
 16005 7a05 40       		.byte	0x40
 16006 7a06 C8840000 		.long	0x84c8
 16007 7a0a 1C       		.uleb128 0x1c
 16008 7a0b 00000000 		.long	.LASF981
 16009 7a0f DE710000 		.long	0x71de
 16010 7a13 00       		.byte	0
 16011 7a14 0B       		.uleb128 0xb
 16012 7a15 4A740000 		.long	0x744a
 16013 7a19 10       		.uleb128 0x10
 16014 7a1a 00000000 		.long	.LASF1038
 16015 7a1e 01       		.byte	0x1
 16016 7a1f 05       		.byte	0x5
 16017 7a20 3A       		.byte	0x3a
 16018 7a21 5A7B0000 		.long	0x7b5a
 16019 7a25 25       		.uleb128 0x25
 16020 7a26 00000000 		.long	.LASF61
 16021 7a2a 05       		.byte	0x5
 16022 7a2b 3D       		.byte	0x3d
 16023 7a2c DB070000 		.long	0x7db
 16024 7a30 01       		.byte	0x1
 16025 7a31 25       		.uleb128 0x25
 16026 7a32 00000000 		.long	.LASF490
 16027 7a36 05       		.byte	0x5
 16028 7a37 3F       		.byte	0x3f
 16029 7a38 829C0000 		.long	0x9c82
 16030 7a3c 01       		.byte	0x1
 16031 7a3d 25       		.uleb128 0x25
 16032 7a3e 00000000 		.long	.LASF738
 16033 7a42 05       		.byte	0x5
 16034 7a43 40       		.byte	0x40
 16035 7a44 029D0000 		.long	0x9d02
 16036 7a48 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 539


 16037 7a49 25       		.uleb128 0x25
 16038 7a4a 00000000 		.long	.LASF62
 16039 7a4e 05       		.byte	0x5
 16040 7a4f 41       		.byte	0x41
 16041 7a50 0D9D0000 		.long	0x9d0d
 16042 7a54 01       		.byte	0x1
 16043 7a55 25       		.uleb128 0x25
 16044 7a56 00000000 		.long	.LASF63
 16045 7a5a 05       		.byte	0x5
 16046 7a5b 42       		.byte	0x42
 16047 7a5c 139D0000 		.long	0x9d13
 16048 7a60 01       		.byte	0x1
 16049 7a61 15       		.uleb128 0x15
 16050 7a62 00000000 		.long	.LASF983
 16051 7a66 05       		.byte	0x5
 16052 7a67 4F       		.byte	0x4f
 16053 7a68 01       		.byte	0x1
 16054 7a69 717A0000 		.long	0x7a71
 16055 7a6d 777A0000 		.long	0x7a77
 16056 7a71 08       		.uleb128 0x8
 16057 7a72 199D0000 		.long	0x9d19
 16058 7a76 00       		.byte	0
 16059 7a77 15       		.uleb128 0x15
 16060 7a78 00000000 		.long	.LASF983
 16061 7a7c 05       		.byte	0x5
 16062 7a7d 51       		.byte	0x51
 16063 7a7e 01       		.byte	0x1
 16064 7a7f 877A0000 		.long	0x7a87
 16065 7a83 927A0000 		.long	0x7a92
 16066 7a87 08       		.uleb128 0x8
 16067 7a88 199D0000 		.long	0x9d19
 16068 7a8c 13       		.uleb128 0x13
 16069 7a8d 1F9D0000 		.long	0x9d1f
 16070 7a91 00       		.byte	0
 16071 7a92 15       		.uleb128 0x15
 16072 7a93 00000000 		.long	.LASF984
 16073 7a97 05       		.byte	0x5
 16074 7a98 56       		.byte	0x56
 16075 7a99 01       		.byte	0x1
 16076 7a9a A27A0000 		.long	0x7aa2
 16077 7a9e AD7A0000 		.long	0x7aad
 16078 7aa2 08       		.uleb128 0x8
 16079 7aa3 199D0000 		.long	0x9d19
 16080 7aa7 08       		.uleb128 0x8
 16081 7aa8 E5710000 		.long	0x71e5
 16082 7aac 00       		.byte	0
 16083 7aad 16       		.uleb128 0x16
 16084 7aae 00000000 		.long	.LASF985
 16085 7ab2 05       		.byte	0x5
 16086 7ab3 59       		.byte	0x59
 16087 7ab4 00000000 		.long	.LASF1039
 16088 7ab8 317A0000 		.long	0x7a31
 16089 7abc 01       		.byte	0x1
 16090 7abd C57A0000 		.long	0x7ac5
 16091 7ac1 D07A0000 		.long	0x7ad0
 16092 7ac5 08       		.uleb128 0x8
 16093 7ac6 259D0000 		.long	0x9d25
GAS LISTING /tmp/ccKUqHDa.s 			page 540


 16094 7aca 13       		.uleb128 0x13
 16095 7acb 497A0000 		.long	0x7a49
 16096 7acf 00       		.byte	0
 16097 7ad0 16       		.uleb128 0x16
 16098 7ad1 00000000 		.long	.LASF985
 16099 7ad5 05       		.byte	0x5
 16100 7ad6 5D       		.byte	0x5d
 16101 7ad7 00000000 		.long	.LASF1040
 16102 7adb 3D7A0000 		.long	0x7a3d
 16103 7adf 01       		.byte	0x1
 16104 7ae0 E87A0000 		.long	0x7ae8
 16105 7ae4 F37A0000 		.long	0x7af3
 16106 7ae8 08       		.uleb128 0x8
 16107 7ae9 259D0000 		.long	0x9d25
 16108 7aed 13       		.uleb128 0x13
 16109 7aee 557A0000 		.long	0x7a55
 16110 7af2 00       		.byte	0
 16111 7af3 16       		.uleb128 0x16
 16112 7af4 00000000 		.long	.LASF525
 16113 7af8 05       		.byte	0x5
 16114 7af9 63       		.byte	0x63
 16115 7afa 00000000 		.long	.LASF1041
 16116 7afe 317A0000 		.long	0x7a31
 16117 7b02 01       		.byte	0x1
 16118 7b03 0B7B0000 		.long	0x7b0b
 16119 7b07 1B7B0000 		.long	0x7b1b
 16120 7b0b 08       		.uleb128 0x8
 16121 7b0c 199D0000 		.long	0x9d19
 16122 7b10 13       		.uleb128 0x13
 16123 7b11 257A0000 		.long	0x7a25
 16124 7b15 13       		.uleb128 0x13
 16125 7b16 96850000 		.long	0x8596
 16126 7b1a 00       		.byte	0
 16127 7b1b 17       		.uleb128 0x17
 16128 7b1c 00000000 		.long	.LASF528
 16129 7b20 05       		.byte	0x5
 16130 7b21 6D       		.byte	0x6d
 16131 7b22 00000000 		.long	.LASF1042
 16132 7b26 01       		.byte	0x1
 16133 7b27 2F7B0000 		.long	0x7b2f
 16134 7b2b 3F7B0000 		.long	0x7b3f
 16135 7b2f 08       		.uleb128 0x8
 16136 7b30 199D0000 		.long	0x9d19
 16137 7b34 13       		.uleb128 0x13
 16138 7b35 317A0000 		.long	0x7a31
 16139 7b39 13       		.uleb128 0x13
 16140 7b3a 257A0000 		.long	0x7a25
 16141 7b3e 00       		.byte	0
 16142 7b3f 19       		.uleb128 0x19
 16143 7b40 00000000 		.long	.LASF177
 16144 7b44 05       		.byte	0x5
 16145 7b45 71       		.byte	0x71
 16146 7b46 00000000 		.long	.LASF1043
 16147 7b4a 257A0000 		.long	0x7a25
 16148 7b4e 01       		.byte	0x1
 16149 7b4f 537B0000 		.long	0x7b53
 16150 7b53 08       		.uleb128 0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 541


 16151 7b54 259D0000 		.long	0x9d25
 16152 7b58 00       		.byte	0
 16153 7b59 00       		.byte	0
 16154 7b5a 0B       		.uleb128 0xb
 16155 7b5b 197A0000 		.long	0x7a19
 16156 7b5f 04       		.uleb128 0x4
 16157 7b60 00000000 		.long	.LASF1044
 16158 7b64 01       		.byte	0x1
 16159 7b65 31       		.byte	0x31
 16160 7b66 5F       		.byte	0x5f
 16161 7b67 6F7C0000 		.long	0x7c6f
 16162 7b6b 0E       		.uleb128 0xe
 16163 7b6c 31       		.byte	0x31
 16164 7b6d 5F       		.byte	0x5f
 16165 7b6e 26330000 		.long	0x3326
 16166 7b72 0E       		.uleb128 0xe
 16167 7b73 31       		.byte	0x31
 16168 7b74 5F       		.byte	0x5f
 16169 7b75 4A330000 		.long	0x334a
 16170 7b79 0E       		.uleb128 0xe
 16171 7b7a 31       		.byte	0x31
 16172 7b7b 5F       		.byte	0x5f
 16173 7b7c 6A330000 		.long	0x336a
 16174 7b80 28       		.uleb128 0x28
 16175 7b81 E5310000 		.long	0x31e5
 16176 7b85 00       		.byte	0
 16177 7b86 06       		.uleb128 0x6
 16178 7b87 00000000 		.long	.LASF5
 16179 7b8b 31       		.byte	0x31
 16180 7b8c 67       		.byte	0x67
 16181 7b8d F1310000 		.long	0x31f1
 16182 7b91 06       		.uleb128 0x6
 16183 7b92 00000000 		.long	.LASF490
 16184 7b96 31       		.byte	0x31
 16185 7b97 68       		.byte	0x68
 16186 7b98 08320000 		.long	0x3208
 16187 7b9c 06       		.uleb128 0x6
 16188 7b9d 00000000 		.long	.LASF62
 16189 7ba1 31       		.byte	0x31
 16190 7ba2 6D       		.byte	0x6d
 16191 7ba3 499D0000 		.long	0x9d49
 16192 7ba7 06       		.uleb128 0x6
 16193 7ba8 00000000 		.long	.LASF63
 16194 7bac 31       		.byte	0x31
 16195 7bad 6E       		.byte	0x6e
 16196 7bae 4F9D0000 		.long	0x9d4f
 16197 7bb2 0B       		.uleb128 0xb
 16198 7bb3 867B0000 		.long	0x7b86
 16199 7bb7 3E       		.uleb128 0x3e
 16200 7bb8 00000000 		.long	.LASF1045
 16201 7bbc 31       		.byte	0x31
 16202 7bbd 8B       		.byte	0x8b
 16203 7bbe 00000000 		.long	.LASF1046
 16204 7bc2 B7300000 		.long	0x30b7
 16205 7bc6 D07B0000 		.long	0x7bd0
 16206 7bca 13       		.uleb128 0x13
 16207 7bcb 319D0000 		.long	0x9d31
GAS LISTING /tmp/ccKUqHDa.s 			page 542


 16208 7bcf 00       		.byte	0
 16209 7bd0 1F       		.uleb128 0x1f
 16210 7bd1 00000000 		.long	.LASF1047
 16211 7bd5 31       		.byte	0x31
 16212 7bd6 8E       		.byte	0x8e
 16213 7bd7 00000000 		.long	.LASF1049
 16214 7bdb EA7B0000 		.long	0x7bea
 16215 7bdf 13       		.uleb128 0x13
 16216 7be0 439D0000 		.long	0x9d43
 16217 7be4 13       		.uleb128 0x13
 16218 7be5 439D0000 		.long	0x9d43
 16219 7be9 00       		.byte	0
 16220 7bea 2D       		.uleb128 0x2d
 16221 7beb 00000000 		.long	.LASF1050
 16222 7bef 31       		.byte	0x31
 16223 7bf0 91       		.byte	0x91
 16224 7bf1 00000000 		.long	.LASF1052
 16225 7bf5 A3710000 		.long	0x71a3
 16226 7bf9 2D       		.uleb128 0x2d
 16227 7bfa 00000000 		.long	.LASF1053
 16228 7bfe 31       		.byte	0x31
 16229 7bff 94       		.byte	0x94
 16230 7c00 00000000 		.long	.LASF1054
 16231 7c04 A3710000 		.long	0x71a3
 16232 7c08 2D       		.uleb128 0x2d
 16233 7c09 00000000 		.long	.LASF1055
 16234 7c0d 31       		.byte	0x31
 16235 7c0e 97       		.byte	0x97
 16236 7c0f 00000000 		.long	.LASF1056
 16237 7c13 A3710000 		.long	0x71a3
 16238 7c17 2D       		.uleb128 0x2d
 16239 7c18 00000000 		.long	.LASF1057
 16240 7c1c 31       		.byte	0x31
 16241 7c1d 9A       		.byte	0x9a
 16242 7c1e 00000000 		.long	.LASF1058
 16243 7c22 A3710000 		.long	0x71a3
 16244 7c26 2D       		.uleb128 0x2d
 16245 7c27 00000000 		.long	.LASF1059
 16246 7c2b 31       		.byte	0x31
 16247 7c2c 9D       		.byte	0x9d
 16248 7c2d 00000000 		.long	.LASF1060
 16249 7c31 A3710000 		.long	0x71a3
 16250 7c35 2D       		.uleb128 0x2d
 16251 7c36 00000000 		.long	.LASF1061
 16252 7c3a 31       		.byte	0x31
 16253 7c3b A0       		.byte	0xa0
 16254 7c3c 00000000 		.long	.LASF1062
 16255 7c40 A3710000 		.long	0x71a3
 16256 7c44 04       		.uleb128 0x4
 16257 7c45 00000000 		.long	.LASF493
 16258 7c49 01       		.byte	0x1
 16259 7c4a 31       		.byte	0x31
 16260 7c4b A8       		.byte	0xa8
 16261 7c4c 657C0000 		.long	0x7c65
 16262 7c50 06       		.uleb128 0x6
 16263 7c51 00000000 		.long	.LASF494
 16264 7c55 31       		.byte	0x31
GAS LISTING /tmp/ccKUqHDa.s 			page 543


 16265 7c56 A9       		.byte	0xa9
 16266 7c57 9E330000 		.long	0x339e
 16267 7c5b 09       		.uleb128 0x9
 16268 7c5c 5F547000 		.string	"_Tp"
 16269 7c60 29000000 		.long	0x29
 16270 7c64 00       		.byte	0
 16271 7c65 1C       		.uleb128 0x1c
 16272 7c66 00000000 		.long	.LASF309
 16273 7c6a B7300000 		.long	0x30b7
 16274 7c6e 00       		.byte	0
 16275 7c6f 1A       		.uleb128 0x1a
 16276 7c70 00000000 		.long	.LASF1063
 16277 7c74 1A       		.uleb128 0x1a
 16278 7c75 00000000 		.long	.LASF1064
 16279 7c79 10       		.uleb128 0x10
 16280 7c7a 00000000 		.long	.LASF1065
 16281 7c7e 01       		.byte	0x1
 16282 7c7f 05       		.byte	0x5
 16283 7c80 3A       		.byte	0x3a
 16284 7c81 BA7D0000 		.long	0x7dba
 16285 7c85 25       		.uleb128 0x25
 16286 7c86 00000000 		.long	.LASF61
 16287 7c8a 05       		.byte	0x5
 16288 7c8b 3D       		.byte	0x3d
 16289 7c8c DB070000 		.long	0x7db
 16290 7c90 01       		.byte	0x1
 16291 7c91 25       		.uleb128 0x25
 16292 7c92 00000000 		.long	.LASF490
 16293 7c96 05       		.byte	0x5
 16294 7c97 3F       		.byte	0x3f
 16295 7c98 5E9B0000 		.long	0x9b5e
 16296 7c9c 01       		.byte	0x1
 16297 7c9d 25       		.uleb128 0x25
 16298 7c9e 00000000 		.long	.LASF738
 16299 7ca2 05       		.byte	0x5
 16300 7ca3 40       		.byte	0x40
 16301 7ca4 6A9B0000 		.long	0x9b6a
 16302 7ca8 01       		.byte	0x1
 16303 7ca9 25       		.uleb128 0x25
 16304 7caa 00000000 		.long	.LASF62
 16305 7cae 05       		.byte	0x5
 16306 7caf 41       		.byte	0x41
 16307 7cb0 C79D0000 		.long	0x9dc7
 16308 7cb4 01       		.byte	0x1
 16309 7cb5 25       		.uleb128 0x25
 16310 7cb6 00000000 		.long	.LASF63
 16311 7cba 05       		.byte	0x5
 16312 7cbb 42       		.byte	0x42
 16313 7cbc CD9D0000 		.long	0x9dcd
 16314 7cc0 01       		.byte	0x1
 16315 7cc1 15       		.uleb128 0x15
 16316 7cc2 00000000 		.long	.LASF983
 16317 7cc6 05       		.byte	0x5
 16318 7cc7 4F       		.byte	0x4f
 16319 7cc8 01       		.byte	0x1
 16320 7cc9 D17C0000 		.long	0x7cd1
 16321 7ccd D77C0000 		.long	0x7cd7
GAS LISTING /tmp/ccKUqHDa.s 			page 544


 16322 7cd1 08       		.uleb128 0x8
 16323 7cd2 D39D0000 		.long	0x9dd3
 16324 7cd6 00       		.byte	0
 16325 7cd7 15       		.uleb128 0x15
 16326 7cd8 00000000 		.long	.LASF983
 16327 7cdc 05       		.byte	0x5
 16328 7cdd 51       		.byte	0x51
 16329 7cde 01       		.byte	0x1
 16330 7cdf E77C0000 		.long	0x7ce7
 16331 7ce3 F27C0000 		.long	0x7cf2
 16332 7ce7 08       		.uleb128 0x8
 16333 7ce8 D39D0000 		.long	0x9dd3
 16334 7cec 13       		.uleb128 0x13
 16335 7ced D99D0000 		.long	0x9dd9
 16336 7cf1 00       		.byte	0
 16337 7cf2 15       		.uleb128 0x15
 16338 7cf3 00000000 		.long	.LASF984
 16339 7cf7 05       		.byte	0x5
 16340 7cf8 56       		.byte	0x56
 16341 7cf9 01       		.byte	0x1
 16342 7cfa 027D0000 		.long	0x7d02
 16343 7cfe 0D7D0000 		.long	0x7d0d
 16344 7d02 08       		.uleb128 0x8
 16345 7d03 D39D0000 		.long	0x9dd3
 16346 7d07 08       		.uleb128 0x8
 16347 7d08 E5710000 		.long	0x71e5
 16348 7d0c 00       		.byte	0
 16349 7d0d 16       		.uleb128 0x16
 16350 7d0e 00000000 		.long	.LASF985
 16351 7d12 05       		.byte	0x5
 16352 7d13 59       		.byte	0x59
 16353 7d14 00000000 		.long	.LASF1066
 16354 7d18 917C0000 		.long	0x7c91
 16355 7d1c 01       		.byte	0x1
 16356 7d1d 257D0000 		.long	0x7d25
 16357 7d21 307D0000 		.long	0x7d30
 16358 7d25 08       		.uleb128 0x8
 16359 7d26 DF9D0000 		.long	0x9ddf
 16360 7d2a 13       		.uleb128 0x13
 16361 7d2b A97C0000 		.long	0x7ca9
 16362 7d2f 00       		.byte	0
 16363 7d30 16       		.uleb128 0x16
 16364 7d31 00000000 		.long	.LASF985
 16365 7d35 05       		.byte	0x5
 16366 7d36 5D       		.byte	0x5d
 16367 7d37 00000000 		.long	.LASF1067
 16368 7d3b 9D7C0000 		.long	0x7c9d
 16369 7d3f 01       		.byte	0x1
 16370 7d40 487D0000 		.long	0x7d48
 16371 7d44 537D0000 		.long	0x7d53
 16372 7d48 08       		.uleb128 0x8
 16373 7d49 DF9D0000 		.long	0x9ddf
 16374 7d4d 13       		.uleb128 0x13
 16375 7d4e B57C0000 		.long	0x7cb5
 16376 7d52 00       		.byte	0
 16377 7d53 16       		.uleb128 0x16
 16378 7d54 00000000 		.long	.LASF525
GAS LISTING /tmp/ccKUqHDa.s 			page 545


 16379 7d58 05       		.byte	0x5
 16380 7d59 63       		.byte	0x63
 16381 7d5a 00000000 		.long	.LASF1068
 16382 7d5e 917C0000 		.long	0x7c91
 16383 7d62 01       		.byte	0x1
 16384 7d63 6B7D0000 		.long	0x7d6b
 16385 7d67 7B7D0000 		.long	0x7d7b
 16386 7d6b 08       		.uleb128 0x8
 16387 7d6c D39D0000 		.long	0x9dd3
 16388 7d70 13       		.uleb128 0x13
 16389 7d71 857C0000 		.long	0x7c85
 16390 7d75 13       		.uleb128 0x13
 16391 7d76 96850000 		.long	0x8596
 16392 7d7a 00       		.byte	0
 16393 7d7b 17       		.uleb128 0x17
 16394 7d7c 00000000 		.long	.LASF528
 16395 7d80 05       		.byte	0x5
 16396 7d81 6D       		.byte	0x6d
 16397 7d82 00000000 		.long	.LASF1069
 16398 7d86 01       		.byte	0x1
 16399 7d87 8F7D0000 		.long	0x7d8f
 16400 7d8b 9F7D0000 		.long	0x7d9f
 16401 7d8f 08       		.uleb128 0x8
 16402 7d90 D39D0000 		.long	0x9dd3
 16403 7d94 13       		.uleb128 0x13
 16404 7d95 917C0000 		.long	0x7c91
 16405 7d99 13       		.uleb128 0x13
 16406 7d9a 857C0000 		.long	0x7c85
 16407 7d9e 00       		.byte	0
 16408 7d9f 19       		.uleb128 0x19
 16409 7da0 00000000 		.long	.LASF177
 16410 7da4 05       		.byte	0x5
 16411 7da5 71       		.byte	0x71
 16412 7da6 00000000 		.long	.LASF1070
 16413 7daa 857C0000 		.long	0x7c85
 16414 7dae 01       		.byte	0x1
 16415 7daf B37D0000 		.long	0x7db3
 16416 7db3 08       		.uleb128 0x8
 16417 7db4 DF9D0000 		.long	0x9ddf
 16418 7db8 00       		.byte	0
 16419 7db9 00       		.byte	0
 16420 7dba 0B       		.uleb128 0xb
 16421 7dbb 797C0000 		.long	0x7c79
 16422 7dbf 04       		.uleb128 0x4
 16423 7dc0 00000000 		.long	.LASF1071
 16424 7dc4 01       		.byte	0x1
 16425 7dc5 31       		.byte	0x31
 16426 7dc6 5F       		.byte	0x5f
 16427 7dc7 CF7E0000 		.long	0x7ecf
 16428 7dcb 0E       		.uleb128 0xe
 16429 7dcc 31       		.byte	0x31
 16430 7dcd 5F       		.byte	0x5f
 16431 7dce 98430000 		.long	0x4398
 16432 7dd2 0E       		.uleb128 0xe
 16433 7dd3 31       		.byte	0x31
 16434 7dd4 5F       		.byte	0x5f
 16435 7dd5 BC430000 		.long	0x43bc
GAS LISTING /tmp/ccKUqHDa.s 			page 546


 16436 7dd9 0E       		.uleb128 0xe
 16437 7dda 31       		.byte	0x31
 16438 7ddb 5F       		.byte	0x5f
 16439 7ddc DC430000 		.long	0x43dc
 16440 7de0 28       		.uleb128 0x28
 16441 7de1 57420000 		.long	0x4257
 16442 7de5 00       		.byte	0
 16443 7de6 06       		.uleb128 0x6
 16444 7de7 00000000 		.long	.LASF5
 16445 7deb 31       		.byte	0x31
 16446 7dec 67       		.byte	0x67
 16447 7ded 63420000 		.long	0x4263
 16448 7df1 06       		.uleb128 0x6
 16449 7df2 00000000 		.long	.LASF490
 16450 7df6 31       		.byte	0x31
 16451 7df7 68       		.byte	0x68
 16452 7df8 7A420000 		.long	0x427a
 16453 7dfc 06       		.uleb128 0x6
 16454 7dfd 00000000 		.long	.LASF62
 16455 7e01 31       		.byte	0x31
 16456 7e02 6D       		.byte	0x6d
 16457 7e03 039E0000 		.long	0x9e03
 16458 7e07 06       		.uleb128 0x6
 16459 7e08 00000000 		.long	.LASF63
 16460 7e0c 31       		.byte	0x31
 16461 7e0d 6E       		.byte	0x6e
 16462 7e0e 099E0000 		.long	0x9e09
 16463 7e12 0B       		.uleb128 0xb
 16464 7e13 E67D0000 		.long	0x7de6
 16465 7e17 3E       		.uleb128 0x3e
 16466 7e18 00000000 		.long	.LASF1045
 16467 7e1c 31       		.byte	0x31
 16468 7e1d 8B       		.byte	0x8b
 16469 7e1e 00000000 		.long	.LASF1072
 16470 7e22 29410000 		.long	0x4129
 16471 7e26 307E0000 		.long	0x7e30
 16472 7e2a 13       		.uleb128 0x13
 16473 7e2b EB9D0000 		.long	0x9deb
 16474 7e2f 00       		.byte	0
 16475 7e30 1F       		.uleb128 0x1f
 16476 7e31 00000000 		.long	.LASF1047
 16477 7e35 31       		.byte	0x31
 16478 7e36 8E       		.byte	0x8e
 16479 7e37 00000000 		.long	.LASF1073
 16480 7e3b 4A7E0000 		.long	0x7e4a
 16481 7e3f 13       		.uleb128 0x13
 16482 7e40 FD9D0000 		.long	0x9dfd
 16483 7e44 13       		.uleb128 0x13
 16484 7e45 FD9D0000 		.long	0x9dfd
 16485 7e49 00       		.byte	0
 16486 7e4a 2D       		.uleb128 0x2d
 16487 7e4b 00000000 		.long	.LASF1050
 16488 7e4f 31       		.byte	0x31
 16489 7e50 91       		.byte	0x91
 16490 7e51 00000000 		.long	.LASF1074
 16491 7e55 A3710000 		.long	0x71a3
 16492 7e59 2D       		.uleb128 0x2d
GAS LISTING /tmp/ccKUqHDa.s 			page 547


 16493 7e5a 00000000 		.long	.LASF1053
 16494 7e5e 31       		.byte	0x31
 16495 7e5f 94       		.byte	0x94
 16496 7e60 00000000 		.long	.LASF1075
 16497 7e64 A3710000 		.long	0x71a3
 16498 7e68 2D       		.uleb128 0x2d
 16499 7e69 00000000 		.long	.LASF1055
 16500 7e6d 31       		.byte	0x31
 16501 7e6e 97       		.byte	0x97
 16502 7e6f 00000000 		.long	.LASF1076
 16503 7e73 A3710000 		.long	0x71a3
 16504 7e77 2D       		.uleb128 0x2d
 16505 7e78 00000000 		.long	.LASF1057
 16506 7e7c 31       		.byte	0x31
 16507 7e7d 9A       		.byte	0x9a
 16508 7e7e 00000000 		.long	.LASF1077
 16509 7e82 A3710000 		.long	0x71a3
 16510 7e86 2D       		.uleb128 0x2d
 16511 7e87 00000000 		.long	.LASF1059
 16512 7e8b 31       		.byte	0x31
 16513 7e8c 9D       		.byte	0x9d
 16514 7e8d 00000000 		.long	.LASF1078
 16515 7e91 A3710000 		.long	0x71a3
 16516 7e95 2D       		.uleb128 0x2d
 16517 7e96 00000000 		.long	.LASF1061
 16518 7e9a 31       		.byte	0x31
 16519 7e9b A0       		.byte	0xa0
 16520 7e9c 00000000 		.long	.LASF1079
 16521 7ea0 A3710000 		.long	0x71a3
 16522 7ea4 04       		.uleb128 0x4
 16523 7ea5 00000000 		.long	.LASF638
 16524 7ea9 01       		.byte	0x1
 16525 7eaa 31       		.byte	0x31
 16526 7eab A8       		.byte	0xa8
 16527 7eac C57E0000 		.long	0x7ec5
 16528 7eb0 06       		.uleb128 0x6
 16529 7eb1 00000000 		.long	.LASF494
 16530 7eb5 31       		.byte	0x31
 16531 7eb6 A9       		.byte	0xa9
 16532 7eb7 10440000 		.long	0x4410
 16533 7ebb 09       		.uleb128 0x9
 16534 7ebc 5F547000 		.string	"_Tp"
 16535 7ec0 BB710000 		.long	0x71bb
 16536 7ec4 00       		.byte	0
 16537 7ec5 1C       		.uleb128 0x1c
 16538 7ec6 00000000 		.long	.LASF309
 16539 7eca 29410000 		.long	0x4129
 16540 7ece 00       		.byte	0
 16541 7ecf 1A       		.uleb128 0x1a
 16542 7ed0 00000000 		.long	.LASF1080
 16543 7ed4 1A       		.uleb128 0x1a
 16544 7ed5 00000000 		.long	.LASF1081
 16545 7ed9 10       		.uleb128 0x10
 16546 7eda 00000000 		.long	.LASF1082
 16547 7ede 01       		.byte	0x1
 16548 7edf 05       		.byte	0x5
 16549 7ee0 3A       		.byte	0x3a
GAS LISTING /tmp/ccKUqHDa.s 			page 548


 16550 7ee1 1A800000 		.long	0x801a
 16551 7ee5 25       		.uleb128 0x25
 16552 7ee6 00000000 		.long	.LASF61
 16553 7eea 05       		.byte	0x5
 16554 7eeb 3D       		.byte	0x3d
 16555 7eec DB070000 		.long	0x7db
 16556 7ef0 01       		.byte	0x1
 16557 7ef1 25       		.uleb128 0x25
 16558 7ef2 00000000 		.long	.LASF490
 16559 7ef6 05       		.byte	0x5
 16560 7ef7 3F       		.byte	0x3f
 16561 7ef8 EB9E0000 		.long	0x9eeb
 16562 7efc 01       		.byte	0x1
 16563 7efd 25       		.uleb128 0x25
 16564 7efe 00000000 		.long	.LASF738
 16565 7f02 05       		.byte	0x5
 16566 7f03 40       		.byte	0x40
 16567 7f04 F19E0000 		.long	0x9ef1
 16568 7f08 01       		.byte	0x1
 16569 7f09 25       		.uleb128 0x25
 16570 7f0a 00000000 		.long	.LASF62
 16571 7f0e 05       		.byte	0x5
 16572 7f0f 41       		.byte	0x41
 16573 7f10 F79E0000 		.long	0x9ef7
 16574 7f14 01       		.byte	0x1
 16575 7f15 25       		.uleb128 0x25
 16576 7f16 00000000 		.long	.LASF63
 16577 7f1a 05       		.byte	0x5
 16578 7f1b 42       		.byte	0x42
 16579 7f1c FD9E0000 		.long	0x9efd
 16580 7f20 01       		.byte	0x1
 16581 7f21 15       		.uleb128 0x15
 16582 7f22 00000000 		.long	.LASF983
 16583 7f26 05       		.byte	0x5
 16584 7f27 4F       		.byte	0x4f
 16585 7f28 01       		.byte	0x1
 16586 7f29 317F0000 		.long	0x7f31
 16587 7f2d 377F0000 		.long	0x7f37
 16588 7f31 08       		.uleb128 0x8
 16589 7f32 039F0000 		.long	0x9f03
 16590 7f36 00       		.byte	0
 16591 7f37 15       		.uleb128 0x15
 16592 7f38 00000000 		.long	.LASF983
 16593 7f3c 05       		.byte	0x5
 16594 7f3d 51       		.byte	0x51
 16595 7f3e 01       		.byte	0x1
 16596 7f3f 477F0000 		.long	0x7f47
 16597 7f43 527F0000 		.long	0x7f52
 16598 7f47 08       		.uleb128 0x8
 16599 7f48 039F0000 		.long	0x9f03
 16600 7f4c 13       		.uleb128 0x13
 16601 7f4d 099F0000 		.long	0x9f09
 16602 7f51 00       		.byte	0
 16603 7f52 15       		.uleb128 0x15
 16604 7f53 00000000 		.long	.LASF984
 16605 7f57 05       		.byte	0x5
 16606 7f58 56       		.byte	0x56
GAS LISTING /tmp/ccKUqHDa.s 			page 549


 16607 7f59 01       		.byte	0x1
 16608 7f5a 627F0000 		.long	0x7f62
 16609 7f5e 6D7F0000 		.long	0x7f6d
 16610 7f62 08       		.uleb128 0x8
 16611 7f63 039F0000 		.long	0x9f03
 16612 7f67 08       		.uleb128 0x8
 16613 7f68 E5710000 		.long	0x71e5
 16614 7f6c 00       		.byte	0
 16615 7f6d 16       		.uleb128 0x16
 16616 7f6e 00000000 		.long	.LASF985
 16617 7f72 05       		.byte	0x5
 16618 7f73 59       		.byte	0x59
 16619 7f74 00000000 		.long	.LASF1083
 16620 7f78 F17E0000 		.long	0x7ef1
 16621 7f7c 01       		.byte	0x1
 16622 7f7d 857F0000 		.long	0x7f85
 16623 7f81 907F0000 		.long	0x7f90
 16624 7f85 08       		.uleb128 0x8
 16625 7f86 0F9F0000 		.long	0x9f0f
 16626 7f8a 13       		.uleb128 0x13
 16627 7f8b 097F0000 		.long	0x7f09
 16628 7f8f 00       		.byte	0
 16629 7f90 16       		.uleb128 0x16
 16630 7f91 00000000 		.long	.LASF985
 16631 7f95 05       		.byte	0x5
 16632 7f96 5D       		.byte	0x5d
 16633 7f97 00000000 		.long	.LASF1084
 16634 7f9b FD7E0000 		.long	0x7efd
 16635 7f9f 01       		.byte	0x1
 16636 7fa0 A87F0000 		.long	0x7fa8
 16637 7fa4 B37F0000 		.long	0x7fb3
 16638 7fa8 08       		.uleb128 0x8
 16639 7fa9 0F9F0000 		.long	0x9f0f
 16640 7fad 13       		.uleb128 0x13
 16641 7fae 157F0000 		.long	0x7f15
 16642 7fb2 00       		.byte	0
 16643 7fb3 16       		.uleb128 0x16
 16644 7fb4 00000000 		.long	.LASF525
 16645 7fb8 05       		.byte	0x5
 16646 7fb9 63       		.byte	0x63
 16647 7fba 00000000 		.long	.LASF1085
 16648 7fbe F17E0000 		.long	0x7ef1
 16649 7fc2 01       		.byte	0x1
 16650 7fc3 CB7F0000 		.long	0x7fcb
 16651 7fc7 DB7F0000 		.long	0x7fdb
 16652 7fcb 08       		.uleb128 0x8
 16653 7fcc 039F0000 		.long	0x9f03
 16654 7fd0 13       		.uleb128 0x13
 16655 7fd1 E57E0000 		.long	0x7ee5
 16656 7fd5 13       		.uleb128 0x13
 16657 7fd6 96850000 		.long	0x8596
 16658 7fda 00       		.byte	0
 16659 7fdb 17       		.uleb128 0x17
 16660 7fdc 00000000 		.long	.LASF528
 16661 7fe0 05       		.byte	0x5
 16662 7fe1 6D       		.byte	0x6d
 16663 7fe2 00000000 		.long	.LASF1086
GAS LISTING /tmp/ccKUqHDa.s 			page 550


 16664 7fe6 01       		.byte	0x1
 16665 7fe7 EF7F0000 		.long	0x7fef
 16666 7feb FF7F0000 		.long	0x7fff
 16667 7fef 08       		.uleb128 0x8
 16668 7ff0 039F0000 		.long	0x9f03
 16669 7ff4 13       		.uleb128 0x13
 16670 7ff5 F17E0000 		.long	0x7ef1
 16671 7ff9 13       		.uleb128 0x13
 16672 7ffa E57E0000 		.long	0x7ee5
 16673 7ffe 00       		.byte	0
 16674 7fff 19       		.uleb128 0x19
 16675 8000 00000000 		.long	.LASF177
 16676 8004 05       		.byte	0x5
 16677 8005 71       		.byte	0x71
 16678 8006 00000000 		.long	.LASF1087
 16679 800a E57E0000 		.long	0x7ee5
 16680 800e 01       		.byte	0x1
 16681 800f 13800000 		.long	0x8013
 16682 8013 08       		.uleb128 0x8
 16683 8014 0F9F0000 		.long	0x9f0f
 16684 8018 00       		.byte	0
 16685 8019 00       		.byte	0
 16686 801a 0B       		.uleb128 0xb
 16687 801b D97E0000 		.long	0x7ed9
 16688 801f 04       		.uleb128 0x4
 16689 8020 00000000 		.long	.LASF1088
 16690 8024 01       		.byte	0x1
 16691 8025 31       		.byte	0x31
 16692 8026 5F       		.byte	0x5f
 16693 8027 2F810000 		.long	0x812f
 16694 802b 0E       		.uleb128 0xe
 16695 802c 31       		.byte	0x31
 16696 802d 5F       		.byte	0x5f
 16697 802e A25B0000 		.long	0x5ba2
 16698 8032 0E       		.uleb128 0xe
 16699 8033 31       		.byte	0x31
 16700 8034 5F       		.byte	0x5f
 16701 8035 C65B0000 		.long	0x5bc6
 16702 8039 0E       		.uleb128 0xe
 16703 803a 31       		.byte	0x31
 16704 803b 5F       		.byte	0x5f
 16705 803c E65B0000 		.long	0x5be6
 16706 8040 28       		.uleb128 0x28
 16707 8041 615A0000 		.long	0x5a61
 16708 8045 00       		.byte	0
 16709 8046 06       		.uleb128 0x6
 16710 8047 00000000 		.long	.LASF5
 16711 804b 31       		.byte	0x31
 16712 804c 67       		.byte	0x67
 16713 804d 6D5A0000 		.long	0x5a6d
 16714 8051 06       		.uleb128 0x6
 16715 8052 00000000 		.long	.LASF490
 16716 8056 31       		.byte	0x31
 16717 8057 68       		.byte	0x68
 16718 8058 845A0000 		.long	0x5a84
 16719 805c 06       		.uleb128 0x6
 16720 805d 00000000 		.long	.LASF62
GAS LISTING /tmp/ccKUqHDa.s 			page 551


 16721 8061 31       		.byte	0x31
 16722 8062 6D       		.byte	0x6d
 16723 8063 339F0000 		.long	0x9f33
 16724 8067 06       		.uleb128 0x6
 16725 8068 00000000 		.long	.LASF63
 16726 806c 31       		.byte	0x31
 16727 806d 6E       		.byte	0x6e
 16728 806e 399F0000 		.long	0x9f39
 16729 8072 0B       		.uleb128 0xb
 16730 8073 46800000 		.long	0x8046
 16731 8077 3E       		.uleb128 0x3e
 16732 8078 00000000 		.long	.LASF1045
 16733 807c 31       		.byte	0x31
 16734 807d 8B       		.byte	0x8b
 16735 807e 00000000 		.long	.LASF1089
 16736 8082 33590000 		.long	0x5933
 16737 8086 90800000 		.long	0x8090
 16738 808a 13       		.uleb128 0x13
 16739 808b 1B9F0000 		.long	0x9f1b
 16740 808f 00       		.byte	0
 16741 8090 1F       		.uleb128 0x1f
 16742 8091 00000000 		.long	.LASF1047
 16743 8095 31       		.byte	0x31
 16744 8096 8E       		.byte	0x8e
 16745 8097 00000000 		.long	.LASF1090
 16746 809b AA800000 		.long	0x80aa
 16747 809f 13       		.uleb128 0x13
 16748 80a0 2D9F0000 		.long	0x9f2d
 16749 80a4 13       		.uleb128 0x13
 16750 80a5 2D9F0000 		.long	0x9f2d
 16751 80a9 00       		.byte	0
 16752 80aa 2D       		.uleb128 0x2d
 16753 80ab 00000000 		.long	.LASF1050
 16754 80af 31       		.byte	0x31
 16755 80b0 91       		.byte	0x91
 16756 80b1 00000000 		.long	.LASF1091
 16757 80b5 A3710000 		.long	0x71a3
 16758 80b9 2D       		.uleb128 0x2d
 16759 80ba 00000000 		.long	.LASF1053
 16760 80be 31       		.byte	0x31
 16761 80bf 94       		.byte	0x94
 16762 80c0 00000000 		.long	.LASF1092
 16763 80c4 A3710000 		.long	0x71a3
 16764 80c8 2D       		.uleb128 0x2d
 16765 80c9 00000000 		.long	.LASF1055
 16766 80cd 31       		.byte	0x31
 16767 80ce 97       		.byte	0x97
 16768 80cf 00000000 		.long	.LASF1093
 16769 80d3 A3710000 		.long	0x71a3
 16770 80d7 2D       		.uleb128 0x2d
 16771 80d8 00000000 		.long	.LASF1057
 16772 80dc 31       		.byte	0x31
 16773 80dd 9A       		.byte	0x9a
 16774 80de 00000000 		.long	.LASF1094
 16775 80e2 A3710000 		.long	0x71a3
 16776 80e6 2D       		.uleb128 0x2d
 16777 80e7 00000000 		.long	.LASF1059
GAS LISTING /tmp/ccKUqHDa.s 			page 552


 16778 80eb 31       		.byte	0x31
 16779 80ec 9D       		.byte	0x9d
 16780 80ed 00000000 		.long	.LASF1095
 16781 80f1 A3710000 		.long	0x71a3
 16782 80f5 2D       		.uleb128 0x2d
 16783 80f6 00000000 		.long	.LASF1061
 16784 80fa 31       		.byte	0x31
 16785 80fb A0       		.byte	0xa0
 16786 80fc 00000000 		.long	.LASF1096
 16787 8100 A3710000 		.long	0x71a3
 16788 8104 04       		.uleb128 0x4
 16789 8105 00000000 		.long	.LASF802
 16790 8109 01       		.byte	0x1
 16791 810a 31       		.byte	0x31
 16792 810b A8       		.byte	0xa8
 16793 810c 25810000 		.long	0x8125
 16794 8110 06       		.uleb128 0x6
 16795 8111 00000000 		.long	.LASF494
 16796 8115 31       		.byte	0x31
 16797 8116 A9       		.byte	0xa9
 16798 8117 1A5C0000 		.long	0x5c1a
 16799 811b 09       		.uleb128 0x9
 16800 811c 5F547000 		.string	"_Tp"
 16801 8120 FC570000 		.long	0x57fc
 16802 8124 00       		.byte	0
 16803 8125 1C       		.uleb128 0x1c
 16804 8126 00000000 		.long	.LASF309
 16805 812a 33590000 		.long	0x5933
 16806 812e 00       		.byte	0
 16807 812f 4F       		.uleb128 0x4f
 16808 8130 00000000 		.long	.LASF1097
 16809 8134 08       		.byte	0x8
 16810 8135 30       		.byte	0x30
 16811 8136 C502     		.value	0x2c5
 16812 8138 4E830000 		.long	0x834e
 16813 813c 5C       		.uleb128 0x5c
 16814 813d 00000000 		.long	.LASF993
 16815 8141 30       		.byte	0x30
 16816 8142 C802     		.value	0x2c8
 16817 8144 EB9E0000 		.long	0x9eeb
 16818 8148 00       		.byte	0
 16819 8149 02       		.byte	0x2
 16820 814a 46       		.uleb128 0x46
 16821 814b 00000000 		.long	.LASF489
 16822 814f 30       		.byte	0x30
 16823 8150 D002     		.value	0x2d0
 16824 8152 B1690000 		.long	0x69b1
 16825 8156 01       		.byte	0x1
 16826 8157 46       		.uleb128 0x46
 16827 8158 00000000 		.long	.LASF62
 16828 815c 30       		.byte	0x30
 16829 815d D102     		.value	0x2d1
 16830 815f C7690000 		.long	0x69c7
 16831 8163 01       		.byte	0x1
 16832 8164 46       		.uleb128 0x46
 16833 8165 00000000 		.long	.LASF490
 16834 8169 30       		.byte	0x30
GAS LISTING /tmp/ccKUqHDa.s 			page 553


 16835 816a D202     		.value	0x2d2
 16836 816c BC690000 		.long	0x69bc
 16837 8170 01       		.byte	0x1
 16838 8171 33       		.uleb128 0x33
 16839 8172 00000000 		.long	.LASF994
 16840 8176 30       		.byte	0x30
 16841 8177 D402     		.value	0x2d4
 16842 8179 01       		.byte	0x1
 16843 817a 82810000 		.long	0x8182
 16844 817e 88810000 		.long	0x8188
 16845 8182 08       		.uleb128 0x8
 16846 8183 B19F0000 		.long	0x9fb1
 16847 8187 00       		.byte	0
 16848 8188 34       		.uleb128 0x34
 16849 8189 00000000 		.long	.LASF994
 16850 818d 30       		.byte	0x30
 16851 818e D802     		.value	0x2d8
 16852 8190 01       		.byte	0x1
 16853 8191 99810000 		.long	0x8199
 16854 8195 A4810000 		.long	0x81a4
 16855 8199 08       		.uleb128 0x8
 16856 819a B19F0000 		.long	0x9fb1
 16857 819e 13       		.uleb128 0x13
 16858 819f B79F0000 		.long	0x9fb7
 16859 81a3 00       		.byte	0
 16860 81a4 35       		.uleb128 0x35
 16861 81a5 00000000 		.long	.LASF995
 16862 81a9 30       		.byte	0x30
 16863 81aa E502     		.value	0x2e5
 16864 81ac 00000000 		.long	.LASF1098
 16865 81b0 57810000 		.long	0x8157
 16866 81b4 01       		.byte	0x1
 16867 81b5 BD810000 		.long	0x81bd
 16868 81b9 C3810000 		.long	0x81c3
 16869 81bd 08       		.uleb128 0x8
 16870 81be C29F0000 		.long	0x9fc2
 16871 81c2 00       		.byte	0
 16872 81c3 35       		.uleb128 0x35
 16873 81c4 00000000 		.long	.LASF997
 16874 81c8 30       		.byte	0x30
 16875 81c9 E902     		.value	0x2e9
 16876 81cb 00000000 		.long	.LASF1099
 16877 81cf 64810000 		.long	0x8164
 16878 81d3 01       		.byte	0x1
 16879 81d4 DC810000 		.long	0x81dc
 16880 81d8 E2810000 		.long	0x81e2
 16881 81dc 08       		.uleb128 0x8
 16882 81dd C29F0000 		.long	0x9fc2
 16883 81e1 00       		.byte	0
 16884 81e2 35       		.uleb128 0x35
 16885 81e3 00000000 		.long	.LASF999
 16886 81e7 30       		.byte	0x30
 16887 81e8 ED02     		.value	0x2ed
 16888 81ea 00000000 		.long	.LASF1100
 16889 81ee C89F0000 		.long	0x9fc8
 16890 81f2 01       		.byte	0x1
 16891 81f3 FB810000 		.long	0x81fb
GAS LISTING /tmp/ccKUqHDa.s 			page 554


 16892 81f7 01820000 		.long	0x8201
 16893 81fb 08       		.uleb128 0x8
 16894 81fc B19F0000 		.long	0x9fb1
 16895 8200 00       		.byte	0
 16896 8201 35       		.uleb128 0x35
 16897 8202 00000000 		.long	.LASF999
 16898 8206 30       		.byte	0x30
 16899 8207 F402     		.value	0x2f4
 16900 8209 00000000 		.long	.LASF1101
 16901 820d 2F810000 		.long	0x812f
 16902 8211 01       		.byte	0x1
 16903 8212 1A820000 		.long	0x821a
 16904 8216 25820000 		.long	0x8225
 16905 821a 08       		.uleb128 0x8
 16906 821b B19F0000 		.long	0x9fb1
 16907 821f 13       		.uleb128 0x13
 16908 8220 E5710000 		.long	0x71e5
 16909 8224 00       		.byte	0
 16910 8225 35       		.uleb128 0x35
 16911 8226 00000000 		.long	.LASF1002
 16912 822a 30       		.byte	0x30
 16913 822b F902     		.value	0x2f9
 16914 822d 00000000 		.long	.LASF1102
 16915 8231 C89F0000 		.long	0x9fc8
 16916 8235 01       		.byte	0x1
 16917 8236 3E820000 		.long	0x823e
 16918 823a 44820000 		.long	0x8244
 16919 823e 08       		.uleb128 0x8
 16920 823f B19F0000 		.long	0x9fb1
 16921 8243 00       		.byte	0
 16922 8244 35       		.uleb128 0x35
 16923 8245 00000000 		.long	.LASF1002
 16924 8249 30       		.byte	0x30
 16925 824a 0003     		.value	0x300
 16926 824c 00000000 		.long	.LASF1103
 16927 8250 2F810000 		.long	0x812f
 16928 8254 01       		.byte	0x1
 16929 8255 5D820000 		.long	0x825d
 16930 8259 68820000 		.long	0x8268
 16931 825d 08       		.uleb128 0x8
 16932 825e B19F0000 		.long	0x9fb1
 16933 8262 13       		.uleb128 0x13
 16934 8263 E5710000 		.long	0x71e5
 16935 8267 00       		.byte	0
 16936 8268 35       		.uleb128 0x35
 16937 8269 00000000 		.long	.LASF192
 16938 826d 30       		.byte	0x30
 16939 826e 0503     		.value	0x305
 16940 8270 00000000 		.long	.LASF1104
 16941 8274 57810000 		.long	0x8157
 16942 8278 01       		.byte	0x1
 16943 8279 81820000 		.long	0x8281
 16944 827d 8C820000 		.long	0x828c
 16945 8281 08       		.uleb128 0x8
 16946 8282 C29F0000 		.long	0x9fc2
 16947 8286 13       		.uleb128 0x13
 16948 8287 4A810000 		.long	0x814a
GAS LISTING /tmp/ccKUqHDa.s 			page 555


 16949 828b 00       		.byte	0
 16950 828c 35       		.uleb128 0x35
 16951 828d 00000000 		.long	.LASF203
 16952 8291 30       		.byte	0x30
 16953 8292 0903     		.value	0x309
 16954 8294 00000000 		.long	.LASF1105
 16955 8298 C89F0000 		.long	0x9fc8
 16956 829c 01       		.byte	0x1
 16957 829d A5820000 		.long	0x82a5
 16958 82a1 B0820000 		.long	0x82b0
 16959 82a5 08       		.uleb128 0x8
 16960 82a6 B19F0000 		.long	0x9fb1
 16961 82aa 13       		.uleb128 0x13
 16962 82ab 4A810000 		.long	0x814a
 16963 82af 00       		.byte	0
 16964 82b0 35       		.uleb128 0x35
 16965 82b1 00000000 		.long	.LASF1007
 16966 82b5 30       		.byte	0x30
 16967 82b6 0D03     		.value	0x30d
 16968 82b8 00000000 		.long	.LASF1106
 16969 82bc 2F810000 		.long	0x812f
 16970 82c0 01       		.byte	0x1
 16971 82c1 C9820000 		.long	0x82c9
 16972 82c5 D4820000 		.long	0x82d4
 16973 82c9 08       		.uleb128 0x8
 16974 82ca C29F0000 		.long	0x9fc2
 16975 82ce 13       		.uleb128 0x13
 16976 82cf 4A810000 		.long	0x814a
 16977 82d3 00       		.byte	0
 16978 82d4 35       		.uleb128 0x35
 16979 82d5 00000000 		.long	.LASF1009
 16980 82d9 30       		.byte	0x30
 16981 82da 1103     		.value	0x311
 16982 82dc 00000000 		.long	.LASF1107
 16983 82e0 C89F0000 		.long	0x9fc8
 16984 82e4 01       		.byte	0x1
 16985 82e5 ED820000 		.long	0x82ed
 16986 82e9 F8820000 		.long	0x82f8
 16987 82ed 08       		.uleb128 0x8
 16988 82ee B19F0000 		.long	0x9fb1
 16989 82f2 13       		.uleb128 0x13
 16990 82f3 4A810000 		.long	0x814a
 16991 82f7 00       		.byte	0
 16992 82f8 35       		.uleb128 0x35
 16993 82f9 00000000 		.long	.LASF1011
 16994 82fd 30       		.byte	0x30
 16995 82fe 1503     		.value	0x315
 16996 8300 00000000 		.long	.LASF1108
 16997 8304 2F810000 		.long	0x812f
 16998 8308 01       		.byte	0x1
 16999 8309 11830000 		.long	0x8311
 17000 830d 1C830000 		.long	0x831c
 17001 8311 08       		.uleb128 0x8
 17002 8312 C29F0000 		.long	0x9fc2
 17003 8316 13       		.uleb128 0x13
 17004 8317 4A810000 		.long	0x814a
 17005 831b 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 556


 17006 831c 35       		.uleb128 0x35
 17007 831d 00000000 		.long	.LASF1013
 17008 8321 30       		.byte	0x30
 17009 8322 1903     		.value	0x319
 17010 8324 00000000 		.long	.LASF1109
 17011 8328 B79F0000 		.long	0x9fb7
 17012 832c 01       		.byte	0x1
 17013 832d 35830000 		.long	0x8335
 17014 8331 3B830000 		.long	0x833b
 17015 8335 08       		.uleb128 0x8
 17016 8336 C29F0000 		.long	0x9fc2
 17017 833a 00       		.byte	0
 17018 833b 1C       		.uleb128 0x1c
 17019 833c 00000000 		.long	.LASF491
 17020 8340 EB9E0000 		.long	0x9eeb
 17021 8344 1C       		.uleb128 0x1c
 17022 8345 00000000 		.long	.LASF1015
 17023 8349 F65E0000 		.long	0x5ef6
 17024 834d 00       		.byte	0
 17025 834e 1A       		.uleb128 0x1a
 17026 834f 00000000 		.long	.LASF1110
 17027 8353 0B       		.uleb128 0xb
 17028 8354 2F810000 		.long	0x812f
 17029 8358 0B       		.uleb128 0xb
 17030 8359 69760000 		.long	0x7669
 17031 835d 04       		.uleb128 0x4
 17032 835e 00000000 		.long	.LASF1111
 17033 8362 01       		.byte	0x1
 17034 8363 32       		.byte	0x32
 17035 8364 2F       		.byte	0x2f
 17036 8365 75830000 		.long	0x8375
 17037 8369 06       		.uleb128 0x6
 17038 836a 00000000 		.long	.LASF394
 17039 836e 32       		.byte	0x32
 17040 836f 30       		.byte	0x30
 17041 8370 829C0000 		.long	0x9c82
 17042 8374 00       		.byte	0
 17043 8375 04       		.uleb128 0x4
 17044 8376 00000000 		.long	.LASF1112
 17045 837a 01       		.byte	0x1
 17046 837b 32       		.byte	0x32
 17047 837c 2F       		.byte	0x2f
 17048 837d 8D830000 		.long	0x838d
 17049 8381 06       		.uleb128 0x6
 17050 8382 00000000 		.long	.LASF394
 17051 8386 32       		.byte	0x32
 17052 8387 30       		.byte	0x30
 17053 8388 5E9B0000 		.long	0x9b5e
 17054 838c 00       		.byte	0
 17055 838d 6B       		.uleb128 0x6b
 17056 838e 00000000 		.long	.LASF1113
 17057 8392 03       		.byte	0x3
 17058 8393 30       		.byte	0x30
 17059 8394 66950000 		.long	0x9566
 17060 8398 A7830000 		.long	0x83a7
 17061 839c 13       		.uleb128 0x13
 17062 839d ACA00000 		.long	0xa0ac
GAS LISTING /tmp/ccKUqHDa.s 			page 557


 17063 83a1 13       		.uleb128 0x13
 17064 83a2 E5710000 		.long	0x71e5
 17065 83a6 00       		.byte	0
 17066 83a7 6B       		.uleb128 0x6b
 17067 83a8 00000000 		.long	.LASF1114
 17068 83ac 03       		.byte	0x3
 17069 83ad 41       		.byte	0x41
 17070 83ae 66950000 		.long	0x9566
 17071 83b2 C1830000 		.long	0x83c1
 17072 83b6 13       		.uleb128 0x13
 17073 83b7 DCA00000 		.long	0xa0dc
 17074 83bb 13       		.uleb128 0x13
 17075 83bc E5710000 		.long	0x71e5
 17076 83c0 00       		.byte	0
 17077 83c1 6B       		.uleb128 0x6b
 17078 83c2 00000000 		.long	.LASF1115
 17079 83c6 03       		.byte	0x3
 17080 83c7 4E       		.byte	0x4e
 17081 83c8 66950000 		.long	0x9566
 17082 83cc DB830000 		.long	0x83db
 17083 83d0 13       		.uleb128 0x13
 17084 83d1 DCA00000 		.long	0xa0dc
 17085 83d5 13       		.uleb128 0x13
 17086 83d6 E5710000 		.long	0x71e5
 17087 83da 00       		.byte	0
 17088 83db 6C       		.uleb128 0x6c
 17089 83dc 00000000 		.long	.LASF1116
 17090 83e0 30       		.byte	0x30
 17091 83e1 3D03     		.value	0x33d
 17092 83e3 A3710000 		.long	0x71a3
 17093 83e7 1C       		.uleb128 0x1c
 17094 83e8 00000000 		.long	.LASF491
 17095 83ec EB9E0000 		.long	0x9eeb
 17096 83f0 1C       		.uleb128 0x1c
 17097 83f1 00000000 		.long	.LASF1015
 17098 83f5 F65E0000 		.long	0x5ef6
 17099 83f9 13       		.uleb128 0x13
 17100 83fa 61B10000 		.long	0xb161
 17101 83fe 13       		.uleb128 0x13
 17102 83ff 61B10000 		.long	0xb161
 17103 8403 00       		.byte	0
 17104 8404 00       		.byte	0
 17105 8405 02       		.uleb128 0x2
 17106 8406 10       		.byte	0x10
 17107 8407 04       		.byte	0x4
 17108 8408 00000000 		.long	.LASF1117
 17109 840c 02       		.uleb128 0x2
 17110 840d 08       		.byte	0x8
 17111 840e 04       		.byte	0x4
 17112 840f 00000000 		.long	.LASF1118
 17113 8413 0F       		.uleb128 0xf
 17114 8414 00000000 		.long	.LASF1119
 17115 8418 2D       		.byte	0x2d
 17116 8419 37       		.byte	0x37
 17117 841a 26840000 		.long	0x8426
 17118 841e 6D       		.uleb128 0x6d
 17119 841f 2D       		.byte	0x2d
GAS LISTING /tmp/ccKUqHDa.s 			page 558


 17120 8420 38       		.byte	0x38
 17121 8421 FA000000 		.long	0xfa
 17122 8425 00       		.byte	0
 17123 8426 06       		.uleb128 0x6
 17124 8427 00000000 		.long	.LASF57
 17125 842b 33       		.byte	0x33
 17126 842c D4       		.byte	0xd4
 17127 842d 30000000 		.long	0x30
 17128 8431 6E       		.uleb128 0x6e
 17129 8432 08       		.byte	0x8
 17130 8433 09       		.byte	0x9
 17131 8434 63       		.byte	0x63
 17132 8435 00000000 		.long	.LASF1122
 17133 8439 56840000 		.long	0x8456
 17134 843d 11       		.uleb128 0x11
 17135 843e 00000000 		.long	.LASF1120
 17136 8442 09       		.byte	0x9
 17137 8443 64       		.byte	0x64
 17138 8444 E5710000 		.long	0x71e5
 17139 8448 00       		.byte	0
 17140 8449 6F       		.uleb128 0x6f
 17141 844a 72656D00 		.string	"rem"
 17142 844e 09       		.byte	0x9
 17143 844f 65       		.byte	0x65
 17144 8450 E5710000 		.long	0x71e5
 17145 8454 04       		.byte	0x4
 17146 8455 00       		.byte	0
 17147 8456 06       		.uleb128 0x6
 17148 8457 00000000 		.long	.LASF1121
 17149 845b 09       		.byte	0x9
 17150 845c 66       		.byte	0x66
 17151 845d 31840000 		.long	0x8431
 17152 8461 6E       		.uleb128 0x6e
 17153 8462 10       		.byte	0x10
 17154 8463 09       		.byte	0x9
 17155 8464 6B       		.byte	0x6b
 17156 8465 00000000 		.long	.LASF1123
 17157 8469 86840000 		.long	0x8486
 17158 846d 11       		.uleb128 0x11
 17159 846e 00000000 		.long	.LASF1120
 17160 8472 09       		.byte	0x9
 17161 8473 6C       		.byte	0x6c
 17162 8474 EC710000 		.long	0x71ec
 17163 8478 00       		.byte	0
 17164 8479 6F       		.uleb128 0x6f
 17165 847a 72656D00 		.string	"rem"
 17166 847e 09       		.byte	0x9
 17167 847f 6D       		.byte	0x6d
 17168 8480 EC710000 		.long	0x71ec
 17169 8484 08       		.byte	0x8
 17170 8485 00       		.byte	0
 17171 8486 06       		.uleb128 0x6
 17172 8487 00000000 		.long	.LASF1124
 17173 848b 09       		.byte	0x9
 17174 848c 6E       		.byte	0x6e
 17175 848d 61840000 		.long	0x8461
 17176 8491 6E       		.uleb128 0x6e
GAS LISTING /tmp/ccKUqHDa.s 			page 559


 17177 8492 10       		.byte	0x10
 17178 8493 09       		.byte	0x9
 17179 8494 77       		.byte	0x77
 17180 8495 00000000 		.long	.LASF1125
 17181 8499 B6840000 		.long	0x84b6
 17182 849d 11       		.uleb128 0x11
 17183 849e 00000000 		.long	.LASF1120
 17184 84a2 09       		.byte	0x9
 17185 84a3 78       		.byte	0x78
 17186 84a4 F3710000 		.long	0x71f3
 17187 84a8 00       		.byte	0
 17188 84a9 6F       		.uleb128 0x6f
 17189 84aa 72656D00 		.string	"rem"
 17190 84ae 09       		.byte	0x9
 17191 84af 79       		.byte	0x79
 17192 84b0 F3710000 		.long	0x71f3
 17193 84b4 08       		.byte	0x8
 17194 84b5 00       		.byte	0
 17195 84b6 06       		.uleb128 0x6
 17196 84b7 00000000 		.long	.LASF1126
 17197 84bb 09       		.byte	0x9
 17198 84bc 7A       		.byte	0x7a
 17199 84bd 91840000 		.long	0x8491
 17200 84c1 02       		.uleb128 0x2
 17201 84c2 08       		.byte	0x8
 17202 84c3 07       		.byte	0x7
 17203 84c4 00000000 		.long	.LASF1127
 17204 84c8 0B       		.uleb128 0xb
 17205 84c9 E5710000 		.long	0x71e5
 17206 84cd 69       		.uleb128 0x69
 17207 84ce 08       		.byte	0x8
 17208 84cf D3840000 		.long	0x84d3
 17209 84d3 0B       		.uleb128 0xb
 17210 84d4 D8840000 		.long	0x84d8
 17211 84d8 02       		.uleb128 0x2
 17212 84d9 01       		.byte	0x1
 17213 84da 06       		.byte	0x6
 17214 84db 00000000 		.long	.LASF1128
 17215 84df 06       		.uleb128 0x6
 17216 84e0 00000000 		.long	.LASF1129
 17217 84e4 34       		.byte	0x34
 17218 84e5 29       		.byte	0x29
 17219 84e6 E5710000 		.long	0x71e5
 17220 84ea 06       		.uleb128 0x6
 17221 84eb 00000000 		.long	.LASF1130
 17222 84ef 34       		.byte	0x34
 17223 84f0 8D       		.byte	0x8d
 17224 84f1 EC710000 		.long	0x71ec
 17225 84f5 06       		.uleb128 0x6
 17226 84f6 00000000 		.long	.LASF1131
 17227 84fa 34       		.byte	0x34
 17228 84fb 8E       		.byte	0x8e
 17229 84fc EC710000 		.long	0x71ec
 17230 8500 06       		.uleb128 0x6
 17231 8501 00000000 		.long	.LASF1132
 17232 8505 34       		.byte	0x34
 17233 8506 91       		.byte	0x91
GAS LISTING /tmp/ccKUqHDa.s 			page 560


 17234 8507 EC710000 		.long	0x71ec
 17235 850b 06       		.uleb128 0x6
 17236 850c 00000000 		.long	.LASF1133
 17237 8510 34       		.byte	0x34
 17238 8511 95       		.byte	0x95
 17239 8512 EC710000 		.long	0x71ec
 17240 8516 70       		.uleb128 0x70
 17241 8517 08       		.byte	0x8
 17242 8518 69       		.uleb128 0x69
 17243 8519 08       		.byte	0x8
 17244 851a D8840000 		.long	0x84d8
 17245 851e 06       		.uleb128 0x6
 17246 851f 00000000 		.long	.LASF1134
 17247 8523 35       		.byte	0x35
 17248 8524 3C       		.byte	0x3c
 17249 8525 00850000 		.long	0x8500
 17250 8529 06       		.uleb128 0x6
 17251 852a 00000000 		.long	.LASF1135
 17252 852e 35       		.byte	0x35
 17253 852f 4C       		.byte	0x4c
 17254 8530 0B850000 		.long	0x850b
 17255 8534 06       		.uleb128 0x6
 17256 8535 00000000 		.long	.LASF1136
 17257 8539 36       		.byte	0x36
 17258 853a C3       		.byte	0xc3
 17259 853b D7710000 		.long	0x71d7
 17260 853f 06       		.uleb128 0x6
 17261 8540 00000000 		.long	.LASF1137
 17262 8544 36       		.byte	0x36
 17263 8545 C4       		.byte	0xc4
 17264 8546 DE710000 		.long	0x71de
 17265 854a 06       		.uleb128 0x6
 17266 854b 00000000 		.long	.LASF1138
 17267 854f 36       		.byte	0x36
 17268 8550 C5       		.byte	0xc5
 17269 8551 E5710000 		.long	0x71e5
 17270 8555 06       		.uleb128 0x6
 17271 8556 00000000 		.long	.LASF1139
 17272 855a 36       		.byte	0x36
 17273 855b C6       		.byte	0xc6
 17274 855c EC710000 		.long	0x71ec
 17275 8560 71       		.uleb128 0x71
 17276 8561 D8840000 		.long	0x84d8
 17277 8565 70850000 		.long	0x8570
 17278 8569 72       		.uleb128 0x72
 17279 856a C1840000 		.long	0x84c1
 17280 856e 03       		.byte	0x3
 17281 856f 00       		.byte	0
 17282 8570 4E       		.uleb128 0x4e
 17283 8571 00000000 		.long	.LASF1140
 17284 8575 09       		.byte	0x9
 17285 8576 E602     		.value	0x2e6
 17286 8578 7C850000 		.long	0x857c
 17287 857c 69       		.uleb128 0x69
 17288 857d 08       		.byte	0x8
 17289 857e 82850000 		.long	0x8582
 17290 8582 73       		.uleb128 0x73
GAS LISTING /tmp/ccKUqHDa.s 			page 561


 17291 8583 E5710000 		.long	0x71e5
 17292 8587 96850000 		.long	0x8596
 17293 858b 13       		.uleb128 0x13
 17294 858c 96850000 		.long	0x8596
 17295 8590 13       		.uleb128 0x13
 17296 8591 96850000 		.long	0x8596
 17297 8595 00       		.byte	0
 17298 8596 69       		.uleb128 0x69
 17299 8597 08       		.byte	0x8
 17300 8598 9C850000 		.long	0x859c
 17301 859c 74       		.uleb128 0x74
 17302 859d 60       		.uleb128 0x60
 17303 859e 00000000 		.long	.LASF1141
 17304 85a2 09       		.byte	0x9
 17305 85a3 0602     		.value	0x206
 17306 85a5 E5710000 		.long	0x71e5
 17307 85a9 B3850000 		.long	0x85b3
 17308 85ad 13       		.uleb128 0x13
 17309 85ae B3850000 		.long	0x85b3
 17310 85b2 00       		.byte	0
 17311 85b3 69       		.uleb128 0x69
 17312 85b4 08       		.byte	0x8
 17313 85b5 B9850000 		.long	0x85b9
 17314 85b9 75       		.uleb128 0x75
 17315 85ba 21       		.uleb128 0x21
 17316 85bb 00000000 		.long	.LASF1142
 17317 85bf 09       		.byte	0x9
 17318 85c0 0D02     		.value	0x20d
 17319 85c2 00000000 		.long	.LASF1142
 17320 85c6 E5710000 		.long	0x71e5
 17321 85ca D4850000 		.long	0x85d4
 17322 85ce 13       		.uleb128 0x13
 17323 85cf B3850000 		.long	0x85b3
 17324 85d3 00       		.byte	0
 17325 85d4 60       		.uleb128 0x60
 17326 85d5 00000000 		.long	.LASF1143
 17327 85d9 09       		.byte	0x9
 17328 85da 1701     		.value	0x117
 17329 85dc 0C840000 		.long	0x840c
 17330 85e0 EA850000 		.long	0x85ea
 17331 85e4 13       		.uleb128 0x13
 17332 85e5 CD840000 		.long	0x84cd
 17333 85e9 00       		.byte	0
 17334 85ea 76       		.uleb128 0x76
 17335 85eb 00000000 		.long	.LASF1144
 17336 85ef 09       		.byte	0x9
 17337 85f0 1C01     		.value	0x11c
 17338 85f2 E5710000 		.long	0x71e5
 17339 85f6 03       		.byte	0x3
 17340 85f7 08860000 		.long	0x8608
 17341 85fb 77       		.uleb128 0x77
 17342 85fc 00000000 		.long	.LASF1420
 17343 8600 09       		.byte	0x9
 17344 8601 1C01     		.value	0x11c
 17345 8603 CD840000 		.long	0x84cd
 17346 8607 00       		.byte	0
 17347 8608 60       		.uleb128 0x60
GAS LISTING /tmp/ccKUqHDa.s 			page 562


 17348 8609 00000000 		.long	.LASF1145
 17349 860d 09       		.byte	0x9
 17350 860e 2101     		.value	0x121
 17351 8610 EC710000 		.long	0x71ec
 17352 8614 1E860000 		.long	0x861e
 17353 8618 13       		.uleb128 0x13
 17354 8619 CD840000 		.long	0x84cd
 17355 861d 00       		.byte	0
 17356 861e 60       		.uleb128 0x60
 17357 861f 00000000 		.long	.LASF1146
 17358 8623 09       		.byte	0x9
 17359 8624 F302     		.value	0x2f3
 17360 8626 16850000 		.long	0x8516
 17361 862a 48860000 		.long	0x8648
 17362 862e 13       		.uleb128 0x13
 17363 862f 96850000 		.long	0x8596
 17364 8633 13       		.uleb128 0x13
 17365 8634 96850000 		.long	0x8596
 17366 8638 13       		.uleb128 0x13
 17367 8639 26840000 		.long	0x8426
 17368 863d 13       		.uleb128 0x13
 17369 863e 26840000 		.long	0x8426
 17370 8642 13       		.uleb128 0x13
 17371 8643 70850000 		.long	0x8570
 17372 8647 00       		.byte	0
 17373 8648 62       		.uleb128 0x62
 17374 8649 64697600 		.string	"div"
 17375 864d 09       		.byte	0x9
 17376 864e 1103     		.value	0x311
 17377 8650 56840000 		.long	0x8456
 17378 8654 63860000 		.long	0x8663
 17379 8658 13       		.uleb128 0x13
 17380 8659 E5710000 		.long	0x71e5
 17381 865d 13       		.uleb128 0x13
 17382 865e E5710000 		.long	0x71e5
 17383 8662 00       		.byte	0
 17384 8663 60       		.uleb128 0x60
 17385 8664 00000000 		.long	.LASF1147
 17386 8668 09       		.byte	0x9
 17387 8669 3702     		.value	0x237
 17388 866b 18850000 		.long	0x8518
 17389 866f 79860000 		.long	0x8679
 17390 8673 13       		.uleb128 0x13
 17391 8674 CD840000 		.long	0x84cd
 17392 8678 00       		.byte	0
 17393 8679 60       		.uleb128 0x60
 17394 867a 00000000 		.long	.LASF1148
 17395 867e 09       		.byte	0x9
 17396 867f 1303     		.value	0x313
 17397 8681 86840000 		.long	0x8486
 17398 8685 94860000 		.long	0x8694
 17399 8689 13       		.uleb128 0x13
 17400 868a EC710000 		.long	0x71ec
 17401 868e 13       		.uleb128 0x13
 17402 868f EC710000 		.long	0x71ec
 17403 8693 00       		.byte	0
 17404 8694 60       		.uleb128 0x60
GAS LISTING /tmp/ccKUqHDa.s 			page 563


 17405 8695 00000000 		.long	.LASF1149
 17406 8699 09       		.byte	0x9
 17407 869a 5C03     		.value	0x35c
 17408 869c E5710000 		.long	0x71e5
 17409 86a0 AF860000 		.long	0x86af
 17410 86a4 13       		.uleb128 0x13
 17411 86a5 CD840000 		.long	0x84cd
 17412 86a9 13       		.uleb128 0x13
 17413 86aa 26840000 		.long	0x8426
 17414 86ae 00       		.byte	0
 17415 86af 60       		.uleb128 0x60
 17416 86b0 00000000 		.long	.LASF1150
 17417 86b4 09       		.byte	0x9
 17418 86b5 6703     		.value	0x367
 17419 86b7 26840000 		.long	0x8426
 17420 86bb CF860000 		.long	0x86cf
 17421 86bf 13       		.uleb128 0x13
 17422 86c0 CF860000 		.long	0x86cf
 17423 86c4 13       		.uleb128 0x13
 17424 86c5 CD840000 		.long	0x84cd
 17425 86c9 13       		.uleb128 0x13
 17426 86ca 26840000 		.long	0x8426
 17427 86ce 00       		.byte	0
 17428 86cf 69       		.uleb128 0x69
 17429 86d0 08       		.byte	0x8
 17430 86d1 D5860000 		.long	0x86d5
 17431 86d5 02       		.uleb128 0x2
 17432 86d6 04       		.byte	0x4
 17433 86d7 05       		.byte	0x5
 17434 86d8 00000000 		.long	.LASF1151
 17435 86dc 60       		.uleb128 0x60
 17436 86dd 00000000 		.long	.LASF1152
 17437 86e1 09       		.byte	0x9
 17438 86e2 5F03     		.value	0x35f
 17439 86e4 E5710000 		.long	0x71e5
 17440 86e8 FC860000 		.long	0x86fc
 17441 86ec 13       		.uleb128 0x13
 17442 86ed CF860000 		.long	0x86cf
 17443 86f1 13       		.uleb128 0x13
 17444 86f2 CD840000 		.long	0x84cd
 17445 86f6 13       		.uleb128 0x13
 17446 86f7 26840000 		.long	0x8426
 17447 86fb 00       		.byte	0
 17448 86fc 5F       		.uleb128 0x5f
 17449 86fd 00000000 		.long	.LASF1153
 17450 8701 09       		.byte	0x9
 17451 8702 F902     		.value	0x2f9
 17452 8704 1D870000 		.long	0x871d
 17453 8708 13       		.uleb128 0x13
 17454 8709 16850000 		.long	0x8516
 17455 870d 13       		.uleb128 0x13
 17456 870e 26840000 		.long	0x8426
 17457 8712 13       		.uleb128 0x13
 17458 8713 26840000 		.long	0x8426
 17459 8717 13       		.uleb128 0x13
 17460 8718 70850000 		.long	0x8570
 17461 871c 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 564


 17462 871d 5F       		.uleb128 0x5f
 17463 871e 00000000 		.long	.LASF1154
 17464 8722 09       		.byte	0x9
 17465 8723 2802     		.value	0x228
 17466 8725 2F870000 		.long	0x872f
 17467 8729 13       		.uleb128 0x13
 17468 872a E5710000 		.long	0x71e5
 17469 872e 00       		.byte	0
 17470 872f 78       		.uleb128 0x78
 17471 8730 00000000 		.long	.LASF1156
 17472 8734 09       		.byte	0x9
 17473 8735 7C01     		.value	0x17c
 17474 8737 E5710000 		.long	0x71e5
 17475 873b 5F       		.uleb128 0x5f
 17476 873c 00000000 		.long	.LASF1157
 17477 8740 09       		.byte	0x9
 17478 8741 7E01     		.value	0x17e
 17479 8743 4D870000 		.long	0x874d
 17480 8747 13       		.uleb128 0x13
 17481 8748 C9710000 		.long	0x71c9
 17482 874c 00       		.byte	0
 17483 874d 42       		.uleb128 0x42
 17484 874e 00000000 		.long	.LASF1158
 17485 8752 09       		.byte	0x9
 17486 8753 A5       		.byte	0xa5
 17487 8754 0C840000 		.long	0x840c
 17488 8758 67870000 		.long	0x8767
 17489 875c 13       		.uleb128 0x13
 17490 875d CD840000 		.long	0x84cd
 17491 8761 13       		.uleb128 0x13
 17492 8762 67870000 		.long	0x8767
 17493 8766 00       		.byte	0
 17494 8767 69       		.uleb128 0x69
 17495 8768 08       		.byte	0x8
 17496 8769 18850000 		.long	0x8518
 17497 876d 42       		.uleb128 0x42
 17498 876e 00000000 		.long	.LASF1159
 17499 8772 09       		.byte	0x9
 17500 8773 B8       		.byte	0xb8
 17501 8774 EC710000 		.long	0x71ec
 17502 8778 8C870000 		.long	0x878c
 17503 877c 13       		.uleb128 0x13
 17504 877d CD840000 		.long	0x84cd
 17505 8781 13       		.uleb128 0x13
 17506 8782 67870000 		.long	0x8767
 17507 8786 13       		.uleb128 0x13
 17508 8787 E5710000 		.long	0x71e5
 17509 878b 00       		.byte	0
 17510 878c 42       		.uleb128 0x42
 17511 878d 00000000 		.long	.LASF1160
 17512 8791 09       		.byte	0x9
 17513 8792 BC       		.byte	0xbc
 17514 8793 30000000 		.long	0x30
 17515 8797 AB870000 		.long	0x87ab
 17516 879b 13       		.uleb128 0x13
 17517 879c CD840000 		.long	0x84cd
 17518 87a0 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 565


 17519 87a1 67870000 		.long	0x8767
 17520 87a5 13       		.uleb128 0x13
 17521 87a6 E5710000 		.long	0x71e5
 17522 87aa 00       		.byte	0
 17523 87ab 60       		.uleb128 0x60
 17524 87ac 00000000 		.long	.LASF1161
 17525 87b0 09       		.byte	0x9
 17526 87b1 CD02     		.value	0x2cd
 17527 87b3 E5710000 		.long	0x71e5
 17528 87b7 C1870000 		.long	0x87c1
 17529 87bb 13       		.uleb128 0x13
 17530 87bc CD840000 		.long	0x84cd
 17531 87c0 00       		.byte	0
 17532 87c1 60       		.uleb128 0x60
 17533 87c2 00000000 		.long	.LASF1162
 17534 87c6 09       		.byte	0x9
 17535 87c7 6A03     		.value	0x36a
 17536 87c9 26840000 		.long	0x8426
 17537 87cd E1870000 		.long	0x87e1
 17538 87d1 13       		.uleb128 0x13
 17539 87d2 18850000 		.long	0x8518
 17540 87d6 13       		.uleb128 0x13
 17541 87d7 E1870000 		.long	0x87e1
 17542 87db 13       		.uleb128 0x13
 17543 87dc 26840000 		.long	0x8426
 17544 87e0 00       		.byte	0
 17545 87e1 69       		.uleb128 0x69
 17546 87e2 08       		.byte	0x8
 17547 87e3 E7870000 		.long	0x87e7
 17548 87e7 0B       		.uleb128 0xb
 17549 87e8 D5860000 		.long	0x86d5
 17550 87ec 60       		.uleb128 0x60
 17551 87ed 00000000 		.long	.LASF1163
 17552 87f1 09       		.byte	0x9
 17553 87f2 6303     		.value	0x363
 17554 87f4 E5710000 		.long	0x71e5
 17555 87f8 07880000 		.long	0x8807
 17556 87fc 13       		.uleb128 0x13
 17557 87fd 18850000 		.long	0x8518
 17558 8801 13       		.uleb128 0x13
 17559 8802 D5860000 		.long	0x86d5
 17560 8806 00       		.byte	0
 17561 8807 60       		.uleb128 0x60
 17562 8808 00000000 		.long	.LASF1164
 17563 880c 09       		.byte	0x9
 17564 880d 1903     		.value	0x319
 17565 880f B6840000 		.long	0x84b6
 17566 8813 22880000 		.long	0x8822
 17567 8817 13       		.uleb128 0x13
 17568 8818 F3710000 		.long	0x71f3
 17569 881c 13       		.uleb128 0x13
 17570 881d F3710000 		.long	0x71f3
 17571 8821 00       		.byte	0
 17572 8822 60       		.uleb128 0x60
 17573 8823 00000000 		.long	.LASF1165
 17574 8827 09       		.byte	0x9
 17575 8828 2A01     		.value	0x12a
GAS LISTING /tmp/ccKUqHDa.s 			page 566


 17576 882a F3710000 		.long	0x71f3
 17577 882e 38880000 		.long	0x8838
 17578 8832 13       		.uleb128 0x13
 17579 8833 CD840000 		.long	0x84cd
 17580 8837 00       		.byte	0
 17581 8838 42       		.uleb128 0x42
 17582 8839 00000000 		.long	.LASF1166
 17583 883d 09       		.byte	0x9
 17584 883e D2       		.byte	0xd2
 17585 883f F3710000 		.long	0x71f3
 17586 8843 57880000 		.long	0x8857
 17587 8847 13       		.uleb128 0x13
 17588 8848 CD840000 		.long	0x84cd
 17589 884c 13       		.uleb128 0x13
 17590 884d 67870000 		.long	0x8767
 17591 8851 13       		.uleb128 0x13
 17592 8852 E5710000 		.long	0x71e5
 17593 8856 00       		.byte	0
 17594 8857 42       		.uleb128 0x42
 17595 8858 00000000 		.long	.LASF1167
 17596 885c 09       		.byte	0x9
 17597 885d D7       		.byte	0xd7
 17598 885e D0710000 		.long	0x71d0
 17599 8862 76880000 		.long	0x8876
 17600 8866 13       		.uleb128 0x13
 17601 8867 CD840000 		.long	0x84cd
 17602 886b 13       		.uleb128 0x13
 17603 886c 67870000 		.long	0x8767
 17604 8870 13       		.uleb128 0x13
 17605 8871 E5710000 		.long	0x71e5
 17606 8875 00       		.byte	0
 17607 8876 42       		.uleb128 0x42
 17608 8877 00000000 		.long	.LASF1168
 17609 887b 09       		.byte	0x9
 17610 887c AD       		.byte	0xad
 17611 887d 29000000 		.long	0x29
 17612 8881 90880000 		.long	0x8890
 17613 8885 13       		.uleb128 0x13
 17614 8886 CD840000 		.long	0x84cd
 17615 888a 13       		.uleb128 0x13
 17616 888b 67870000 		.long	0x8767
 17617 888f 00       		.byte	0
 17618 8890 42       		.uleb128 0x42
 17619 8891 00000000 		.long	.LASF1169
 17620 8895 09       		.byte	0x9
 17621 8896 B0       		.byte	0xb0
 17622 8897 05840000 		.long	0x8405
 17623 889b AA880000 		.long	0x88aa
 17624 889f 13       		.uleb128 0x13
 17625 88a0 CD840000 		.long	0x84cd
 17626 88a4 13       		.uleb128 0x13
 17627 88a5 67870000 		.long	0x8767
 17628 88a9 00       		.byte	0
 17629 88aa 69       		.uleb128 0x69
 17630 88ab 08       		.byte	0x8
 17631 88ac EC010000 		.long	0x1ec
 17632 88b0 69       		.uleb128 0x69
GAS LISTING /tmp/ccKUqHDa.s 			page 567


 17633 88b1 08       		.byte	0x8
 17634 88b2 8D030000 		.long	0x38d
 17635 88b6 79       		.uleb128 0x79
 17636 88b7 08       		.byte	0x8
 17637 88b8 8D030000 		.long	0x38d
 17638 88bc 7A       		.uleb128 0x7a
 17639 88bd 00000000 		.long	.LASF1543
 17640 88c1 7B       		.uleb128 0x7b
 17641 88c2 08       		.byte	0x8
 17642 88c3 EC010000 		.long	0x1ec
 17643 88c7 79       		.uleb128 0x79
 17644 88c8 08       		.byte	0x8
 17645 88c9 EC010000 		.long	0x1ec
 17646 88cd 69       		.uleb128 0x69
 17647 88ce 08       		.byte	0x8
 17648 88cf AA030000 		.long	0x3aa
 17649 88d3 0B       		.uleb128 0xb
 17650 88d4 EC710000 		.long	0x71ec
 17651 88d8 06       		.uleb128 0x6
 17652 88d9 00000000 		.long	.LASF1170
 17653 88dd 38       		.byte	0x38
 17654 88de 1F       		.byte	0x1f
 17655 88df 29000000 		.long	0x29
 17656 88e3 06       		.uleb128 0x6
 17657 88e4 00000000 		.long	.LASF1171
 17658 88e8 38       		.byte	0x38
 17659 88e9 20       		.byte	0x20
 17660 88ea 0C840000 		.long	0x840c
 17661 88ee 06       		.uleb128 0x6
 17662 88ef 00000000 		.long	.LASF1172
 17663 88f3 39       		.byte	0x39
 17664 88f4 31       		.byte	0x31
 17665 88f5 F9880000 		.long	0x88f9
 17666 88f9 27       		.uleb128 0x27
 17667 88fa 00000000 		.long	.LASF1173
 17668 88fe D8       		.byte	0xd8
 17669 88ff 3A       		.byte	0x3a
 17670 8900 0F01     		.value	0x10f
 17671 8902 808A0000 		.long	0x8a80
 17672 8906 29       		.uleb128 0x29
 17673 8907 00000000 		.long	.LASF1174
 17674 890b 3A       		.byte	0x3a
 17675 890c 1001     		.value	0x110
 17676 890e E5710000 		.long	0x71e5
 17677 8912 00       		.byte	0
 17678 8913 29       		.uleb128 0x29
 17679 8914 00000000 		.long	.LASF1175
 17680 8918 3A       		.byte	0x3a
 17681 8919 1501     		.value	0x115
 17682 891b 18850000 		.long	0x8518
 17683 891f 08       		.byte	0x8
 17684 8920 29       		.uleb128 0x29
 17685 8921 00000000 		.long	.LASF1176
 17686 8925 3A       		.byte	0x3a
 17687 8926 1601     		.value	0x116
 17688 8928 18850000 		.long	0x8518
 17689 892c 10       		.byte	0x10
GAS LISTING /tmp/ccKUqHDa.s 			page 568


 17690 892d 29       		.uleb128 0x29
 17691 892e 00000000 		.long	.LASF1177
 17692 8932 3A       		.byte	0x3a
 17693 8933 1701     		.value	0x117
 17694 8935 18850000 		.long	0x8518
 17695 8939 18       		.byte	0x18
 17696 893a 29       		.uleb128 0x29
 17697 893b 00000000 		.long	.LASF1178
 17698 893f 3A       		.byte	0x3a
 17699 8940 1801     		.value	0x118
 17700 8942 18850000 		.long	0x8518
 17701 8946 20       		.byte	0x20
 17702 8947 29       		.uleb128 0x29
 17703 8948 00000000 		.long	.LASF1179
 17704 894c 3A       		.byte	0x3a
 17705 894d 1901     		.value	0x119
 17706 894f 18850000 		.long	0x8518
 17707 8953 28       		.byte	0x28
 17708 8954 29       		.uleb128 0x29
 17709 8955 00000000 		.long	.LASF1180
 17710 8959 3A       		.byte	0x3a
 17711 895a 1A01     		.value	0x11a
 17712 895c 18850000 		.long	0x8518
 17713 8960 30       		.byte	0x30
 17714 8961 29       		.uleb128 0x29
 17715 8962 00000000 		.long	.LASF1181
 17716 8966 3A       		.byte	0x3a
 17717 8967 1B01     		.value	0x11b
 17718 8969 18850000 		.long	0x8518
 17719 896d 38       		.byte	0x38
 17720 896e 29       		.uleb128 0x29
 17721 896f 00000000 		.long	.LASF1182
 17722 8973 3A       		.byte	0x3a
 17723 8974 1C01     		.value	0x11c
 17724 8976 18850000 		.long	0x8518
 17725 897a 40       		.byte	0x40
 17726 897b 29       		.uleb128 0x29
 17727 897c 00000000 		.long	.LASF1183
 17728 8980 3A       		.byte	0x3a
 17729 8981 1E01     		.value	0x11e
 17730 8983 18850000 		.long	0x8518
 17731 8987 48       		.byte	0x48
 17732 8988 29       		.uleb128 0x29
 17733 8989 00000000 		.long	.LASF1184
 17734 898d 3A       		.byte	0x3a
 17735 898e 1F01     		.value	0x11f
 17736 8990 18850000 		.long	0x8518
 17737 8994 50       		.byte	0x50
 17738 8995 29       		.uleb128 0x29
 17739 8996 00000000 		.long	.LASF1185
 17740 899a 3A       		.byte	0x3a
 17741 899b 2001     		.value	0x120
 17742 899d 18850000 		.long	0x8518
 17743 89a1 58       		.byte	0x58
 17744 89a2 29       		.uleb128 0x29
 17745 89a3 00000000 		.long	.LASF1186
 17746 89a7 3A       		.byte	0x3a
GAS LISTING /tmp/ccKUqHDa.s 			page 569


 17747 89a8 2201     		.value	0x122
 17748 89aa DA950000 		.long	0x95da
 17749 89ae 60       		.byte	0x60
 17750 89af 29       		.uleb128 0x29
 17751 89b0 00000000 		.long	.LASF1187
 17752 89b4 3A       		.byte	0x3a
 17753 89b5 2401     		.value	0x124
 17754 89b7 E0950000 		.long	0x95e0
 17755 89bb 68       		.byte	0x68
 17756 89bc 29       		.uleb128 0x29
 17757 89bd 00000000 		.long	.LASF1188
 17758 89c1 3A       		.byte	0x3a
 17759 89c2 2601     		.value	0x126
 17760 89c4 E5710000 		.long	0x71e5
 17761 89c8 70       		.byte	0x70
 17762 89c9 29       		.uleb128 0x29
 17763 89ca 00000000 		.long	.LASF1189
 17764 89ce 3A       		.byte	0x3a
 17765 89cf 2A01     		.value	0x12a
 17766 89d1 E5710000 		.long	0x71e5
 17767 89d5 74       		.byte	0x74
 17768 89d6 29       		.uleb128 0x29
 17769 89d7 00000000 		.long	.LASF1190
 17770 89db 3A       		.byte	0x3a
 17771 89dc 2C01     		.value	0x12c
 17772 89de EA840000 		.long	0x84ea
 17773 89e2 78       		.byte	0x78
 17774 89e3 29       		.uleb128 0x29
 17775 89e4 00000000 		.long	.LASF1191
 17776 89e8 3A       		.byte	0x3a
 17777 89e9 3001     		.value	0x130
 17778 89eb C2710000 		.long	0x71c2
 17779 89ef 80       		.byte	0x80
 17780 89f0 29       		.uleb128 0x29
 17781 89f1 00000000 		.long	.LASF1192
 17782 89f5 3A       		.byte	0x3a
 17783 89f6 3101     		.value	0x131
 17784 89f8 D7710000 		.long	0x71d7
 17785 89fc 82       		.byte	0x82
 17786 89fd 29       		.uleb128 0x29
 17787 89fe 00000000 		.long	.LASF1193
 17788 8a02 3A       		.byte	0x3a
 17789 8a03 3201     		.value	0x132
 17790 8a05 E6950000 		.long	0x95e6
 17791 8a09 83       		.byte	0x83
 17792 8a0a 29       		.uleb128 0x29
 17793 8a0b 00000000 		.long	.LASF1194
 17794 8a0f 3A       		.byte	0x3a
 17795 8a10 3601     		.value	0x136
 17796 8a12 F6950000 		.long	0x95f6
 17797 8a16 88       		.byte	0x88
 17798 8a17 29       		.uleb128 0x29
 17799 8a18 00000000 		.long	.LASF1195
 17800 8a1c 3A       		.byte	0x3a
 17801 8a1d 3F01     		.value	0x13f
 17802 8a1f F5840000 		.long	0x84f5
 17803 8a23 90       		.byte	0x90
GAS LISTING /tmp/ccKUqHDa.s 			page 570


 17804 8a24 29       		.uleb128 0x29
 17805 8a25 00000000 		.long	.LASF1196
 17806 8a29 3A       		.byte	0x3a
 17807 8a2a 4801     		.value	0x148
 17808 8a2c 16850000 		.long	0x8516
 17809 8a30 98       		.byte	0x98
 17810 8a31 29       		.uleb128 0x29
 17811 8a32 00000000 		.long	.LASF1197
 17812 8a36 3A       		.byte	0x3a
 17813 8a37 4901     		.value	0x149
 17814 8a39 16850000 		.long	0x8516
 17815 8a3d A0       		.byte	0xa0
 17816 8a3e 29       		.uleb128 0x29
 17817 8a3f 00000000 		.long	.LASF1198
 17818 8a43 3A       		.byte	0x3a
 17819 8a44 4A01     		.value	0x14a
 17820 8a46 16850000 		.long	0x8516
 17821 8a4a A8       		.byte	0xa8
 17822 8a4b 29       		.uleb128 0x29
 17823 8a4c 00000000 		.long	.LASF1199
 17824 8a50 3A       		.byte	0x3a
 17825 8a51 4B01     		.value	0x14b
 17826 8a53 16850000 		.long	0x8516
 17827 8a57 B0       		.byte	0xb0
 17828 8a58 29       		.uleb128 0x29
 17829 8a59 00000000 		.long	.LASF1200
 17830 8a5d 3A       		.byte	0x3a
 17831 8a5e 4C01     		.value	0x14c
 17832 8a60 26840000 		.long	0x8426
 17833 8a64 B8       		.byte	0xb8
 17834 8a65 29       		.uleb128 0x29
 17835 8a66 00000000 		.long	.LASF1201
 17836 8a6a 3A       		.byte	0x3a
 17837 8a6b 4E01     		.value	0x14e
 17838 8a6d E5710000 		.long	0x71e5
 17839 8a71 C0       		.byte	0xc0
 17840 8a72 29       		.uleb128 0x29
 17841 8a73 00000000 		.long	.LASF1202
 17842 8a77 3A       		.byte	0x3a
 17843 8a78 5001     		.value	0x150
 17844 8a7a FC950000 		.long	0x95fc
 17845 8a7e C4       		.byte	0xc4
 17846 8a7f 00       		.byte	0
 17847 8a80 06       		.uleb128 0x6
 17848 8a81 00000000 		.long	.LASF1203
 17849 8a85 39       		.byte	0x39
 17850 8a86 41       		.byte	0x41
 17851 8a87 F9880000 		.long	0x88f9
 17852 8a8b 04       		.uleb128 0x4
 17853 8a8c 00000000 		.long	.LASF1204
 17854 8a90 18       		.byte	0x18
 17855 8a91 3B       		.byte	0x3b
 17856 8a92 00       		.byte	0
 17857 8a93 C88A0000 		.long	0x8ac8
 17858 8a97 11       		.uleb128 0x11
 17859 8a98 00000000 		.long	.LASF1205
 17860 8a9c 3B       		.byte	0x3b
GAS LISTING /tmp/ccKUqHDa.s 			page 571


 17861 8a9d 00       		.byte	0
 17862 8a9e C9710000 		.long	0x71c9
 17863 8aa2 00       		.byte	0
 17864 8aa3 11       		.uleb128 0x11
 17865 8aa4 00000000 		.long	.LASF1206
 17866 8aa8 3B       		.byte	0x3b
 17867 8aa9 00       		.byte	0
 17868 8aaa C9710000 		.long	0x71c9
 17869 8aae 04       		.byte	0x4
 17870 8aaf 11       		.uleb128 0x11
 17871 8ab0 00000000 		.long	.LASF1207
 17872 8ab4 3B       		.byte	0x3b
 17873 8ab5 00       		.byte	0
 17874 8ab6 16850000 		.long	0x8516
 17875 8aba 08       		.byte	0x8
 17876 8abb 11       		.uleb128 0x11
 17877 8abc 00000000 		.long	.LASF1208
 17878 8ac0 3B       		.byte	0x3b
 17879 8ac1 00       		.byte	0
 17880 8ac2 16850000 		.long	0x8516
 17881 8ac6 10       		.byte	0x10
 17882 8ac7 00       		.byte	0
 17883 8ac8 4E       		.uleb128 0x4e
 17884 8ac9 00000000 		.long	.LASF1209
 17885 8acd 33       		.byte	0x33
 17886 8ace 6101     		.value	0x161
 17887 8ad0 C9710000 		.long	0x71c9
 17888 8ad4 6E       		.uleb128 0x6e
 17889 8ad5 08       		.byte	0x8
 17890 8ad6 3C       		.byte	0x3c
 17891 8ad7 54       		.byte	0x54
 17892 8ad8 00000000 		.long	.LASF1210
 17893 8adc 188B0000 		.long	0x8b18
 17894 8ae0 7C       		.uleb128 0x7c
 17895 8ae1 04       		.byte	0x4
 17896 8ae2 3C       		.byte	0x3c
 17897 8ae3 57       		.byte	0x57
 17898 8ae4 FF8A0000 		.long	0x8aff
 17899 8ae8 7D       		.uleb128 0x7d
 17900 8ae9 00000000 		.long	.LASF1211
 17901 8aed 3C       		.byte	0x3c
 17902 8aee 59       		.byte	0x59
 17903 8aef C9710000 		.long	0x71c9
 17904 8af3 7D       		.uleb128 0x7d
 17905 8af4 00000000 		.long	.LASF1212
 17906 8af8 3C       		.byte	0x3c
 17907 8af9 5D       		.byte	0x5d
 17908 8afa 60850000 		.long	0x8560
 17909 8afe 00       		.byte	0
 17910 8aff 11       		.uleb128 0x11
 17911 8b00 00000000 		.long	.LASF1213
 17912 8b04 3C       		.byte	0x3c
 17913 8b05 55       		.byte	0x55
 17914 8b06 E5710000 		.long	0x71e5
 17915 8b0a 00       		.byte	0
 17916 8b0b 11       		.uleb128 0x11
 17917 8b0c 00000000 		.long	.LASF1214
GAS LISTING /tmp/ccKUqHDa.s 			page 572


 17918 8b10 3C       		.byte	0x3c
 17919 8b11 5E       		.byte	0x5e
 17920 8b12 E08A0000 		.long	0x8ae0
 17921 8b16 04       		.byte	0x4
 17922 8b17 00       		.byte	0
 17923 8b18 06       		.uleb128 0x6
 17924 8b19 00000000 		.long	.LASF1215
 17925 8b1d 3C       		.byte	0x3c
 17926 8b1e 5F       		.byte	0x5f
 17927 8b1f D48A0000 		.long	0x8ad4
 17928 8b23 06       		.uleb128 0x6
 17929 8b24 00000000 		.long	.LASF1216
 17930 8b28 3C       		.byte	0x3c
 17931 8b29 6A       		.byte	0x6a
 17932 8b2a 188B0000 		.long	0x8b18
 17933 8b2e 60       		.uleb128 0x60
 17934 8b2f 00000000 		.long	.LASF1217
 17935 8b33 3C       		.byte	0x3c
 17936 8b34 8201     		.value	0x182
 17937 8b36 C88A0000 		.long	0x8ac8
 17938 8b3a 448B0000 		.long	0x8b44
 17939 8b3e 13       		.uleb128 0x13
 17940 8b3f E5710000 		.long	0x71e5
 17941 8b43 00       		.byte	0
 17942 8b44 60       		.uleb128 0x60
 17943 8b45 00000000 		.long	.LASF1218
 17944 8b49 3C       		.byte	0x3c
 17945 8b4a E702     		.value	0x2e7
 17946 8b4c C88A0000 		.long	0x8ac8
 17947 8b50 5A8B0000 		.long	0x8b5a
 17948 8b54 13       		.uleb128 0x13
 17949 8b55 5A8B0000 		.long	0x8b5a
 17950 8b59 00       		.byte	0
 17951 8b5a 69       		.uleb128 0x69
 17952 8b5b 08       		.byte	0x8
 17953 8b5c 808A0000 		.long	0x8a80
 17954 8b60 60       		.uleb128 0x60
 17955 8b61 00000000 		.long	.LASF1219
 17956 8b65 3C       		.byte	0x3c
 17957 8b66 0403     		.value	0x304
 17958 8b68 CF860000 		.long	0x86cf
 17959 8b6c 808B0000 		.long	0x8b80
 17960 8b70 13       		.uleb128 0x13
 17961 8b71 CF860000 		.long	0x86cf
 17962 8b75 13       		.uleb128 0x13
 17963 8b76 E5710000 		.long	0x71e5
 17964 8b7a 13       		.uleb128 0x13
 17965 8b7b 5A8B0000 		.long	0x8b5a
 17966 8b7f 00       		.byte	0
 17967 8b80 60       		.uleb128 0x60
 17968 8b81 00000000 		.long	.LASF1220
 17969 8b85 3C       		.byte	0x3c
 17970 8b86 F502     		.value	0x2f5
 17971 8b88 C88A0000 		.long	0x8ac8
 17972 8b8c 9B8B0000 		.long	0x8b9b
 17973 8b90 13       		.uleb128 0x13
 17974 8b91 D5860000 		.long	0x86d5
GAS LISTING /tmp/ccKUqHDa.s 			page 573


 17975 8b95 13       		.uleb128 0x13
 17976 8b96 5A8B0000 		.long	0x8b5a
 17977 8b9a 00       		.byte	0
 17978 8b9b 60       		.uleb128 0x60
 17979 8b9c 00000000 		.long	.LASF1221
 17980 8ba0 3C       		.byte	0x3c
 17981 8ba1 0B03     		.value	0x30b
 17982 8ba3 E5710000 		.long	0x71e5
 17983 8ba7 B68B0000 		.long	0x8bb6
 17984 8bab 13       		.uleb128 0x13
 17985 8bac E1870000 		.long	0x87e1
 17986 8bb0 13       		.uleb128 0x13
 17987 8bb1 5A8B0000 		.long	0x8b5a
 17988 8bb5 00       		.byte	0
 17989 8bb6 60       		.uleb128 0x60
 17990 8bb7 00000000 		.long	.LASF1222
 17991 8bbb 3C       		.byte	0x3c
 17992 8bbc 4902     		.value	0x249
 17993 8bbe E5710000 		.long	0x71e5
 17994 8bc2 D18B0000 		.long	0x8bd1
 17995 8bc6 13       		.uleb128 0x13
 17996 8bc7 5A8B0000 		.long	0x8b5a
 17997 8bcb 13       		.uleb128 0x13
 17998 8bcc E5710000 		.long	0x71e5
 17999 8bd0 00       		.byte	0
 18000 8bd1 60       		.uleb128 0x60
 18001 8bd2 00000000 		.long	.LASF1223
 18002 8bd6 3C       		.byte	0x3c
 18003 8bd7 5002     		.value	0x250
 18004 8bd9 E5710000 		.long	0x71e5
 18005 8bdd ED8B0000 		.long	0x8bed
 18006 8be1 13       		.uleb128 0x13
 18007 8be2 5A8B0000 		.long	0x8b5a
 18008 8be6 13       		.uleb128 0x13
 18009 8be7 E1870000 		.long	0x87e1
 18010 8beb 5A       		.uleb128 0x5a
 18011 8bec 00       		.byte	0
 18012 8bed 60       		.uleb128 0x60
 18013 8bee 00000000 		.long	.LASF1224
 18014 8bf2 3C       		.byte	0x3c
 18015 8bf3 7902     		.value	0x279
 18016 8bf5 E5710000 		.long	0x71e5
 18017 8bf9 098C0000 		.long	0x8c09
 18018 8bfd 13       		.uleb128 0x13
 18019 8bfe 5A8B0000 		.long	0x8b5a
 18020 8c02 13       		.uleb128 0x13
 18021 8c03 E1870000 		.long	0x87e1
 18022 8c07 5A       		.uleb128 0x5a
 18023 8c08 00       		.byte	0
 18024 8c09 60       		.uleb128 0x60
 18025 8c0a 00000000 		.long	.LASF1225
 18026 8c0e 3C       		.byte	0x3c
 18027 8c0f E802     		.value	0x2e8
 18028 8c11 C88A0000 		.long	0x8ac8
 18029 8c15 1F8C0000 		.long	0x8c1f
 18030 8c19 13       		.uleb128 0x13
 18031 8c1a 5A8B0000 		.long	0x8b5a
GAS LISTING /tmp/ccKUqHDa.s 			page 574


 18032 8c1e 00       		.byte	0
 18033 8c1f 78       		.uleb128 0x78
 18034 8c20 00000000 		.long	.LASF1226
 18035 8c24 3C       		.byte	0x3c
 18036 8c25 EE02     		.value	0x2ee
 18037 8c27 C88A0000 		.long	0x8ac8
 18038 8c2b 60       		.uleb128 0x60
 18039 8c2c 00000000 		.long	.LASF1227
 18040 8c30 3C       		.byte	0x3c
 18041 8c31 8D01     		.value	0x18d
 18042 8c33 26840000 		.long	0x8426
 18043 8c37 4B8C0000 		.long	0x8c4b
 18044 8c3b 13       		.uleb128 0x13
 18045 8c3c CD840000 		.long	0x84cd
 18046 8c40 13       		.uleb128 0x13
 18047 8c41 26840000 		.long	0x8426
 18048 8c45 13       		.uleb128 0x13
 18049 8c46 4B8C0000 		.long	0x8c4b
 18050 8c4a 00       		.byte	0
 18051 8c4b 69       		.uleb128 0x69
 18052 8c4c 08       		.byte	0x8
 18053 8c4d 238B0000 		.long	0x8b23
 18054 8c51 60       		.uleb128 0x60
 18055 8c52 00000000 		.long	.LASF1228
 18056 8c56 3C       		.byte	0x3c
 18057 8c57 6B01     		.value	0x16b
 18058 8c59 26840000 		.long	0x8426
 18059 8c5d 768C0000 		.long	0x8c76
 18060 8c61 13       		.uleb128 0x13
 18061 8c62 CF860000 		.long	0x86cf
 18062 8c66 13       		.uleb128 0x13
 18063 8c67 CD840000 		.long	0x84cd
 18064 8c6b 13       		.uleb128 0x13
 18065 8c6c 26840000 		.long	0x8426
 18066 8c70 13       		.uleb128 0x13
 18067 8c71 4B8C0000 		.long	0x8c4b
 18068 8c75 00       		.byte	0
 18069 8c76 60       		.uleb128 0x60
 18070 8c77 00000000 		.long	.LASF1229
 18071 8c7b 3C       		.byte	0x3c
 18072 8c7c 6701     		.value	0x167
 18073 8c7e E5710000 		.long	0x71e5
 18074 8c82 8C8C0000 		.long	0x8c8c
 18075 8c86 13       		.uleb128 0x13
 18076 8c87 8C8C0000 		.long	0x8c8c
 18077 8c8b 00       		.byte	0
 18078 8c8c 69       		.uleb128 0x69
 18079 8c8d 08       		.byte	0x8
 18080 8c8e 928C0000 		.long	0x8c92
 18081 8c92 0B       		.uleb128 0xb
 18082 8c93 238B0000 		.long	0x8b23
 18083 8c97 60       		.uleb128 0x60
 18084 8c98 00000000 		.long	.LASF1230
 18085 8c9c 3C       		.byte	0x3c
 18086 8c9d 9601     		.value	0x196
 18087 8c9f 26840000 		.long	0x8426
 18088 8ca3 BC8C0000 		.long	0x8cbc
GAS LISTING /tmp/ccKUqHDa.s 			page 575


 18089 8ca7 13       		.uleb128 0x13
 18090 8ca8 CF860000 		.long	0x86cf
 18091 8cac 13       		.uleb128 0x13
 18092 8cad BC8C0000 		.long	0x8cbc
 18093 8cb1 13       		.uleb128 0x13
 18094 8cb2 26840000 		.long	0x8426
 18095 8cb6 13       		.uleb128 0x13
 18096 8cb7 4B8C0000 		.long	0x8c4b
 18097 8cbb 00       		.byte	0
 18098 8cbc 69       		.uleb128 0x69
 18099 8cbd 08       		.byte	0x8
 18100 8cbe CD840000 		.long	0x84cd
 18101 8cc2 60       		.uleb128 0x60
 18102 8cc3 00000000 		.long	.LASF1231
 18103 8cc7 3C       		.byte	0x3c
 18104 8cc8 F602     		.value	0x2f6
 18105 8cca C88A0000 		.long	0x8ac8
 18106 8cce DD8C0000 		.long	0x8cdd
 18107 8cd2 13       		.uleb128 0x13
 18108 8cd3 D5860000 		.long	0x86d5
 18109 8cd7 13       		.uleb128 0x13
 18110 8cd8 5A8B0000 		.long	0x8b5a
 18111 8cdc 00       		.byte	0
 18112 8cdd 60       		.uleb128 0x60
 18113 8cde 00000000 		.long	.LASF1232
 18114 8ce2 3C       		.byte	0x3c
 18115 8ce3 FC02     		.value	0x2fc
 18116 8ce5 C88A0000 		.long	0x8ac8
 18117 8ce9 F38C0000 		.long	0x8cf3
 18118 8ced 13       		.uleb128 0x13
 18119 8cee D5860000 		.long	0x86d5
 18120 8cf2 00       		.byte	0
 18121 8cf3 60       		.uleb128 0x60
 18122 8cf4 00000000 		.long	.LASF1233
 18123 8cf8 3C       		.byte	0x3c
 18124 8cf9 5A02     		.value	0x25a
 18125 8cfb E5710000 		.long	0x71e5
 18126 8cff 148D0000 		.long	0x8d14
 18127 8d03 13       		.uleb128 0x13
 18128 8d04 CF860000 		.long	0x86cf
 18129 8d08 13       		.uleb128 0x13
 18130 8d09 26840000 		.long	0x8426
 18131 8d0d 13       		.uleb128 0x13
 18132 8d0e E1870000 		.long	0x87e1
 18133 8d12 5A       		.uleb128 0x5a
 18134 8d13 00       		.byte	0
 18135 8d14 60       		.uleb128 0x60
 18136 8d15 00000000 		.long	.LASF1234
 18137 8d19 3C       		.byte	0x3c
 18138 8d1a 8302     		.value	0x283
 18139 8d1c E5710000 		.long	0x71e5
 18140 8d20 308D0000 		.long	0x8d30
 18141 8d24 13       		.uleb128 0x13
 18142 8d25 E1870000 		.long	0x87e1
 18143 8d29 13       		.uleb128 0x13
 18144 8d2a E1870000 		.long	0x87e1
 18145 8d2e 5A       		.uleb128 0x5a
GAS LISTING /tmp/ccKUqHDa.s 			page 576


 18146 8d2f 00       		.byte	0
 18147 8d30 60       		.uleb128 0x60
 18148 8d31 00000000 		.long	.LASF1235
 18149 8d35 3C       		.byte	0x3c
 18150 8d36 1303     		.value	0x313
 18151 8d38 C88A0000 		.long	0x8ac8
 18152 8d3c 4B8D0000 		.long	0x8d4b
 18153 8d40 13       		.uleb128 0x13
 18154 8d41 C88A0000 		.long	0x8ac8
 18155 8d45 13       		.uleb128 0x13
 18156 8d46 5A8B0000 		.long	0x8b5a
 18157 8d4a 00       		.byte	0
 18158 8d4b 60       		.uleb128 0x60
 18159 8d4c 00000000 		.long	.LASF1236
 18160 8d50 3C       		.byte	0x3c
 18161 8d51 6202     		.value	0x262
 18162 8d53 E5710000 		.long	0x71e5
 18163 8d57 6B8D0000 		.long	0x8d6b
 18164 8d5b 13       		.uleb128 0x13
 18165 8d5c 5A8B0000 		.long	0x8b5a
 18166 8d60 13       		.uleb128 0x13
 18167 8d61 E1870000 		.long	0x87e1
 18168 8d65 13       		.uleb128 0x13
 18169 8d66 6B8D0000 		.long	0x8d6b
 18170 8d6a 00       		.byte	0
 18171 8d6b 69       		.uleb128 0x69
 18172 8d6c 08       		.byte	0x8
 18173 8d6d 8B8A0000 		.long	0x8a8b
 18174 8d71 60       		.uleb128 0x60
 18175 8d72 00000000 		.long	.LASF1237
 18176 8d76 3C       		.byte	0x3c
 18177 8d77 AF02     		.value	0x2af
 18178 8d79 E5710000 		.long	0x71e5
 18179 8d7d 918D0000 		.long	0x8d91
 18180 8d81 13       		.uleb128 0x13
 18181 8d82 5A8B0000 		.long	0x8b5a
 18182 8d86 13       		.uleb128 0x13
 18183 8d87 E1870000 		.long	0x87e1
 18184 8d8b 13       		.uleb128 0x13
 18185 8d8c 6B8D0000 		.long	0x8d6b
 18186 8d90 00       		.byte	0
 18187 8d91 60       		.uleb128 0x60
 18188 8d92 00000000 		.long	.LASF1238
 18189 8d96 3C       		.byte	0x3c
 18190 8d97 6F02     		.value	0x26f
 18191 8d99 E5710000 		.long	0x71e5
 18192 8d9d B68D0000 		.long	0x8db6
 18193 8da1 13       		.uleb128 0x13
 18194 8da2 CF860000 		.long	0x86cf
 18195 8da6 13       		.uleb128 0x13
 18196 8da7 26840000 		.long	0x8426
 18197 8dab 13       		.uleb128 0x13
 18198 8dac E1870000 		.long	0x87e1
 18199 8db0 13       		.uleb128 0x13
 18200 8db1 6B8D0000 		.long	0x8d6b
 18201 8db5 00       		.byte	0
 18202 8db6 60       		.uleb128 0x60
GAS LISTING /tmp/ccKUqHDa.s 			page 577


 18203 8db7 00000000 		.long	.LASF1239
 18204 8dbb 3C       		.byte	0x3c
 18205 8dbc BB02     		.value	0x2bb
 18206 8dbe E5710000 		.long	0x71e5
 18207 8dc2 D68D0000 		.long	0x8dd6
 18208 8dc6 13       		.uleb128 0x13
 18209 8dc7 E1870000 		.long	0x87e1
 18210 8dcb 13       		.uleb128 0x13
 18211 8dcc E1870000 		.long	0x87e1
 18212 8dd0 13       		.uleb128 0x13
 18213 8dd1 6B8D0000 		.long	0x8d6b
 18214 8dd5 00       		.byte	0
 18215 8dd6 60       		.uleb128 0x60
 18216 8dd7 00000000 		.long	.LASF1240
 18217 8ddb 3C       		.byte	0x3c
 18218 8ddc 6A02     		.value	0x26a
 18219 8dde E5710000 		.long	0x71e5
 18220 8de2 F18D0000 		.long	0x8df1
 18221 8de6 13       		.uleb128 0x13
 18222 8de7 E1870000 		.long	0x87e1
 18223 8deb 13       		.uleb128 0x13
 18224 8dec 6B8D0000 		.long	0x8d6b
 18225 8df0 00       		.byte	0
 18226 8df1 60       		.uleb128 0x60
 18227 8df2 00000000 		.long	.LASF1241
 18228 8df6 3C       		.byte	0x3c
 18229 8df7 B702     		.value	0x2b7
 18230 8df9 E5710000 		.long	0x71e5
 18231 8dfd 0C8E0000 		.long	0x8e0c
 18232 8e01 13       		.uleb128 0x13
 18233 8e02 E1870000 		.long	0x87e1
 18234 8e06 13       		.uleb128 0x13
 18235 8e07 6B8D0000 		.long	0x8d6b
 18236 8e0b 00       		.byte	0
 18237 8e0c 60       		.uleb128 0x60
 18238 8e0d 00000000 		.long	.LASF1242
 18239 8e11 3C       		.byte	0x3c
 18240 8e12 7001     		.value	0x170
 18241 8e14 26840000 		.long	0x8426
 18242 8e18 2C8E0000 		.long	0x8e2c
 18243 8e1c 13       		.uleb128 0x13
 18244 8e1d 18850000 		.long	0x8518
 18245 8e21 13       		.uleb128 0x13
 18246 8e22 D5860000 		.long	0x86d5
 18247 8e26 13       		.uleb128 0x13
 18248 8e27 4B8C0000 		.long	0x8c4b
 18249 8e2b 00       		.byte	0
 18250 8e2c 42       		.uleb128 0x42
 18251 8e2d 00000000 		.long	.LASF1243
 18252 8e31 3C       		.byte	0x3c
 18253 8e32 98       		.byte	0x98
 18254 8e33 CF860000 		.long	0x86cf
 18255 8e37 468E0000 		.long	0x8e46
 18256 8e3b 13       		.uleb128 0x13
 18257 8e3c CF860000 		.long	0x86cf
 18258 8e40 13       		.uleb128 0x13
 18259 8e41 E1870000 		.long	0x87e1
GAS LISTING /tmp/ccKUqHDa.s 			page 578


 18260 8e45 00       		.byte	0
 18261 8e46 42       		.uleb128 0x42
 18262 8e47 00000000 		.long	.LASF1244
 18263 8e4b 3C       		.byte	0x3c
 18264 8e4c A0       		.byte	0xa0
 18265 8e4d E5710000 		.long	0x71e5
 18266 8e51 608E0000 		.long	0x8e60
 18267 8e55 13       		.uleb128 0x13
 18268 8e56 E1870000 		.long	0x87e1
 18269 8e5a 13       		.uleb128 0x13
 18270 8e5b E1870000 		.long	0x87e1
 18271 8e5f 00       		.byte	0
 18272 8e60 42       		.uleb128 0x42
 18273 8e61 00000000 		.long	.LASF1245
 18274 8e65 3C       		.byte	0x3c
 18275 8e66 BD       		.byte	0xbd
 18276 8e67 E5710000 		.long	0x71e5
 18277 8e6b 7A8E0000 		.long	0x8e7a
 18278 8e6f 13       		.uleb128 0x13
 18279 8e70 E1870000 		.long	0x87e1
 18280 8e74 13       		.uleb128 0x13
 18281 8e75 E1870000 		.long	0x87e1
 18282 8e79 00       		.byte	0
 18283 8e7a 42       		.uleb128 0x42
 18284 8e7b 00000000 		.long	.LASF1246
 18285 8e7f 3C       		.byte	0x3c
 18286 8e80 90       		.byte	0x90
 18287 8e81 CF860000 		.long	0x86cf
 18288 8e85 948E0000 		.long	0x8e94
 18289 8e89 13       		.uleb128 0x13
 18290 8e8a CF860000 		.long	0x86cf
 18291 8e8e 13       		.uleb128 0x13
 18292 8e8f E1870000 		.long	0x87e1
 18293 8e93 00       		.byte	0
 18294 8e94 42       		.uleb128 0x42
 18295 8e95 00000000 		.long	.LASF1247
 18296 8e99 3C       		.byte	0x3c
 18297 8e9a F9       		.byte	0xf9
 18298 8e9b 26840000 		.long	0x8426
 18299 8e9f AE8E0000 		.long	0x8eae
 18300 8ea3 13       		.uleb128 0x13
 18301 8ea4 E1870000 		.long	0x87e1
 18302 8ea8 13       		.uleb128 0x13
 18303 8ea9 E1870000 		.long	0x87e1
 18304 8ead 00       		.byte	0
 18305 8eae 60       		.uleb128 0x60
 18306 8eaf 00000000 		.long	.LASF1248
 18307 8eb3 3C       		.byte	0x3c
 18308 8eb4 5503     		.value	0x355
 18309 8eb6 26840000 		.long	0x8426
 18310 8eba D38E0000 		.long	0x8ed3
 18311 8ebe 13       		.uleb128 0x13
 18312 8ebf CF860000 		.long	0x86cf
 18313 8ec3 13       		.uleb128 0x13
 18314 8ec4 26840000 		.long	0x8426
 18315 8ec8 13       		.uleb128 0x13
 18316 8ec9 E1870000 		.long	0x87e1
GAS LISTING /tmp/ccKUqHDa.s 			page 579


 18317 8ecd 13       		.uleb128 0x13
 18318 8ece D38E0000 		.long	0x8ed3
 18319 8ed2 00       		.byte	0
 18320 8ed3 69       		.uleb128 0x69
 18321 8ed4 08       		.byte	0x8
 18322 8ed5 D98E0000 		.long	0x8ed9
 18323 8ed9 0B       		.uleb128 0xb
 18324 8eda DE8E0000 		.long	0x8ede
 18325 8ede 7E       		.uleb128 0x7e
 18326 8edf 746D00   		.string	"tm"
 18327 8ee2 38       		.byte	0x38
 18328 8ee3 35       		.byte	0x35
 18329 8ee4 85       		.byte	0x85
 18330 8ee5 6E8F0000 		.long	0x8f6e
 18331 8ee9 11       		.uleb128 0x11
 18332 8eea 00000000 		.long	.LASF1249
 18333 8eee 35       		.byte	0x35
 18334 8eef 87       		.byte	0x87
 18335 8ef0 E5710000 		.long	0x71e5
 18336 8ef4 00       		.byte	0
 18337 8ef5 11       		.uleb128 0x11
 18338 8ef6 00000000 		.long	.LASF1250
 18339 8efa 35       		.byte	0x35
 18340 8efb 88       		.byte	0x88
 18341 8efc E5710000 		.long	0x71e5
 18342 8f00 04       		.byte	0x4
 18343 8f01 11       		.uleb128 0x11
 18344 8f02 00000000 		.long	.LASF1251
 18345 8f06 35       		.byte	0x35
 18346 8f07 89       		.byte	0x89
 18347 8f08 E5710000 		.long	0x71e5
 18348 8f0c 08       		.byte	0x8
 18349 8f0d 11       		.uleb128 0x11
 18350 8f0e 00000000 		.long	.LASF1252
 18351 8f12 35       		.byte	0x35
 18352 8f13 8A       		.byte	0x8a
 18353 8f14 E5710000 		.long	0x71e5
 18354 8f18 0C       		.byte	0xc
 18355 8f19 11       		.uleb128 0x11
 18356 8f1a 00000000 		.long	.LASF1253
 18357 8f1e 35       		.byte	0x35
 18358 8f1f 8B       		.byte	0x8b
 18359 8f20 E5710000 		.long	0x71e5
 18360 8f24 10       		.byte	0x10
 18361 8f25 11       		.uleb128 0x11
 18362 8f26 00000000 		.long	.LASF1254
 18363 8f2a 35       		.byte	0x35
 18364 8f2b 8C       		.byte	0x8c
 18365 8f2c E5710000 		.long	0x71e5
 18366 8f30 14       		.byte	0x14
 18367 8f31 11       		.uleb128 0x11
 18368 8f32 00000000 		.long	.LASF1255
 18369 8f36 35       		.byte	0x35
 18370 8f37 8D       		.byte	0x8d
 18371 8f38 E5710000 		.long	0x71e5
 18372 8f3c 18       		.byte	0x18
 18373 8f3d 11       		.uleb128 0x11
GAS LISTING /tmp/ccKUqHDa.s 			page 580


 18374 8f3e 00000000 		.long	.LASF1256
 18375 8f42 35       		.byte	0x35
 18376 8f43 8E       		.byte	0x8e
 18377 8f44 E5710000 		.long	0x71e5
 18378 8f48 1C       		.byte	0x1c
 18379 8f49 11       		.uleb128 0x11
 18380 8f4a 00000000 		.long	.LASF1257
 18381 8f4e 35       		.byte	0x35
 18382 8f4f 8F       		.byte	0x8f
 18383 8f50 E5710000 		.long	0x71e5
 18384 8f54 20       		.byte	0x20
 18385 8f55 11       		.uleb128 0x11
 18386 8f56 00000000 		.long	.LASF1258
 18387 8f5a 35       		.byte	0x35
 18388 8f5b 92       		.byte	0x92
 18389 8f5c EC710000 		.long	0x71ec
 18390 8f60 28       		.byte	0x28
 18391 8f61 11       		.uleb128 0x11
 18392 8f62 00000000 		.long	.LASF1259
 18393 8f66 35       		.byte	0x35
 18394 8f67 93       		.byte	0x93
 18395 8f68 CD840000 		.long	0x84cd
 18396 8f6c 30       		.byte	0x30
 18397 8f6d 00       		.byte	0
 18398 8f6e 60       		.uleb128 0x60
 18399 8f6f 00000000 		.long	.LASF1260
 18400 8f73 3C       		.byte	0x3c
 18401 8f74 1C01     		.value	0x11c
 18402 8f76 26840000 		.long	0x8426
 18403 8f7a 848F0000 		.long	0x8f84
 18404 8f7e 13       		.uleb128 0x13
 18405 8f7f E1870000 		.long	0x87e1
 18406 8f83 00       		.byte	0
 18407 8f84 42       		.uleb128 0x42
 18408 8f85 00000000 		.long	.LASF1261
 18409 8f89 3C       		.byte	0x3c
 18410 8f8a 9B       		.byte	0x9b
 18411 8f8b CF860000 		.long	0x86cf
 18412 8f8f A38F0000 		.long	0x8fa3
 18413 8f93 13       		.uleb128 0x13
 18414 8f94 CF860000 		.long	0x86cf
 18415 8f98 13       		.uleb128 0x13
 18416 8f99 E1870000 		.long	0x87e1
 18417 8f9d 13       		.uleb128 0x13
 18418 8f9e 26840000 		.long	0x8426
 18419 8fa2 00       		.byte	0
 18420 8fa3 42       		.uleb128 0x42
 18421 8fa4 00000000 		.long	.LASF1262
 18422 8fa8 3C       		.byte	0x3c
 18423 8fa9 A3       		.byte	0xa3
 18424 8faa E5710000 		.long	0x71e5
 18425 8fae C28F0000 		.long	0x8fc2
 18426 8fb2 13       		.uleb128 0x13
 18427 8fb3 E1870000 		.long	0x87e1
 18428 8fb7 13       		.uleb128 0x13
 18429 8fb8 E1870000 		.long	0x87e1
 18430 8fbc 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 581


 18431 8fbd 26840000 		.long	0x8426
 18432 8fc1 00       		.byte	0
 18433 8fc2 42       		.uleb128 0x42
 18434 8fc3 00000000 		.long	.LASF1263
 18435 8fc7 3C       		.byte	0x3c
 18436 8fc8 93       		.byte	0x93
 18437 8fc9 CF860000 		.long	0x86cf
 18438 8fcd E18F0000 		.long	0x8fe1
 18439 8fd1 13       		.uleb128 0x13
 18440 8fd2 CF860000 		.long	0x86cf
 18441 8fd6 13       		.uleb128 0x13
 18442 8fd7 E1870000 		.long	0x87e1
 18443 8fdb 13       		.uleb128 0x13
 18444 8fdc 26840000 		.long	0x8426
 18445 8fe0 00       		.byte	0
 18446 8fe1 60       		.uleb128 0x60
 18447 8fe2 00000000 		.long	.LASF1264
 18448 8fe6 3C       		.byte	0x3c
 18449 8fe7 9C01     		.value	0x19c
 18450 8fe9 26840000 		.long	0x8426
 18451 8fed 06900000 		.long	0x9006
 18452 8ff1 13       		.uleb128 0x13
 18453 8ff2 18850000 		.long	0x8518
 18454 8ff6 13       		.uleb128 0x13
 18455 8ff7 06900000 		.long	0x9006
 18456 8ffb 13       		.uleb128 0x13
 18457 8ffc 26840000 		.long	0x8426
 18458 9000 13       		.uleb128 0x13
 18459 9001 4B8C0000 		.long	0x8c4b
 18460 9005 00       		.byte	0
 18461 9006 69       		.uleb128 0x69
 18462 9007 08       		.byte	0x8
 18463 9008 E1870000 		.long	0x87e1
 18464 900c 42       		.uleb128 0x42
 18465 900d 00000000 		.long	.LASF1265
 18466 9011 3C       		.byte	0x3c
 18467 9012 FD       		.byte	0xfd
 18468 9013 26840000 		.long	0x8426
 18469 9017 26900000 		.long	0x9026
 18470 901b 13       		.uleb128 0x13
 18471 901c E1870000 		.long	0x87e1
 18472 9020 13       		.uleb128 0x13
 18473 9021 E1870000 		.long	0x87e1
 18474 9025 00       		.byte	0
 18475 9026 60       		.uleb128 0x60
 18476 9027 00000000 		.long	.LASF1266
 18477 902b 3C       		.byte	0x3c
 18478 902c C001     		.value	0x1c0
 18479 902e 0C840000 		.long	0x840c
 18480 9032 41900000 		.long	0x9041
 18481 9036 13       		.uleb128 0x13
 18482 9037 E1870000 		.long	0x87e1
 18483 903b 13       		.uleb128 0x13
 18484 903c 41900000 		.long	0x9041
 18485 9040 00       		.byte	0
 18486 9041 69       		.uleb128 0x69
 18487 9042 08       		.byte	0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 582


 18488 9043 CF860000 		.long	0x86cf
 18489 9047 60       		.uleb128 0x60
 18490 9048 00000000 		.long	.LASF1267
 18491 904c 3C       		.byte	0x3c
 18492 904d C701     		.value	0x1c7
 18493 904f 29000000 		.long	0x29
 18494 9053 62900000 		.long	0x9062
 18495 9057 13       		.uleb128 0x13
 18496 9058 E1870000 		.long	0x87e1
 18497 905c 13       		.uleb128 0x13
 18498 905d 41900000 		.long	0x9041
 18499 9061 00       		.byte	0
 18500 9062 60       		.uleb128 0x60
 18501 9063 00000000 		.long	.LASF1268
 18502 9067 3C       		.byte	0x3c
 18503 9068 1701     		.value	0x117
 18504 906a CF860000 		.long	0x86cf
 18505 906e 82900000 		.long	0x9082
 18506 9072 13       		.uleb128 0x13
 18507 9073 CF860000 		.long	0x86cf
 18508 9077 13       		.uleb128 0x13
 18509 9078 E1870000 		.long	0x87e1
 18510 907c 13       		.uleb128 0x13
 18511 907d 41900000 		.long	0x9041
 18512 9081 00       		.byte	0
 18513 9082 60       		.uleb128 0x60
 18514 9083 00000000 		.long	.LASF1269
 18515 9087 3C       		.byte	0x3c
 18516 9088 D201     		.value	0x1d2
 18517 908a EC710000 		.long	0x71ec
 18518 908e A2900000 		.long	0x90a2
 18519 9092 13       		.uleb128 0x13
 18520 9093 E1870000 		.long	0x87e1
 18521 9097 13       		.uleb128 0x13
 18522 9098 41900000 		.long	0x9041
 18523 909c 13       		.uleb128 0x13
 18524 909d E5710000 		.long	0x71e5
 18525 90a1 00       		.byte	0
 18526 90a2 60       		.uleb128 0x60
 18527 90a3 00000000 		.long	.LASF1270
 18528 90a7 3C       		.byte	0x3c
 18529 90a8 D701     		.value	0x1d7
 18530 90aa 30000000 		.long	0x30
 18531 90ae C2900000 		.long	0x90c2
 18532 90b2 13       		.uleb128 0x13
 18533 90b3 E1870000 		.long	0x87e1
 18534 90b7 13       		.uleb128 0x13
 18535 90b8 41900000 		.long	0x9041
 18536 90bc 13       		.uleb128 0x13
 18537 90bd E5710000 		.long	0x71e5
 18538 90c1 00       		.byte	0
 18539 90c2 42       		.uleb128 0x42
 18540 90c3 00000000 		.long	.LASF1271
 18541 90c7 3C       		.byte	0x3c
 18542 90c8 C1       		.byte	0xc1
 18543 90c9 26840000 		.long	0x8426
 18544 90cd E1900000 		.long	0x90e1
GAS LISTING /tmp/ccKUqHDa.s 			page 583


 18545 90d1 13       		.uleb128 0x13
 18546 90d2 CF860000 		.long	0x86cf
 18547 90d6 13       		.uleb128 0x13
 18548 90d7 E1870000 		.long	0x87e1
 18549 90db 13       		.uleb128 0x13
 18550 90dc 26840000 		.long	0x8426
 18551 90e0 00       		.byte	0
 18552 90e1 60       		.uleb128 0x60
 18553 90e2 00000000 		.long	.LASF1272
 18554 90e6 3C       		.byte	0x3c
 18555 90e7 8801     		.value	0x188
 18556 90e9 E5710000 		.long	0x71e5
 18557 90ed F7900000 		.long	0x90f7
 18558 90f1 13       		.uleb128 0x13
 18559 90f2 C88A0000 		.long	0x8ac8
 18560 90f6 00       		.byte	0
 18561 90f7 60       		.uleb128 0x60
 18562 90f8 00000000 		.long	.LASF1273
 18563 90fc 3C       		.byte	0x3c
 18564 90fd 4201     		.value	0x142
 18565 90ff E5710000 		.long	0x71e5
 18566 9103 17910000 		.long	0x9117
 18567 9107 13       		.uleb128 0x13
 18568 9108 E1870000 		.long	0x87e1
 18569 910c 13       		.uleb128 0x13
 18570 910d E1870000 		.long	0x87e1
 18571 9111 13       		.uleb128 0x13
 18572 9112 26840000 		.long	0x8426
 18573 9116 00       		.byte	0
 18574 9117 60       		.uleb128 0x60
 18575 9118 00000000 		.long	.LASF1274
 18576 911c 3C       		.byte	0x3c
 18577 911d 4701     		.value	0x147
 18578 911f CF860000 		.long	0x86cf
 18579 9123 37910000 		.long	0x9137
 18580 9127 13       		.uleb128 0x13
 18581 9128 CF860000 		.long	0x86cf
 18582 912c 13       		.uleb128 0x13
 18583 912d E1870000 		.long	0x87e1
 18584 9131 13       		.uleb128 0x13
 18585 9132 26840000 		.long	0x8426
 18586 9136 00       		.byte	0
 18587 9137 60       		.uleb128 0x60
 18588 9138 00000000 		.long	.LASF1275
 18589 913c 3C       		.byte	0x3c
 18590 913d 4C01     		.value	0x14c
 18591 913f CF860000 		.long	0x86cf
 18592 9143 57910000 		.long	0x9157
 18593 9147 13       		.uleb128 0x13
 18594 9148 CF860000 		.long	0x86cf
 18595 914c 13       		.uleb128 0x13
 18596 914d E1870000 		.long	0x87e1
 18597 9151 13       		.uleb128 0x13
 18598 9152 26840000 		.long	0x8426
 18599 9156 00       		.byte	0
 18600 9157 60       		.uleb128 0x60
 18601 9158 00000000 		.long	.LASF1276
GAS LISTING /tmp/ccKUqHDa.s 			page 584


 18602 915c 3C       		.byte	0x3c
 18603 915d 5001     		.value	0x150
 18604 915f CF860000 		.long	0x86cf
 18605 9163 77910000 		.long	0x9177
 18606 9167 13       		.uleb128 0x13
 18607 9168 CF860000 		.long	0x86cf
 18608 916c 13       		.uleb128 0x13
 18609 916d D5860000 		.long	0x86d5
 18610 9171 13       		.uleb128 0x13
 18611 9172 26840000 		.long	0x8426
 18612 9176 00       		.byte	0
 18613 9177 60       		.uleb128 0x60
 18614 9178 00000000 		.long	.LASF1277
 18615 917c 3C       		.byte	0x3c
 18616 917d 5702     		.value	0x257
 18617 917f E5710000 		.long	0x71e5
 18618 9183 8E910000 		.long	0x918e
 18619 9187 13       		.uleb128 0x13
 18620 9188 E1870000 		.long	0x87e1
 18621 918c 5A       		.uleb128 0x5a
 18622 918d 00       		.byte	0
 18623 918e 60       		.uleb128 0x60
 18624 918f 00000000 		.long	.LASF1278
 18625 9193 3C       		.byte	0x3c
 18626 9194 8002     		.value	0x280
 18627 9196 E5710000 		.long	0x71e5
 18628 919a A5910000 		.long	0x91a5
 18629 919e 13       		.uleb128 0x13
 18630 919f E1870000 		.long	0x87e1
 18631 91a3 5A       		.uleb128 0x5a
 18632 91a4 00       		.byte	0
 18633 91a5 3E       		.uleb128 0x3e
 18634 91a6 00000000 		.long	.LASF1279
 18635 91aa 3C       		.byte	0x3c
 18636 91ab DD       		.byte	0xdd
 18637 91ac 00000000 		.long	.LASF1279
 18638 91b0 E1870000 		.long	0x87e1
 18639 91b4 C3910000 		.long	0x91c3
 18640 91b8 13       		.uleb128 0x13
 18641 91b9 E1870000 		.long	0x87e1
 18642 91bd 13       		.uleb128 0x13
 18643 91be D5860000 		.long	0x86d5
 18644 91c2 00       		.byte	0
 18645 91c3 21       		.uleb128 0x21
 18646 91c4 00000000 		.long	.LASF1280
 18647 91c8 3C       		.byte	0x3c
 18648 91c9 0301     		.value	0x103
 18649 91cb 00000000 		.long	.LASF1280
 18650 91cf E1870000 		.long	0x87e1
 18651 91d3 E2910000 		.long	0x91e2
 18652 91d7 13       		.uleb128 0x13
 18653 91d8 E1870000 		.long	0x87e1
 18654 91dc 13       		.uleb128 0x13
 18655 91dd E1870000 		.long	0x87e1
 18656 91e1 00       		.byte	0
 18657 91e2 3E       		.uleb128 0x3e
 18658 91e3 00000000 		.long	.LASF1281
GAS LISTING /tmp/ccKUqHDa.s 			page 585


 18659 91e7 3C       		.byte	0x3c
 18660 91e8 E7       		.byte	0xe7
 18661 91e9 00000000 		.long	.LASF1281
 18662 91ed E1870000 		.long	0x87e1
 18663 91f1 00920000 		.long	0x9200
 18664 91f5 13       		.uleb128 0x13
 18665 91f6 E1870000 		.long	0x87e1
 18666 91fa 13       		.uleb128 0x13
 18667 91fb D5860000 		.long	0x86d5
 18668 91ff 00       		.byte	0
 18669 9200 21       		.uleb128 0x21
 18670 9201 00000000 		.long	.LASF1282
 18671 9205 3C       		.byte	0x3c
 18672 9206 0E01     		.value	0x10e
 18673 9208 00000000 		.long	.LASF1282
 18674 920c E1870000 		.long	0x87e1
 18675 9210 1F920000 		.long	0x921f
 18676 9214 13       		.uleb128 0x13
 18677 9215 E1870000 		.long	0x87e1
 18678 9219 13       		.uleb128 0x13
 18679 921a E1870000 		.long	0x87e1
 18680 921e 00       		.byte	0
 18681 921f 21       		.uleb128 0x21
 18682 9220 00000000 		.long	.LASF1283
 18683 9224 3C       		.byte	0x3c
 18684 9225 3901     		.value	0x139
 18685 9227 00000000 		.long	.LASF1283
 18686 922b E1870000 		.long	0x87e1
 18687 922f 43920000 		.long	0x9243
 18688 9233 13       		.uleb128 0x13
 18689 9234 E1870000 		.long	0x87e1
 18690 9238 13       		.uleb128 0x13
 18691 9239 D5860000 		.long	0x86d5
 18692 923d 13       		.uleb128 0x13
 18693 923e 26840000 		.long	0x8426
 18694 9242 00       		.byte	0
 18695 9243 60       		.uleb128 0x60
 18696 9244 00000000 		.long	.LASF1284
 18697 9248 3C       		.byte	0x3c
 18698 9249 C901     		.value	0x1c9
 18699 924b 05840000 		.long	0x8405
 18700 924f 5E920000 		.long	0x925e
 18701 9253 13       		.uleb128 0x13
 18702 9254 E1870000 		.long	0x87e1
 18703 9258 13       		.uleb128 0x13
 18704 9259 41900000 		.long	0x9041
 18705 925d 00       		.byte	0
 18706 925e 60       		.uleb128 0x60
 18707 925f 00000000 		.long	.LASF1285
 18708 9263 3C       		.byte	0x3c
 18709 9264 E101     		.value	0x1e1
 18710 9266 F3710000 		.long	0x71f3
 18711 926a 7E920000 		.long	0x927e
 18712 926e 13       		.uleb128 0x13
 18713 926f E1870000 		.long	0x87e1
 18714 9273 13       		.uleb128 0x13
 18715 9274 41900000 		.long	0x9041
GAS LISTING /tmp/ccKUqHDa.s 			page 586


 18716 9278 13       		.uleb128 0x13
 18717 9279 E5710000 		.long	0x71e5
 18718 927d 00       		.byte	0
 18719 927e 60       		.uleb128 0x60
 18720 927f 00000000 		.long	.LASF1286
 18721 9283 3C       		.byte	0x3c
 18722 9284 E801     		.value	0x1e8
 18723 9286 D0710000 		.long	0x71d0
 18724 928a 9E920000 		.long	0x929e
 18725 928e 13       		.uleb128 0x13
 18726 928f E1870000 		.long	0x87e1
 18727 9293 13       		.uleb128 0x13
 18728 9294 41900000 		.long	0x9041
 18729 9298 13       		.uleb128 0x13
 18730 9299 E5710000 		.long	0x71e5
 18731 929d 00       		.byte	0
 18732 929e 79       		.uleb128 0x79
 18733 929f 08       		.byte	0x8
 18734 92a0 1F060000 		.long	0x61f
 18735 92a4 79       		.uleb128 0x79
 18736 92a5 08       		.byte	0x8
 18737 92a6 4F060000 		.long	0x64f
 18738 92aa 69       		.uleb128 0x69
 18739 92ab 08       		.byte	0x8
 18740 92ac 4F060000 		.long	0x64f
 18741 92b0 69       		.uleb128 0x69
 18742 92b1 08       		.byte	0x8
 18743 92b2 1F060000 		.long	0x61f
 18744 92b6 79       		.uleb128 0x79
 18745 92b7 08       		.byte	0x8
 18746 92b8 76070000 		.long	0x776
 18747 92bc 06       		.uleb128 0x6
 18748 92bd 00000000 		.long	.LASF1287
 18749 92c1 3D       		.byte	0x3d
 18750 92c2 31       		.byte	0x31
 18751 92c3 BB710000 		.long	0x71bb
 18752 92c7 06       		.uleb128 0x6
 18753 92c8 00000000 		.long	.LASF1288
 18754 92cc 3D       		.byte	0x3d
 18755 92cd 32       		.byte	0x32
 18756 92ce C2710000 		.long	0x71c2
 18757 92d2 06       		.uleb128 0x6
 18758 92d3 00000000 		.long	.LASF1289
 18759 92d7 3D       		.byte	0x3d
 18760 92d8 34       		.byte	0x34
 18761 92d9 C9710000 		.long	0x71c9
 18762 92dd 06       		.uleb128 0x6
 18763 92de 00000000 		.long	.LASF1290
 18764 92e2 3D       		.byte	0x3d
 18765 92e3 38       		.byte	0x38
 18766 92e4 30000000 		.long	0x30
 18767 92e8 06       		.uleb128 0x6
 18768 92e9 00000000 		.long	.LASF1291
 18769 92ed 3D       		.byte	0x3d
 18770 92ee 42       		.byte	0x42
 18771 92ef D7710000 		.long	0x71d7
 18772 92f3 06       		.uleb128 0x6
GAS LISTING /tmp/ccKUqHDa.s 			page 587


 18773 92f4 00000000 		.long	.LASF1292
 18774 92f8 3D       		.byte	0x3d
 18775 92f9 43       		.byte	0x43
 18776 92fa DE710000 		.long	0x71de
 18777 92fe 06       		.uleb128 0x6
 18778 92ff 00000000 		.long	.LASF1293
 18779 9303 3D       		.byte	0x3d
 18780 9304 44       		.byte	0x44
 18781 9305 E5710000 		.long	0x71e5
 18782 9309 06       		.uleb128 0x6
 18783 930a 00000000 		.long	.LASF1294
 18784 930e 3D       		.byte	0x3d
 18785 930f 46       		.byte	0x46
 18786 9310 EC710000 		.long	0x71ec
 18787 9314 06       		.uleb128 0x6
 18788 9315 00000000 		.long	.LASF1295
 18789 9319 3D       		.byte	0x3d
 18790 931a 4D       		.byte	0x4d
 18791 931b BB710000 		.long	0x71bb
 18792 931f 06       		.uleb128 0x6
 18793 9320 00000000 		.long	.LASF1296
 18794 9324 3D       		.byte	0x3d
 18795 9325 4E       		.byte	0x4e
 18796 9326 C2710000 		.long	0x71c2
 18797 932a 06       		.uleb128 0x6
 18798 932b 00000000 		.long	.LASF1297
 18799 932f 3D       		.byte	0x3d
 18800 9330 4F       		.byte	0x4f
 18801 9331 C9710000 		.long	0x71c9
 18802 9335 06       		.uleb128 0x6
 18803 9336 00000000 		.long	.LASF1298
 18804 933a 3D       		.byte	0x3d
 18805 933b 51       		.byte	0x51
 18806 933c 30000000 		.long	0x30
 18807 9340 06       		.uleb128 0x6
 18808 9341 00000000 		.long	.LASF1299
 18809 9345 3D       		.byte	0x3d
 18810 9346 5B       		.byte	0x5b
 18811 9347 D7710000 		.long	0x71d7
 18812 934b 06       		.uleb128 0x6
 18813 934c 00000000 		.long	.LASF1300
 18814 9350 3D       		.byte	0x3d
 18815 9351 5D       		.byte	0x5d
 18816 9352 EC710000 		.long	0x71ec
 18817 9356 06       		.uleb128 0x6
 18818 9357 00000000 		.long	.LASF1301
 18819 935b 3D       		.byte	0x3d
 18820 935c 5E       		.byte	0x5e
 18821 935d EC710000 		.long	0x71ec
 18822 9361 06       		.uleb128 0x6
 18823 9362 00000000 		.long	.LASF1302
 18824 9366 3D       		.byte	0x3d
 18825 9367 5F       		.byte	0x5f
 18826 9368 EC710000 		.long	0x71ec
 18827 936c 06       		.uleb128 0x6
 18828 936d 00000000 		.long	.LASF1303
 18829 9371 3D       		.byte	0x3d
GAS LISTING /tmp/ccKUqHDa.s 			page 588


 18830 9372 68       		.byte	0x68
 18831 9373 BB710000 		.long	0x71bb
 18832 9377 06       		.uleb128 0x6
 18833 9378 00000000 		.long	.LASF1304
 18834 937c 3D       		.byte	0x3d
 18835 937d 6A       		.byte	0x6a
 18836 937e 30000000 		.long	0x30
 18837 9382 06       		.uleb128 0x6
 18838 9383 00000000 		.long	.LASF1305
 18839 9387 3D       		.byte	0x3d
 18840 9388 6B       		.byte	0x6b
 18841 9389 30000000 		.long	0x30
 18842 938d 06       		.uleb128 0x6
 18843 938e 00000000 		.long	.LASF1306
 18844 9392 3D       		.byte	0x3d
 18845 9393 6C       		.byte	0x6c
 18846 9394 30000000 		.long	0x30
 18847 9398 06       		.uleb128 0x6
 18848 9399 00000000 		.long	.LASF1307
 18849 939d 3D       		.byte	0x3d
 18850 939e 78       		.byte	0x78
 18851 939f EC710000 		.long	0x71ec
 18852 93a3 06       		.uleb128 0x6
 18853 93a4 00000000 		.long	.LASF1308
 18854 93a8 3D       		.byte	0x3d
 18855 93a9 7B       		.byte	0x7b
 18856 93aa 30000000 		.long	0x30
 18857 93ae 06       		.uleb128 0x6
 18858 93af 00000000 		.long	.LASF1309
 18859 93b3 3D       		.byte	0x3d
 18860 93b4 87       		.byte	0x87
 18861 93b5 EC710000 		.long	0x71ec
 18862 93b9 06       		.uleb128 0x6
 18863 93ba 00000000 		.long	.LASF1310
 18864 93be 3D       		.byte	0x3d
 18865 93bf 88       		.byte	0x88
 18866 93c0 30000000 		.long	0x30
 18867 93c4 02       		.uleb128 0x2
 18868 93c5 02       		.byte	0x2
 18869 93c6 10       		.byte	0x10
 18870 93c7 00000000 		.long	.LASF1311
 18871 93cb 02       		.uleb128 0x2
 18872 93cc 04       		.byte	0x4
 18873 93cd 10       		.byte	0x10
 18874 93ce 00000000 		.long	.LASF1312
 18875 93d2 79       		.uleb128 0x79
 18876 93d3 08       		.byte	0x8
 18877 93d4 D8840000 		.long	0x84d8
 18878 93d8 79       		.uleb128 0x79
 18879 93d9 08       		.byte	0x8
 18880 93da D3840000 		.long	0x84d3
 18881 93de 69       		.uleb128 0x69
 18882 93df 08       		.byte	0x8
 18883 93e0 C2720000 		.long	0x72c2
 18884 93e4 79       		.uleb128 0x79
 18885 93e5 08       		.byte	0x8
 18886 93e6 03740000 		.long	0x7403
GAS LISTING /tmp/ccKUqHDa.s 			page 589


 18887 93ea 69       		.uleb128 0x69
 18888 93eb 08       		.byte	0x8
 18889 93ec 03740000 		.long	0x7403
 18890 93f0 69       		.uleb128 0x69
 18891 93f1 08       		.byte	0x8
 18892 93f2 C0080000 		.long	0x8c0
 18893 93f6 79       		.uleb128 0x79
 18894 93f7 08       		.byte	0x8
 18895 93f8 40090000 		.long	0x940
 18896 93fc 04       		.uleb128 0x4
 18897 93fd 00000000 		.long	.LASF1313
 18898 9401 60       		.byte	0x60
 18899 9402 3E       		.byte	0x3e
 18900 9403 36       		.byte	0x36
 18901 9404 29950000 		.long	0x9529
 18902 9408 11       		.uleb128 0x11
 18903 9409 00000000 		.long	.LASF1314
 18904 940d 3E       		.byte	0x3e
 18905 940e 3A       		.byte	0x3a
 18906 940f 18850000 		.long	0x8518
 18907 9413 00       		.byte	0
 18908 9414 11       		.uleb128 0x11
 18909 9415 00000000 		.long	.LASF1315
 18910 9419 3E       		.byte	0x3e
 18911 941a 3B       		.byte	0x3b
 18912 941b 18850000 		.long	0x8518
 18913 941f 08       		.byte	0x8
 18914 9420 11       		.uleb128 0x11
 18915 9421 00000000 		.long	.LASF1316
 18916 9425 3E       		.byte	0x3e
 18917 9426 41       		.byte	0x41
 18918 9427 18850000 		.long	0x8518
 18919 942b 10       		.byte	0x10
 18920 942c 11       		.uleb128 0x11
 18921 942d 00000000 		.long	.LASF1317
 18922 9431 3E       		.byte	0x3e
 18923 9432 47       		.byte	0x47
 18924 9433 18850000 		.long	0x8518
 18925 9437 18       		.byte	0x18
 18926 9438 11       		.uleb128 0x11
 18927 9439 00000000 		.long	.LASF1318
 18928 943d 3E       		.byte	0x3e
 18929 943e 48       		.byte	0x48
 18930 943f 18850000 		.long	0x8518
 18931 9443 20       		.byte	0x20
 18932 9444 11       		.uleb128 0x11
 18933 9445 00000000 		.long	.LASF1319
 18934 9449 3E       		.byte	0x3e
 18935 944a 49       		.byte	0x49
 18936 944b 18850000 		.long	0x8518
 18937 944f 28       		.byte	0x28
 18938 9450 11       		.uleb128 0x11
 18939 9451 00000000 		.long	.LASF1320
 18940 9455 3E       		.byte	0x3e
 18941 9456 4A       		.byte	0x4a
 18942 9457 18850000 		.long	0x8518
 18943 945b 30       		.byte	0x30
GAS LISTING /tmp/ccKUqHDa.s 			page 590


 18944 945c 11       		.uleb128 0x11
 18945 945d 00000000 		.long	.LASF1321
 18946 9461 3E       		.byte	0x3e
 18947 9462 4B       		.byte	0x4b
 18948 9463 18850000 		.long	0x8518
 18949 9467 38       		.byte	0x38
 18950 9468 11       		.uleb128 0x11
 18951 9469 00000000 		.long	.LASF1322
 18952 946d 3E       		.byte	0x3e
 18953 946e 4C       		.byte	0x4c
 18954 946f 18850000 		.long	0x8518
 18955 9473 40       		.byte	0x40
 18956 9474 11       		.uleb128 0x11
 18957 9475 00000000 		.long	.LASF1323
 18958 9479 3E       		.byte	0x3e
 18959 947a 4D       		.byte	0x4d
 18960 947b 18850000 		.long	0x8518
 18961 947f 48       		.byte	0x48
 18962 9480 11       		.uleb128 0x11
 18963 9481 00000000 		.long	.LASF1324
 18964 9485 3E       		.byte	0x3e
 18965 9486 4E       		.byte	0x4e
 18966 9487 D8840000 		.long	0x84d8
 18967 948b 50       		.byte	0x50
 18968 948c 11       		.uleb128 0x11
 18969 948d 00000000 		.long	.LASF1325
 18970 9491 3E       		.byte	0x3e
 18971 9492 4F       		.byte	0x4f
 18972 9493 D8840000 		.long	0x84d8
 18973 9497 51       		.byte	0x51
 18974 9498 11       		.uleb128 0x11
 18975 9499 00000000 		.long	.LASF1326
 18976 949d 3E       		.byte	0x3e
 18977 949e 51       		.byte	0x51
 18978 949f D8840000 		.long	0x84d8
 18979 94a3 52       		.byte	0x52
 18980 94a4 11       		.uleb128 0x11
 18981 94a5 00000000 		.long	.LASF1327
 18982 94a9 3E       		.byte	0x3e
 18983 94aa 53       		.byte	0x53
 18984 94ab D8840000 		.long	0x84d8
 18985 94af 53       		.byte	0x53
 18986 94b0 11       		.uleb128 0x11
 18987 94b1 00000000 		.long	.LASF1328
 18988 94b5 3E       		.byte	0x3e
 18989 94b6 55       		.byte	0x55
 18990 94b7 D8840000 		.long	0x84d8
 18991 94bb 54       		.byte	0x54
 18992 94bc 11       		.uleb128 0x11
 18993 94bd 00000000 		.long	.LASF1329
 18994 94c1 3E       		.byte	0x3e
 18995 94c2 57       		.byte	0x57
 18996 94c3 D8840000 		.long	0x84d8
 18997 94c7 55       		.byte	0x55
 18998 94c8 11       		.uleb128 0x11
 18999 94c9 00000000 		.long	.LASF1330
 19000 94cd 3E       		.byte	0x3e
GAS LISTING /tmp/ccKUqHDa.s 			page 591


 19001 94ce 5E       		.byte	0x5e
 19002 94cf D8840000 		.long	0x84d8
 19003 94d3 56       		.byte	0x56
 19004 94d4 11       		.uleb128 0x11
 19005 94d5 00000000 		.long	.LASF1331
 19006 94d9 3E       		.byte	0x3e
 19007 94da 5F       		.byte	0x5f
 19008 94db D8840000 		.long	0x84d8
 19009 94df 57       		.byte	0x57
 19010 94e0 11       		.uleb128 0x11
 19011 94e1 00000000 		.long	.LASF1332
 19012 94e5 3E       		.byte	0x3e
 19013 94e6 62       		.byte	0x62
 19014 94e7 D8840000 		.long	0x84d8
 19015 94eb 58       		.byte	0x58
 19016 94ec 11       		.uleb128 0x11
 19017 94ed 00000000 		.long	.LASF1333
 19018 94f1 3E       		.byte	0x3e
 19019 94f2 64       		.byte	0x64
 19020 94f3 D8840000 		.long	0x84d8
 19021 94f7 59       		.byte	0x59
 19022 94f8 11       		.uleb128 0x11
 19023 94f9 00000000 		.long	.LASF1334
 19024 94fd 3E       		.byte	0x3e
 19025 94fe 66       		.byte	0x66
 19026 94ff D8840000 		.long	0x84d8
 19027 9503 5A       		.byte	0x5a
 19028 9504 11       		.uleb128 0x11
 19029 9505 00000000 		.long	.LASF1335
 19030 9509 3E       		.byte	0x3e
 19031 950a 68       		.byte	0x68
 19032 950b D8840000 		.long	0x84d8
 19033 950f 5B       		.byte	0x5b
 19034 9510 11       		.uleb128 0x11
 19035 9511 00000000 		.long	.LASF1336
 19036 9515 3E       		.byte	0x3e
 19037 9516 6F       		.byte	0x6f
 19038 9517 D8840000 		.long	0x84d8
 19039 951b 5C       		.byte	0x5c
 19040 951c 11       		.uleb128 0x11
 19041 951d 00000000 		.long	.LASF1337
 19042 9521 3E       		.byte	0x3e
 19043 9522 70       		.byte	0x70
 19044 9523 D8840000 		.long	0x84d8
 19045 9527 5D       		.byte	0x5d
 19046 9528 00       		.byte	0
 19047 9529 42       		.uleb128 0x42
 19048 952a 00000000 		.long	.LASF1338
 19049 952e 3E       		.byte	0x3e
 19050 952f 7D       		.byte	0x7d
 19051 9530 18850000 		.long	0x8518
 19052 9534 43950000 		.long	0x9543
 19053 9538 13       		.uleb128 0x13
 19054 9539 E5710000 		.long	0x71e5
 19055 953d 13       		.uleb128 0x13
 19056 953e CD840000 		.long	0x84cd
 19057 9542 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 592


 19058 9543 7F       		.uleb128 0x7f
 19059 9544 00000000 		.long	.LASF1339
 19060 9548 3E       		.byte	0x3e
 19061 9549 80       		.byte	0x80
 19062 954a 4E950000 		.long	0x954e
 19063 954e 69       		.uleb128 0x69
 19064 954f 08       		.byte	0x8
 19065 9550 FC930000 		.long	0x93fc
 19066 9554 8001     		.uleb128 0x80
 19067 9556 60950000 		.long	0x9560
 19068 955a 13       		.uleb128 0x13
 19069 955b 16850000 		.long	0x8516
 19070 955f 00       		.byte	0
 19071 9560 69       		.uleb128 0x69
 19072 9561 08       		.byte	0x8
 19073 9562 54950000 		.long	0x9554
 19074 9566 06       		.uleb128 0x6
 19075 9567 00000000 		.long	.LASF1340
 19076 956b 3F       		.byte	0x3f
 19077 956c 20       		.byte	0x20
 19078 956d E5710000 		.long	0x71e5
 19079 9571 6E       		.uleb128 0x6e
 19080 9572 10       		.byte	0x10
 19081 9573 40       		.byte	0x40
 19082 9574 17       		.byte	0x17
 19083 9575 00000000 		.long	.LASF1341
 19084 9579 96950000 		.long	0x9596
 19085 957d 11       		.uleb128 0x11
 19086 957e 00000000 		.long	.LASF1342
 19087 9582 40       		.byte	0x40
 19088 9583 18       		.byte	0x18
 19089 9584 EA840000 		.long	0x84ea
 19090 9588 00       		.byte	0
 19091 9589 11       		.uleb128 0x11
 19092 958a 00000000 		.long	.LASF1343
 19093 958e 40       		.byte	0x40
 19094 958f 19       		.byte	0x19
 19095 9590 188B0000 		.long	0x8b18
 19096 9594 08       		.byte	0x8
 19097 9595 00       		.byte	0
 19098 9596 06       		.uleb128 0x6
 19099 9597 00000000 		.long	.LASF1344
 19100 959b 40       		.byte	0x40
 19101 959c 1A       		.byte	0x1a
 19102 959d 71950000 		.long	0x9571
 19103 95a1 8101     		.uleb128 0x81
 19104 95a3 00000000 		.long	.LASF1544
 19105 95a7 3A       		.byte	0x3a
 19106 95a8 B4       		.byte	0xb4
 19107 95a9 04       		.uleb128 0x4
 19108 95aa 00000000 		.long	.LASF1345
 19109 95ae 18       		.byte	0x18
 19110 95af 3A       		.byte	0x3a
 19111 95b0 BA       		.byte	0xba
 19112 95b1 DA950000 		.long	0x95da
 19113 95b5 11       		.uleb128 0x11
 19114 95b6 00000000 		.long	.LASF1346
GAS LISTING /tmp/ccKUqHDa.s 			page 593


 19115 95ba 3A       		.byte	0x3a
 19116 95bb BB       		.byte	0xbb
 19117 95bc DA950000 		.long	0x95da
 19118 95c0 00       		.byte	0
 19119 95c1 11       		.uleb128 0x11
 19120 95c2 00000000 		.long	.LASF1347
 19121 95c6 3A       		.byte	0x3a
 19122 95c7 BC       		.byte	0xbc
 19123 95c8 E0950000 		.long	0x95e0
 19124 95cc 08       		.byte	0x8
 19125 95cd 11       		.uleb128 0x11
 19126 95ce 00000000 		.long	.LASF1348
 19127 95d2 3A       		.byte	0x3a
 19128 95d3 C0       		.byte	0xc0
 19129 95d4 E5710000 		.long	0x71e5
 19130 95d8 10       		.byte	0x10
 19131 95d9 00       		.byte	0
 19132 95da 69       		.uleb128 0x69
 19133 95db 08       		.byte	0x8
 19134 95dc A9950000 		.long	0x95a9
 19135 95e0 69       		.uleb128 0x69
 19136 95e1 08       		.byte	0x8
 19137 95e2 F9880000 		.long	0x88f9
 19138 95e6 71       		.uleb128 0x71
 19139 95e7 D8840000 		.long	0x84d8
 19140 95eb F6950000 		.long	0x95f6
 19141 95ef 72       		.uleb128 0x72
 19142 95f0 C1840000 		.long	0x84c1
 19143 95f4 00       		.byte	0
 19144 95f5 00       		.byte	0
 19145 95f6 69       		.uleb128 0x69
 19146 95f7 08       		.byte	0x8
 19147 95f8 A1950000 		.long	0x95a1
 19148 95fc 71       		.uleb128 0x71
 19149 95fd D8840000 		.long	0x84d8
 19150 9601 0C960000 		.long	0x960c
 19151 9605 72       		.uleb128 0x72
 19152 9606 C1840000 		.long	0x84c1
 19153 960a 13       		.byte	0x13
 19154 960b 00       		.byte	0
 19155 960c 06       		.uleb128 0x6
 19156 960d 00000000 		.long	.LASF1349
 19157 9611 39       		.byte	0x39
 19158 9612 6F       		.byte	0x6f
 19159 9613 96950000 		.long	0x9596
 19160 9617 5F       		.uleb128 0x5f
 19161 9618 00000000 		.long	.LASF1350
 19162 961c 39       		.byte	0x39
 19163 961d 3503     		.value	0x335
 19164 961f 29960000 		.long	0x9629
 19165 9623 13       		.uleb128 0x13
 19166 9624 29960000 		.long	0x9629
 19167 9628 00       		.byte	0
 19168 9629 69       		.uleb128 0x69
 19169 962a 08       		.byte	0x8
 19170 962b EE880000 		.long	0x88ee
 19171 962f 42       		.uleb128 0x42
GAS LISTING /tmp/ccKUqHDa.s 			page 594


 19172 9630 00000000 		.long	.LASF1351
 19173 9634 39       		.byte	0x39
 19174 9635 EC       		.byte	0xec
 19175 9636 E5710000 		.long	0x71e5
 19176 963a 44960000 		.long	0x9644
 19177 963e 13       		.uleb128 0x13
 19178 963f 29960000 		.long	0x9629
 19179 9643 00       		.byte	0
 19180 9644 60       		.uleb128 0x60
 19181 9645 00000000 		.long	.LASF1352
 19182 9649 39       		.byte	0x39
 19183 964a 3703     		.value	0x337
 19184 964c E5710000 		.long	0x71e5
 19185 9650 5A960000 		.long	0x965a
 19186 9654 13       		.uleb128 0x13
 19187 9655 29960000 		.long	0x9629
 19188 9659 00       		.byte	0
 19189 965a 60       		.uleb128 0x60
 19190 965b 00000000 		.long	.LASF1353
 19191 965f 39       		.byte	0x39
 19192 9660 3903     		.value	0x339
 19193 9662 E5710000 		.long	0x71e5
 19194 9666 70960000 		.long	0x9670
 19195 966a 13       		.uleb128 0x13
 19196 966b 29960000 		.long	0x9629
 19197 966f 00       		.byte	0
 19198 9670 42       		.uleb128 0x42
 19199 9671 00000000 		.long	.LASF1354
 19200 9675 39       		.byte	0x39
 19201 9676 F1       		.byte	0xf1
 19202 9677 E5710000 		.long	0x71e5
 19203 967b 85960000 		.long	0x9685
 19204 967f 13       		.uleb128 0x13
 19205 9680 29960000 		.long	0x9629
 19206 9684 00       		.byte	0
 19207 9685 60       		.uleb128 0x60
 19208 9686 00000000 		.long	.LASF1355
 19209 968a 39       		.byte	0x39
 19210 968b 1702     		.value	0x217
 19211 968d E5710000 		.long	0x71e5
 19212 9691 9B960000 		.long	0x969b
 19213 9695 13       		.uleb128 0x13
 19214 9696 29960000 		.long	0x9629
 19215 969a 00       		.byte	0
 19216 969b 60       		.uleb128 0x60
 19217 969c 00000000 		.long	.LASF1356
 19218 96a0 39       		.byte	0x39
 19219 96a1 1903     		.value	0x319
 19220 96a3 E5710000 		.long	0x71e5
 19221 96a7 B6960000 		.long	0x96b6
 19222 96ab 13       		.uleb128 0x13
 19223 96ac 29960000 		.long	0x9629
 19224 96b0 13       		.uleb128 0x13
 19225 96b1 B6960000 		.long	0x96b6
 19226 96b5 00       		.byte	0
 19227 96b6 69       		.uleb128 0x69
 19228 96b7 08       		.byte	0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 595


 19229 96b8 0C960000 		.long	0x960c
 19230 96bc 60       		.uleb128 0x60
 19231 96bd 00000000 		.long	.LASF1357
 19232 96c1 39       		.byte	0x39
 19233 96c2 7202     		.value	0x272
 19234 96c4 18850000 		.long	0x8518
 19235 96c8 DC960000 		.long	0x96dc
 19236 96cc 13       		.uleb128 0x13
 19237 96cd 18850000 		.long	0x8518
 19238 96d1 13       		.uleb128 0x13
 19239 96d2 E5710000 		.long	0x71e5
 19240 96d6 13       		.uleb128 0x13
 19241 96d7 29960000 		.long	0x9629
 19242 96db 00       		.byte	0
 19243 96dc 60       		.uleb128 0x60
 19244 96dd 00000000 		.long	.LASF1358
 19245 96e1 39       		.byte	0x39
 19246 96e2 0F01     		.value	0x10f
 19247 96e4 29960000 		.long	0x9629
 19248 96e8 F7960000 		.long	0x96f7
 19249 96ec 13       		.uleb128 0x13
 19250 96ed CD840000 		.long	0x84cd
 19251 96f1 13       		.uleb128 0x13
 19252 96f2 CD840000 		.long	0x84cd
 19253 96f6 00       		.byte	0
 19254 96f7 60       		.uleb128 0x60
 19255 96f8 00000000 		.long	.LASF1359
 19256 96fc 39       		.byte	0x39
 19257 96fd C002     		.value	0x2c0
 19258 96ff 26840000 		.long	0x8426
 19259 9703 1C970000 		.long	0x971c
 19260 9707 13       		.uleb128 0x13
 19261 9708 16850000 		.long	0x8516
 19262 970c 13       		.uleb128 0x13
 19263 970d 26840000 		.long	0x8426
 19264 9711 13       		.uleb128 0x13
 19265 9712 26840000 		.long	0x8426
 19266 9716 13       		.uleb128 0x13
 19267 9717 29960000 		.long	0x9629
 19268 971b 00       		.byte	0
 19269 971c 60       		.uleb128 0x60
 19270 971d 00000000 		.long	.LASF1360
 19271 9721 39       		.byte	0x39
 19272 9722 1501     		.value	0x115
 19273 9724 29960000 		.long	0x9629
 19274 9728 3C970000 		.long	0x973c
 19275 972c 13       		.uleb128 0x13
 19276 972d CD840000 		.long	0x84cd
 19277 9731 13       		.uleb128 0x13
 19278 9732 CD840000 		.long	0x84cd
 19279 9736 13       		.uleb128 0x13
 19280 9737 29960000 		.long	0x9629
 19281 973b 00       		.byte	0
 19282 973c 60       		.uleb128 0x60
 19283 973d 00000000 		.long	.LASF1361
 19284 9741 39       		.byte	0x39
 19285 9742 E802     		.value	0x2e8
GAS LISTING /tmp/ccKUqHDa.s 			page 596


 19286 9744 E5710000 		.long	0x71e5
 19287 9748 5C970000 		.long	0x975c
 19288 974c 13       		.uleb128 0x13
 19289 974d 29960000 		.long	0x9629
 19290 9751 13       		.uleb128 0x13
 19291 9752 EC710000 		.long	0x71ec
 19292 9756 13       		.uleb128 0x13
 19293 9757 E5710000 		.long	0x71e5
 19294 975b 00       		.byte	0
 19295 975c 60       		.uleb128 0x60
 19296 975d 00000000 		.long	.LASF1362
 19297 9761 39       		.byte	0x39
 19298 9762 1E03     		.value	0x31e
 19299 9764 E5710000 		.long	0x71e5
 19300 9768 77970000 		.long	0x9777
 19301 976c 13       		.uleb128 0x13
 19302 976d 29960000 		.long	0x9629
 19303 9771 13       		.uleb128 0x13
 19304 9772 77970000 		.long	0x9777
 19305 9776 00       		.byte	0
 19306 9777 69       		.uleb128 0x69
 19307 9778 08       		.byte	0x8
 19308 9779 7D970000 		.long	0x977d
 19309 977d 0B       		.uleb128 0xb
 19310 977e 0C960000 		.long	0x960c
 19311 9782 60       		.uleb128 0x60
 19312 9783 00000000 		.long	.LASF1363
 19313 9787 39       		.byte	0x39
 19314 9788 ED02     		.value	0x2ed
 19315 978a EC710000 		.long	0x71ec
 19316 978e 98970000 		.long	0x9798
 19317 9792 13       		.uleb128 0x13
 19318 9793 29960000 		.long	0x9629
 19319 9797 00       		.byte	0
 19320 9798 60       		.uleb128 0x60
 19321 9799 00000000 		.long	.LASF1364
 19322 979d 39       		.byte	0x39
 19323 979e 1802     		.value	0x218
 19324 97a0 E5710000 		.long	0x71e5
 19325 97a4 AE970000 		.long	0x97ae
 19326 97a8 13       		.uleb128 0x13
 19327 97a9 29960000 		.long	0x9629
 19328 97ad 00       		.byte	0
 19329 97ae 7F       		.uleb128 0x7f
 19330 97af 00000000 		.long	.LASF1365
 19331 97b3 41       		.byte	0x41
 19332 97b4 2D       		.byte	0x2d
 19333 97b5 E5710000 		.long	0x71e5
 19334 97b9 60       		.uleb128 0x60
 19335 97ba 00000000 		.long	.LASF1366
 19336 97be 39       		.byte	0x39
 19337 97bf 7A02     		.value	0x27a
 19338 97c1 18850000 		.long	0x8518
 19339 97c5 CF970000 		.long	0x97cf
 19340 97c9 13       		.uleb128 0x13
 19341 97ca 18850000 		.long	0x8518
 19342 97ce 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 597


 19343 97cf 5F       		.uleb128 0x5f
 19344 97d0 00000000 		.long	.LASF1367
 19345 97d4 39       		.byte	0x39
 19346 97d5 4903     		.value	0x349
 19347 97d7 E1970000 		.long	0x97e1
 19348 97db 13       		.uleb128 0x13
 19349 97dc CD840000 		.long	0x84cd
 19350 97e0 00       		.byte	0
 19351 97e1 42       		.uleb128 0x42
 19352 97e2 00000000 		.long	.LASF1368
 19353 97e6 39       		.byte	0x39
 19354 97e7 B1       		.byte	0xb1
 19355 97e8 E5710000 		.long	0x71e5
 19356 97ec F6970000 		.long	0x97f6
 19357 97f0 13       		.uleb128 0x13
 19358 97f1 CD840000 		.long	0x84cd
 19359 97f5 00       		.byte	0
 19360 97f6 42       		.uleb128 0x42
 19361 97f7 00000000 		.long	.LASF1369
 19362 97fb 39       		.byte	0x39
 19363 97fc B3       		.byte	0xb3
 19364 97fd E5710000 		.long	0x71e5
 19365 9801 10980000 		.long	0x9810
 19366 9805 13       		.uleb128 0x13
 19367 9806 CD840000 		.long	0x84cd
 19368 980a 13       		.uleb128 0x13
 19369 980b CD840000 		.long	0x84cd
 19370 980f 00       		.byte	0
 19371 9810 5F       		.uleb128 0x5f
 19372 9811 00000000 		.long	.LASF1370
 19373 9815 39       		.byte	0x39
 19374 9816 F202     		.value	0x2f2
 19375 9818 22980000 		.long	0x9822
 19376 981c 13       		.uleb128 0x13
 19377 981d 29960000 		.long	0x9629
 19378 9821 00       		.byte	0
 19379 9822 5F       		.uleb128 0x5f
 19380 9823 00000000 		.long	.LASF1371
 19381 9827 39       		.byte	0x39
 19382 9828 4B01     		.value	0x14b
 19383 982a 39980000 		.long	0x9839
 19384 982e 13       		.uleb128 0x13
 19385 982f 29960000 		.long	0x9629
 19386 9833 13       		.uleb128 0x13
 19387 9834 18850000 		.long	0x8518
 19388 9838 00       		.byte	0
 19389 9839 60       		.uleb128 0x60
 19390 983a 00000000 		.long	.LASF1372
 19391 983e 39       		.byte	0x39
 19392 983f 4F01     		.value	0x14f
 19393 9841 E5710000 		.long	0x71e5
 19394 9845 5E980000 		.long	0x985e
 19395 9849 13       		.uleb128 0x13
 19396 984a 29960000 		.long	0x9629
 19397 984e 13       		.uleb128 0x13
 19398 984f 18850000 		.long	0x8518
 19399 9853 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 598


 19400 9854 E5710000 		.long	0x71e5
 19401 9858 13       		.uleb128 0x13
 19402 9859 26840000 		.long	0x8426
 19403 985d 00       		.byte	0
 19404 985e 7F       		.uleb128 0x7f
 19405 985f 00000000 		.long	.LASF1373
 19406 9863 39       		.byte	0x39
 19407 9864 C2       		.byte	0xc2
 19408 9865 29960000 		.long	0x9629
 19409 9869 42       		.uleb128 0x42
 19410 986a 00000000 		.long	.LASF1374
 19411 986e 39       		.byte	0x39
 19412 986f D0       		.byte	0xd0
 19413 9870 18850000 		.long	0x8518
 19414 9874 7E980000 		.long	0x987e
 19415 9878 13       		.uleb128 0x13
 19416 9879 18850000 		.long	0x8518
 19417 987d 00       		.byte	0
 19418 987e 60       		.uleb128 0x60
 19419 987f 00000000 		.long	.LASF1375
 19420 9883 39       		.byte	0x39
 19421 9884 B902     		.value	0x2b9
 19422 9886 E5710000 		.long	0x71e5
 19423 988a 99980000 		.long	0x9899
 19424 988e 13       		.uleb128 0x13
 19425 988f E5710000 		.long	0x71e5
 19426 9893 13       		.uleb128 0x13
 19427 9894 29960000 		.long	0x9629
 19428 9898 00       		.byte	0
 19429 9899 69       		.uleb128 0x69
 19430 989a 08       		.byte	0x8
 19431 989b 2A0A0000 		.long	0xa2a
 19432 989f 69       		.uleb128 0x69
 19433 98a0 08       		.byte	0x8
 19434 98a1 50230000 		.long	0x2350
 19435 98a5 69       		.uleb128 0x69
 19436 98a6 08       		.byte	0x8
 19437 98a7 1E0A0000 		.long	0xa1e
 19438 98ab 69       		.uleb128 0x69
 19439 98ac 08       		.byte	0x8
 19440 98ad 2F0B0000 		.long	0xb2f
 19441 98b1 79       		.uleb128 0x79
 19442 98b2 08       		.byte	0x8
 19443 98b3 2F0B0000 		.long	0xb2f
 19444 98b7 79       		.uleb128 0x79
 19445 98b8 08       		.byte	0x8
 19446 98b9 50230000 		.long	0x2350
 19447 98bd 7B       		.uleb128 0x7b
 19448 98be 08       		.byte	0x8
 19449 98bf 1E0A0000 		.long	0xa1e
 19450 98c3 79       		.uleb128 0x79
 19451 98c4 08       		.byte	0x8
 19452 98c5 1E0A0000 		.long	0xa1e
 19453 98c9 69       		.uleb128 0x69
 19454 98ca 08       		.byte	0x8
 19455 98cb 55230000 		.long	0x2355
 19456 98cf 69       		.uleb128 0x69
GAS LISTING /tmp/ccKUqHDa.s 			page 599


 19457 98d0 08       		.byte	0x8
 19458 98d1 35240000 		.long	0x2435
 19459 98d5 79       		.uleb128 0x79
 19460 98d6 08       		.byte	0x8
 19461 98d7 3A240000 		.long	0x243a
 19462 98db 71       		.uleb128 0x71
 19463 98dc 30000000 		.long	0x30
 19464 98e0 E7980000 		.long	0x98e7
 19465 98e4 8201     		.uleb128 0x82
 19466 98e6 00       		.byte	0
 19467 98e7 69       		.uleb128 0x69
 19468 98e8 08       		.byte	0x8
 19469 98e9 25230000 		.long	0x2325
 19470 98ed 71       		.uleb128 0x71
 19471 98ee 30000000 		.long	0x30
 19472 98f2 FF980000 		.long	0x98ff
 19473 98f6 8301     		.uleb128 0x83
 19474 98f8 C1840000 		.long	0x84c1
 19475 98fc 6F02     		.value	0x26f
 19476 98fe 00       		.byte	0
 19477 98ff 69       		.uleb128 0x69
 19478 9900 08       		.byte	0x8
 19479 9901 B0260000 		.long	0x26b0
 19480 9905 69       		.uleb128 0x69
 19481 9906 08       		.byte	0x8
 19482 9907 0A290000 		.long	0x290a
 19483 990b 69       		.uleb128 0x69
 19484 990c 08       		.byte	0x8
 19485 990d FC280000 		.long	0x28fc
 19486 9911 69       		.uleb128 0x69
 19487 9912 08       		.byte	0x8
 19488 9913 BC2A0000 		.long	0x2abc
 19489 9917 79       		.uleb128 0x79
 19490 9918 08       		.byte	0x8
 19491 9919 BC2A0000 		.long	0x2abc
 19492 991d 79       		.uleb128 0x79
 19493 991e 08       		.byte	0x8
 19494 991f B6710000 		.long	0x71b6
 19495 9923 0B       		.uleb128 0xb
 19496 9924 CD840000 		.long	0x84cd
 19497 9928 69       		.uleb128 0x69
 19498 9929 08       		.byte	0x8
 19499 992a C42C0000 		.long	0x2cc4
 19500 992e 06       		.uleb128 0x6
 19501 992f 00000000 		.long	.LASF1376
 19502 9933 42       		.byte	0x42
 19503 9934 35       		.byte	0x35
 19504 9935 30000000 		.long	0x30
 19505 9939 06       		.uleb128 0x6
 19506 993a 00000000 		.long	.LASF1377
 19507 993e 42       		.byte	0x42
 19508 993f BB       		.byte	0xbb
 19509 9940 44990000 		.long	0x9944
 19510 9944 69       		.uleb128 0x69
 19511 9945 08       		.byte	0x8
 19512 9946 4A990000 		.long	0x994a
 19513 994a 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 600


 19514 994b DF840000 		.long	0x84df
 19515 994f 42       		.uleb128 0x42
 19516 9950 00000000 		.long	.LASF1378
 19517 9954 42       		.byte	0x42
 19518 9955 B0       		.byte	0xb0
 19519 9956 E5710000 		.long	0x71e5
 19520 995a 69990000 		.long	0x9969
 19521 995e 13       		.uleb128 0x13
 19522 995f C88A0000 		.long	0x8ac8
 19523 9963 13       		.uleb128 0x13
 19524 9964 2E990000 		.long	0x992e
 19525 9968 00       		.byte	0
 19526 9969 42       		.uleb128 0x42
 19527 996a 00000000 		.long	.LASF1379
 19528 996e 42       		.byte	0x42
 19529 996f DE       		.byte	0xde
 19530 9970 C88A0000 		.long	0x8ac8
 19531 9974 83990000 		.long	0x9983
 19532 9978 13       		.uleb128 0x13
 19533 9979 C88A0000 		.long	0x8ac8
 19534 997d 13       		.uleb128 0x13
 19535 997e 39990000 		.long	0x9939
 19536 9982 00       		.byte	0
 19537 9983 42       		.uleb128 0x42
 19538 9984 00000000 		.long	.LASF1380
 19539 9988 42       		.byte	0x42
 19540 9989 DB       		.byte	0xdb
 19541 998a 39990000 		.long	0x9939
 19542 998e 98990000 		.long	0x9998
 19543 9992 13       		.uleb128 0x13
 19544 9993 CD840000 		.long	0x84cd
 19545 9997 00       		.byte	0
 19546 9998 42       		.uleb128 0x42
 19547 9999 00000000 		.long	.LASF1381
 19548 999d 42       		.byte	0x42
 19549 999e AC       		.byte	0xac
 19550 999f 2E990000 		.long	0x992e
 19551 99a3 AD990000 		.long	0x99ad
 19552 99a7 13       		.uleb128 0x13
 19553 99a8 CD840000 		.long	0x84cd
 19554 99ac 00       		.byte	0
 19555 99ad 79       		.uleb128 0x79
 19556 99ae 08       		.byte	0x8
 19557 99af 4C2F0000 		.long	0x2f4c
 19558 99b3 0B       		.uleb128 0xb
 19559 99b4 DE710000 		.long	0x71de
 19560 99b8 7F       		.uleb128 0x7f
 19561 99b9 00000000 		.long	.LASF1382
 19562 99bd 35       		.byte	0x35
 19563 99be B7       		.byte	0xb7
 19564 99bf 1E850000 		.long	0x851e
 19565 99c3 42       		.uleb128 0x42
 19566 99c4 00000000 		.long	.LASF1383
 19567 99c8 35       		.byte	0x35
 19568 99c9 BD       		.byte	0xbd
 19569 99ca 0C840000 		.long	0x840c
 19570 99ce DD990000 		.long	0x99dd
GAS LISTING /tmp/ccKUqHDa.s 			page 601


 19571 99d2 13       		.uleb128 0x13
 19572 99d3 29850000 		.long	0x8529
 19573 99d7 13       		.uleb128 0x13
 19574 99d8 29850000 		.long	0x8529
 19575 99dc 00       		.byte	0
 19576 99dd 42       		.uleb128 0x42
 19577 99de 00000000 		.long	.LASF1384
 19578 99e2 35       		.byte	0x35
 19579 99e3 C1       		.byte	0xc1
 19580 99e4 29850000 		.long	0x8529
 19581 99e8 F2990000 		.long	0x99f2
 19582 99ec 13       		.uleb128 0x13
 19583 99ed F2990000 		.long	0x99f2
 19584 99f1 00       		.byte	0
 19585 99f2 69       		.uleb128 0x69
 19586 99f3 08       		.byte	0x8
 19587 99f4 DE8E0000 		.long	0x8ede
 19588 99f8 42       		.uleb128 0x42
 19589 99f9 00000000 		.long	.LASF1385
 19590 99fd 35       		.byte	0x35
 19591 99fe BA       		.byte	0xba
 19592 99ff 29850000 		.long	0x8529
 19593 9a03 0D9A0000 		.long	0x9a0d
 19594 9a07 13       		.uleb128 0x13
 19595 9a08 0D9A0000 		.long	0x9a0d
 19596 9a0c 00       		.byte	0
 19597 9a0d 69       		.uleb128 0x69
 19598 9a0e 08       		.byte	0x8
 19599 9a0f 29850000 		.long	0x8529
 19600 9a13 42       		.uleb128 0x42
 19601 9a14 00000000 		.long	.LASF1386
 19602 9a18 35       		.byte	0x35
 19603 9a19 FF       		.byte	0xff
 19604 9a1a 18850000 		.long	0x8518
 19605 9a1e 289A0000 		.long	0x9a28
 19606 9a22 13       		.uleb128 0x13
 19607 9a23 D38E0000 		.long	0x8ed3
 19608 9a27 00       		.byte	0
 19609 9a28 60       		.uleb128 0x60
 19610 9a29 00000000 		.long	.LASF1387
 19611 9a2d 35       		.byte	0x35
 19612 9a2e 0201     		.value	0x102
 19613 9a30 18850000 		.long	0x8518
 19614 9a34 3E9A0000 		.long	0x9a3e
 19615 9a38 13       		.uleb128 0x13
 19616 9a39 3E9A0000 		.long	0x9a3e
 19617 9a3d 00       		.byte	0
 19618 9a3e 69       		.uleb128 0x69
 19619 9a3f 08       		.byte	0x8
 19620 9a40 449A0000 		.long	0x9a44
 19621 9a44 0B       		.uleb128 0xb
 19622 9a45 29850000 		.long	0x8529
 19623 9a49 42       		.uleb128 0x42
 19624 9a4a 00000000 		.long	.LASF1388
 19625 9a4e 35       		.byte	0x35
 19626 9a4f E9       		.byte	0xe9
 19627 9a50 F2990000 		.long	0x99f2
GAS LISTING /tmp/ccKUqHDa.s 			page 602


 19628 9a54 5E9A0000 		.long	0x9a5e
 19629 9a58 13       		.uleb128 0x13
 19630 9a59 3E9A0000 		.long	0x9a3e
 19631 9a5d 00       		.byte	0
 19632 9a5e 42       		.uleb128 0x42
 19633 9a5f 00000000 		.long	.LASF1389
 19634 9a63 35       		.byte	0x35
 19635 9a64 ED       		.byte	0xed
 19636 9a65 F2990000 		.long	0x99f2
 19637 9a69 739A0000 		.long	0x9a73
 19638 9a6d 13       		.uleb128 0x13
 19639 9a6e 3E9A0000 		.long	0x9a3e
 19640 9a72 00       		.byte	0
 19641 9a73 42       		.uleb128 0x42
 19642 9a74 00000000 		.long	.LASF1390
 19643 9a78 35       		.byte	0x35
 19644 9a79 C7       		.byte	0xc7
 19645 9a7a 26840000 		.long	0x8426
 19646 9a7e 979A0000 		.long	0x9a97
 19647 9a82 13       		.uleb128 0x13
 19648 9a83 18850000 		.long	0x8518
 19649 9a87 13       		.uleb128 0x13
 19650 9a88 26840000 		.long	0x8426
 19651 9a8c 13       		.uleb128 0x13
 19652 9a8d CD840000 		.long	0x84cd
 19653 9a91 13       		.uleb128 0x13
 19654 9a92 D38E0000 		.long	0x8ed3
 19655 9a96 00       		.byte	0
 19656 9a97 69       		.uleb128 0x69
 19657 9a98 08       		.byte	0x8
 19658 9a99 4A740000 		.long	0x744a
 19659 9a9d 79       		.uleb128 0x79
 19660 9a9e 08       		.byte	0x8
 19661 9a9f A39A0000 		.long	0x9aa3
 19662 9aa3 0B       		.uleb128 0xb
 19663 9aa4 18850000 		.long	0x8518
 19664 9aa8 69       		.uleb128 0x69
 19665 9aa9 08       		.byte	0x8
 19666 9aaa 147A0000 		.long	0x7a14
 19667 9aae 79       		.uleb128 0x79
 19668 9aaf 08       		.byte	0x8
 19669 9ab0 4A740000 		.long	0x744a
 19670 9ab4 50       		.uleb128 0x50
 19671 9ab5 00000000 		.long	.LASF1391
 19672 9ab9 04       		.byte	0x4
 19673 9aba 43       		.byte	0x43
 19674 9abb 57       		.byte	0x57
 19675 9abc DF9A0000 		.long	0x9adf
 19676 9ac0 51       		.uleb128 0x51
 19677 9ac1 00000000 		.long	.LASF1392
 19678 9ac5 00       		.sleb128 0
 19679 9ac6 51       		.uleb128 0x51
 19680 9ac7 00000000 		.long	.LASF1393
 19681 9acb 02       		.sleb128 2
 19682 9acc 51       		.uleb128 0x51
 19683 9acd 00000000 		.long	.LASF1394
 19684 9ad1 03       		.sleb128 3
GAS LISTING /tmp/ccKUqHDa.s 			page 603


 19685 9ad2 51       		.uleb128 0x51
 19686 9ad3 00000000 		.long	.LASF1395
 19687 9ad7 04       		.sleb128 4
 19688 9ad8 51       		.uleb128 0x51
 19689 9ad9 00000000 		.long	.LASF1396
 19690 9add 06       		.sleb128 6
 19691 9ade 00       		.byte	0
 19692 9adf 06       		.uleb128 0x6
 19693 9ae0 00000000 		.long	.LASF1391
 19694 9ae4 43       		.byte	0x43
 19695 9ae5 5E       		.byte	0x5e
 19696 9ae6 B49A0000 		.long	0x9ab4
 19697 9aea 06       		.uleb128 0x6
 19698 9aeb 00000000 		.long	.LASF1397
 19699 9aef 43       		.byte	0x43
 19700 9af0 F9       		.byte	0xf9
 19701 9af1 F59A0000 		.long	0x9af5
 19702 9af5 04       		.uleb128 0x4
 19703 9af6 00000000 		.long	.LASF1397
 19704 9afa 20       		.byte	0x20
 19705 9afb 43       		.byte	0x43
 19706 9afc FA       		.byte	0xfa
 19707 9afd 359B0000 		.long	0x9b35
 19708 9b01 11       		.uleb128 0x11
 19709 9b02 00000000 		.long	.LASF1398
 19710 9b06 43       		.byte	0x43
 19711 9b07 FC       		.byte	0xfc
 19712 9b08 C9710000 		.long	0x71c9
 19713 9b0c 00       		.byte	0
 19714 9b0d 29       		.uleb128 0x29
 19715 9b0e 00000000 		.long	.LASF1399
 19716 9b12 43       		.byte	0x43
 19717 9b13 0101     		.value	0x101
 19718 9b15 809B0000 		.long	0x9b80
 19719 9b19 08       		.byte	0x8
 19720 9b1a 29       		.uleb128 0x29
 19721 9b1b 00000000 		.long	.LASF1400
 19722 9b1f 43       		.byte	0x43
 19723 9b20 0701     		.value	0x107
 19724 9b22 809B0000 		.long	0x9b80
 19725 9b26 10       		.byte	0x10
 19726 9b27 29       		.uleb128 0x29
 19727 9b28 00000000 		.long	.LASF1401
 19728 9b2c 43       		.byte	0x43
 19729 9b2d 0901     		.value	0x109
 19730 9b2f 16850000 		.long	0x8516
 19731 9b33 18       		.byte	0x18
 19732 9b34 00       		.byte	0
 19733 9b35 73       		.uleb128 0x73
 19734 9b36 C9710000 		.long	0x71c9
 19735 9b3a 589B0000 		.long	0x9b58
 19736 9b3e 13       		.uleb128 0x13
 19737 9b3f 589B0000 		.long	0x9b58
 19738 9b43 13       		.uleb128 0x13
 19739 9b44 649B0000 		.long	0x9b64
 19740 9b48 13       		.uleb128 0x13
 19741 9b49 6A9B0000 		.long	0x9b6a
GAS LISTING /tmp/ccKUqHDa.s 			page 604


 19742 9b4d 13       		.uleb128 0x13
 19743 9b4e 26840000 		.long	0x8426
 19744 9b52 13       		.uleb128 0x13
 19745 9b53 759B0000 		.long	0x9b75
 19746 9b57 00       		.byte	0
 19747 9b58 69       		.uleb128 0x69
 19748 9b59 08       		.byte	0x8
 19749 9b5a 5E9B0000 		.long	0x9b5e
 19750 9b5e 69       		.uleb128 0x69
 19751 9b5f 08       		.byte	0x8
 19752 9b60 BB710000 		.long	0x71bb
 19753 9b64 69       		.uleb128 0x69
 19754 9b65 08       		.byte	0x8
 19755 9b66 26840000 		.long	0x8426
 19756 9b6a 69       		.uleb128 0x69
 19757 9b6b 08       		.byte	0x8
 19758 9b6c 709B0000 		.long	0x9b70
 19759 9b70 0B       		.uleb128 0xb
 19760 9b71 BB710000 		.long	0x71bb
 19761 9b75 69       		.uleb128 0x69
 19762 9b76 08       		.byte	0x8
 19763 9b77 7B9B0000 		.long	0x9b7b
 19764 9b7b 0B       		.uleb128 0xb
 19765 9b7c F59A0000 		.long	0x9af5
 19766 9b80 69       		.uleb128 0x69
 19767 9b81 08       		.byte	0x8
 19768 9b82 359B0000 		.long	0x9b35
 19769 9b86 4E       		.uleb128 0x4e
 19770 9b87 00000000 		.long	.LASF1402
 19771 9b8b 43       		.byte	0x43
 19772 9b8c 1501     		.value	0x115
 19773 9b8e 929B0000 		.long	0x9b92
 19774 9b92 27       		.uleb128 0x27
 19775 9b93 00000000 		.long	.LASF1402
 19776 9b97 30       		.byte	0x30
 19777 9b98 43       		.byte	0x43
 19778 9b99 1601     		.value	0x116
 19779 9b9b 159C0000 		.long	0x9c15
 19780 9b9f 29       		.uleb128 0x29
 19781 9ba0 00000000 		.long	.LASF1403
 19782 9ba4 43       		.byte	0x43
 19783 9ba5 1901     		.value	0x119
 19784 9ba7 C9710000 		.long	0x71c9
 19785 9bab 00       		.byte	0
 19786 9bac 29       		.uleb128 0x29
 19787 9bad 00000000 		.long	.LASF1404
 19788 9bb1 43       		.byte	0x43
 19789 9bb2 1A01     		.value	0x11a
 19790 9bb4 C9710000 		.long	0x71c9
 19791 9bb8 04       		.byte	0x4
 19792 9bb9 29       		.uleb128 0x29
 19793 9bba 00000000 		.long	.LASF1405
 19794 9bbe 43       		.byte	0x43
 19795 9bbf 1B01     		.value	0x11b
 19796 9bc1 C9710000 		.long	0x71c9
 19797 9bc5 08       		.byte	0x8
 19798 9bc6 29       		.uleb128 0x29
GAS LISTING /tmp/ccKUqHDa.s 			page 605


 19799 9bc7 00000000 		.long	.LASF1406
 19800 9bcb 43       		.byte	0x43
 19801 9bcc 1C01     		.value	0x11c
 19802 9bce C9710000 		.long	0x71c9
 19803 9bd2 0C       		.byte	0xc
 19804 9bd3 29       		.uleb128 0x29
 19805 9bd4 00000000 		.long	.LASF1407
 19806 9bd8 43       		.byte	0x43
 19807 9bd9 1D01     		.value	0x11d
 19808 9bdb C9710000 		.long	0x71c9
 19809 9bdf 10       		.byte	0x10
 19810 9be0 29       		.uleb128 0x29
 19811 9be1 00000000 		.long	.LASF1408
 19812 9be5 43       		.byte	0x43
 19813 9be6 1E01     		.value	0x11e
 19814 9be8 C9710000 		.long	0x71c9
 19815 9bec 14       		.byte	0x14
 19816 9bed 29       		.uleb128 0x29
 19817 9bee 00000000 		.long	.LASF1399
 19818 9bf2 43       		.byte	0x43
 19819 9bf3 2301     		.value	0x123
 19820 9bf5 439C0000 		.long	0x9c43
 19821 9bf9 18       		.byte	0x18
 19822 9bfa 29       		.uleb128 0x29
 19823 9bfb 00000000 		.long	.LASF1409
 19824 9bff 43       		.byte	0x43
 19825 9c00 2901     		.value	0x129
 19826 9c02 439C0000 		.long	0x9c43
 19827 9c06 20       		.byte	0x20
 19828 9c07 29       		.uleb128 0x29
 19829 9c08 00000000 		.long	.LASF1401
 19830 9c0c 43       		.byte	0x43
 19831 9c0d 2B01     		.value	0x12b
 19832 9c0f 16850000 		.long	0x8516
 19833 9c13 28       		.byte	0x28
 19834 9c14 00       		.byte	0
 19835 9c15 73       		.uleb128 0x73
 19836 9c16 C9710000 		.long	0x71c9
 19837 9c1a 389C0000 		.long	0x9c38
 19838 9c1e 13       		.uleb128 0x13
 19839 9c1f 589B0000 		.long	0x9b58
 19840 9c23 13       		.uleb128 0x13
 19841 9c24 649B0000 		.long	0x9b64
 19842 9c28 13       		.uleb128 0x13
 19843 9c29 6A9B0000 		.long	0x9b6a
 19844 9c2d 13       		.uleb128 0x13
 19845 9c2e 26840000 		.long	0x8426
 19846 9c32 13       		.uleb128 0x13
 19847 9c33 389C0000 		.long	0x9c38
 19848 9c37 00       		.byte	0
 19849 9c38 69       		.uleb128 0x69
 19850 9c39 08       		.byte	0x8
 19851 9c3a 3E9C0000 		.long	0x9c3e
 19852 9c3e 0B       		.uleb128 0xb
 19853 9c3f 929B0000 		.long	0x9b92
 19854 9c43 69       		.uleb128 0x69
 19855 9c44 08       		.byte	0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 606


 19856 9c45 159C0000 		.long	0x9c15
 19857 9c49 6E       		.uleb128 0x6e
 19858 9c4a 18       		.byte	0x18
 19859 9c4b 44       		.byte	0x44
 19860 9c4c 27       		.byte	0x27
 19861 9c4d 00000000 		.long	.LASF1410
 19862 9c51 829C0000 		.long	0x9c82
 19863 9c55 6F       		.uleb128 0x6f
 19864 9c56 62756600 		.string	"buf"
 19865 9c5a 44       		.byte	0x44
 19866 9c5b 28       		.byte	0x28
 19867 9c5c 829C0000 		.long	0x9c82
 19868 9c60 00       		.byte	0
 19869 9c61 6F       		.uleb128 0x6f
 19870 9c62 6D617800 		.string	"max"
 19871 9c66 44       		.byte	0x44
 19872 9c67 29       		.byte	0x29
 19873 9c68 29000000 		.long	0x29
 19874 9c6c 08       		.byte	0x8
 19875 9c6d 6F       		.uleb128 0x6f
 19876 9c6e 7700     		.string	"w"
 19877 9c70 44       		.byte	0x44
 19878 9c71 2A       		.byte	0x2a
 19879 9c72 C9710000 		.long	0x71c9
 19880 9c76 0C       		.byte	0xc
 19881 9c77 6F       		.uleb128 0x6f
 19882 9c78 6800     		.string	"h"
 19883 9c7a 44       		.byte	0x44
 19884 9c7b 2A       		.byte	0x2a
 19885 9c7c C9710000 		.long	0x71c9
 19886 9c80 10       		.byte	0x10
 19887 9c81 00       		.byte	0
 19888 9c82 69       		.uleb128 0x69
 19889 9c83 08       		.byte	0x8
 19890 9c84 29000000 		.long	0x29
 19891 9c88 06       		.uleb128 0x6
 19892 9c89 00000000 		.long	.LASF1411
 19893 9c8d 44       		.byte	0x44
 19894 9c8e 2B       		.byte	0x2b
 19895 9c8f 499C0000 		.long	0x9c49
 19896 9c93 6E       		.uleb128 0x6e
 19897 9c94 10       		.byte	0x10
 19898 9c95 44       		.byte	0x44
 19899 9c96 31       		.byte	0x31
 19900 9c97 00000000 		.long	.LASF1412
 19901 9c9b C09C0000 		.long	0x9cc0
 19902 9c9f 6F       		.uleb128 0x6f
 19903 9ca0 62756600 		.string	"buf"
 19904 9ca4 44       		.byte	0x44
 19905 9ca5 32       		.byte	0x32
 19906 9ca6 829C0000 		.long	0x9c82
 19907 9caa 00       		.byte	0
 19908 9cab 6F       		.uleb128 0x6f
 19909 9cac 7700     		.string	"w"
 19910 9cae 44       		.byte	0x44
 19911 9caf 33       		.byte	0x33
 19912 9cb0 C9710000 		.long	0x71c9
GAS LISTING /tmp/ccKUqHDa.s 			page 607


 19913 9cb4 08       		.byte	0x8
 19914 9cb5 6F       		.uleb128 0x6f
 19915 9cb6 6800     		.string	"h"
 19916 9cb8 44       		.byte	0x44
 19917 9cb9 33       		.byte	0x33
 19918 9cba C9710000 		.long	0x71c9
 19919 9cbe 0C       		.byte	0xc
 19920 9cbf 00       		.byte	0
 19921 9cc0 06       		.uleb128 0x6
 19922 9cc1 00000000 		.long	.LASF1413
 19923 9cc5 44       		.byte	0x44
 19924 9cc6 34       		.byte	0x34
 19925 9cc7 939C0000 		.long	0x9c93
 19926 9ccb 6E       		.uleb128 0x6e
 19927 9ccc 10       		.byte	0x10
 19928 9ccd 44       		.byte	0x44
 19929 9cce 3F       		.byte	0x3f
 19930 9ccf 00000000 		.long	.LASF1414
 19931 9cd3 F09C0000 		.long	0x9cf0
 19932 9cd7 11       		.uleb128 0x11
 19933 9cd8 00000000 		.long	.LASF1415
 19934 9cdc 44       		.byte	0x44
 19935 9cdd 40       		.byte	0x40
 19936 9cde 6A9B0000 		.long	0x9b6a
 19937 9ce2 00       		.byte	0
 19938 9ce3 11       		.uleb128 0x11
 19939 9ce4 00000000 		.long	.LASF1416
 19940 9ce8 44       		.byte	0x44
 19941 9ce9 41       		.byte	0x41
 19942 9cea 26840000 		.long	0x8426
 19943 9cee 08       		.byte	0x8
 19944 9cef 00       		.byte	0
 19945 9cf0 06       		.uleb128 0x6
 19946 9cf1 00000000 		.long	.LASF1417
 19947 9cf5 44       		.byte	0x44
 19948 9cf6 42       		.byte	0x42
 19949 9cf7 CB9C0000 		.long	0x9ccb
 19950 9cfb 6D       		.uleb128 0x6d
 19951 9cfc 01       		.byte	0x1
 19952 9cfd 25       		.byte	0x25
 19953 9cfe 37000000 		.long	0x37
 19954 9d02 69       		.uleb128 0x69
 19955 9d03 08       		.byte	0x8
 19956 9d04 089D0000 		.long	0x9d08
 19957 9d08 0B       		.uleb128 0xb
 19958 9d09 29000000 		.long	0x29
 19959 9d0d 79       		.uleb128 0x79
 19960 9d0e 08       		.byte	0x8
 19961 9d0f 29000000 		.long	0x29
 19962 9d13 79       		.uleb128 0x79
 19963 9d14 08       		.byte	0x8
 19964 9d15 089D0000 		.long	0x9d08
 19965 9d19 69       		.uleb128 0x69
 19966 9d1a 08       		.byte	0x8
 19967 9d1b 197A0000 		.long	0x7a19
 19968 9d1f 79       		.uleb128 0x79
 19969 9d20 08       		.byte	0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 608


 19970 9d21 5A7B0000 		.long	0x7b5a
 19971 9d25 69       		.uleb128 0x69
 19972 9d26 08       		.byte	0x8
 19973 9d27 5A7B0000 		.long	0x7b5a
 19974 9d2b 69       		.uleb128 0x69
 19975 9d2c 08       		.byte	0x8
 19976 9d2d B7300000 		.long	0x30b7
 19977 9d31 79       		.uleb128 0x79
 19978 9d32 08       		.byte	0x8
 19979 9d33 59310000 		.long	0x3159
 19980 9d37 79       		.uleb128 0x79
 19981 9d38 08       		.byte	0x8
 19982 9d39 6A310000 		.long	0x316a
 19983 9d3d 69       		.uleb128 0x69
 19984 9d3e 08       		.byte	0x8
 19985 9d3f F1310000 		.long	0x31f1
 19986 9d43 79       		.uleb128 0x79
 19987 9d44 08       		.byte	0x8
 19988 9d45 B7300000 		.long	0x30b7
 19989 9d49 79       		.uleb128 0x79
 19990 9d4a 08       		.byte	0x8
 19991 9d4b 867B0000 		.long	0x7b86
 19992 9d4f 79       		.uleb128 0x79
 19993 9d50 08       		.byte	0x8
 19994 9d51 B27B0000 		.long	0x7bb2
 19995 9d55 69       		.uleb128 0x69
 19996 9d56 08       		.byte	0x8
 19997 9d57 E9330000 		.long	0x33e9
 19998 9d5b 79       		.uleb128 0x79
 19999 9d5c 08       		.byte	0x8
 20000 9d5d A6340000 		.long	0x34a6
 20001 9d61 7B       		.uleb128 0x7b
 20002 9d62 08       		.byte	0x8
 20003 9d63 AB340000 		.long	0x34ab
 20004 9d67 79       		.uleb128 0x79
 20005 9d68 08       		.byte	0x8
 20006 9d69 E9330000 		.long	0x33e9
 20007 9d6d 79       		.uleb128 0x79
 20008 9d6e 08       		.byte	0x8
 20009 9d6f AB340000 		.long	0x34ab
 20010 9d73 69       		.uleb128 0x69
 20011 9d74 08       		.byte	0x8
 20012 9d75 DD330000 		.long	0x33dd
 20013 9d79 69       		.uleb128 0x69
 20014 9d7a 08       		.byte	0x8
 20015 9d7b 75360000 		.long	0x3675
 20016 9d7f 79       		.uleb128 0x79
 20017 9d80 08       		.byte	0x8
 20018 9d81 53350000 		.long	0x3553
 20019 9d85 7B       		.uleb128 0x7b
 20020 9d86 08       		.byte	0x8
 20021 9d87 DD330000 		.long	0x33dd
 20022 9d8b 69       		.uleb128 0x69
 20023 9d8c 08       		.byte	0x8
 20024 9d8d 7A360000 		.long	0x367a
 20025 9d91 79       		.uleb128 0x79
 20026 9d92 08       		.byte	0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 609


 20027 9d93 5A370000 		.long	0x375a
 20028 9d97 79       		.uleb128 0x79
 20029 9d98 08       		.byte	0x8
 20030 9d99 A6370000 		.long	0x37a6
 20031 9d9d 79       		.uleb128 0x79
 20032 9d9e 08       		.byte	0x8
 20033 9d9f 3F400000 		.long	0x403f
 20034 9da3 7B       		.uleb128 0x7b
 20035 9da4 08       		.byte	0x8
 20036 9da5 7A360000 		.long	0x367a
 20037 9da9 79       		.uleb128 0x79
 20038 9daa 08       		.byte	0x8
 20039 9dab 7A360000 		.long	0x367a
 20040 9daf 69       		.uleb128 0x69
 20041 9db0 08       		.byte	0x8
 20042 9db1 3F400000 		.long	0x403f
 20043 9db5 7B       		.uleb128 0x7b
 20044 9db6 08       		.byte	0x8
 20045 9db7 B0360000 		.long	0x36b0
 20046 9dbb 69       		.uleb128 0x69
 20047 9dbc 08       		.byte	0x8
 20048 9dbd 44400000 		.long	0x4044
 20049 9dc1 69       		.uleb128 0x69
 20050 9dc2 08       		.byte	0x8
 20051 9dc3 24410000 		.long	0x4124
 20052 9dc7 79       		.uleb128 0x79
 20053 9dc8 08       		.byte	0x8
 20054 9dc9 BB710000 		.long	0x71bb
 20055 9dcd 79       		.uleb128 0x79
 20056 9dce 08       		.byte	0x8
 20057 9dcf 709B0000 		.long	0x9b70
 20058 9dd3 69       		.uleb128 0x69
 20059 9dd4 08       		.byte	0x8
 20060 9dd5 797C0000 		.long	0x7c79
 20061 9dd9 79       		.uleb128 0x79
 20062 9dda 08       		.byte	0x8
 20063 9ddb BA7D0000 		.long	0x7dba
 20064 9ddf 69       		.uleb128 0x69
 20065 9de0 08       		.byte	0x8
 20066 9de1 BA7D0000 		.long	0x7dba
 20067 9de5 69       		.uleb128 0x69
 20068 9de6 08       		.byte	0x8
 20069 9de7 29410000 		.long	0x4129
 20070 9deb 79       		.uleb128 0x79
 20071 9dec 08       		.byte	0x8
 20072 9ded CB410000 		.long	0x41cb
 20073 9df1 79       		.uleb128 0x79
 20074 9df2 08       		.byte	0x8
 20075 9df3 DC410000 		.long	0x41dc
 20076 9df7 69       		.uleb128 0x69
 20077 9df8 08       		.byte	0x8
 20078 9df9 63420000 		.long	0x4263
 20079 9dfd 79       		.uleb128 0x79
 20080 9dfe 08       		.byte	0x8
 20081 9dff 29410000 		.long	0x4129
 20082 9e03 79       		.uleb128 0x79
 20083 9e04 08       		.byte	0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 610


 20084 9e05 E67D0000 		.long	0x7de6
 20085 9e09 79       		.uleb128 0x79
 20086 9e0a 08       		.byte	0x8
 20087 9e0b 127E0000 		.long	0x7e12
 20088 9e0f 69       		.uleb128 0x69
 20089 9e10 08       		.byte	0x8
 20090 9e11 5B440000 		.long	0x445b
 20091 9e15 79       		.uleb128 0x79
 20092 9e16 08       		.byte	0x8
 20093 9e17 18450000 		.long	0x4518
 20094 9e1b 7B       		.uleb128 0x7b
 20095 9e1c 08       		.byte	0x8
 20096 9e1d 1D450000 		.long	0x451d
 20097 9e21 79       		.uleb128 0x79
 20098 9e22 08       		.byte	0x8
 20099 9e23 5B440000 		.long	0x445b
 20100 9e27 79       		.uleb128 0x79
 20101 9e28 08       		.byte	0x8
 20102 9e29 1D450000 		.long	0x451d
 20103 9e2d 69       		.uleb128 0x69
 20104 9e2e 08       		.byte	0x8
 20105 9e2f 4F440000 		.long	0x444f
 20106 9e33 69       		.uleb128 0x69
 20107 9e34 08       		.byte	0x8
 20108 9e35 E7460000 		.long	0x46e7
 20109 9e39 79       		.uleb128 0x79
 20110 9e3a 08       		.byte	0x8
 20111 9e3b C5450000 		.long	0x45c5
 20112 9e3f 7B       		.uleb128 0x7b
 20113 9e40 08       		.byte	0x8
 20114 9e41 4F440000 		.long	0x444f
 20115 9e45 69       		.uleb128 0x69
 20116 9e46 08       		.byte	0x8
 20117 9e47 EC460000 		.long	0x46ec
 20118 9e4b 79       		.uleb128 0x79
 20119 9e4c 08       		.byte	0x8
 20120 9e4d CC470000 		.long	0x47cc
 20121 9e51 79       		.uleb128 0x79
 20122 9e52 08       		.byte	0x8
 20123 9e53 18480000 		.long	0x4818
 20124 9e57 79       		.uleb128 0x79
 20125 9e58 08       		.byte	0x8
 20126 9e59 B1500000 		.long	0x50b1
 20127 9e5d 7B       		.uleb128 0x7b
 20128 9e5e 08       		.byte	0x8
 20129 9e5f EC460000 		.long	0x46ec
 20130 9e63 79       		.uleb128 0x79
 20131 9e64 08       		.byte	0x8
 20132 9e65 EC460000 		.long	0x46ec
 20133 9e69 69       		.uleb128 0x69
 20134 9e6a 08       		.byte	0x8
 20135 9e6b B1500000 		.long	0x50b1
 20136 9e6f 7B       		.uleb128 0x7b
 20137 9e70 08       		.byte	0x8
 20138 9e71 22470000 		.long	0x4722
 20139 9e75 69       		.uleb128 0x69
 20140 9e76 08       		.byte	0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 611


 20141 9e77 B6500000 		.long	0x50b6
 20142 9e7b 69       		.uleb128 0x69
 20143 9e7c 08       		.byte	0x8
 20144 9e7d 96510000 		.long	0x5196
 20145 9e81 71       		.uleb128 0x71
 20146 9e82 919E0000 		.long	0x9e91
 20147 9e86 919E0000 		.long	0x9e91
 20148 9e8a 72       		.uleb128 0x72
 20149 9e8b C1840000 		.long	0x84c1
 20150 9e8f 04       		.byte	0x4
 20151 9e90 00       		.byte	0
 20152 9e91 69       		.uleb128 0x69
 20153 9e92 08       		.byte	0x8
 20154 9e93 889C0000 		.long	0x9c88
 20155 9e97 79       		.uleb128 0x79
 20156 9e98 08       		.byte	0x8
 20157 9e99 919E0000 		.long	0x9e91
 20158 9e9d 79       		.uleb128 0x79
 20159 9e9e 08       		.byte	0x8
 20160 9e9f 819E0000 		.long	0x9e81
 20161 9ea3 69       		.uleb128 0x69
 20162 9ea4 08       		.byte	0x8
 20163 9ea5 FC510000 		.long	0x51fc
 20164 9ea9 69       		.uleb128 0x69
 20165 9eaa 08       		.byte	0x8
 20166 9eab 1D520000 		.long	0x521d
 20167 9eaf 79       		.uleb128 0x79
 20168 9eb0 08       		.byte	0x8
 20169 9eb1 FC510000 		.long	0x51fc
 20170 9eb5 79       		.uleb128 0x79
 20171 9eb6 08       		.byte	0x8
 20172 9eb7 1D520000 		.long	0x521d
 20173 9ebb 69       		.uleb128 0x69
 20174 9ebc 08       		.byte	0x8
 20175 9ebd E4510000 		.long	0x51e4
 20176 9ec1 79       		.uleb128 0x79
 20177 9ec2 08       		.byte	0x8
 20178 9ec3 E4510000 		.long	0x51e4
 20179 9ec7 69       		.uleb128 0x69
 20180 9ec8 08       		.byte	0x8
 20181 9ec9 B0550000 		.long	0x55b0
 20182 9ecd 69       		.uleb128 0x69
 20183 9ece 08       		.byte	0x8
 20184 9ecf C2550000 		.long	0x55c2
 20185 9ed3 69       		.uleb128 0x69
 20186 9ed4 08       		.byte	0x8
 20187 9ed5 45560000 		.long	0x5645
 20188 9ed9 69       		.uleb128 0x69
 20189 9eda 08       		.byte	0x8
 20190 9edb B5550000 		.long	0x55b5
 20191 9edf 79       		.uleb128 0x79
 20192 9ee0 08       		.byte	0x8
 20193 9ee1 45560000 		.long	0x5645
 20194 9ee5 69       		.uleb128 0x69
 20195 9ee6 08       		.byte	0x8
 20196 9ee7 F7570000 		.long	0x57f7
 20197 9eeb 69       		.uleb128 0x69
GAS LISTING /tmp/ccKUqHDa.s 			page 612


 20198 9eec 08       		.byte	0x8
 20199 9eed FC570000 		.long	0x57fc
 20200 9ef1 69       		.uleb128 0x69
 20201 9ef2 08       		.byte	0x8
 20202 9ef3 2E590000 		.long	0x592e
 20203 9ef7 79       		.uleb128 0x79
 20204 9ef8 08       		.byte	0x8
 20205 9ef9 FC570000 		.long	0x57fc
 20206 9efd 79       		.uleb128 0x79
 20207 9efe 08       		.byte	0x8
 20208 9eff 2E590000 		.long	0x592e
 20209 9f03 69       		.uleb128 0x69
 20210 9f04 08       		.byte	0x8
 20211 9f05 D97E0000 		.long	0x7ed9
 20212 9f09 79       		.uleb128 0x79
 20213 9f0a 08       		.byte	0x8
 20214 9f0b 1A800000 		.long	0x801a
 20215 9f0f 69       		.uleb128 0x69
 20216 9f10 08       		.byte	0x8
 20217 9f11 1A800000 		.long	0x801a
 20218 9f15 69       		.uleb128 0x69
 20219 9f16 08       		.byte	0x8
 20220 9f17 33590000 		.long	0x5933
 20221 9f1b 79       		.uleb128 0x79
 20222 9f1c 08       		.byte	0x8
 20223 9f1d D5590000 		.long	0x59d5
 20224 9f21 79       		.uleb128 0x79
 20225 9f22 08       		.byte	0x8
 20226 9f23 E6590000 		.long	0x59e6
 20227 9f27 69       		.uleb128 0x69
 20228 9f28 08       		.byte	0x8
 20229 9f29 6D5A0000 		.long	0x5a6d
 20230 9f2d 79       		.uleb128 0x79
 20231 9f2e 08       		.byte	0x8
 20232 9f2f 33590000 		.long	0x5933
 20233 9f33 79       		.uleb128 0x79
 20234 9f34 08       		.byte	0x8
 20235 9f35 46800000 		.long	0x8046
 20236 9f39 79       		.uleb128 0x79
 20237 9f3a 08       		.byte	0x8
 20238 9f3b 72800000 		.long	0x8072
 20239 9f3f 69       		.uleb128 0x69
 20240 9f40 08       		.byte	0x8
 20241 9f41 655C0000 		.long	0x5c65
 20242 9f45 79       		.uleb128 0x79
 20243 9f46 08       		.byte	0x8
 20244 9f47 225D0000 		.long	0x5d22
 20245 9f4b 7B       		.uleb128 0x7b
 20246 9f4c 08       		.byte	0x8
 20247 9f4d 275D0000 		.long	0x5d27
 20248 9f51 79       		.uleb128 0x79
 20249 9f52 08       		.byte	0x8
 20250 9f53 655C0000 		.long	0x5c65
 20251 9f57 79       		.uleb128 0x79
 20252 9f58 08       		.byte	0x8
 20253 9f59 275D0000 		.long	0x5d27
 20254 9f5d 69       		.uleb128 0x69
GAS LISTING /tmp/ccKUqHDa.s 			page 613


 20255 9f5e 08       		.byte	0x8
 20256 9f5f 595C0000 		.long	0x5c59
 20257 9f63 69       		.uleb128 0x69
 20258 9f64 08       		.byte	0x8
 20259 9f65 F15E0000 		.long	0x5ef1
 20260 9f69 79       		.uleb128 0x79
 20261 9f6a 08       		.byte	0x8
 20262 9f6b CF5D0000 		.long	0x5dcf
 20263 9f6f 7B       		.uleb128 0x7b
 20264 9f70 08       		.byte	0x8
 20265 9f71 595C0000 		.long	0x5c59
 20266 9f75 69       		.uleb128 0x69
 20267 9f76 08       		.byte	0x8
 20268 9f77 F65E0000 		.long	0x5ef6
 20269 9f7b 79       		.uleb128 0x79
 20270 9f7c 08       		.byte	0x8
 20271 9f7d D65F0000 		.long	0x5fd6
 20272 9f81 79       		.uleb128 0x79
 20273 9f82 08       		.byte	0x8
 20274 9f83 22600000 		.long	0x6022
 20275 9f87 79       		.uleb128 0x79
 20276 9f88 08       		.byte	0x8
 20277 9f89 BB680000 		.long	0x68bb
 20278 9f8d 7B       		.uleb128 0x7b
 20279 9f8e 08       		.byte	0x8
 20280 9f8f F65E0000 		.long	0x5ef6
 20281 9f93 79       		.uleb128 0x79
 20282 9f94 08       		.byte	0x8
 20283 9f95 F65E0000 		.long	0x5ef6
 20284 9f99 69       		.uleb128 0x69
 20285 9f9a 08       		.byte	0x8
 20286 9f9b BB680000 		.long	0x68bb
 20287 9f9f 7B       		.uleb128 0x7b
 20288 9fa0 08       		.byte	0x8
 20289 9fa1 2C5F0000 		.long	0x5f2c
 20290 9fa5 69       		.uleb128 0x69
 20291 9fa6 08       		.byte	0x8
 20292 9fa7 C0680000 		.long	0x68c0
 20293 9fab 69       		.uleb128 0x69
 20294 9fac 08       		.byte	0x8
 20295 9fad A0690000 		.long	0x69a0
 20296 9fb1 69       		.uleb128 0x69
 20297 9fb2 08       		.byte	0x8
 20298 9fb3 2F810000 		.long	0x812f
 20299 9fb7 79       		.uleb128 0x79
 20300 9fb8 08       		.byte	0x8
 20301 9fb9 BD9F0000 		.long	0x9fbd
 20302 9fbd 0B       		.uleb128 0xb
 20303 9fbe EB9E0000 		.long	0x9eeb
 20304 9fc2 69       		.uleb128 0x69
 20305 9fc3 08       		.byte	0x8
 20306 9fc4 53830000 		.long	0x8353
 20307 9fc8 79       		.uleb128 0x79
 20308 9fc9 08       		.byte	0x8
 20309 9fca 2F810000 		.long	0x812f
 20310 9fce 7B       		.uleb128 0x7b
 20311 9fcf 08       		.byte	0x8
GAS LISTING /tmp/ccKUqHDa.s 			page 614


 20312 9fd0 FC570000 		.long	0x57fc
 20313 9fd4 7B       		.uleb128 0x7b
 20314 9fd5 08       		.byte	0x8
 20315 9fd6 29000000 		.long	0x29
 20316 9fda 0B       		.uleb128 0xb
 20317 9fdb DF9F0000 		.long	0x9fdf
 20318 9fdf 79       		.uleb128 0x79
 20319 9fe0 08       		.byte	0x8
 20320 9fe1 B0260000 		.long	0x26b0
 20321 9fe5 69       		.uleb128 0x69
 20322 9fe6 08       		.byte	0x8
 20323 9fe7 C7240000 		.long	0x24c7
 20324 9feb 69       		.uleb128 0x69
 20325 9fec 08       		.byte	0x8
 20326 9fed 64250000 		.long	0x2564
 20327 9ff1 69       		.uleb128 0x69
 20328 9ff2 08       		.byte	0x8
 20329 9ff3 69760000 		.long	0x7669
 20330 9ff7 79       		.uleb128 0x79
 20331 9ff8 08       		.byte	0x8
 20332 9ff9 23990000 		.long	0x9923
 20333 9ffd 69       		.uleb128 0x69
 20334 9ffe 08       		.byte	0x8
 20335 9fff 58830000 		.long	0x8358
 20336 a003 79       		.uleb128 0x79
 20337 a004 08       		.byte	0x8
 20338 a005 69760000 		.long	0x7669
 20339 a009 69       		.uleb128 0x69
 20340 a00a 08       		.byte	0x8
 20341 a00b 1FC50000 		.long	0xc51f
 20342 a00f 69       		.uleb128 0x69
 20343 a010 08       		.byte	0x8
 20344 a011 57C50000 		.long	0xc557
 20345 a015 73       		.uleb128 0x73
 20346 a016 29000000 		.long	0x29
 20347 a01a 24A00000 		.long	0xa024
 20348 a01e 13       		.uleb128 0x13
 20349 a01f 29000000 		.long	0x29
 20350 a023 00       		.byte	0
 20351 a024 69       		.uleb128 0x69
 20352 a025 08       		.byte	0x8
 20353 a026 15A00000 		.long	0xa015
 20354 a02a 69       		.uleb128 0x69
 20355 a02b 08       		.byte	0x8
 20356 a02c E4C50000 		.long	0xc5e4
 20357 a030 69       		.uleb128 0x69
 20358 a031 08       		.byte	0x8
 20359 a032 1CC60000 		.long	0xc61c
 20360 a036 69       		.uleb128 0x69
 20361 a037 08       		.byte	0x8
 20362 a038 B3C60000 		.long	0xc6b3
 20363 a03c 69       		.uleb128 0x69
 20364 a03d 08       		.byte	0x8
 20365 a03e EBC60000 		.long	0xc6eb
 20366 a042 8401     		.uleb128 0x84
 20367 a044 E30C0000 		.long	0xce3
 20368 a048 03       		.byte	0x3
GAS LISTING /tmp/ccKUqHDa.s 			page 615


 20369 a049 51A00000 		.long	0xa051
 20370 a04d 5CA00000 		.long	0xa05c
 20371 a051 8501     		.uleb128 0x85
 20372 a053 00000000 		.long	.LASF1418
 20373 a057 5CA00000 		.long	0xa05c
 20374 a05b 00       		.byte	0
 20375 a05c 0B       		.uleb128 0xb
 20376 a05d 9F980000 		.long	0x989f
 20377 a061 69       		.uleb128 0x69
 20378 a062 08       		.byte	0x8
 20379 a063 4F6B0000 		.long	0x6b4f
 20380 a067 8401     		.uleb128 0x84
 20381 a069 FF6A0000 		.long	0x6aff
 20382 a06d 03       		.byte	0x3
 20383 a06e 76A00000 		.long	0xa076
 20384 a072 81A00000 		.long	0xa081
 20385 a076 8501     		.uleb128 0x85
 20386 a078 00000000 		.long	.LASF1418
 20387 a07c 81A00000 		.long	0xa081
 20388 a080 00       		.byte	0
 20389 a081 0B       		.uleb128 0xb
 20390 a082 61A00000 		.long	0xa061
 20391 a086 8601     		.uleb128 0x86
 20392 a088 00000000 		.long	.LASF1419
 20393 a08c 45       		.byte	0x45
 20394 a08d F7       		.byte	0xf7
 20395 a08e E5710000 		.long	0x71e5
 20396 a092 03       		.byte	0x3
 20397 a093 A7A00000 		.long	0xa0a7
 20398 a097 8701     		.uleb128 0x87
 20399 a099 8801     		.uleb128 0x88
 20400 a09b 00000000 		.long	.LASF1423
 20401 a09f 45       		.byte	0x45
 20402 a0a0 F9       		.byte	0xf9
 20403 a0a1 A7A00000 		.long	0xa0a7
 20404 a0a5 00       		.byte	0
 20405 a0a6 00       		.byte	0
 20406 a0a7 0B       		.uleb128 0xb
 20407 a0a8 16850000 		.long	0x8516
 20408 a0ac 69       		.uleb128 0x69
 20409 a0ad 08       		.byte	0x8
 20410 a0ae B2A00000 		.long	0xa0b2
 20411 a0b2 8901     		.uleb128 0x89
 20412 a0b4 66950000 		.long	0x9566
 20413 a0b8 8A01     		.uleb128 0x8a
 20414 a0ba 8D830000 		.long	0x838d
 20415 a0be 03       		.byte	0x3
 20416 a0bf DCA00000 		.long	0xa0dc
 20417 a0c3 8B01     		.uleb128 0x8b
 20418 a0c5 00000000 		.long	.LASF1421
 20419 a0c9 03       		.byte	0x3
 20420 a0ca 30       		.byte	0x30
 20421 a0cb ACA00000 		.long	0xa0ac
 20422 a0cf 8B01     		.uleb128 0x8b
 20423 a0d1 00000000 		.long	.LASF1422
 20424 a0d5 03       		.byte	0x3
 20425 a0d6 30       		.byte	0x30
GAS LISTING /tmp/ccKUqHDa.s 			page 616


 20426 a0d7 E5710000 		.long	0x71e5
 20427 a0db 00       		.byte	0
 20428 a0dc 69       		.uleb128 0x69
 20429 a0dd 08       		.byte	0x8
 20430 a0de 66950000 		.long	0x9566
 20431 a0e2 8A01     		.uleb128 0x8a
 20432 a0e4 A7830000 		.long	0x83a7
 20433 a0e8 03       		.byte	0x3
 20434 a0e9 15A10000 		.long	0xa115
 20435 a0ed 8B01     		.uleb128 0x8b
 20436 a0ef 00000000 		.long	.LASF1421
 20437 a0f3 03       		.byte	0x3
 20438 a0f4 41       		.byte	0x41
 20439 a0f5 DCA00000 		.long	0xa0dc
 20440 a0f9 8B01     		.uleb128 0x8b
 20441 a0fb 00000000 		.long	.LASF1422
 20442 a0ff 03       		.byte	0x3
 20443 a100 41       		.byte	0x41
 20444 a101 E5710000 		.long	0x71e5
 20445 a105 8701     		.uleb128 0x87
 20446 a107 8801     		.uleb128 0x88
 20447 a109 00000000 		.long	.LASF1424
 20448 a10d 03       		.byte	0x3
 20449 a10e 43       		.byte	0x43
 20450 a10f 66950000 		.long	0x9566
 20451 a113 00       		.byte	0
 20452 a114 00       		.byte	0
 20453 a115 8A01     		.uleb128 0x8a
 20454 a117 620B0000 		.long	0xb62
 20455 a11b 03       		.byte	0x3
 20456 a11c 30A10000 		.long	0xa130
 20457 a120 8701     		.uleb128 0x87
 20458 a122 8C01     		.uleb128 0x8c
 20459 a124 5F5F7000 		.string	"__p"
 20460 a128 02       		.byte	0x2
 20461 a129 BA       		.byte	0xba
 20462 a12a 16850000 		.long	0x8516
 20463 a12e 00       		.byte	0
 20464 a12f 00       		.byte	0
 20465 a130 8A01     		.uleb128 0x8a
 20466 a132 C1830000 		.long	0x83c1
 20467 a136 03       		.byte	0x3
 20468 a137 54A10000 		.long	0xa154
 20469 a13b 8B01     		.uleb128 0x8b
 20470 a13d 00000000 		.long	.LASF1421
 20471 a141 03       		.byte	0x3
 20472 a142 4E       		.byte	0x4e
 20473 a143 DCA00000 		.long	0xa0dc
 20474 a147 8B01     		.uleb128 0x8b
 20475 a149 00000000 		.long	.LASF1422
 20476 a14d 03       		.byte	0x3
 20477 a14e 4E       		.byte	0x4e
 20478 a14f E5710000 		.long	0x71e5
 20479 a153 00       		.byte	0
 20480 a154 8401     		.uleb128 0x84
 20481 a156 630C0000 		.long	0xc63
 20482 a15a 03       		.byte	0x3
GAS LISTING /tmp/ccKUqHDa.s 			page 617


 20483 a15b 63A10000 		.long	0xa163
 20484 a15f 7AA10000 		.long	0xa17a
 20485 a163 8501     		.uleb128 0x85
 20486 a165 00000000 		.long	.LASF1418
 20487 a169 7AA10000 		.long	0xa17a
 20488 a16d 8D01     		.uleb128 0x8d
 20489 a16f 5F5F6100 		.string	"__a"
 20490 a173 02       		.byte	0x2
 20491 a174 ED       		.byte	0xed
 20492 a175 7FA10000 		.long	0xa17f
 20493 a179 00       		.byte	0
 20494 a17a 0B       		.uleb128 0xb
 20495 a17b AB980000 		.long	0x98ab
 20496 a17f 0B       		.uleb128 0xb
 20497 a180 F6930000 		.long	0x93f6
 20498 a184 8E01     		.uleb128 0x8e
 20499 a186 00000000 		.long	.LASF1425
 20500 a18a 15       		.byte	0x15
 20501 a18b 92       		.byte	0x92
 20502 a18c 16850000 		.long	0x8516
 20503 a190 03       		.byte	0x3
 20504 a191 A7A10000 		.long	0xa1a7
 20505 a195 13       		.uleb128 0x13
 20506 a196 DB070000 		.long	0x7db
 20507 a19a 8D01     		.uleb128 0x8d
 20508 a19c 5F5F7000 		.string	"__p"
 20509 a1a0 15       		.byte	0x15
 20510 a1a1 92       		.byte	0x92
 20511 a1a2 16850000 		.long	0x8516
 20512 a1a6 00       		.byte	0
 20513 a1a7 8F01     		.uleb128 0x8f
 20514 a1a9 00000000 		.long	.LASF1426
 20515 a1ad 15       		.byte	0x15
 20516 a1ae 98       		.byte	0x98
 20517 a1af 03       		.byte	0x3
 20518 a1b0 BFA10000 		.long	0xa1bf
 20519 a1b4 13       		.uleb128 0x13
 20520 a1b5 16850000 		.long	0x8516
 20521 a1b9 13       		.uleb128 0x13
 20522 a1ba 16850000 		.long	0x8516
 20523 a1be 00       		.byte	0
 20524 a1bf 8A01     		.uleb128 0x8a
 20525 a1c1 546B0000 		.long	0x6b54
 20526 a1c5 03       		.byte	0x3
 20527 a1c6 E3A10000 		.long	0xa1e3
 20528 a1ca 8D01     		.uleb128 0x8d
 20529 a1cc 5F5F6100 		.string	"__a"
 20530 a1d0 1F       		.byte	0x1f
 20531 a1d1 9D       		.byte	0x9d
 20532 a1d2 672C0000 		.long	0x2c67
 20533 a1d6 8D01     		.uleb128 0x8d
 20534 a1d8 5F5F6200 		.string	"__b"
 20535 a1dc 1F       		.byte	0x1f
 20536 a1dd 9D       		.byte	0x9d
 20537 a1de 672C0000 		.long	0x2c67
 20538 a1e2 00       		.byte	0
 20539 a1e3 69       		.uleb128 0x69
GAS LISTING /tmp/ccKUqHDa.s 			page 618


 20540 a1e4 08       		.byte	0x8
 20541 a1e5 F66A0000 		.long	0x6af6
 20542 a1e9 8401     		.uleb128 0x84
 20543 a1eb 1D6B0000 		.long	0x6b1d
 20544 a1ef 03       		.byte	0x3
 20545 a1f0 F8A10000 		.long	0xa1f8
 20546 a1f4 0FA20000 		.long	0xa20f
 20547 a1f8 8501     		.uleb128 0x85
 20548 a1fa 00000000 		.long	.LASF1418
 20549 a1fe 0FA20000 		.long	0xa20f
 20550 a202 8B01     		.uleb128 0x8b
 20551 a204 00000000 		.long	.LASF1343
 20552 a208 29       		.byte	0x29
 20553 a209 97       		.byte	0x97
 20554 a20a 262D0000 		.long	0x2d26
 20555 a20e 00       		.byte	0
 20556 a20f 0B       		.uleb128 0xb
 20557 a210 E3A10000 		.long	0xa1e3
 20558 a214 8A01     		.uleb128 0x8a
 20559 a216 B2060000 		.long	0x6b2
 20560 a21a 03       		.byte	0x3
 20561 a21b 2DA20000 		.long	0xa22d
 20562 a21f 9001     		.uleb128 0x90
 20563 a221 5F5F7300 		.string	"__s"
 20564 a225 17       		.byte	0x17
 20565 a226 0601     		.value	0x106
 20566 a228 AA920000 		.long	0x92aa
 20567 a22c 00       		.byte	0
 20568 a22d 8A01     		.uleb128 0x8a
 20569 a22f 6E6B0000 		.long	0x6b6e
 20570 a233 03       		.byte	0x3
 20571 a234 5BA20000 		.long	0xa25b
 20572 a238 1C       		.uleb128 0x1c
 20573 a239 00000000 		.long	.LASF308
 20574 a23d 13060000 		.long	0x613
 20575 a241 77       		.uleb128 0x77
 20576 a242 00000000 		.long	.LASF1427
 20577 a246 08       		.byte	0x8
 20578 a247 1202     		.value	0x212
 20579 a249 5BA20000 		.long	0xa25b
 20580 a24d 9001     		.uleb128 0x90
 20581 a24f 5F5F7300 		.string	"__s"
 20582 a253 08       		.byte	0x8
 20583 a254 1202     		.value	0x212
 20584 a256 CD840000 		.long	0x84cd
 20585 a25a 00       		.byte	0
 20586 a25b 0B       		.uleb128 0xb
 20587 a25c AD990000 		.long	0x99ad
 20588 a260 69       		.uleb128 0x69
 20589 a261 08       		.byte	0x8
 20590 a262 926B0000 		.long	0x6b92
 20591 a266 8401     		.uleb128 0x84
 20592 a268 EB2F0000 		.long	0x2feb
 20593 a26c 03       		.byte	0x3
 20594 a26d 75A20000 		.long	0xa275
 20595 a271 8DA20000 		.long	0xa28d
 20596 a275 8501     		.uleb128 0x85
GAS LISTING /tmp/ccKUqHDa.s 			page 619


 20597 a277 00000000 		.long	.LASF1418
 20598 a27b 8DA20000 		.long	0xa28d
 20599 a27f 9001     		.uleb128 0x90
 20600 a281 5F5F6300 		.string	"__c"
 20601 a285 22       		.byte	0x22
 20602 a286 6103     		.value	0x361
 20603 a288 D8840000 		.long	0x84d8
 20604 a28c 00       		.byte	0
 20605 a28d 0B       		.uleb128 0xb
 20606 a28e 60A20000 		.long	0xa260
 20607 a292 79       		.uleb128 0x79
 20608 a293 08       		.byte	0x8
 20609 a294 E9690000 		.long	0x69e9
 20610 a298 8A01     		.uleb128 0x8a
 20611 a29a 976B0000 		.long	0x6b97
 20612 a29e 03       		.byte	0x3
 20613 a29f B9A20000 		.long	0xa2b9
 20614 a2a3 09       		.uleb128 0x9
 20615 a2a4 5F547000 		.string	"_Tp"
 20616 a2a8 29000000 		.long	0x29
 20617 a2ac 8D01     		.uleb128 0x8d
 20618 a2ae 5F5F7400 		.string	"__t"
 20619 a2b2 2A       		.byte	0x2a
 20620 a2b3 4C       		.byte	0x4c
 20621 a2b4 B9A20000 		.long	0xa2b9
 20622 a2b8 00       		.byte	0
 20623 a2b9 0B       		.uleb128 0xb
 20624 a2ba 92A20000 		.long	0xa292
 20625 a2be 8401     		.uleb128 0x84
 20626 a2c0 EA580000 		.long	0x58ea
 20627 a2c4 03       		.byte	0x3
 20628 a2c5 DFA20000 		.long	0xa2df
 20629 a2c9 02A30000 		.long	0xa302
 20630 a2cd 09       		.uleb128 0x9
 20631 a2ce 5F553100 		.string	"_U1"
 20632 a2d2 29000000 		.long	0x29
 20633 a2d6 09       		.uleb128 0x9
 20634 a2d7 5F553200 		.string	"_U2"
 20635 a2db 29000000 		.long	0x29
 20636 a2df 8501     		.uleb128 0x85
 20637 a2e1 00000000 		.long	.LASF1418
 20638 a2e5 BD9F0000 		.long	0x9fbd
 20639 a2e9 8D01     		.uleb128 0x8d
 20640 a2eb 5F5F7800 		.string	"__x"
 20641 a2ef 0D       		.byte	0xd
 20642 a2f0 90       		.byte	0x90
 20643 a2f1 02A30000 		.long	0xa302
 20644 a2f5 8D01     		.uleb128 0x8d
 20645 a2f7 5F5F7900 		.string	"__y"
 20646 a2fb 0D       		.byte	0xd
 20647 a2fc 90       		.byte	0x90
 20648 a2fd 07A30000 		.long	0xa307
 20649 a301 00       		.byte	0
 20650 a302 0B       		.uleb128 0xb
 20651 a303 D49F0000 		.long	0x9fd4
 20652 a307 0B       		.uleb128 0xb
 20653 a308 D49F0000 		.long	0x9fd4
GAS LISTING /tmp/ccKUqHDa.s 			page 620


 20654 a30c 8A01     		.uleb128 0x8a
 20655 a30e B56B0000 		.long	0x6bb5
 20656 a312 03       		.byte	0x3
 20657 a313 46A30000 		.long	0xa346
 20658 a317 09       		.uleb128 0x9
 20659 a318 5F543100 		.string	"_T1"
 20660 a31c 29000000 		.long	0x29
 20661 a320 09       		.uleb128 0x9
 20662 a321 5F543200 		.string	"_T2"
 20663 a325 29000000 		.long	0x29
 20664 a329 9001     		.uleb128 0x90
 20665 a32b 5F5F7800 		.string	"__x"
 20666 a32f 0D       		.byte	0xd
 20667 a330 1401     		.value	0x114
 20668 a332 46A30000 		.long	0xa346
 20669 a336 9001     		.uleb128 0x90
 20670 a338 5F5F7900 		.string	"__y"
 20671 a33c 0D       		.byte	0xd
 20672 a33d 1401     		.value	0x114
 20673 a33f 4BA30000 		.long	0xa34b
 20674 a343 9101     		.uleb128 0x91
 20675 a345 00       		.byte	0
 20676 a346 0B       		.uleb128 0xb
 20677 a347 D49F0000 		.long	0x9fd4
 20678 a34b 0B       		.uleb128 0xb
 20679 a34c D49F0000 		.long	0x9fd4
 20680 a350 8401     		.uleb128 0x84
 20681 a352 813B0000 		.long	0x3b81
 20682 a356 03       		.byte	0x3
 20683 a357 5FA30000 		.long	0xa35f
 20684 a35b 77A30000 		.long	0xa377
 20685 a35f 8501     		.uleb128 0x85
 20686 a361 00000000 		.long	.LASF1418
 20687 a365 77A30000 		.long	0xa377
 20688 a369 9001     		.uleb128 0x90
 20689 a36b 5F5F6E00 		.string	"__n"
 20690 a36f 04       		.byte	0x4
 20691 a370 0B03     		.value	0x30b
 20692 a372 10370000 		.long	0x3710
 20693 a376 00       		.byte	0
 20694 a377 0B       		.uleb128 0xb
 20695 a378 8B9D0000 		.long	0x9d8b
 20696 a37c 8401     		.uleb128 0x84
 20697 a37e F34B0000 		.long	0x4bf3
 20698 a382 03       		.byte	0x3
 20699 a383 8BA30000 		.long	0xa38b
 20700 a387 A3A30000 		.long	0xa3a3
 20701 a38b 8501     		.uleb128 0x85
 20702 a38d 00000000 		.long	.LASF1418
 20703 a391 A3A30000 		.long	0xa3a3
 20704 a395 9001     		.uleb128 0x90
 20705 a397 5F5F6E00 		.string	"__n"
 20706 a39b 04       		.byte	0x4
 20707 a39c 0B03     		.value	0x30b
 20708 a39e 82470000 		.long	0x4782
 20709 a3a2 00       		.byte	0
 20710 a3a3 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 621


 20711 a3a4 459E0000 		.long	0x9e45
 20712 a3a8 8A01     		.uleb128 0x8a
 20713 a3aa B2510000 		.long	0x51b2
 20714 a3ae 03       		.byte	0x3
 20715 a3af CCA30000 		.long	0xa3cc
 20716 a3b3 8D01     		.uleb128 0x8d
 20717 a3b5 5F5F7400 		.string	"__t"
 20718 a3b9 28       		.byte	0x28
 20719 a3ba 34       		.byte	0x34
 20720 a3bb CCA30000 		.long	0xa3cc
 20721 a3bf 8D01     		.uleb128 0x8d
 20722 a3c1 5F5F6E00 		.string	"__n"
 20723 a3c5 28       		.byte	0x28
 20724 a3c6 34       		.byte	0x34
 20725 a3c7 DB070000 		.long	0x7db
 20726 a3cb 00       		.byte	0
 20727 a3cc 0B       		.uleb128 0xb
 20728 a3cd 9D9E0000 		.long	0x9e9d
 20729 a3d1 8401     		.uleb128 0x84
 20730 a3d3 617A0000 		.long	0x7a61
 20731 a3d7 03       		.byte	0x3
 20732 a3d8 E0A30000 		.long	0xa3e0
 20733 a3dc EBA30000 		.long	0xa3eb
 20734 a3e0 8501     		.uleb128 0x85
 20735 a3e2 00000000 		.long	.LASF1418
 20736 a3e6 EBA30000 		.long	0xa3eb
 20737 a3ea 00       		.byte	0
 20738 a3eb 0B       		.uleb128 0xb
 20739 a3ec 199D0000 		.long	0x9d19
 20740 a3f0 8401     		.uleb128 0x84
 20741 a3f2 927A0000 		.long	0x7a92
 20742 a3f6 03       		.byte	0x3
 20743 a3f7 FFA30000 		.long	0xa3ff
 20744 a3fb 14A40000 		.long	0xa414
 20745 a3ff 8501     		.uleb128 0x85
 20746 a401 00000000 		.long	.LASF1418
 20747 a405 EBA30000 		.long	0xa3eb
 20748 a409 8501     		.uleb128 0x85
 20749 a40b 00000000 		.long	.LASF1428
 20750 a40f C8840000 		.long	0x84c8
 20751 a413 00       		.byte	0
 20752 a414 8401     		.uleb128 0x84
 20753 a416 1F310000 		.long	0x311f
 20754 a41a 03       		.byte	0x3
 20755 a41b 23A40000 		.long	0xa423
 20756 a41f 38A40000 		.long	0xa438
 20757 a423 8501     		.uleb128 0x85
 20758 a425 00000000 		.long	.LASF1418
 20759 a429 38A40000 		.long	0xa438
 20760 a42d 8501     		.uleb128 0x85
 20761 a42f 00000000 		.long	.LASF1428
 20762 a433 C8840000 		.long	0x84c8
 20763 a437 00       		.byte	0
 20764 a438 0B       		.uleb128 0xb
 20765 a439 2B9D0000 		.long	0x9d2b
 20766 a43d 8401     		.uleb128 0x84
 20767 a43f C17C0000 		.long	0x7cc1
GAS LISTING /tmp/ccKUqHDa.s 			page 622


 20768 a443 03       		.byte	0x3
 20769 a444 4CA40000 		.long	0xa44c
 20770 a448 57A40000 		.long	0xa457
 20771 a44c 8501     		.uleb128 0x85
 20772 a44e 00000000 		.long	.LASF1418
 20773 a452 57A40000 		.long	0xa457
 20774 a456 00       		.byte	0
 20775 a457 0B       		.uleb128 0xb
 20776 a458 D39D0000 		.long	0x9dd3
 20777 a45c 8401     		.uleb128 0x84
 20778 a45e F27C0000 		.long	0x7cf2
 20779 a462 03       		.byte	0x3
 20780 a463 6BA40000 		.long	0xa46b
 20781 a467 80A40000 		.long	0xa480
 20782 a46b 8501     		.uleb128 0x85
 20783 a46d 00000000 		.long	.LASF1418
 20784 a471 57A40000 		.long	0xa457
 20785 a475 8501     		.uleb128 0x85
 20786 a477 00000000 		.long	.LASF1428
 20787 a47b C8840000 		.long	0x84c8
 20788 a47f 00       		.byte	0
 20789 a480 8401     		.uleb128 0x84
 20790 a482 91410000 		.long	0x4191
 20791 a486 03       		.byte	0x3
 20792 a487 8FA40000 		.long	0xa48f
 20793 a48b A4A40000 		.long	0xa4a4
 20794 a48f 8501     		.uleb128 0x85
 20795 a491 00000000 		.long	.LASF1418
 20796 a495 A4A40000 		.long	0xa4a4
 20797 a499 8501     		.uleb128 0x85
 20798 a49b 00000000 		.long	.LASF1428
 20799 a49f C8840000 		.long	0x84c8
 20800 a4a3 00       		.byte	0
 20801 a4a4 0B       		.uleb128 0xb
 20802 a4a5 E59D0000 		.long	0x9de5
 20803 a4a9 8401     		.uleb128 0x84
 20804 a4ab 0A730000 		.long	0x730a
 20805 a4af 03       		.byte	0x3
 20806 a4b0 B8A40000 		.long	0xa4b8
 20807 a4b4 C3A40000 		.long	0xa4c3
 20808 a4b8 8501     		.uleb128 0x85
 20809 a4ba 00000000 		.long	.LASF1418
 20810 a4be C3A40000 		.long	0xa4c3
 20811 a4c2 00       		.byte	0
 20812 a4c3 0B       		.uleb128 0xb
 20813 a4c4 DE930000 		.long	0x93de
 20814 a4c8 8401     		.uleb128 0x84
 20815 a4ca F7080000 		.long	0x8f7
 20816 a4ce 03       		.byte	0x3
 20817 a4cf D7A40000 		.long	0xa4d7
 20818 a4d3 E2A40000 		.long	0xa4e2
 20819 a4d7 8501     		.uleb128 0x85
 20820 a4d9 00000000 		.long	.LASF1418
 20821 a4dd E2A40000 		.long	0xa4e2
 20822 a4e1 00       		.byte	0
 20823 a4e2 0B       		.uleb128 0xb
 20824 a4e3 F0930000 		.long	0x93f0
GAS LISTING /tmp/ccKUqHDa.s 			page 623


 20825 a4e7 8401     		.uleb128 0x84
 20826 a4e9 3B730000 		.long	0x733b
 20827 a4ed 03       		.byte	0x3
 20828 a4ee F6A40000 		.long	0xa4f6
 20829 a4f2 0BA50000 		.long	0xa50b
 20830 a4f6 8501     		.uleb128 0x85
 20831 a4f8 00000000 		.long	.LASF1418
 20832 a4fc C3A40000 		.long	0xa4c3
 20833 a500 8501     		.uleb128 0x85
 20834 a502 00000000 		.long	.LASF1428
 20835 a506 C8840000 		.long	0x84c8
 20836 a50a 00       		.byte	0
 20837 a50b 8401     		.uleb128 0x84
 20838 a50d 28090000 		.long	0x928
 20839 a511 03       		.byte	0x3
 20840 a512 1AA50000 		.long	0xa51a
 20841 a516 2FA50000 		.long	0xa52f
 20842 a51a 8501     		.uleb128 0x85
 20843 a51c 00000000 		.long	.LASF1418
 20844 a520 E2A40000 		.long	0xa4e2
 20845 a524 8501     		.uleb128 0x85
 20846 a526 00000000 		.long	.LASF1428
 20847 a52a C8840000 		.long	0x84c8
 20848 a52e 00       		.byte	0
 20849 a52f 8401     		.uleb128 0x84
 20850 a531 EC550000 		.long	0x55ec
 20851 a535 03       		.byte	0x3
 20852 a536 3EA50000 		.long	0xa53e
 20853 a53a 61A50000 		.long	0xa561
 20854 a53e 8501     		.uleb128 0x85
 20855 a540 00000000 		.long	.LASF1418
 20856 a544 61A50000 		.long	0xa561
 20857 a548 77       		.uleb128 0x77
 20858 a549 00000000 		.long	.LASF1429
 20859 a54d 0B       		.byte	0xb
 20860 a54e 3508     		.value	0x835
 20861 a550 29000000 		.long	0x29
 20862 a554 77       		.uleb128 0x77
 20863 a555 00000000 		.long	.LASF1430
 20864 a559 0B       		.byte	0xb
 20865 a55a 3608     		.value	0x836
 20866 a55c 29000000 		.long	0x29
 20867 a560 00       		.byte	0
 20868 a561 0B       		.uleb128 0xb
 20869 a562 CD9E0000 		.long	0x9ecd
 20870 a566 8401     		.uleb128 0x84
 20871 a568 217F0000 		.long	0x7f21
 20872 a56c 03       		.byte	0x3
 20873 a56d 75A50000 		.long	0xa575
 20874 a571 80A50000 		.long	0xa580
 20875 a575 8501     		.uleb128 0x85
 20876 a577 00000000 		.long	.LASF1418
 20877 a57b 80A50000 		.long	0xa580
 20878 a57f 00       		.byte	0
 20879 a580 0B       		.uleb128 0xb
 20880 a581 039F0000 		.long	0x9f03
 20881 a585 8401     		.uleb128 0x84
GAS LISTING /tmp/ccKUqHDa.s 			page 624


 20882 a587 527F0000 		.long	0x7f52
 20883 a58b 03       		.byte	0x3
 20884 a58c 94A50000 		.long	0xa594
 20885 a590 A9A50000 		.long	0xa5a9
 20886 a594 8501     		.uleb128 0x85
 20887 a596 00000000 		.long	.LASF1418
 20888 a59a 80A50000 		.long	0xa580
 20889 a59e 8501     		.uleb128 0x85
 20890 a5a0 00000000 		.long	.LASF1428
 20891 a5a4 C8840000 		.long	0x84c8
 20892 a5a8 00       		.byte	0
 20893 a5a9 8401     		.uleb128 0x84
 20894 a5ab 9B590000 		.long	0x599b
 20895 a5af 03       		.byte	0x3
 20896 a5b0 B8A50000 		.long	0xa5b8
 20897 a5b4 CDA50000 		.long	0xa5cd
 20898 a5b8 8501     		.uleb128 0x85
 20899 a5ba 00000000 		.long	.LASF1418
 20900 a5be CDA50000 		.long	0xa5cd
 20901 a5c2 8501     		.uleb128 0x85
 20902 a5c4 00000000 		.long	.LASF1428
 20903 a5c8 C8840000 		.long	0x84c8
 20904 a5cc 00       		.byte	0
 20905 a5cd 0B       		.uleb128 0xb
 20906 a5ce 159F0000 		.long	0x9f15
 20907 a5d2 8401     		.uleb128 0x84
 20908 a5d4 88810000 		.long	0x8188
 20909 a5d8 03       		.byte	0x3
 20910 a5d9 E1A50000 		.long	0xa5e1
 20911 a5dd F9A50000 		.long	0xa5f9
 20912 a5e1 8501     		.uleb128 0x85
 20913 a5e3 00000000 		.long	.LASF1418
 20914 a5e7 F9A50000 		.long	0xa5f9
 20915 a5eb 9001     		.uleb128 0x90
 20916 a5ed 5F5F6900 		.string	"__i"
 20917 a5f1 30       		.byte	0x30
 20918 a5f2 D802     		.value	0x2d8
 20919 a5f4 FEA50000 		.long	0xa5fe
 20920 a5f8 00       		.byte	0
 20921 a5f9 0B       		.uleb128 0xb
 20922 a5fa B19F0000 		.long	0x9fb1
 20923 a5fe 0B       		.uleb128 0xb
 20924 a5ff B79F0000 		.long	0x9fb7
 20925 a603 8401     		.uleb128 0x84
 20926 a605 1C830000 		.long	0x831c
 20927 a609 03       		.byte	0x3
 20928 a60a 12A60000 		.long	0xa612
 20929 a60e 1DA60000 		.long	0xa61d
 20930 a612 8501     		.uleb128 0x85
 20931 a614 00000000 		.long	.LASF1418
 20932 a618 1DA60000 		.long	0xa61d
 20933 a61c 00       		.byte	0
 20934 a61d 0B       		.uleb128 0xb
 20935 a61e C29F0000 		.long	0x9fc2
 20936 a622 8401     		.uleb128 0x84
 20937 a624 20730000 		.long	0x7320
 20938 a628 03       		.byte	0x3
GAS LISTING /tmp/ccKUqHDa.s 			page 625


 20939 a629 31A60000 		.long	0xa631
 20940 a62d 41A60000 		.long	0xa641
 20941 a631 8501     		.uleb128 0x85
 20942 a633 00000000 		.long	.LASF1418
 20943 a637 C3A40000 		.long	0xa4c3
 20944 a63b 13       		.uleb128 0x13
 20945 a63c 41A60000 		.long	0xa641
 20946 a640 00       		.byte	0
 20947 a641 0B       		.uleb128 0xb
 20948 a642 E4930000 		.long	0x93e4
 20949 a646 8401     		.uleb128 0x84
 20950 a648 0D090000 		.long	0x90d
 20951 a64c 03       		.byte	0x3
 20952 a64d 55A60000 		.long	0xa655
 20953 a651 6CA60000 		.long	0xa66c
 20954 a655 8501     		.uleb128 0x85
 20955 a657 00000000 		.long	.LASF1418
 20956 a65b E2A40000 		.long	0xa4e2
 20957 a65f 8D01     		.uleb128 0x8d
 20958 a661 5F5F6100 		.string	"__a"
 20959 a665 19       		.byte	0x19
 20960 a666 73       		.byte	0x73
 20961 a667 6CA60000 		.long	0xa66c
 20962 a66b 00       		.byte	0
 20963 a66c 0B       		.uleb128 0xb
 20964 a66d F6930000 		.long	0x93f6
 20965 a671 8401     		.uleb128 0x84
 20966 a673 D81D0000 		.long	0x1dd8
 20967 a677 03       		.byte	0x3
 20968 a678 80A60000 		.long	0xa680
 20969 a67c 8BA60000 		.long	0xa68b
 20970 a680 8501     		.uleb128 0x85
 20971 a682 00000000 		.long	.LASF1418
 20972 a686 5CA00000 		.long	0xa05c
 20973 a68a 00       		.byte	0
 20974 a68b 8401     		.uleb128 0x84
 20975 a68d 240D0000 		.long	0xd24
 20976 a691 03       		.byte	0x3
 20977 a692 9AA60000 		.long	0xa69a
 20978 a696 A5A60000 		.long	0xa6a5
 20979 a69a 8501     		.uleb128 0x85
 20980 a69c 00000000 		.long	.LASF1418
 20981 a6a0 5CA00000 		.long	0xa05c
 20982 a6a4 00       		.byte	0
 20983 a6a5 9201     		.uleb128 0x92
 20984 a6a7 6A0A0000 		.long	0xa6a
 20985 a6ab 02       		.byte	0x2
 20986 a6ac 1001     		.value	0x110
 20987 a6ae 03       		.byte	0x3
 20988 a6af B7A60000 		.long	0xa6b7
 20989 a6b3 CCA60000 		.long	0xa6cc
 20990 a6b7 8501     		.uleb128 0x85
 20991 a6b9 00000000 		.long	.LASF1418
 20992 a6bd CCA60000 		.long	0xa6cc
 20993 a6c1 8501     		.uleb128 0x85
 20994 a6c3 00000000 		.long	.LASF1428
 20995 a6c7 C8840000 		.long	0x84c8
GAS LISTING /tmp/ccKUqHDa.s 			page 626


 20996 a6cb 00       		.byte	0
 20997 a6cc 0B       		.uleb128 0xb
 20998 a6cd 99980000 		.long	0x9899
 20999 a6d1 79       		.uleb128 0x79
 21000 a6d2 08       		.byte	0x8
 21001 a6d3 926B0000 		.long	0x6b92
 21002 a6d7 8A01     		.uleb128 0x8a
 21003 a6d9 E26B0000 		.long	0x6be2
 21004 a6dd 03       		.byte	0x3
 21005 a6de F8A60000 		.long	0xa6f8
 21006 a6e2 1C       		.uleb128 0x1c
 21007 a6e3 00000000 		.long	.LASF919
 21008 a6e7 E22F0000 		.long	0x2fe2
 21009 a6eb 8D01     		.uleb128 0x8d
 21010 a6ed 5F5F6600 		.string	"__f"
 21011 a6f1 29       		.byte	0x29
 21012 a6f2 2E       		.byte	0x2e
 21013 a6f3 60A20000 		.long	0xa260
 21014 a6f7 00       		.byte	0
 21015 a6f8 8A01     		.uleb128 0x8a
 21016 a6fa 006C0000 		.long	0x6c00
 21017 a6fe 03       		.byte	0x3
 21018 a6ff 22A70000 		.long	0xa722
 21019 a703 1C       		.uleb128 0x1c
 21020 a704 00000000 		.long	.LASF307
 21021 a708 D8840000 		.long	0x84d8
 21022 a70c 1C       		.uleb128 0x1c
 21023 a70d 00000000 		.long	.LASF308
 21024 a711 13060000 		.long	0x613
 21025 a715 77       		.uleb128 0x77
 21026 a716 00000000 		.long	.LASF1431
 21027 a71a 08       		.byte	0x8
 21028 a71b 4A02     		.value	0x24a
 21029 a71d 22A70000 		.long	0xa722
 21030 a721 00       		.byte	0
 21031 a722 0B       		.uleb128 0xb
 21032 a723 AD990000 		.long	0x99ad
 21033 a727 69       		.uleb128 0x69
 21034 a728 08       		.byte	0x8
 21035 a729 919E0000 		.long	0x9e91
 21036 a72d 8A01     		.uleb128 0x8a
 21037 a72f 286C0000 		.long	0x6c28
 21038 a733 03       		.byte	0x3
 21039 a734 4EA70000 		.long	0xa74e
 21040 a738 09       		.uleb128 0x9
 21041 a739 5F547000 		.string	"_Tp"
 21042 a73d 919E0000 		.long	0x9e91
 21043 a741 8D01     		.uleb128 0x8d
 21044 a743 5F5F7200 		.string	"__r"
 21045 a747 2A       		.byte	0x2a
 21046 a748 2F       		.byte	0x2f
 21047 a749 4EA70000 		.long	0xa74e
 21048 a74d 00       		.byte	0
 21049 a74e 0B       		.uleb128 0xb
 21050 a74f 979E0000 		.long	0x9e97
 21051 a753 8401     		.uleb128 0x84
 21052 a755 58550000 		.long	0x5558
GAS LISTING /tmp/ccKUqHDa.s 			page 627


 21053 a759 03       		.byte	0x3
 21054 a75a 62A70000 		.long	0xa762
 21055 a75e 6DA70000 		.long	0xa76d
 21056 a762 8501     		.uleb128 0x85
 21057 a764 00000000 		.long	.LASF1418
 21058 a768 6DA70000 		.long	0xa76d
 21059 a76c 00       		.byte	0
 21060 a76d 0B       		.uleb128 0xb
 21061 a76e BB9E0000 		.long	0x9ebb
 21062 a772 8401     		.uleb128 0x84
 21063 a774 0C560000 		.long	0x560c
 21064 a778 03       		.byte	0x3
 21065 a779 81A70000 		.long	0xa781
 21066 a77d 8CA70000 		.long	0xa78c
 21067 a781 8501     		.uleb128 0x85
 21068 a783 00000000 		.long	.LASF1418
 21069 a787 8CA70000 		.long	0xa78c
 21070 a78b 00       		.byte	0
 21071 a78c 0B       		.uleb128 0xb
 21072 a78d D39E0000 		.long	0x9ed3
 21073 a791 8401     		.uleb128 0x84
 21074 a793 2A560000 		.long	0x562a
 21075 a797 03       		.byte	0x3
 21076 a798 A0A70000 		.long	0xa7a0
 21077 a79c ABA70000 		.long	0xa7ab
 21078 a7a0 8501     		.uleb128 0x85
 21079 a7a2 00000000 		.long	.LASF1418
 21080 a7a6 8CA70000 		.long	0xa78c
 21081 a7aa 00       		.byte	0
 21082 a7ab 8A01     		.uleb128 0x8a
 21083 a7ad C3030000 		.long	0x3c3
 21084 a7b1 03       		.byte	0x3
 21085 a7b2 CAA70000 		.long	0xa7ca
 21086 a7b6 1C       		.uleb128 0x1c
 21087 a7b7 00000000 		.long	.LASF30
 21088 a7bb 829C0000 		.long	0x9c82
 21089 a7bf 13       		.uleb128 0x13
 21090 a7c0 829C0000 		.long	0x9c82
 21091 a7c4 13       		.uleb128 0x13
 21092 a7c5 829C0000 		.long	0x9c82
 21093 a7c9 00       		.byte	0
 21094 a7ca 8A01     		.uleb128 0x8a
 21095 a7cc 466C0000 		.long	0x6c46
 21096 a7d0 03       		.byte	0x3
 21097 a7d1 F7A70000 		.long	0xa7f7
 21098 a7d5 1C       		.uleb128 0x1c
 21099 a7d6 00000000 		.long	.LASF30
 21100 a7da 829C0000 		.long	0x9c82
 21101 a7de 8B01     		.uleb128 0x8b
 21102 a7e0 00000000 		.long	.LASF1432
 21103 a7e4 0C       		.byte	0xc
 21104 a7e5 7A       		.byte	0x7a
 21105 a7e6 829C0000 		.long	0x9c82
 21106 a7ea 8B01     		.uleb128 0x8b
 21107 a7ec 00000000 		.long	.LASF1433
 21108 a7f0 0C       		.byte	0xc
 21109 a7f1 7A       		.byte	0x7a
GAS LISTING /tmp/ccKUqHDa.s 			page 628


 21110 a7f2 829C0000 		.long	0x9c82
 21111 a7f6 00       		.byte	0
 21112 a7f7 8A01     		.uleb128 0x8a
 21113 a7f9 656C0000 		.long	0x6c65
 21114 a7fd 03       		.byte	0x3
 21115 a7fe 32A80000 		.long	0xa832
 21116 a802 1C       		.uleb128 0x1c
 21117 a803 00000000 		.long	.LASF30
 21118 a807 829C0000 		.long	0x9c82
 21119 a80b 09       		.uleb128 0x9
 21120 a80c 5F547000 		.string	"_Tp"
 21121 a810 29000000 		.long	0x29
 21122 a814 8B01     		.uleb128 0x8b
 21123 a816 00000000 		.long	.LASF1432
 21124 a81a 0C       		.byte	0xc
 21125 a81b 94       		.byte	0x94
 21126 a81c 829C0000 		.long	0x9c82
 21127 a820 8B01     		.uleb128 0x8b
 21128 a822 00000000 		.long	.LASF1433
 21129 a826 0C       		.byte	0xc
 21130 a827 94       		.byte	0x94
 21131 a828 829C0000 		.long	0x9c82
 21132 a82c 13       		.uleb128 0x13
 21133 a82d 32A80000 		.long	0xa832
 21134 a831 00       		.byte	0
 21135 a832 0B       		.uleb128 0xb
 21136 a833 439D0000 		.long	0x9d43
 21137 a837 8A01     		.uleb128 0x8a
 21138 a839 E2030000 		.long	0x3e2
 21139 a83d 03       		.byte	0x3
 21140 a83e 56A80000 		.long	0xa856
 21141 a842 1C       		.uleb128 0x1c
 21142 a843 00000000 		.long	.LASF30
 21143 a847 5E9B0000 		.long	0x9b5e
 21144 a84b 13       		.uleb128 0x13
 21145 a84c 5E9B0000 		.long	0x9b5e
 21146 a850 13       		.uleb128 0x13
 21147 a851 5E9B0000 		.long	0x9b5e
 21148 a855 00       		.byte	0
 21149 a856 8A01     		.uleb128 0x8a
 21150 a858 926C0000 		.long	0x6c92
 21151 a85c 03       		.byte	0x3
 21152 a85d 83A80000 		.long	0xa883
 21153 a861 1C       		.uleb128 0x1c
 21154 a862 00000000 		.long	.LASF30
 21155 a866 5E9B0000 		.long	0x9b5e
 21156 a86a 8B01     		.uleb128 0x8b
 21157 a86c 00000000 		.long	.LASF1432
 21158 a870 0C       		.byte	0xc
 21159 a871 7A       		.byte	0x7a
 21160 a872 5E9B0000 		.long	0x9b5e
 21161 a876 8B01     		.uleb128 0x8b
 21162 a878 00000000 		.long	.LASF1433
 21163 a87c 0C       		.byte	0xc
 21164 a87d 7A       		.byte	0x7a
 21165 a87e 5E9B0000 		.long	0x9b5e
 21166 a882 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 629


 21167 a883 8A01     		.uleb128 0x8a
 21168 a885 B16C0000 		.long	0x6cb1
 21169 a889 03       		.byte	0x3
 21170 a88a BEA80000 		.long	0xa8be
 21171 a88e 1C       		.uleb128 0x1c
 21172 a88f 00000000 		.long	.LASF30
 21173 a893 5E9B0000 		.long	0x9b5e
 21174 a897 09       		.uleb128 0x9
 21175 a898 5F547000 		.string	"_Tp"
 21176 a89c BB710000 		.long	0x71bb
 21177 a8a0 8B01     		.uleb128 0x8b
 21178 a8a2 00000000 		.long	.LASF1432
 21179 a8a6 0C       		.byte	0xc
 21180 a8a7 94       		.byte	0x94
 21181 a8a8 5E9B0000 		.long	0x9b5e
 21182 a8ac 8B01     		.uleb128 0x8b
 21183 a8ae 00000000 		.long	.LASF1433
 21184 a8b2 0C       		.byte	0xc
 21185 a8b3 94       		.byte	0x94
 21186 a8b4 5E9B0000 		.long	0x9b5e
 21187 a8b8 13       		.uleb128 0x13
 21188 a8b9 BEA80000 		.long	0xa8be
 21189 a8bd 00       		.byte	0
 21190 a8be 0B       		.uleb128 0xb
 21191 a8bf FD9D0000 		.long	0x9dfd
 21192 a8c3 8A01     		.uleb128 0x8a
 21193 a8c5 75250000 		.long	0x2575
 21194 a8c9 03       		.byte	0x3
 21195 a8ca EAA80000 		.long	0xa8ea
 21196 a8ce 8D01     		.uleb128 0x8d
 21197 a8d0 5F5F7800 		.string	"__x"
 21198 a8d4 0B       		.byte	0xb
 21199 a8d5 8A       		.byte	0x8a
 21200 a8d6 30000000 		.long	0x30
 21201 a8da 8701     		.uleb128 0x87
 21202 a8dc 8801     		.uleb128 0x88
 21203 a8de 00000000 		.long	.LASF1434
 21204 a8e2 0B       		.byte	0xb
 21205 a8e3 8C       		.byte	0x8c
 21206 a8e4 30000000 		.long	0x30
 21207 a8e8 00       		.byte	0
 21208 a8e9 00       		.byte	0
 21209 a8ea 8A01     		.uleb128 0x8a
 21210 a8ec DD250000 		.long	0x25dd
 21211 a8f0 03       		.byte	0x3
 21212 a8f1 11A90000 		.long	0xa911
 21213 a8f5 8D01     		.uleb128 0x8d
 21214 a8f7 5F5F7800 		.string	"__x"
 21215 a8fb 0B       		.byte	0xb
 21216 a8fc 8A       		.byte	0x8a
 21217 a8fd 30000000 		.long	0x30
 21218 a901 8701     		.uleb128 0x87
 21219 a903 8801     		.uleb128 0x88
 21220 a905 00000000 		.long	.LASF1434
 21221 a909 0B       		.byte	0xb
 21222 a90a 8C       		.byte	0x8c
 21223 a90b 30000000 		.long	0x30
GAS LISTING /tmp/ccKUqHDa.s 			page 630


 21224 a90f 00       		.byte	0
 21225 a910 00       		.byte	0
 21226 a911 8A01     		.uleb128 0x8a
 21227 a913 33260000 		.long	0x2633
 21228 a917 03       		.byte	0x3
 21229 a918 57A90000 		.long	0xa957
 21230 a91c 09       		.uleb128 0x9
 21231 a91d 5F547000 		.string	"_Tp"
 21232 a921 30000000 		.long	0x30
 21233 a925 3F       		.uleb128 0x3f
 21234 a926 5F5F6D00 		.string	"__m"
 21235 a92a 30000000 		.long	0x30
 21236 a92e 00000000 		.quad	0x100000000
 21236      01000000 
 21237 a936 0A       		.uleb128 0xa
 21238 a937 5F5F6100 		.string	"__a"
 21239 a93b 30000000 		.long	0x30
 21240 a93f 01       		.byte	0x1
 21241 a940 0A       		.uleb128 0xa
 21242 a941 5F5F6300 		.string	"__c"
 21243 a945 30000000 		.long	0x30
 21244 a949 00       		.byte	0
 21245 a94a 8D01     		.uleb128 0x8d
 21246 a94c 5F5F7800 		.string	"__x"
 21247 a950 0B       		.byte	0xb
 21248 a951 95       		.byte	0x95
 21249 a952 30000000 		.long	0x30
 21250 a956 00       		.byte	0
 21251 a957 8A01     		.uleb128 0x8a
 21252 a959 76260000 		.long	0x2676
 21253 a95d 03       		.byte	0x3
 21254 a95e 97A90000 		.long	0xa997
 21255 a962 09       		.uleb128 0x9
 21256 a963 5F547000 		.string	"_Tp"
 21257 a967 30000000 		.long	0x30
 21258 a96b 41       		.uleb128 0x41
 21259 a96c 5F5F6D00 		.string	"__m"
 21260 a970 30000000 		.long	0x30
 21261 a974 7002     		.value	0x270
 21262 a976 0A       		.uleb128 0xa
 21263 a977 5F5F6100 		.string	"__a"
 21264 a97b 30000000 		.long	0x30
 21265 a97f 01       		.byte	0x1
 21266 a980 0A       		.uleb128 0xa
 21267 a981 5F5F6300 		.string	"__c"
 21268 a985 30000000 		.long	0x30
 21269 a989 00       		.byte	0
 21270 a98a 8D01     		.uleb128 0x8d
 21271 a98c 5F5F7800 		.string	"__x"
 21272 a990 0B       		.byte	0xb
 21273 a991 95       		.byte	0x95
 21274 a992 30000000 		.long	0x30
 21275 a996 00       		.byte	0
 21276 a997 9201     		.uleb128 0x92
 21277 a999 BF270000 		.long	0x27bf
 21278 a99d 07       		.byte	0x7
 21279 a99e 4701     		.value	0x147
GAS LISTING /tmp/ccKUqHDa.s 			page 631


 21280 a9a0 01       		.byte	0x1
 21281 a9a1 A9A90000 		.long	0xa9a9
 21282 a9a5 E0A90000 		.long	0xa9e0
 21283 a9a9 8501     		.uleb128 0x85
 21284 a9ab 00000000 		.long	.LASF1418
 21285 a9af E0A90000 		.long	0xa9e0
 21286 a9b3 77       		.uleb128 0x77
 21287 a9b4 00000000 		.long	.LASF1435
 21288 a9b8 0B       		.byte	0xb
 21289 a9b9 0702     		.value	0x207
 21290 a9bb F4260000 		.long	0x26f4
 21291 a9bf 8701     		.uleb128 0x87
 21292 a9c1 9301     		.uleb128 0x93
 21293 a9c3 5F5F6900 		.string	"__i"
 21294 a9c7 07       		.byte	0x7
 21295 a9c8 4E01     		.value	0x14e
 21296 a9ca DB070000 		.long	0x7db
 21297 a9ce 8701     		.uleb128 0x87
 21298 a9d0 9301     		.uleb128 0x93
 21299 a9d2 5F5F7800 		.string	"__x"
 21300 a9d6 07       		.byte	0x7
 21301 a9d7 5001     		.value	0x150
 21302 a9d9 30000000 		.long	0x30
 21303 a9dd 00       		.byte	0
 21304 a9de 00       		.byte	0
 21305 a9df 00       		.byte	0
 21306 a9e0 0B       		.uleb128 0xb
 21307 a9e1 FF980000 		.long	0x98ff
 21308 a9e5 8A01     		.uleb128 0x8a
 21309 a9e7 01040000 		.long	0x401
 21310 a9eb 03       		.byte	0x3
 21311 a9ec 04AA0000 		.long	0xaa04
 21312 a9f0 1C       		.uleb128 0x1c
 21313 a9f1 00000000 		.long	.LASF30
 21314 a9f5 EB9E0000 		.long	0x9eeb
 21315 a9f9 13       		.uleb128 0x13
 21316 a9fa EB9E0000 		.long	0x9eeb
 21317 a9fe 13       		.uleb128 0x13
 21318 a9ff EB9E0000 		.long	0x9eeb
 21319 aa03 00       		.byte	0
 21320 aa04 8A01     		.uleb128 0x8a
 21321 aa06 DE6C0000 		.long	0x6cde
 21322 aa0a 03       		.byte	0x3
 21323 aa0b 31AA0000 		.long	0xaa31
 21324 aa0f 1C       		.uleb128 0x1c
 21325 aa10 00000000 		.long	.LASF30
 21326 aa14 EB9E0000 		.long	0x9eeb
 21327 aa18 8B01     		.uleb128 0x8b
 21328 aa1a 00000000 		.long	.LASF1432
 21329 aa1e 0C       		.byte	0xc
 21330 aa1f 7A       		.byte	0x7a
 21331 aa20 EB9E0000 		.long	0x9eeb
 21332 aa24 8B01     		.uleb128 0x8b
 21333 aa26 00000000 		.long	.LASF1433
 21334 aa2a 0C       		.byte	0xc
 21335 aa2b 7A       		.byte	0x7a
 21336 aa2c EB9E0000 		.long	0x9eeb
GAS LISTING /tmp/ccKUqHDa.s 			page 632


 21337 aa30 00       		.byte	0
 21338 aa31 8A01     		.uleb128 0x8a
 21339 aa33 FD6C0000 		.long	0x6cfd
 21340 aa37 03       		.byte	0x3
 21341 aa38 6CAA0000 		.long	0xaa6c
 21342 aa3c 1C       		.uleb128 0x1c
 21343 aa3d 00000000 		.long	.LASF30
 21344 aa41 EB9E0000 		.long	0x9eeb
 21345 aa45 09       		.uleb128 0x9
 21346 aa46 5F547000 		.string	"_Tp"
 21347 aa4a FC570000 		.long	0x57fc
 21348 aa4e 8B01     		.uleb128 0x8b
 21349 aa50 00000000 		.long	.LASF1432
 21350 aa54 0C       		.byte	0xc
 21351 aa55 94       		.byte	0x94
 21352 aa56 EB9E0000 		.long	0x9eeb
 21353 aa5a 8B01     		.uleb128 0x8b
 21354 aa5c 00000000 		.long	.LASF1433
 21355 aa60 0C       		.byte	0xc
 21356 aa61 94       		.byte	0x94
 21357 aa62 EB9E0000 		.long	0x9eeb
 21358 aa66 13       		.uleb128 0x13
 21359 aa67 6CAA0000 		.long	0xaa6c
 21360 aa6b 00       		.byte	0
 21361 aa6c 0B       		.uleb128 0xb
 21362 aa6d 2D9F0000 		.long	0x9f2d
 21363 aa71 8401     		.uleb128 0x84
 21364 aa73 777A0000 		.long	0x7a77
 21365 aa77 03       		.byte	0x3
 21366 aa78 80AA0000 		.long	0xaa80
 21367 aa7c 90AA0000 		.long	0xaa90
 21368 aa80 8501     		.uleb128 0x85
 21369 aa82 00000000 		.long	.LASF1418
 21370 aa86 EBA30000 		.long	0xa3eb
 21371 aa8a 13       		.uleb128 0x13
 21372 aa8b 90AA0000 		.long	0xaa90
 21373 aa8f 00       		.byte	0
 21374 aa90 0B       		.uleb128 0xb
 21375 aa91 1F9D0000 		.long	0x9d1f
 21376 aa95 8401     		.uleb128 0x84
 21377 aa97 04310000 		.long	0x3104
 21378 aa9b 03       		.byte	0x3
 21379 aa9c A4AA0000 		.long	0xaaa4
 21380 aaa0 BBAA0000 		.long	0xaabb
 21381 aaa4 8501     		.uleb128 0x85
 21382 aaa6 00000000 		.long	.LASF1418
 21383 aaaa 38A40000 		.long	0xa438
 21384 aaae 8D01     		.uleb128 0x8d
 21385 aab0 5F5F6100 		.string	"__a"
 21386 aab4 19       		.byte	0x19
 21387 aab5 73       		.byte	0x73
 21388 aab6 BBAA0000 		.long	0xaabb
 21389 aaba 00       		.byte	0
 21390 aabb 0B       		.uleb128 0xb
 21391 aabc 319D0000 		.long	0x9d31
 21392 aac0 8401     		.uleb128 0x84
 21393 aac2 1B7B0000 		.long	0x7b1b
GAS LISTING /tmp/ccKUqHDa.s 			page 633


 21394 aac6 03       		.byte	0x3
 21395 aac7 CFAA0000 		.long	0xaacf
 21396 aacb EBAA0000 		.long	0xaaeb
 21397 aacf 8501     		.uleb128 0x85
 21398 aad1 00000000 		.long	.LASF1418
 21399 aad5 EBA30000 		.long	0xa3eb
 21400 aad9 8D01     		.uleb128 0x8d
 21401 aadb 5F5F7000 		.string	"__p"
 21402 aadf 05       		.byte	0x5
 21403 aae0 6D       		.byte	0x6d
 21404 aae1 317A0000 		.long	0x7a31
 21405 aae5 13       		.uleb128 0x13
 21406 aae6 257A0000 		.long	0x7a25
 21407 aaea 00       		.byte	0
 21408 aaeb 8A01     		.uleb128 0x8a
 21409 aaed 4A330000 		.long	0x334a
 21410 aaf1 03       		.byte	0x3
 21411 aaf2 1EAB0000 		.long	0xab1e
 21412 aaf6 9001     		.uleb128 0x90
 21413 aaf8 5F5F6100 		.string	"__a"
 21414 aafc 26       		.byte	0x26
 21415 aafd 7E01     		.value	0x17e
 21416 aaff 1EAB0000 		.long	0xab1e
 21417 ab03 9001     		.uleb128 0x90
 21418 ab05 5F5F7000 		.string	"__p"
 21419 ab09 26       		.byte	0x26
 21420 ab0a 7E01     		.value	0x17e
 21421 ab0c 08320000 		.long	0x3208
 21422 ab10 9001     		.uleb128 0x90
 21423 ab12 5F5F6E00 		.string	"__n"
 21424 ab16 26       		.byte	0x26
 21425 ab17 7E01     		.value	0x17e
 21426 ab19 36320000 		.long	0x3236
 21427 ab1d 00       		.byte	0
 21428 ab1e 0B       		.uleb128 0xb
 21429 ab1f 439D0000 		.long	0x9d43
 21430 ab23 8401     		.uleb128 0x84
 21431 ab25 20360000 		.long	0x3620
 21432 ab29 03       		.byte	0x3
 21433 ab2a 32AB0000 		.long	0xab32
 21434 ab2e 57AB0000 		.long	0xab57
 21435 ab32 8501     		.uleb128 0x85
 21436 ab34 00000000 		.long	.LASF1418
 21437 ab38 57AB0000 		.long	0xab57
 21438 ab3c 8D01     		.uleb128 0x8d
 21439 ab3e 5F5F7000 		.string	"__p"
 21440 ab42 04       		.byte	0x4
 21441 ab43 AE       		.byte	0xae
 21442 ab44 9B340000 		.long	0x349b
 21443 ab48 8D01     		.uleb128 0x8d
 21444 ab4a 5F5F6E00 		.string	"__n"
 21445 ab4e 04       		.byte	0x4
 21446 ab4f AE       		.byte	0xae
 21447 ab50 DB070000 		.long	0x7db
 21448 ab54 9101     		.uleb128 0x91
 21449 ab56 00       		.byte	0
 21450 ab57 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 634


 21451 ab58 739D0000 		.long	0x9d73
 21452 ab5c 9401     		.uleb128 0x94
 21453 ab5e 86340000 		.long	0x3486
 21454 ab62 04       		.byte	0x4
 21455 ab63 4F       		.byte	0x4f
 21456 ab64 03       		.byte	0x3
 21457 ab65 6DAB0000 		.long	0xab6d
 21458 ab69 82AB0000 		.long	0xab82
 21459 ab6d 8501     		.uleb128 0x85
 21460 ab6f 00000000 		.long	.LASF1418
 21461 ab73 82AB0000 		.long	0xab82
 21462 ab77 8501     		.uleb128 0x85
 21463 ab79 00000000 		.long	.LASF1428
 21464 ab7d C8840000 		.long	0x84c8
 21465 ab81 00       		.byte	0
 21466 ab82 0B       		.uleb128 0xb
 21467 ab83 559D0000 		.long	0x9d55
 21468 ab87 8401     		.uleb128 0x84
 21469 ab89 CD340000 		.long	0x34cd
 21470 ab8d 03       		.byte	0x3
 21471 ab8e 96AB0000 		.long	0xab96
 21472 ab92 A1AB0000 		.long	0xaba1
 21473 ab96 8501     		.uleb128 0x85
 21474 ab98 00000000 		.long	.LASF1418
 21475 ab9c 57AB0000 		.long	0xab57
 21476 aba0 00       		.byte	0
 21477 aba1 8401     		.uleb128 0x84
 21478 aba3 E4350000 		.long	0x35e4
 21479 aba7 03       		.byte	0x3
 21480 aba8 B0AB0000 		.long	0xabb0
 21481 abac C5AB0000 		.long	0xabc5
 21482 abb0 8501     		.uleb128 0x85
 21483 abb2 00000000 		.long	.LASF1418
 21484 abb6 57AB0000 		.long	0xab57
 21485 abba 8501     		.uleb128 0x85
 21486 abbc 00000000 		.long	.LASF1428
 21487 abc0 C8840000 		.long	0x84c8
 21488 abc4 00       		.byte	0
 21489 abc5 8401     		.uleb128 0x84
 21490 abc7 D77C0000 		.long	0x7cd7
 21491 abcb 03       		.byte	0x3
 21492 abcc D4AB0000 		.long	0xabd4
 21493 abd0 E4AB0000 		.long	0xabe4
 21494 abd4 8501     		.uleb128 0x85
 21495 abd6 00000000 		.long	.LASF1418
 21496 abda 57A40000 		.long	0xa457
 21497 abde 13       		.uleb128 0x13
 21498 abdf E4AB0000 		.long	0xabe4
 21499 abe3 00       		.byte	0
 21500 abe4 0B       		.uleb128 0xb
 21501 abe5 D99D0000 		.long	0x9dd9
 21502 abe9 8401     		.uleb128 0x84
 21503 abeb 76410000 		.long	0x4176
 21504 abef 03       		.byte	0x3
 21505 abf0 F8AB0000 		.long	0xabf8
 21506 abf4 0FAC0000 		.long	0xac0f
 21507 abf8 8501     		.uleb128 0x85
GAS LISTING /tmp/ccKUqHDa.s 			page 635


 21508 abfa 00000000 		.long	.LASF1418
 21509 abfe A4A40000 		.long	0xa4a4
 21510 ac02 8D01     		.uleb128 0x8d
 21511 ac04 5F5F6100 		.string	"__a"
 21512 ac08 19       		.byte	0x19
 21513 ac09 73       		.byte	0x73
 21514 ac0a 0FAC0000 		.long	0xac0f
 21515 ac0e 00       		.byte	0
 21516 ac0f 0B       		.uleb128 0xb
 21517 ac10 EB9D0000 		.long	0x9deb
 21518 ac14 8401     		.uleb128 0x84
 21519 ac16 7B7D0000 		.long	0x7d7b
 21520 ac1a 03       		.byte	0x3
 21521 ac1b 23AC0000 		.long	0xac23
 21522 ac1f 3FAC0000 		.long	0xac3f
 21523 ac23 8501     		.uleb128 0x85
 21524 ac25 00000000 		.long	.LASF1418
 21525 ac29 57A40000 		.long	0xa457
 21526 ac2d 8D01     		.uleb128 0x8d
 21527 ac2f 5F5F7000 		.string	"__p"
 21528 ac33 05       		.byte	0x5
 21529 ac34 6D       		.byte	0x6d
 21530 ac35 917C0000 		.long	0x7c91
 21531 ac39 13       		.uleb128 0x13
 21532 ac3a 857C0000 		.long	0x7c85
 21533 ac3e 00       		.byte	0
 21534 ac3f 8A01     		.uleb128 0x8a
 21535 ac41 BC430000 		.long	0x43bc
 21536 ac45 03       		.byte	0x3
 21537 ac46 72AC0000 		.long	0xac72
 21538 ac4a 9001     		.uleb128 0x90
 21539 ac4c 5F5F6100 		.string	"__a"
 21540 ac50 26       		.byte	0x26
 21541 ac51 7E01     		.value	0x17e
 21542 ac53 72AC0000 		.long	0xac72
 21543 ac57 9001     		.uleb128 0x90
 21544 ac59 5F5F7000 		.string	"__p"
 21545 ac5d 26       		.byte	0x26
 21546 ac5e 7E01     		.value	0x17e
 21547 ac60 7A420000 		.long	0x427a
 21548 ac64 9001     		.uleb128 0x90
 21549 ac66 5F5F6E00 		.string	"__n"
 21550 ac6a 26       		.byte	0x26
 21551 ac6b 7E01     		.value	0x17e
 21552 ac6d A8420000 		.long	0x42a8
 21553 ac71 00       		.byte	0
 21554 ac72 0B       		.uleb128 0xb
 21555 ac73 FD9D0000 		.long	0x9dfd
 21556 ac77 8401     		.uleb128 0x84
 21557 ac79 92460000 		.long	0x4692
 21558 ac7d 03       		.byte	0x3
 21559 ac7e 86AC0000 		.long	0xac86
 21560 ac82 ABAC0000 		.long	0xacab
 21561 ac86 8501     		.uleb128 0x85
 21562 ac88 00000000 		.long	.LASF1418
 21563 ac8c ABAC0000 		.long	0xacab
 21564 ac90 8D01     		.uleb128 0x8d
GAS LISTING /tmp/ccKUqHDa.s 			page 636


 21565 ac92 5F5F7000 		.string	"__p"
 21566 ac96 04       		.byte	0x4
 21567 ac97 AE       		.byte	0xae
 21568 ac98 0D450000 		.long	0x450d
 21569 ac9c 8D01     		.uleb128 0x8d
 21570 ac9e 5F5F6E00 		.string	"__n"
 21571 aca2 04       		.byte	0x4
 21572 aca3 AE       		.byte	0xae
 21573 aca4 DB070000 		.long	0x7db
 21574 aca8 9101     		.uleb128 0x91
 21575 acaa 00       		.byte	0
 21576 acab 0B       		.uleb128 0xb
 21577 acac 2D9E0000 		.long	0x9e2d
 21578 acb0 9401     		.uleb128 0x94
 21579 acb2 F8440000 		.long	0x44f8
 21580 acb6 04       		.byte	0x4
 21581 acb7 4F       		.byte	0x4f
 21582 acb8 03       		.byte	0x3
 21583 acb9 C1AC0000 		.long	0xacc1
 21584 acbd D6AC0000 		.long	0xacd6
 21585 acc1 8501     		.uleb128 0x85
 21586 acc3 00000000 		.long	.LASF1418
 21587 acc7 D6AC0000 		.long	0xacd6
 21588 accb 8501     		.uleb128 0x85
 21589 accd 00000000 		.long	.LASF1428
 21590 acd1 C8840000 		.long	0x84c8
 21591 acd5 00       		.byte	0
 21592 acd6 0B       		.uleb128 0xb
 21593 acd7 0F9E0000 		.long	0x9e0f
 21594 acdb 8401     		.uleb128 0x84
 21595 acdd 3F450000 		.long	0x453f
 21596 ace1 03       		.byte	0x3
 21597 ace2 EAAC0000 		.long	0xacea
 21598 ace6 F5AC0000 		.long	0xacf5
 21599 acea 8501     		.uleb128 0x85
 21600 acec 00000000 		.long	.LASF1418
 21601 acf0 ABAC0000 		.long	0xacab
 21602 acf4 00       		.byte	0
 21603 acf5 8401     		.uleb128 0x84
 21604 acf7 56460000 		.long	0x4656
 21605 acfb 03       		.byte	0x3
 21606 acfc 04AD0000 		.long	0xad04
 21607 ad00 19AD0000 		.long	0xad19
 21608 ad04 8501     		.uleb128 0x85
 21609 ad06 00000000 		.long	.LASF1418
 21610 ad0a ABAC0000 		.long	0xacab
 21611 ad0e 8501     		.uleb128 0x85
 21612 ad10 00000000 		.long	.LASF1428
 21613 ad14 C8840000 		.long	0x84c8
 21614 ad18 00       		.byte	0
 21615 ad19 8401     		.uleb128 0x84
 21616 ad1b 377F0000 		.long	0x7f37
 21617 ad1f 03       		.byte	0x3
 21618 ad20 28AD0000 		.long	0xad28
 21619 ad24 38AD0000 		.long	0xad38
 21620 ad28 8501     		.uleb128 0x85
 21621 ad2a 00000000 		.long	.LASF1418
GAS LISTING /tmp/ccKUqHDa.s 			page 637


 21622 ad2e 80A50000 		.long	0xa580
 21623 ad32 13       		.uleb128 0x13
 21624 ad33 38AD0000 		.long	0xad38
 21625 ad37 00       		.byte	0
 21626 ad38 0B       		.uleb128 0xb
 21627 ad39 099F0000 		.long	0x9f09
 21628 ad3d 8401     		.uleb128 0x84
 21629 ad3f 80590000 		.long	0x5980
 21630 ad43 03       		.byte	0x3
 21631 ad44 4CAD0000 		.long	0xad4c
 21632 ad48 63AD0000 		.long	0xad63
 21633 ad4c 8501     		.uleb128 0x85
 21634 ad4e 00000000 		.long	.LASF1418
 21635 ad52 CDA50000 		.long	0xa5cd
 21636 ad56 8D01     		.uleb128 0x8d
 21637 ad58 5F5F6100 		.string	"__a"
 21638 ad5c 19       		.byte	0x19
 21639 ad5d 73       		.byte	0x73
 21640 ad5e 63AD0000 		.long	0xad63
 21641 ad62 00       		.byte	0
 21642 ad63 0B       		.uleb128 0xb
 21643 ad64 1B9F0000 		.long	0x9f1b
 21644 ad68 8401     		.uleb128 0x84
 21645 ad6a DB7F0000 		.long	0x7fdb
 21646 ad6e 03       		.byte	0x3
 21647 ad6f 77AD0000 		.long	0xad77
 21648 ad73 93AD0000 		.long	0xad93
 21649 ad77 8501     		.uleb128 0x85
 21650 ad79 00000000 		.long	.LASF1418
 21651 ad7d 80A50000 		.long	0xa580
 21652 ad81 8D01     		.uleb128 0x8d
 21653 ad83 5F5F7000 		.string	"__p"
 21654 ad87 05       		.byte	0x5
 21655 ad88 6D       		.byte	0x6d
 21656 ad89 F17E0000 		.long	0x7ef1
 21657 ad8d 13       		.uleb128 0x13
 21658 ad8e E57E0000 		.long	0x7ee5
 21659 ad92 00       		.byte	0
 21660 ad93 8A01     		.uleb128 0x8a
 21661 ad95 C65B0000 		.long	0x5bc6
 21662 ad99 03       		.byte	0x3
 21663 ad9a C6AD0000 		.long	0xadc6
 21664 ad9e 9001     		.uleb128 0x90
 21665 ada0 5F5F6100 		.string	"__a"
 21666 ada4 26       		.byte	0x26
 21667 ada5 7E01     		.value	0x17e
 21668 ada7 C6AD0000 		.long	0xadc6
 21669 adab 9001     		.uleb128 0x90
 21670 adad 5F5F7000 		.string	"__p"
 21671 adb1 26       		.byte	0x26
 21672 adb2 7E01     		.value	0x17e
 21673 adb4 845A0000 		.long	0x5a84
 21674 adb8 9001     		.uleb128 0x90
 21675 adba 5F5F6E00 		.string	"__n"
 21676 adbe 26       		.byte	0x26
 21677 adbf 7E01     		.value	0x17e
 21678 adc1 B25A0000 		.long	0x5ab2
GAS LISTING /tmp/ccKUqHDa.s 			page 638


 21679 adc5 00       		.byte	0
 21680 adc6 0B       		.uleb128 0xb
 21681 adc7 2D9F0000 		.long	0x9f2d
 21682 adcb 8401     		.uleb128 0x84
 21683 adcd 9C5E0000 		.long	0x5e9c
 21684 add1 03       		.byte	0x3
 21685 add2 DAAD0000 		.long	0xadda
 21686 add6 FFAD0000 		.long	0xadff
 21687 adda 8501     		.uleb128 0x85
 21688 addc 00000000 		.long	.LASF1418
 21689 ade0 FFAD0000 		.long	0xadff
 21690 ade4 8D01     		.uleb128 0x8d
 21691 ade6 5F5F7000 		.string	"__p"
 21692 adea 04       		.byte	0x4
 21693 adeb AE       		.byte	0xae
 21694 adec 175D0000 		.long	0x5d17
 21695 adf0 8D01     		.uleb128 0x8d
 21696 adf2 5F5F6E00 		.string	"__n"
 21697 adf6 04       		.byte	0x4
 21698 adf7 AE       		.byte	0xae
 21699 adf8 DB070000 		.long	0x7db
 21700 adfc 9101     		.uleb128 0x91
 21701 adfe 00       		.byte	0
 21702 adff 0B       		.uleb128 0xb
 21703 ae00 5D9F0000 		.long	0x9f5d
 21704 ae04 9401     		.uleb128 0x94
 21705 ae06 025D0000 		.long	0x5d02
 21706 ae0a 04       		.byte	0x4
 21707 ae0b 4F       		.byte	0x4f
 21708 ae0c 03       		.byte	0x3
 21709 ae0d 15AE0000 		.long	0xae15
 21710 ae11 2AAE0000 		.long	0xae2a
 21711 ae15 8501     		.uleb128 0x85
 21712 ae17 00000000 		.long	.LASF1418
 21713 ae1b 2AAE0000 		.long	0xae2a
 21714 ae1f 8501     		.uleb128 0x85
 21715 ae21 00000000 		.long	.LASF1428
 21716 ae25 C8840000 		.long	0x84c8
 21717 ae29 00       		.byte	0
 21718 ae2a 0B       		.uleb128 0xb
 21719 ae2b 3F9F0000 		.long	0x9f3f
 21720 ae2f 8401     		.uleb128 0x84
 21721 ae31 495D0000 		.long	0x5d49
 21722 ae35 03       		.byte	0x3
 21723 ae36 3EAE0000 		.long	0xae3e
 21724 ae3a 49AE0000 		.long	0xae49
 21725 ae3e 8501     		.uleb128 0x85
 21726 ae40 00000000 		.long	.LASF1418
 21727 ae44 FFAD0000 		.long	0xadff
 21728 ae48 00       		.byte	0
 21729 ae49 8401     		.uleb128 0x84
 21730 ae4b 605E0000 		.long	0x5e60
 21731 ae4f 03       		.byte	0x3
 21732 ae50 58AE0000 		.long	0xae58
 21733 ae54 6DAE0000 		.long	0xae6d
 21734 ae58 8501     		.uleb128 0x85
 21735 ae5a 00000000 		.long	.LASF1418
GAS LISTING /tmp/ccKUqHDa.s 			page 639


 21736 ae5e FFAD0000 		.long	0xadff
 21737 ae62 8501     		.uleb128 0x85
 21738 ae64 00000000 		.long	.LASF1428
 21739 ae68 C8840000 		.long	0x84c8
 21740 ae6c 00       		.byte	0
 21741 ae6d 8401     		.uleb128 0x84
 21742 ae6f 20580000 		.long	0x5820
 21743 ae73 03       		.byte	0x3
 21744 ae74 7CAE0000 		.long	0xae7c
 21745 ae78 87AE0000 		.long	0xae87
 21746 ae7c 8501     		.uleb128 0x85
 21747 ae7e 00000000 		.long	.LASF1418
 21748 ae82 BD9F0000 		.long	0x9fbd
 21749 ae86 00       		.byte	0
 21750 ae87 8A01     		.uleb128 0x8a
 21751 ae89 2A6D0000 		.long	0x6d2a
 21752 ae8d 03       		.byte	0x3
 21753 ae8e A8AE0000 		.long	0xaea8
 21754 ae92 09       		.uleb128 0x9
 21755 ae93 5F547000 		.string	"_Tp"
 21756 ae97 FC570000 		.long	0x57fc
 21757 ae9b 8D01     		.uleb128 0x8d
 21758 ae9d 5F5F7200 		.string	"__r"
 21759 aea1 2A       		.byte	0x2a
 21760 aea2 2F       		.byte	0x2f
 21761 aea3 A8AE0000 		.long	0xaea8
 21762 aea7 00       		.byte	0
 21763 aea8 0B       		.uleb128 0xb
 21764 aea9 F79E0000 		.long	0x9ef7
 21765 aead 8A01     		.uleb128 0x8a
 21766 aeaf 486D0000 		.long	0x6d48
 21767 aeb3 03       		.byte	0x3
 21768 aeb4 E0AE0000 		.long	0xaee0
 21769 aeb8 09       		.uleb128 0x9
 21770 aeb9 5F543100 		.string	"_T1"
 21771 aebd FC570000 		.long	0x57fc
 21772 aec1 61       		.uleb128 0x61
 21773 aec2 00000000 		.long	.LASF1436
 21774 aec6 8D01     		.uleb128 0x8d
 21775 aec8 5F5F7000 		.string	"__p"
 21776 aecc 0C       		.byte	0xc
 21777 aecd 4A       		.byte	0x4a
 21778 aece EB9E0000 		.long	0x9eeb
 21779 aed2 9501     		.uleb128 0x95
 21780 aed4 0C       		.byte	0xc
 21781 aed5 4A       		.byte	0x4a
 21782 aed6 8701     		.uleb128 0x87
 21783 aed8 9601     		.uleb128 0x96
 21784 aeda 7CAE0000 		.long	0xae7c
 21785 aede 00       		.byte	0
 21786 aedf 00       		.byte	0
 21787 aee0 8A01     		.uleb128 0x8a
 21788 aee2 036A0000 		.long	0x6a03
 21789 aee6 03       		.byte	0x3
 21790 aee7 27AF0000 		.long	0xaf27
 21791 aeeb 1C       		.uleb128 0x1c
 21792 aeec 00000000 		.long	.LASF30
GAS LISTING /tmp/ccKUqHDa.s 			page 640


 21793 aef0 EB9E0000 		.long	0x9eeb
 21794 aef4 1C       		.uleb128 0x1c
 21795 aef5 00000000 		.long	.LASF322
 21796 aef9 30000000 		.long	0x30
 21797 aefd 77       		.uleb128 0x77
 21798 aefe 00000000 		.long	.LASF1432
 21799 af02 0E       		.byte	0xe
 21800 af03 FD01     		.value	0x1fd
 21801 af05 EB9E0000 		.long	0x9eeb
 21802 af09 9001     		.uleb128 0x90
 21803 af0b 5F5F6E00 		.string	"__n"
 21804 af0f 0E       		.byte	0xe
 21805 af10 FD01     		.value	0x1fd
 21806 af12 30000000 		.long	0x30
 21807 af16 8701     		.uleb128 0x87
 21808 af18 9701     		.uleb128 0x97
 21809 af1a 00000000 		.long	.LASF1437
 21810 af1e 0E       		.byte	0xe
 21811 af1f FF01     		.value	0x1ff
 21812 af21 EB9E0000 		.long	0x9eeb
 21813 af25 00       		.byte	0
 21814 af26 00       		.byte	0
 21815 af27 8A01     		.uleb128 0x8a
 21816 af29 676D0000 		.long	0x6d67
 21817 af2d 03       		.byte	0x3
 21818 af2e 6EAF0000 		.long	0xaf6e
 21819 af32 1C       		.uleb128 0x1c
 21820 af33 00000000 		.long	.LASF30
 21821 af37 EB9E0000 		.long	0x9eeb
 21822 af3b 1C       		.uleb128 0x1c
 21823 af3c 00000000 		.long	.LASF322
 21824 af40 30000000 		.long	0x30
 21825 af44 77       		.uleb128 0x77
 21826 af45 00000000 		.long	.LASF1432
 21827 af49 0E       		.byte	0xe
 21828 af4a 3102     		.value	0x231
 21829 af4c EB9E0000 		.long	0x9eeb
 21830 af50 9001     		.uleb128 0x90
 21831 af52 5F5F6E00 		.string	"__n"
 21832 af56 0E       		.byte	0xe
 21833 af57 3102     		.value	0x231
 21834 af59 30000000 		.long	0x30
 21835 af5d 8701     		.uleb128 0x87
 21836 af5f 9701     		.uleb128 0x97
 21837 af61 00000000 		.long	.LASF1438
 21838 af65 0E       		.byte	0xe
 21839 af66 3602     		.value	0x236
 21840 af68 9E710000 		.long	0x719e
 21841 af6c 00       		.byte	0
 21842 af6d 00       		.byte	0
 21843 af6e 8A01     		.uleb128 0x8a
 21844 af70 906D0000 		.long	0x6d90
 21845 af74 03       		.byte	0x3
 21846 af75 B3AF0000 		.long	0xafb3
 21847 af79 1C       		.uleb128 0x1c
 21848 af7a 00000000 		.long	.LASF30
 21849 af7e EB9E0000 		.long	0x9eeb
GAS LISTING /tmp/ccKUqHDa.s 			page 641


 21850 af82 1C       		.uleb128 0x1c
 21851 af83 00000000 		.long	.LASF322
 21852 af87 30000000 		.long	0x30
 21853 af8b 09       		.uleb128 0x9
 21854 af8c 5F547000 		.string	"_Tp"
 21855 af90 FC570000 		.long	0x57fc
 21856 af94 77       		.uleb128 0x77
 21857 af95 00000000 		.long	.LASF1432
 21858 af99 0E       		.byte	0xe
 21859 af9a 7502     		.value	0x275
 21860 af9c EB9E0000 		.long	0x9eeb
 21861 afa0 9001     		.uleb128 0x90
 21862 afa2 5F5F6E00 		.string	"__n"
 21863 afa6 0E       		.byte	0xe
 21864 afa7 7502     		.value	0x275
 21865 afa9 30000000 		.long	0x30
 21866 afad 13       		.uleb128 0x13
 21867 afae B3AF0000 		.long	0xafb3
 21868 afb2 00       		.byte	0
 21869 afb3 0B       		.uleb128 0xb
 21870 afb4 2D9F0000 		.long	0x9f2d
 21871 afb8 8A01     		.uleb128 0x8a
 21872 afba C76D0000 		.long	0x6dc7
 21873 afbe 03       		.byte	0x3
 21874 afbf E5AF0000 		.long	0xafe5
 21875 afc3 09       		.uleb128 0x9
 21876 afc4 5F547000 		.string	"_Tp"
 21877 afc8 30000000 		.long	0x30
 21878 afcc 8D01     		.uleb128 0x8d
 21879 afce 5F5F6100 		.string	"__a"
 21880 afd2 06       		.byte	0x6
 21881 afd3 C2       		.byte	0xc2
 21882 afd4 E5AF0000 		.long	0xafe5
 21883 afd8 8D01     		.uleb128 0x8d
 21884 afda 5F5F6200 		.string	"__b"
 21885 afde 06       		.byte	0x6
 21886 afdf C2       		.byte	0xc2
 21887 afe0 EAAF0000 		.long	0xafea
 21888 afe4 00       		.byte	0
 21889 afe5 0B       		.uleb128 0xb
 21890 afe6 1D990000 		.long	0x991d
 21891 afea 0B       		.uleb128 0xb
 21892 afeb 1D990000 		.long	0x991d
 21893 afef 9801     		.uleb128 0x98
 21894 aff1 F0270000 		.long	0x27f0
 21895 aff5 03       		.byte	0x3
 21896 aff6 9801     		.uleb128 0x98
 21897 aff8 DF270000 		.long	0x27df
 21898 affc 03       		.byte	0x3
 21899 affd 8A01     		.uleb128 0x8a
 21900 afff EA6D0000 		.long	0x6dea
 21901 b003 03       		.byte	0x3
 21902 b004 16B00000 		.long	0xb016
 21903 b008 9001     		.uleb128 0x90
 21904 b00a 5F5F7800 		.string	"__x"
 21905 b00e 0F       		.byte	0xf
 21906 b00f 6901     		.value	0x169
GAS LISTING /tmp/ccKUqHDa.s 			page 642


 21907 b011 05840000 		.long	0x8405
 21908 b015 00       		.byte	0
 21909 b016 8A01     		.uleb128 0x8a
 21910 b018 006E0000 		.long	0x6e00
 21911 b01c 03       		.byte	0x3
 21912 b01d 43B00000 		.long	0xb043
 21913 b021 09       		.uleb128 0x9
 21914 b022 5F547000 		.string	"_Tp"
 21915 b026 30000000 		.long	0x30
 21916 b02a 8D01     		.uleb128 0x8d
 21917 b02c 5F5F6100 		.string	"__a"
 21918 b030 06       		.byte	0x6
 21919 b031 D9       		.byte	0xd9
 21920 b032 43B00000 		.long	0xb043
 21921 b036 8D01     		.uleb128 0x8d
 21922 b038 5F5F6200 		.string	"__b"
 21923 b03c 06       		.byte	0x6
 21924 b03d D9       		.byte	0xd9
 21925 b03e 48B00000 		.long	0xb048
 21926 b042 00       		.byte	0
 21927 b043 0B       		.uleb128 0xb
 21928 b044 1D990000 		.long	0x991d
 21929 b048 0B       		.uleb128 0xb
 21930 b049 1D990000 		.long	0x991d
 21931 b04d 8401     		.uleb128 0x84
 21932 b04f E0240000 		.long	0x24e0
 21933 b053 03       		.byte	0x3
 21934 b054 5CB00000 		.long	0xb05c
 21935 b058 73B00000 		.long	0xb073
 21936 b05c 8501     		.uleb128 0x85
 21937 b05e 00000000 		.long	.LASF1418
 21938 b062 73B00000 		.long	0xb073
 21939 b066 8D01     		.uleb128 0x8d
 21940 b068 5F5F6700 		.string	"__g"
 21941 b06c 0B       		.byte	0xb
 21942 b06d AB       		.byte	0xab
 21943 b06e 78B00000 		.long	0xb078
 21944 b072 00       		.byte	0
 21945 b073 0B       		.uleb128 0xb
 21946 b074 E59F0000 		.long	0x9fe5
 21947 b078 0B       		.uleb128 0xb
 21948 b079 DF9F0000 		.long	0x9fdf
 21949 b07d 8401     		.uleb128 0x84
 21950 b07f 34250000 		.long	0x2534
 21951 b083 03       		.byte	0x3
 21952 b084 8CB00000 		.long	0xb08c
 21953 b088 97B00000 		.long	0xb097
 21954 b08c 8501     		.uleb128 0x85
 21955 b08e 00000000 		.long	.LASF1418
 21956 b092 73B00000 		.long	0xb073
 21957 b096 00       		.byte	0
 21958 b097 8A01     		.uleb128 0x8a
 21959 b099 236E0000 		.long	0x6e23
 21960 b09d 03       		.byte	0x3
 21961 b09e B0B00000 		.long	0xb0b0
 21962 b0a2 9001     		.uleb128 0x90
 21963 b0a4 5F5F7800 		.string	"__x"
GAS LISTING /tmp/ccKUqHDa.s 			page 643


 21964 b0a8 0F       		.byte	0xf
 21965 b0a9 6501     		.value	0x165
 21966 b0ab 29000000 		.long	0x29
 21967 b0af 00       		.byte	0
 21968 b0b0 8A01     		.uleb128 0x8a
 21969 b0b2 396E0000 		.long	0x6e39
 21970 b0b6 03       		.byte	0x3
 21971 b0b7 C9B00000 		.long	0xb0c9
 21972 b0bb 9001     		.uleb128 0x90
 21973 b0bd 5F5F7800 		.string	"__x"
 21974 b0c1 0F       		.byte	0xf
 21975 b0c2 E201     		.value	0x1e2
 21976 b0c4 29000000 		.long	0x29
 21977 b0c8 00       		.byte	0
 21978 b0c9 8401     		.uleb128 0x84
 21979 b0cb 91570000 		.long	0x5791
 21980 b0cf 03       		.byte	0x3
 21981 b0d0 E1B00000 		.long	0xb0e1
 21982 b0d4 F8B00000 		.long	0xb0f8
 21983 b0d8 1C       		.uleb128 0x1c
 21984 b0d9 00000000 		.long	.LASF791
 21985 b0dd B0260000 		.long	0x26b0
 21986 b0e1 8501     		.uleb128 0x85
 21987 b0e3 00000000 		.long	.LASF1418
 21988 b0e7 F8B00000 		.long	0xb0f8
 21989 b0eb 77       		.uleb128 0x77
 21990 b0ec 00000000 		.long	.LASF1439
 21991 b0f0 0B       		.byte	0xb
 21992 b0f1 9508     		.value	0x895
 21993 b0f3 FDB00000 		.long	0xb0fd
 21994 b0f7 00       		.byte	0
 21995 b0f8 0B       		.uleb128 0xb
 21996 b0f9 D99E0000 		.long	0x9ed9
 21997 b0fd 0B       		.uleb128 0xb
 21998 b0fe DF9F0000 		.long	0x9fdf
 21999 b102 8401     		.uleb128 0x84
 22000 b104 A4810000 		.long	0x81a4
 22001 b108 03       		.byte	0x3
 22002 b109 11B10000 		.long	0xb111
 22003 b10d 1CB10000 		.long	0xb11c
 22004 b111 8501     		.uleb128 0x85
 22005 b113 00000000 		.long	.LASF1418
 22006 b117 1DA60000 		.long	0xa61d
 22007 b11b 00       		.byte	0
 22008 b11c 8401     		.uleb128 0x84
 22009 b11e AA580000 		.long	0x58aa
 22010 b122 03       		.byte	0x3
 22011 b123 2BB10000 		.long	0xb12b
 22012 b127 42B10000 		.long	0xb142
 22013 b12b 8501     		.uleb128 0x85
 22014 b12d 00000000 		.long	.LASF1418
 22015 b131 BD9F0000 		.long	0x9fbd
 22016 b135 8D01     		.uleb128 0x8d
 22017 b137 5F5F7000 		.string	"__p"
 22018 b13b 0D       		.byte	0xd
 22019 b13c A6       		.byte	0xa6
 22020 b13d 42B10000 		.long	0xb142
GAS LISTING /tmp/ccKUqHDa.s 			page 644


 22021 b141 00       		.byte	0
 22022 b142 0B       		.uleb128 0xb
 22023 b143 CE9F0000 		.long	0x9fce
 22024 b147 8401     		.uleb128 0x84
 22025 b149 E2810000 		.long	0x81e2
 22026 b14d 03       		.byte	0x3
 22027 b14e 56B10000 		.long	0xb156
 22028 b152 61B10000 		.long	0xb161
 22029 b156 8501     		.uleb128 0x85
 22030 b158 00000000 		.long	.LASF1418
 22031 b15c F9A50000 		.long	0xa5f9
 22032 b160 00       		.byte	0
 22033 b161 79       		.uleb128 0x79
 22034 b162 08       		.byte	0x8
 22035 b163 53830000 		.long	0x8353
 22036 b167 8A01     		.uleb128 0x8a
 22037 b169 DB830000 		.long	0x83db
 22038 b16d 03       		.byte	0x3
 22039 b16e 9DB10000 		.long	0xb19d
 22040 b172 1C       		.uleb128 0x1c
 22041 b173 00000000 		.long	.LASF491
 22042 b177 EB9E0000 		.long	0x9eeb
 22043 b17b 1C       		.uleb128 0x1c
 22044 b17c 00000000 		.long	.LASF1015
 22045 b180 F65E0000 		.long	0x5ef6
 22046 b184 77       		.uleb128 0x77
 22047 b185 00000000 		.long	.LASF1440
 22048 b189 30       		.byte	0x30
 22049 b18a 3D03     		.value	0x33d
 22050 b18c 9DB10000 		.long	0xb19d
 22051 b190 77       		.uleb128 0x77
 22052 b191 00000000 		.long	.LASF1441
 22053 b195 30       		.byte	0x30
 22054 b196 3E03     		.value	0x33e
 22055 b198 A2B10000 		.long	0xb1a2
 22056 b19c 00       		.byte	0
 22057 b19d 0B       		.uleb128 0xb
 22058 b19e 61B10000 		.long	0xb161
 22059 b1a2 0B       		.uleb128 0xb
 22060 b1a3 61B10000 		.long	0xb161
 22061 b1a7 8401     		.uleb128 0x84
 22062 b1a9 3F7B0000 		.long	0x7b3f
 22063 b1ad 03       		.byte	0x3
 22064 b1ae B6B10000 		.long	0xb1b6
 22065 b1b2 C1B10000 		.long	0xb1c1
 22066 b1b6 8501     		.uleb128 0x85
 22067 b1b8 00000000 		.long	.LASF1418
 22068 b1bc C1B10000 		.long	0xb1c1
 22069 b1c0 00       		.byte	0
 22070 b1c1 0B       		.uleb128 0xb
 22071 b1c2 259D0000 		.long	0x9d25
 22072 b1c6 8401     		.uleb128 0x84
 22073 b1c8 F37A0000 		.long	0x7af3
 22074 b1cc 03       		.byte	0x3
 22075 b1cd D5B10000 		.long	0xb1d5
 22076 b1d1 F1B10000 		.long	0xb1f1
 22077 b1d5 8501     		.uleb128 0x85
GAS LISTING /tmp/ccKUqHDa.s 			page 645


 22078 b1d7 00000000 		.long	.LASF1418
 22079 b1db EBA30000 		.long	0xa3eb
 22080 b1df 8D01     		.uleb128 0x8d
 22081 b1e1 5F5F6E00 		.string	"__n"
 22082 b1e5 05       		.byte	0x5
 22083 b1e6 63       		.byte	0x63
 22084 b1e7 257A0000 		.long	0x7a25
 22085 b1eb 13       		.uleb128 0x13
 22086 b1ec 96850000 		.long	0x8596
 22087 b1f0 00       		.byte	0
 22088 b1f1 8A01     		.uleb128 0x8a
 22089 b1f3 07330000 		.long	0x3307
 22090 b1f7 03       		.byte	0x3
 22091 b1f8 17B20000 		.long	0xb217
 22092 b1fc 9001     		.uleb128 0x90
 22093 b1fe 5F5F6100 		.string	"__a"
 22094 b202 26       		.byte	0x26
 22095 b203 6401     		.value	0x164
 22096 b205 17B20000 		.long	0xb217
 22097 b209 9001     		.uleb128 0x90
 22098 b20b 5F5F6E00 		.string	"__n"
 22099 b20f 26       		.byte	0x26
 22100 b210 6401     		.value	0x164
 22101 b212 36320000 		.long	0x3236
 22102 b216 00       		.byte	0
 22103 b217 0B       		.uleb128 0xb
 22104 b218 439D0000 		.long	0x9d43
 22105 b21c 8401     		.uleb128 0x84
 22106 b21e FE350000 		.long	0x35fe
 22107 b222 03       		.byte	0x3
 22108 b223 2BB20000 		.long	0xb22b
 22109 b227 44B20000 		.long	0xb244
 22110 b22b 8501     		.uleb128 0x85
 22111 b22d 00000000 		.long	.LASF1418
 22112 b231 57AB0000 		.long	0xab57
 22113 b235 8D01     		.uleb128 0x8d
 22114 b237 5F5F6E00 		.string	"__n"
 22115 b23b 04       		.byte	0x4
 22116 b23c A7       		.byte	0xa7
 22117 b23d DB070000 		.long	0x7db
 22118 b241 9101     		.uleb128 0x91
 22119 b243 00       		.byte	0
 22120 b244 8401     		.uleb128 0x84
 22121 b246 34340000 		.long	0x3434
 22122 b24a 03       		.byte	0x3
 22123 b24b 53B20000 		.long	0xb253
 22124 b24f 6AB20000 		.long	0xb26a
 22125 b253 8501     		.uleb128 0x85
 22126 b255 00000000 		.long	.LASF1418
 22127 b259 82AB0000 		.long	0xab82
 22128 b25d 8D01     		.uleb128 0x8d
 22129 b25f 5F5F6100 		.string	"__a"
 22130 b263 04       		.byte	0x4
 22131 b264 5A       		.byte	0x5a
 22132 b265 6AB20000 		.long	0xb26a
 22133 b269 00       		.byte	0
 22134 b26a 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 646


 22135 b26b 5B9D0000 		.long	0x9d5b
 22136 b26f 8A01     		.uleb128 0x8a
 22137 b271 4F6E0000 		.long	0x6e4f
 22138 b275 03       		.byte	0x3
 22139 b276 DBB20000 		.long	0xb2db
 22140 b27a 1C       		.uleb128 0x1c
 22141 b27b 00000000 		.long	.LASF936
 22142 b27f 829C0000 		.long	0x9c82
 22143 b283 1C       		.uleb128 0x1c
 22144 b284 00000000 		.long	.LASF322
 22145 b288 30000000 		.long	0x30
 22146 b28c 09       		.uleb128 0x9
 22147 b28d 5F547000 		.string	"_Tp"
 22148 b291 29000000 		.long	0x29
 22149 b295 77       		.uleb128 0x77
 22150 b296 00000000 		.long	.LASF1432
 22151 b29a 06       		.byte	0x6
 22152 b29b F502     		.value	0x2f5
 22153 b29d 829C0000 		.long	0x9c82
 22154 b2a1 9001     		.uleb128 0x90
 22155 b2a3 5F5F6E00 		.string	"__n"
 22156 b2a7 06       		.byte	0x6
 22157 b2a8 F502     		.value	0x2f5
 22158 b2aa 30000000 		.long	0x30
 22159 b2ae 77       		.uleb128 0x77
 22160 b2af 00000000 		.long	.LASF1214
 22161 b2b3 06       		.byte	0x6
 22162 b2b4 F502     		.value	0x2f5
 22163 b2b6 DBB20000 		.long	0xb2db
 22164 b2ba 8701     		.uleb128 0x87
 22165 b2bc 9701     		.uleb128 0x97
 22166 b2be 00000000 		.long	.LASF1442
 22167 b2c2 06       		.byte	0x6
 22168 b2c3 F702     		.value	0x2f7
 22169 b2c5 089D0000 		.long	0x9d08
 22170 b2c9 8701     		.uleb128 0x87
 22171 b2cb 9701     		.uleb128 0x97
 22172 b2cd 00000000 		.long	.LASF1443
 22173 b2d1 06       		.byte	0x6
 22174 b2d2 F802     		.value	0x2f8
 22175 b2d4 30000000 		.long	0x30
 22176 b2d8 00       		.byte	0
 22177 b2d9 00       		.byte	0
 22178 b2da 00       		.byte	0
 22179 b2db 0B       		.uleb128 0xb
 22180 b2dc 139D0000 		.long	0x9d13
 22181 b2e0 8401     		.uleb128 0x84
 22182 b2e2 9F7D0000 		.long	0x7d9f
 22183 b2e6 03       		.byte	0x3
 22184 b2e7 EFB20000 		.long	0xb2ef
 22185 b2eb FAB20000 		.long	0xb2fa
 22186 b2ef 8501     		.uleb128 0x85
 22187 b2f1 00000000 		.long	.LASF1418
 22188 b2f5 FAB20000 		.long	0xb2fa
 22189 b2f9 00       		.byte	0
 22190 b2fa 0B       		.uleb128 0xb
 22191 b2fb DF9D0000 		.long	0x9ddf
GAS LISTING /tmp/ccKUqHDa.s 			page 647


 22192 b2ff 8401     		.uleb128 0x84
 22193 b301 537D0000 		.long	0x7d53
 22194 b305 03       		.byte	0x3
 22195 b306 0EB30000 		.long	0xb30e
 22196 b30a 2AB30000 		.long	0xb32a
 22197 b30e 8501     		.uleb128 0x85
 22198 b310 00000000 		.long	.LASF1418
 22199 b314 57A40000 		.long	0xa457
 22200 b318 8D01     		.uleb128 0x8d
 22201 b31a 5F5F6E00 		.string	"__n"
 22202 b31e 05       		.byte	0x5
 22203 b31f 63       		.byte	0x63
 22204 b320 857C0000 		.long	0x7c85
 22205 b324 13       		.uleb128 0x13
 22206 b325 96850000 		.long	0x8596
 22207 b329 00       		.byte	0
 22208 b32a 8A01     		.uleb128 0x8a
 22209 b32c 79430000 		.long	0x4379
 22210 b330 03       		.byte	0x3
 22211 b331 50B30000 		.long	0xb350
 22212 b335 9001     		.uleb128 0x90
 22213 b337 5F5F6100 		.string	"__a"
 22214 b33b 26       		.byte	0x26
 22215 b33c 6401     		.value	0x164
 22216 b33e 50B30000 		.long	0xb350
 22217 b342 9001     		.uleb128 0x90
 22218 b344 5F5F6E00 		.string	"__n"
 22219 b348 26       		.byte	0x26
 22220 b349 6401     		.value	0x164
 22221 b34b A8420000 		.long	0x42a8
 22222 b34f 00       		.byte	0
 22223 b350 0B       		.uleb128 0xb
 22224 b351 FD9D0000 		.long	0x9dfd
 22225 b355 8401     		.uleb128 0x84
 22226 b357 70460000 		.long	0x4670
 22227 b35b 03       		.byte	0x3
 22228 b35c 64B30000 		.long	0xb364
 22229 b360 7DB30000 		.long	0xb37d
 22230 b364 8501     		.uleb128 0x85
 22231 b366 00000000 		.long	.LASF1418
 22232 b36a ABAC0000 		.long	0xacab
 22233 b36e 8D01     		.uleb128 0x8d
 22234 b370 5F5F6E00 		.string	"__n"
 22235 b374 04       		.byte	0x4
 22236 b375 A7       		.byte	0xa7
 22237 b376 DB070000 		.long	0x7db
 22238 b37a 9101     		.uleb128 0x91
 22239 b37c 00       		.byte	0
 22240 b37d 8401     		.uleb128 0x84
 22241 b37f A6440000 		.long	0x44a6
 22242 b383 03       		.byte	0x3
 22243 b384 8CB30000 		.long	0xb38c
 22244 b388 A3B30000 		.long	0xb3a3
 22245 b38c 8501     		.uleb128 0x85
 22246 b38e 00000000 		.long	.LASF1418
 22247 b392 D6AC0000 		.long	0xacd6
 22248 b396 8D01     		.uleb128 0x8d
GAS LISTING /tmp/ccKUqHDa.s 			page 648


 22249 b398 5F5F6100 		.string	"__a"
 22250 b39c 04       		.byte	0x4
 22251 b39d 5A       		.byte	0x5a
 22252 b39e A3B30000 		.long	0xb3a3
 22253 b3a2 00       		.byte	0
 22254 b3a3 0B       		.uleb128 0xb
 22255 b3a4 159E0000 		.long	0x9e15
 22256 b3a8 8401     		.uleb128 0x84
 22257 b3aa B5460000 		.long	0x46b5
 22258 b3ae 03       		.byte	0x3
 22259 b3af B7B30000 		.long	0xb3b7
 22260 b3b3 CEB30000 		.long	0xb3ce
 22261 b3b7 8501     		.uleb128 0x85
 22262 b3b9 00000000 		.long	.LASF1418
 22263 b3bd ABAC0000 		.long	0xacab
 22264 b3c1 8D01     		.uleb128 0x8d
 22265 b3c3 5F5F6E00 		.string	"__n"
 22266 b3c7 04       		.byte	0x4
 22267 b3c8 B7       		.byte	0xb7
 22268 b3c9 DB070000 		.long	0x7db
 22269 b3cd 00       		.byte	0
 22270 b3ce 8401     		.uleb128 0x84
 22271 b3d0 FF7F0000 		.long	0x7fff
 22272 b3d4 03       		.byte	0x3
 22273 b3d5 DDB30000 		.long	0xb3dd
 22274 b3d9 E8B30000 		.long	0xb3e8
 22275 b3dd 8501     		.uleb128 0x85
 22276 b3df 00000000 		.long	.LASF1418
 22277 b3e3 E8B30000 		.long	0xb3e8
 22278 b3e7 00       		.byte	0
 22279 b3e8 0B       		.uleb128 0xb
 22280 b3e9 0F9F0000 		.long	0x9f0f
 22281 b3ed 8401     		.uleb128 0x84
 22282 b3ef B37F0000 		.long	0x7fb3
 22283 b3f3 03       		.byte	0x3
 22284 b3f4 FCB30000 		.long	0xb3fc
 22285 b3f8 18B40000 		.long	0xb418
 22286 b3fc 8501     		.uleb128 0x85
 22287 b3fe 00000000 		.long	.LASF1418
 22288 b402 80A50000 		.long	0xa580
 22289 b406 8D01     		.uleb128 0x8d
 22290 b408 5F5F6E00 		.string	"__n"
 22291 b40c 05       		.byte	0x5
 22292 b40d 63       		.byte	0x63
 22293 b40e E57E0000 		.long	0x7ee5
 22294 b412 13       		.uleb128 0x13
 22295 b413 96850000 		.long	0x8596
 22296 b417 00       		.byte	0
 22297 b418 8A01     		.uleb128 0x8a
 22298 b41a 835B0000 		.long	0x5b83
 22299 b41e 03       		.byte	0x3
 22300 b41f 3EB40000 		.long	0xb43e
 22301 b423 9001     		.uleb128 0x90
 22302 b425 5F5F6100 		.string	"__a"
 22303 b429 26       		.byte	0x26
 22304 b42a 6401     		.value	0x164
 22305 b42c 3EB40000 		.long	0xb43e
GAS LISTING /tmp/ccKUqHDa.s 			page 649


 22306 b430 9001     		.uleb128 0x90
 22307 b432 5F5F6E00 		.string	"__n"
 22308 b436 26       		.byte	0x26
 22309 b437 6401     		.value	0x164
 22310 b439 B25A0000 		.long	0x5ab2
 22311 b43d 00       		.byte	0
 22312 b43e 0B       		.uleb128 0xb
 22313 b43f 2D9F0000 		.long	0x9f2d
 22314 b443 8401     		.uleb128 0x84
 22315 b445 7A5E0000 		.long	0x5e7a
 22316 b449 03       		.byte	0x3
 22317 b44a 52B40000 		.long	0xb452
 22318 b44e 6BB40000 		.long	0xb46b
 22319 b452 8501     		.uleb128 0x85
 22320 b454 00000000 		.long	.LASF1418
 22321 b458 FFAD0000 		.long	0xadff
 22322 b45c 8D01     		.uleb128 0x8d
 22323 b45e 5F5F6E00 		.string	"__n"
 22324 b462 04       		.byte	0x4
 22325 b463 A7       		.byte	0xa7
 22326 b464 DB070000 		.long	0x7db
 22327 b468 9101     		.uleb128 0x91
 22328 b46a 00       		.byte	0
 22329 b46b 8401     		.uleb128 0x84
 22330 b46d B05C0000 		.long	0x5cb0
 22331 b471 03       		.byte	0x3
 22332 b472 7AB40000 		.long	0xb47a
 22333 b476 91B40000 		.long	0xb491
 22334 b47a 8501     		.uleb128 0x85
 22335 b47c 00000000 		.long	.LASF1418
 22336 b480 2AAE0000 		.long	0xae2a
 22337 b484 8D01     		.uleb128 0x8d
 22338 b486 5F5F6100 		.string	"__a"
 22339 b48a 04       		.byte	0x4
 22340 b48b 5A       		.byte	0x5a
 22341 b48c 91B40000 		.long	0xb491
 22342 b490 00       		.byte	0
 22343 b491 0B       		.uleb128 0xb
 22344 b492 459F0000 		.long	0x9f45
 22345 b496 8401     		.uleb128 0x84
 22346 b498 EE5D0000 		.long	0x5dee
 22347 b49c 03       		.byte	0x3
 22348 b49d A5B40000 		.long	0xb4a5
 22349 b4a1 C8B40000 		.long	0xb4c8
 22350 b4a5 8501     		.uleb128 0x85
 22351 b4a7 00000000 		.long	.LASF1418
 22352 b4ab FFAD0000 		.long	0xadff
 22353 b4af 8D01     		.uleb128 0x8d
 22354 b4b1 5F5F6E00 		.string	"__n"
 22355 b4b5 04       		.byte	0x4
 22356 b4b6 86       		.byte	0x86
 22357 b4b7 DB070000 		.long	0x7db
 22358 b4bb 8D01     		.uleb128 0x8d
 22359 b4bd 5F5F6100 		.string	"__a"
 22360 b4c1 04       		.byte	0x4
 22361 b4c2 86       		.byte	0x86
 22362 b4c3 C8B40000 		.long	0xb4c8
GAS LISTING /tmp/ccKUqHDa.s 			page 650


 22363 b4c7 00       		.byte	0
 22364 b4c8 0B       		.uleb128 0xb
 22365 b4c9 699F0000 		.long	0x9f69
 22366 b4cd 8401     		.uleb128 0x84
 22367 b4cf 15670000 		.long	0x6715
 22368 b4d3 03       		.byte	0x3
 22369 b4d4 DCB40000 		.long	0xb4dc
 22370 b4d8 F4B40000 		.long	0xb4f4
 22371 b4dc 8501     		.uleb128 0x85
 22372 b4de 00000000 		.long	.LASF1418
 22373 b4e2 F4B40000 		.long	0xb4f4
 22374 b4e6 9001     		.uleb128 0x90
 22375 b4e8 5F5F6E00 		.string	"__n"
 22376 b4ec 04       		.byte	0x4
 22377 b4ed 1C05     		.value	0x51c
 22378 b4ef 8C5F0000 		.long	0x5f8c
 22379 b4f3 00       		.byte	0
 22380 b4f4 0B       		.uleb128 0xb
 22381 b4f5 759F0000 		.long	0x9f75
 22382 b4f9 8A01     		.uleb128 0x8a
 22383 b4fb 856A0000 		.long	0x6a85
 22384 b4ff 03       		.byte	0x3
 22385 b500 11B50000 		.long	0xb511
 22386 b504 8B01     		.uleb128 0x8b
 22387 b506 00000000 		.long	.LASF1444
 22388 b50a 24       		.byte	0x24
 22389 b50b D4       		.byte	0xd4
 22390 b50c 829C0000 		.long	0x9c82
 22391 b510 00       		.byte	0
 22392 b511 8A01     		.uleb128 0x8a
 22393 b513 8A6E0000 		.long	0x6e8a
 22394 b517 03       		.byte	0x3
 22395 b518 32B50000 		.long	0xb532
 22396 b51c 1C       		.uleb128 0x1c
 22397 b51d 00000000 		.long	.LASF491
 22398 b521 829C0000 		.long	0x9c82
 22399 b525 77       		.uleb128 0x77
 22400 b526 00000000 		.long	.LASF1444
 22401 b52a 06       		.byte	0x6
 22402 b52b 1601     		.value	0x116
 22403 b52d 829C0000 		.long	0x9c82
 22404 b531 00       		.byte	0
 22405 b532 8A01     		.uleb128 0x8a
 22406 b534 A96E0000 		.long	0x6ea9
 22407 b538 03       		.byte	0x3
 22408 b539 7EB50000 		.long	0xb57e
 22409 b53d 09       		.uleb128 0x9
 22410 b53e 5F4F4900 		.string	"_OI"
 22411 b542 829C0000 		.long	0x9c82
 22412 b546 1C       		.uleb128 0x1c
 22413 b547 00000000 		.long	.LASF322
 22414 b54b 30000000 		.long	0x30
 22415 b54f 09       		.uleb128 0x9
 22416 b550 5F547000 		.string	"_Tp"
 22417 b554 29000000 		.long	0x29
 22418 b558 77       		.uleb128 0x77
 22419 b559 00000000 		.long	.LASF1432
GAS LISTING /tmp/ccKUqHDa.s 			page 651


 22420 b55d 06       		.byte	0x6
 22421 b55e 1803     		.value	0x318
 22422 b560 829C0000 		.long	0x9c82
 22423 b564 9001     		.uleb128 0x90
 22424 b566 5F5F6E00 		.string	"__n"
 22425 b56a 06       		.byte	0x6
 22426 b56b 1803     		.value	0x318
 22427 b56d 30000000 		.long	0x30
 22428 b571 77       		.uleb128 0x77
 22429 b572 00000000 		.long	.LASF1214
 22430 b576 06       		.byte	0x6
 22431 b577 1803     		.value	0x318
 22432 b579 7EB50000 		.long	0xb57e
 22433 b57d 00       		.byte	0
 22434 b57e 0B       		.uleb128 0xb
 22435 b57f 139D0000 		.long	0x9d13
 22436 b583 8A01     		.uleb128 0x8a
 22437 b585 56240000 		.long	0x2456
 22438 b589 03       		.byte	0x3
 22439 b58a CEB50000 		.long	0xb5ce
 22440 b58e 1C       		.uleb128 0x1c
 22441 b58f 00000000 		.long	.LASF30
 22442 b593 829C0000 		.long	0x9c82
 22443 b597 1C       		.uleb128 0x1c
 22444 b598 00000000 		.long	.LASF322
 22445 b59c 30000000 		.long	0x30
 22446 b5a0 09       		.uleb128 0x9
 22447 b5a1 5F547000 		.string	"_Tp"
 22448 b5a5 29000000 		.long	0x29
 22449 b5a9 8B01     		.uleb128 0x8b
 22450 b5ab 00000000 		.long	.LASF1432
 22451 b5af 0E       		.byte	0xe
 22452 b5b0 D8       		.byte	0xd8
 22453 b5b1 829C0000 		.long	0x9c82
 22454 b5b5 8D01     		.uleb128 0x8d
 22455 b5b7 5F5F6E00 		.string	"__n"
 22456 b5bb 0E       		.byte	0xe
 22457 b5bc D8       		.byte	0xd8
 22458 b5bd 30000000 		.long	0x30
 22459 b5c1 8D01     		.uleb128 0x8d
 22460 b5c3 5F5F7800 		.string	"__x"
 22461 b5c7 0E       		.byte	0xe
 22462 b5c8 D9       		.byte	0xd9
 22463 b5c9 CEB50000 		.long	0xb5ce
 22464 b5cd 00       		.byte	0
 22465 b5ce 0B       		.uleb128 0xb
 22466 b5cf 139D0000 		.long	0x9d13
 22467 b5d3 8A01     		.uleb128 0x8a
 22468 b5d5 E46E0000 		.long	0x6ee4
 22469 b5d9 03       		.byte	0x3
 22470 b5da 2DB60000 		.long	0xb62d
 22471 b5de 1C       		.uleb128 0x1c
 22472 b5df 00000000 		.long	.LASF30
 22473 b5e3 829C0000 		.long	0x9c82
 22474 b5e7 1C       		.uleb128 0x1c
 22475 b5e8 00000000 		.long	.LASF322
 22476 b5ec 30000000 		.long	0x30
GAS LISTING /tmp/ccKUqHDa.s 			page 652


 22477 b5f0 09       		.uleb128 0x9
 22478 b5f1 5F547000 		.string	"_Tp"
 22479 b5f5 29000000 		.long	0x29
 22480 b5f9 8B01     		.uleb128 0x8b
 22481 b5fb 00000000 		.long	.LASF1432
 22482 b5ff 0E       		.byte	0xe
 22483 b600 E8       		.byte	0xe8
 22484 b601 829C0000 		.long	0x9c82
 22485 b605 8D01     		.uleb128 0x8d
 22486 b607 5F5F6E00 		.string	"__n"
 22487 b60b 0E       		.byte	0xe
 22488 b60c E8       		.byte	0xe8
 22489 b60d 30000000 		.long	0x30
 22490 b611 8D01     		.uleb128 0x8d
 22491 b613 5F5F7800 		.string	"__x"
 22492 b617 0E       		.byte	0xe
 22493 b618 E8       		.byte	0xe8
 22494 b619 2DB60000 		.long	0xb62d
 22495 b61d 8701     		.uleb128 0x87
 22496 b61f 8801     		.uleb128 0x88
 22497 b621 00000000 		.long	.LASF1438
 22498 b625 0E       		.byte	0xe
 22499 b626 F0       		.byte	0xf0
 22500 b627 9E710000 		.long	0x719e
 22501 b62b 00       		.byte	0
 22502 b62c 00       		.byte	0
 22503 b62d 0B       		.uleb128 0xb
 22504 b62e 139D0000 		.long	0x9d13
 22505 b632 8A01     		.uleb128 0x8a
 22506 b634 1A6F0000 		.long	0x6f1a
 22507 b638 03       		.byte	0x3
 22508 b639 8DB60000 		.long	0xb68d
 22509 b63d 1C       		.uleb128 0x1c
 22510 b63e 00000000 		.long	.LASF30
 22511 b642 829C0000 		.long	0x9c82
 22512 b646 1C       		.uleb128 0x1c
 22513 b647 00000000 		.long	.LASF322
 22514 b64b 30000000 		.long	0x30
 22515 b64f 09       		.uleb128 0x9
 22516 b650 5F547000 		.string	"_Tp"
 22517 b654 29000000 		.long	0x29
 22518 b658 1C       		.uleb128 0x1c
 22519 b659 00000000 		.long	.LASF941
 22520 b65d 29000000 		.long	0x29
 22521 b661 77       		.uleb128 0x77
 22522 b662 00000000 		.long	.LASF1432
 22523 b666 0E       		.byte	0xe
 22524 b667 6001     		.value	0x160
 22525 b669 829C0000 		.long	0x9c82
 22526 b66d 9001     		.uleb128 0x90
 22527 b66f 5F5F6E00 		.string	"__n"
 22528 b673 0E       		.byte	0xe
 22529 b674 6001     		.value	0x160
 22530 b676 30000000 		.long	0x30
 22531 b67a 9001     		.uleb128 0x90
 22532 b67c 5F5F7800 		.string	"__x"
 22533 b680 0E       		.byte	0xe
GAS LISTING /tmp/ccKUqHDa.s 			page 653


 22534 b681 6101     		.value	0x161
 22535 b683 8DB60000 		.long	0xb68d
 22536 b687 13       		.uleb128 0x13
 22537 b688 92B60000 		.long	0xb692
 22538 b68c 00       		.byte	0
 22539 b68d 0B       		.uleb128 0xb
 22540 b68e 139D0000 		.long	0x9d13
 22541 b692 0B       		.uleb128 0xb
 22542 b693 439D0000 		.long	0x9d43
 22543 b697 8401     		.uleb128 0x84
 22544 b699 743E0000 		.long	0x3e74
 22545 b69d 03       		.byte	0x3
 22546 b69e A6B60000 		.long	0xb6a6
 22547 b6a2 CAB60000 		.long	0xb6ca
 22548 b6a6 8501     		.uleb128 0x85
 22549 b6a8 00000000 		.long	.LASF1418
 22550 b6ac 77A30000 		.long	0xa377
 22551 b6b0 9001     		.uleb128 0x90
 22552 b6b2 5F5F6E00 		.string	"__n"
 22553 b6b6 04       		.byte	0x4
 22554 b6b7 1205     		.value	0x512
 22555 b6b9 10370000 		.long	0x3710
 22556 b6bd 77       		.uleb128 0x77
 22557 b6be 00000000 		.long	.LASF1214
 22558 b6c2 04       		.byte	0x4
 22559 b6c3 1205     		.value	0x512
 22560 b6c5 CAB60000 		.long	0xb6ca
 22561 b6c9 00       		.byte	0
 22562 b6ca 0B       		.uleb128 0xb
 22563 b6cb 979D0000 		.long	0x9d97
 22564 b6cf 8401     		.uleb128 0x84
 22565 b6d1 72350000 		.long	0x3572
 22566 b6d5 03       		.byte	0x3
 22567 b6d6 DEB60000 		.long	0xb6de
 22568 b6da 01B70000 		.long	0xb701
 22569 b6de 8501     		.uleb128 0x85
 22570 b6e0 00000000 		.long	.LASF1418
 22571 b6e4 57AB0000 		.long	0xab57
 22572 b6e8 8D01     		.uleb128 0x8d
 22573 b6ea 5F5F6E00 		.string	"__n"
 22574 b6ee 04       		.byte	0x4
 22575 b6ef 86       		.byte	0x86
 22576 b6f0 DB070000 		.long	0x7db
 22577 b6f4 8D01     		.uleb128 0x8d
 22578 b6f6 5F5F6100 		.string	"__a"
 22579 b6fa 04       		.byte	0x4
 22580 b6fb 86       		.byte	0x86
 22581 b6fc 01B70000 		.long	0xb701
 22582 b700 00       		.byte	0
 22583 b701 0B       		.uleb128 0xb
 22584 b702 7F9D0000 		.long	0x9d7f
 22585 b706 8A01     		.uleb128 0x8a
 22586 b708 C96A0000 		.long	0x6ac9
 22587 b70c 03       		.byte	0x3
 22588 b70d 1EB70000 		.long	0xb71e
 22589 b711 8B01     		.uleb128 0x8b
 22590 b713 00000000 		.long	.LASF1444
GAS LISTING /tmp/ccKUqHDa.s 			page 654


 22591 b717 24       		.byte	0x24
 22592 b718 D4       		.byte	0xd4
 22593 b719 5E9B0000 		.long	0x9b5e
 22594 b71d 00       		.byte	0
 22595 b71e 8A01     		.uleb128 0x8a
 22596 b720 5F6F0000 		.long	0x6f5f
 22597 b724 03       		.byte	0x3
 22598 b725 68B70000 		.long	0xb768
 22599 b729 09       		.uleb128 0x9
 22600 b72a 5F547000 		.string	"_Tp"
 22601 b72e BB710000 		.long	0x71bb
 22602 b732 77       		.uleb128 0x77
 22603 b733 00000000 		.long	.LASF1432
 22604 b737 06       		.byte	0x6
 22605 b738 C702     		.value	0x2c7
 22606 b73a 5E9B0000 		.long	0x9b5e
 22607 b73e 77       		.uleb128 0x77
 22608 b73f 00000000 		.long	.LASF1433
 22609 b743 06       		.byte	0x6
 22610 b744 C702     		.value	0x2c7
 22611 b746 5E9B0000 		.long	0x9b5e
 22612 b74a 9001     		.uleb128 0x90
 22613 b74c 5F5F6300 		.string	"__c"
 22614 b750 06       		.byte	0x6
 22615 b751 C702     		.value	0x2c7
 22616 b753 68B70000 		.long	0xb768
 22617 b757 8701     		.uleb128 0x87
 22618 b759 9701     		.uleb128 0x97
 22619 b75b 00000000 		.long	.LASF1442
 22620 b75f 06       		.byte	0x6
 22621 b760 C902     		.value	0x2c9
 22622 b762 709B0000 		.long	0x9b70
 22623 b766 00       		.byte	0
 22624 b767 00       		.byte	0
 22625 b768 0B       		.uleb128 0xb
 22626 b769 CD9D0000 		.long	0x9dcd
 22627 b76d 8A01     		.uleb128 0x8a
 22628 b76f 846F0000 		.long	0x6f84
 22629 b773 03       		.byte	0x3
 22630 b774 B1B70000 		.long	0xb7b1
 22631 b778 1C       		.uleb128 0x1c
 22632 b779 00000000 		.long	.LASF322
 22633 b77d 30000000 		.long	0x30
 22634 b781 09       		.uleb128 0x9
 22635 b782 5F547000 		.string	"_Tp"
 22636 b786 BB710000 		.long	0x71bb
 22637 b78a 77       		.uleb128 0x77
 22638 b78b 00000000 		.long	.LASF1432
 22639 b78f 06       		.byte	0x6
 22640 b790 0103     		.value	0x301
 22641 b792 5E9B0000 		.long	0x9b5e
 22642 b796 9001     		.uleb128 0x90
 22643 b798 5F5F6E00 		.string	"__n"
 22644 b79c 06       		.byte	0x6
 22645 b79d 0103     		.value	0x301
 22646 b79f 30000000 		.long	0x30
 22647 b7a3 9001     		.uleb128 0x90
GAS LISTING /tmp/ccKUqHDa.s 			page 655


 22648 b7a5 5F5F6300 		.string	"__c"
 22649 b7a9 06       		.byte	0x6
 22650 b7aa 0103     		.value	0x301
 22651 b7ac B1B70000 		.long	0xb7b1
 22652 b7b0 00       		.byte	0
 22653 b7b1 0B       		.uleb128 0xb
 22654 b7b2 CD9D0000 		.long	0x9dcd
 22655 b7b6 8A01     		.uleb128 0x8a
 22656 b7b8 B66F0000 		.long	0x6fb6
 22657 b7bc 03       		.byte	0x3
 22658 b7bd D7B70000 		.long	0xb7d7
 22659 b7c1 1C       		.uleb128 0x1c
 22660 b7c2 00000000 		.long	.LASF491
 22661 b7c6 5E9B0000 		.long	0x9b5e
 22662 b7ca 77       		.uleb128 0x77
 22663 b7cb 00000000 		.long	.LASF1444
 22664 b7cf 06       		.byte	0x6
 22665 b7d0 1601     		.value	0x116
 22666 b7d2 5E9B0000 		.long	0x9b5e
 22667 b7d6 00       		.byte	0
 22668 b7d7 8A01     		.uleb128 0x8a
 22669 b7d9 D56F0000 		.long	0x6fd5
 22670 b7dd 03       		.byte	0x3
 22671 b7de 23B80000 		.long	0xb823
 22672 b7e2 09       		.uleb128 0x9
 22673 b7e3 5F4F4900 		.string	"_OI"
 22674 b7e7 5E9B0000 		.long	0x9b5e
 22675 b7eb 1C       		.uleb128 0x1c
 22676 b7ec 00000000 		.long	.LASF322
 22677 b7f0 30000000 		.long	0x30
 22678 b7f4 09       		.uleb128 0x9
 22679 b7f5 5F547000 		.string	"_Tp"
 22680 b7f9 BB710000 		.long	0x71bb
 22681 b7fd 77       		.uleb128 0x77
 22682 b7fe 00000000 		.long	.LASF1432
 22683 b802 06       		.byte	0x6
 22684 b803 1803     		.value	0x318
 22685 b805 5E9B0000 		.long	0x9b5e
 22686 b809 9001     		.uleb128 0x90
 22687 b80b 5F5F6E00 		.string	"__n"
 22688 b80f 06       		.byte	0x6
 22689 b810 1803     		.value	0x318
 22690 b812 30000000 		.long	0x30
 22691 b816 77       		.uleb128 0x77
 22692 b817 00000000 		.long	.LASF1214
 22693 b81b 06       		.byte	0x6
 22694 b81c 1803     		.value	0x318
 22695 b81e 23B80000 		.long	0xb823
 22696 b822 00       		.byte	0
 22697 b823 0B       		.uleb128 0xb
 22698 b824 CD9D0000 		.long	0x9dcd
 22699 b828 8A01     		.uleb128 0x8a
 22700 b82a 96240000 		.long	0x2496
 22701 b82e 03       		.byte	0x3
 22702 b82f 61B80000 		.long	0xb861
 22703 b833 1C       		.uleb128 0x1c
 22704 b834 00000000 		.long	.LASF30
GAS LISTING /tmp/ccKUqHDa.s 			page 656


 22705 b838 5E9B0000 		.long	0x9b5e
 22706 b83c 1C       		.uleb128 0x1c
 22707 b83d 00000000 		.long	.LASF322
 22708 b841 30000000 		.long	0x30
 22709 b845 77       		.uleb128 0x77
 22710 b846 00000000 		.long	.LASF1432
 22711 b84a 0E       		.byte	0xe
 22712 b84b 1202     		.value	0x212
 22713 b84d 5E9B0000 		.long	0x9b5e
 22714 b851 9001     		.uleb128 0x90
 22715 b853 5F5F6E00 		.string	"__n"
 22716 b857 0E       		.byte	0xe
 22717 b858 1202     		.value	0x212
 22718 b85a 30000000 		.long	0x30
 22719 b85e 9101     		.uleb128 0x91
 22720 b860 00       		.byte	0
 22721 b861 8A01     		.uleb128 0x8a
 22722 b863 10700000 		.long	0x7010
 22723 b867 03       		.byte	0x3
 22724 b868 A8B80000 		.long	0xb8a8
 22725 b86c 1C       		.uleb128 0x1c
 22726 b86d 00000000 		.long	.LASF30
 22727 b871 5E9B0000 		.long	0x9b5e
 22728 b875 1C       		.uleb128 0x1c
 22729 b876 00000000 		.long	.LASF322
 22730 b87a 30000000 		.long	0x30
 22731 b87e 77       		.uleb128 0x77
 22732 b87f 00000000 		.long	.LASF1432
 22733 b883 0E       		.byte	0xe
 22734 b884 3102     		.value	0x231
 22735 b886 5E9B0000 		.long	0x9b5e
 22736 b88a 9001     		.uleb128 0x90
 22737 b88c 5F5F6E00 		.string	"__n"
 22738 b890 0E       		.byte	0xe
 22739 b891 3102     		.value	0x231
 22740 b893 30000000 		.long	0x30
 22741 b897 8701     		.uleb128 0x87
 22742 b899 9701     		.uleb128 0x97
 22743 b89b 00000000 		.long	.LASF1438
 22744 b89f 0E       		.byte	0xe
 22745 b8a0 3602     		.value	0x236
 22746 b8a2 9E710000 		.long	0x719e
 22747 b8a6 00       		.byte	0
 22748 b8a7 00       		.byte	0
 22749 b8a8 8A01     		.uleb128 0x8a
 22750 b8aa 39700000 		.long	0x7039
 22751 b8ae 03       		.byte	0x3
 22752 b8af EDB80000 		.long	0xb8ed
 22753 b8b3 1C       		.uleb128 0x1c
 22754 b8b4 00000000 		.long	.LASF30
 22755 b8b8 5E9B0000 		.long	0x9b5e
 22756 b8bc 1C       		.uleb128 0x1c
 22757 b8bd 00000000 		.long	.LASF322
 22758 b8c1 30000000 		.long	0x30
 22759 b8c5 09       		.uleb128 0x9
 22760 b8c6 5F547000 		.string	"_Tp"
 22761 b8ca BB710000 		.long	0x71bb
GAS LISTING /tmp/ccKUqHDa.s 			page 657


 22762 b8ce 77       		.uleb128 0x77
 22763 b8cf 00000000 		.long	.LASF1432
 22764 b8d3 0E       		.byte	0xe
 22765 b8d4 7502     		.value	0x275
 22766 b8d6 5E9B0000 		.long	0x9b5e
 22767 b8da 9001     		.uleb128 0x90
 22768 b8dc 5F5F6E00 		.string	"__n"
 22769 b8e0 0E       		.byte	0xe
 22770 b8e1 7502     		.value	0x275
 22771 b8e3 30000000 		.long	0x30
 22772 b8e7 13       		.uleb128 0x13
 22773 b8e8 EDB80000 		.long	0xb8ed
 22774 b8ec 00       		.byte	0
 22775 b8ed 0B       		.uleb128 0xb
 22776 b8ee FD9D0000 		.long	0x9dfd
 22777 b8f2 8401     		.uleb128 0x84
 22778 b8f4 E4450000 		.long	0x45e4
 22779 b8f8 03       		.byte	0x3
 22780 b8f9 01B90000 		.long	0xb901
 22781 b8fd 24B90000 		.long	0xb924
 22782 b901 8501     		.uleb128 0x85
 22783 b903 00000000 		.long	.LASF1418
 22784 b907 ABAC0000 		.long	0xacab
 22785 b90b 8D01     		.uleb128 0x8d
 22786 b90d 5F5F6E00 		.string	"__n"
 22787 b911 04       		.byte	0x4
 22788 b912 86       		.byte	0x86
 22789 b913 DB070000 		.long	0x7db
 22790 b917 8D01     		.uleb128 0x8d
 22791 b919 5F5F6100 		.string	"__a"
 22792 b91d 04       		.byte	0x4
 22793 b91e 86       		.byte	0x86
 22794 b91f 24B90000 		.long	0xb924
 22795 b923 00       		.byte	0
 22796 b924 0B       		.uleb128 0xb
 22797 b925 399E0000 		.long	0x9e39
 22798 b929 8401     		.uleb128 0x84
 22799 b92b 0B4F0000 		.long	0x4f0b
 22800 b92f 03       		.byte	0x3
 22801 b930 38B90000 		.long	0xb938
 22802 b934 50B90000 		.long	0xb950
 22803 b938 8501     		.uleb128 0x85
 22804 b93a 00000000 		.long	.LASF1418
 22805 b93e A3A30000 		.long	0xa3a3
 22806 b942 9001     		.uleb128 0x90
 22807 b944 5F5F6E00 		.string	"__n"
 22808 b948 04       		.byte	0x4
 22809 b949 1C05     		.value	0x51c
 22810 b94b 82470000 		.long	0x4782
 22811 b94f 00       		.byte	0
 22812 b950 79       		.uleb128 0x79
 22813 b951 08       		.byte	0x8
 22814 b952 782F0000 		.long	0x2f78
 22815 b956 69       		.uleb128 0x69
 22816 b957 08       		.byte	0x8
 22817 b958 4C2F0000 		.long	0x2f4c
 22818 b95c 69       		.uleb128 0x69
GAS LISTING /tmp/ccKUqHDa.s 			page 658


 22819 b95d 08       		.byte	0x8
 22820 b95e 62B90000 		.long	0xb962
 22821 b962 73       		.uleb128 0x73
 22822 b963 50B90000 		.long	0xb950
 22823 b967 71B90000 		.long	0xb971
 22824 b96b 13       		.uleb128 0x13
 22825 b96c 50B90000 		.long	0xb950
 22826 b970 00       		.byte	0
 22827 b971 8401     		.uleb128 0x84
 22828 b973 552F0000 		.long	0x2f55
 22829 b977 03       		.byte	0x3
 22830 b978 80B90000 		.long	0xb980
 22831 b97c 97B90000 		.long	0xb997
 22832 b980 8501     		.uleb128 0x85
 22833 b982 00000000 		.long	.LASF1418
 22834 b986 97B90000 		.long	0xb997
 22835 b98a 8B01     		.uleb128 0x8b
 22836 b98c 00000000 		.long	.LASF1445
 22837 b990 08       		.byte	0x8
 22838 b991 6C       		.byte	0x6c
 22839 b992 5CB90000 		.long	0xb95c
 22840 b996 00       		.byte	0
 22841 b997 0B       		.uleb128 0xb
 22842 b998 56B90000 		.long	0xb956
 22843 b99c 8401     		.uleb128 0x84
 22844 b99e EE300000 		.long	0x30ee
 22845 b9a2 03       		.byte	0x3
 22846 b9a3 ABB90000 		.long	0xb9ab
 22847 b9a7 B6B90000 		.long	0xb9b6
 22848 b9ab 8501     		.uleb128 0x85
 22849 b9ad 00000000 		.long	.LASF1418
 22850 b9b1 38A40000 		.long	0xa438
 22851 b9b5 00       		.byte	0
 22852 b9b6 8A01     		.uleb128 0x8a
 22853 b9b8 70700000 		.long	0x7070
 22854 b9bc 03       		.byte	0x3
 22855 b9bd CEB90000 		.long	0xb9ce
 22856 b9c1 8D01     		.uleb128 0x8d
 22857 b9c3 5F5F6900 		.string	"__i"
 22858 b9c7 0A       		.byte	0xa
 22859 b9c8 A6       		.byte	0xa6
 22860 b9c9 EC710000 		.long	0x71ec
 22861 b9cd 00       		.byte	0
 22862 b9ce 8A01     		.uleb128 0x8a
 22863 b9d0 85700000 		.long	0x7085
 22864 b9d4 03       		.byte	0x3
 22865 b9d5 FBB90000 		.long	0xb9fb
 22866 b9d9 09       		.uleb128 0x9
 22867 b9da 5F547000 		.string	"_Tp"
 22868 b9de 29000000 		.long	0x29
 22869 b9e2 8D01     		.uleb128 0x8d
 22870 b9e4 5F5F6100 		.string	"__a"
 22871 b9e8 06       		.byte	0x6
 22872 b9e9 C2       		.byte	0xc2
 22873 b9ea FBB90000 		.long	0xb9fb
 22874 b9ee 8D01     		.uleb128 0x8d
 22875 b9f0 5F5F6200 		.string	"__b"
GAS LISTING /tmp/ccKUqHDa.s 			page 659


 22876 b9f4 06       		.byte	0x6
 22877 b9f5 C2       		.byte	0xc2
 22878 b9f6 00BA0000 		.long	0xba00
 22879 b9fa 00       		.byte	0
 22880 b9fb 0B       		.uleb128 0xb
 22881 b9fc 139D0000 		.long	0x9d13
 22882 ba00 0B       		.uleb128 0xb
 22883 ba01 139D0000 		.long	0x9d13
 22884 ba05 8401     		.uleb128 0x84
 22885 ba07 60410000 		.long	0x4160
 22886 ba0b 03       		.byte	0x3
 22887 ba0c 14BA0000 		.long	0xba14
 22888 ba10 1FBA0000 		.long	0xba1f
 22889 ba14 8501     		.uleb128 0x85
 22890 ba16 00000000 		.long	.LASF1418
 22891 ba1a A4A40000 		.long	0xa4a4
 22892 ba1e 00       		.byte	0
 22893 ba1f 8401     		.uleb128 0x84
 22894 ba21 D0100000 		.long	0x10d0
 22895 ba25 03       		.byte	0x3
 22896 ba26 2EBA0000 		.long	0xba2e
 22897 ba2a 43BA0000 		.long	0xba43
 22898 ba2e 8501     		.uleb128 0x85
 22899 ba30 00000000 		.long	.LASF1418
 22900 ba34 43BA0000 		.long	0xba43
 22901 ba38 8501     		.uleb128 0x85
 22902 ba3a 00000000 		.long	.LASF1428
 22903 ba3e C8840000 		.long	0x84c8
 22904 ba42 00       		.byte	0
 22905 ba43 0B       		.uleb128 0xb
 22906 ba44 A5980000 		.long	0x98a5
 22907 ba48 8401     		.uleb128 0x84
 22908 ba4a 842F0000 		.long	0x2f84
 22909 ba4e 03       		.byte	0x3
 22910 ba4f 57BA0000 		.long	0xba57
 22911 ba53 6EBA0000 		.long	0xba6e
 22912 ba57 8501     		.uleb128 0x85
 22913 ba59 00000000 		.long	.LASF1418
 22914 ba5d 97B90000 		.long	0xb997
 22915 ba61 8D01     		.uleb128 0x8d
 22916 ba63 5F5F6E00 		.string	"__n"
 22917 ba67 08       		.byte	0x8
 22918 ba68 C0       		.byte	0xc0
 22919 ba69 C9710000 		.long	0x71c9
 22920 ba6d 00       		.byte	0
 22921 ba6e 8401     		.uleb128 0x84
 22922 ba70 B8480000 		.long	0x48b8
 22923 ba74 03       		.byte	0x3
 22924 ba75 7DBA0000 		.long	0xba7d
 22925 ba79 92BA0000 		.long	0xba92
 22926 ba7d 8501     		.uleb128 0x85
 22927 ba7f 00000000 		.long	.LASF1418
 22928 ba83 A3A30000 		.long	0xa3a3
 22929 ba87 8501     		.uleb128 0x85
 22930 ba89 00000000 		.long	.LASF1428
 22931 ba8d C8840000 		.long	0x84c8
 22932 ba91 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 660


 22933 ba92 8401     		.uleb128 0x84
 22934 ba94 AB520000 		.long	0x52ab
 22935 ba98 03       		.byte	0x3
 22936 ba99 A1BA0000 		.long	0xbaa1
 22937 ba9d ACBA0000 		.long	0xbaac
 22938 baa1 8501     		.uleb128 0x85
 22939 baa3 00000000 		.long	.LASF1418
 22940 baa7 6DA70000 		.long	0xa76d
 22941 baab 00       		.byte	0
 22942 baac 8401     		.uleb128 0x84
 22943 baae E5520000 		.long	0x52e5
 22944 bab2 03       		.byte	0x3
 22945 bab3 BBBA0000 		.long	0xbabb
 22946 bab7 C6BA0000 		.long	0xbac6
 22947 babb 8501     		.uleb128 0x85
 22948 babd 00000000 		.long	.LASF1418
 22949 bac1 6DA70000 		.long	0xa76d
 22950 bac5 00       		.byte	0
 22951 bac6 8401     		.uleb128 0x84
 22952 bac8 4B290000 		.long	0x294b
 22953 bacc 03       		.byte	0x3
 22954 bacd D5BA0000 		.long	0xbad5
 22955 bad1 ECBA0000 		.long	0xbaec
 22956 bad5 8501     		.uleb128 0x85
 22957 bad7 00000000 		.long	.LASF1418
 22958 badb ECBA0000 		.long	0xbaec
 22959 badf 77       		.uleb128 0x77
 22960 bae0 00000000 		.long	.LASF1446
 22961 bae4 0B       		.byte	0xb
 22962 bae5 3406     		.value	0x634
 22963 bae7 F1BA0000 		.long	0xbaf1
 22964 baeb 00       		.byte	0
 22965 baec 0B       		.uleb128 0xb
 22966 baed 0B990000 		.long	0x990b
 22967 baf1 0B       		.uleb128 0xb
 22968 baf2 D5980000 		.long	0x98d5
 22969 baf6 8401     		.uleb128 0x84
 22970 baf8 C4290000 		.long	0x29c4
 22971 bafc 03       		.byte	0x3
 22972 bafd 05BB0000 		.long	0xbb05
 22973 bb01 10BB0000 		.long	0xbb10
 22974 bb05 8501     		.uleb128 0x85
 22975 bb07 00000000 		.long	.LASF1418
 22976 bb0b ECBA0000 		.long	0xbaec
 22977 bb0f 00       		.byte	0
 22978 bb10 8401     		.uleb128 0x84
 22979 bb12 A3270000 		.long	0x27a3
 22980 bb16 03       		.byte	0x3
 22981 bb17 1FBB0000 		.long	0xbb1f
 22982 bb1b 36BB0000 		.long	0xbb36
 22983 bb1f 8501     		.uleb128 0x85
 22984 bb21 00000000 		.long	.LASF1418
 22985 bb25 E0A90000 		.long	0xa9e0
 22986 bb29 77       		.uleb128 0x77
 22987 bb2a 00000000 		.long	.LASF1435
 22988 bb2e 0B       		.byte	0xb
 22989 bb2f F601     		.value	0x1f6
GAS LISTING /tmp/ccKUqHDa.s 			page 661


 22990 bb31 F4260000 		.long	0x26f4
 22991 bb35 00       		.byte	0
 22992 bb36 8401     		.uleb128 0x84
 22993 bb38 7E560000 		.long	0x567e
 22994 bb3c 03       		.byte	0x3
 22995 bb3d 45BB0000 		.long	0xbb45
 22996 bb41 68BB0000 		.long	0xbb68
 22997 bb45 8501     		.uleb128 0x85
 22998 bb47 00000000 		.long	.LASF1418
 22999 bb4b F8B00000 		.long	0xb0f8
 23000 bb4f 77       		.uleb128 0x77
 23001 bb50 00000000 		.long	.LASF1429
 23002 bb54 0B       		.byte	0xb
 23003 bb55 5408     		.value	0x854
 23004 bb57 57560000 		.long	0x5657
 23005 bb5b 77       		.uleb128 0x77
 23006 bb5c 00000000 		.long	.LASF1430
 23007 bb60 0B       		.byte	0xb
 23008 bb61 5508     		.value	0x855
 23009 bb63 57560000 		.long	0x5657
 23010 bb67 00       		.byte	0
 23011 bb68 8401     		.uleb128 0x84
 23012 bb6a 6A590000 		.long	0x596a
 23013 bb6e 03       		.byte	0x3
 23014 bb6f 77BB0000 		.long	0xbb77
 23015 bb73 82BB0000 		.long	0xbb82
 23016 bb77 8501     		.uleb128 0x85
 23017 bb79 00000000 		.long	.LASF1418
 23018 bb7d CDA50000 		.long	0xa5cd
 23019 bb81 00       		.byte	0
 23020 bb82 8401     		.uleb128 0x84
 23021 bb84 CC610000 		.long	0x61cc
 23022 bb88 03       		.byte	0x3
 23023 bb89 91BB0000 		.long	0xbb91
 23024 bb8d 9CBB0000 		.long	0xbb9c
 23025 bb91 8501     		.uleb128 0x85
 23026 bb93 00000000 		.long	.LASF1418
 23027 bb97 F4B40000 		.long	0xb4f4
 23028 bb9b 00       		.byte	0
 23029 bb9c 8401     		.uleb128 0x84
 23030 bb9e 8E610000 		.long	0x618e
 23031 bba2 03       		.byte	0x3
 23032 bba3 ABBB0000 		.long	0xbbab
 23033 bba7 B6BB0000 		.long	0xbbb6
 23034 bbab 8501     		.uleb128 0x85
 23035 bbad 00000000 		.long	.LASF1418
 23036 bbb1 F4B40000 		.long	0xb4f4
 23037 bbb5 00       		.byte	0
 23038 bbb6 79       		.uleb128 0x79
 23039 bbb7 08       		.byte	0x8
 23040 bbb8 B5550000 		.long	0x55b5
 23041 bbbc 79       		.uleb128 0x79
 23042 bbbd 08       		.byte	0x8
 23043 bbbe B02A0000 		.long	0x2ab0
 23044 bbc2 8A01     		.uleb128 0x8a
 23045 bbc4 A8700000 		.long	0x70a8
 23046 bbc8 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 662


 23047 bbc9 04BC0000 		.long	0xbc04
 23048 bbcd 1C       		.uleb128 0x1c
 23049 bbce 00000000 		.long	.LASF949
 23050 bbd2 2F810000 		.long	0x812f
 23051 bbd6 1C       		.uleb128 0x1c
 23052 bbd7 00000000 		.long	.LASF950
 23053 bbdb 60D20000 		.long	0xd260
 23054 bbdf 77       		.uleb128 0x77
 23055 bbe0 00000000 		.long	.LASF1432
 23056 bbe4 10       		.byte	0x10
 23057 bbe5 BD10     		.value	0x10bd
 23058 bbe7 2F810000 		.long	0x812f
 23059 bbeb 77       		.uleb128 0x77
 23060 bbec 00000000 		.long	.LASF1433
 23061 bbf0 10       		.byte	0x10
 23062 bbf1 BD10     		.value	0x10bd
 23063 bbf3 2F810000 		.long	0x812f
 23064 bbf7 77       		.uleb128 0x77
 23065 bbf8 00000000 		.long	.LASF1447
 23066 bbfc 10       		.byte	0x10
 23067 bbfd BE10     		.value	0x10be
 23068 bbff 60D20000 		.long	0xd260
 23069 bc03 00       		.byte	0
 23070 bc04 8401     		.uleb128 0x84
 23071 bc06 5E540000 		.long	0x545e
 23072 bc0a 03       		.byte	0x3
 23073 bc0b 13BC0000 		.long	0xbc13
 23074 bc0f 2ABC0000 		.long	0xbc2a
 23075 bc13 8501     		.uleb128 0x85
 23076 bc15 00000000 		.long	.LASF1418
 23077 bc19 6DA70000 		.long	0xa76d
 23078 bc1d 8D01     		.uleb128 0x8d
 23079 bc1f 5F5F6E00 		.string	"__n"
 23080 bc23 28       		.byte	0x28
 23081 bc24 AC       		.byte	0xac
 23082 bc25 4E520000 		.long	0x524e
 23083 bc29 00       		.byte	0
 23084 bc2a 8401     		.uleb128 0x84
 23085 bc2c C2600000 		.long	0x60c2
 23086 bc30 03       		.byte	0x3
 23087 bc31 39BC0000 		.long	0xbc39
 23088 bc35 4EBC0000 		.long	0xbc4e
 23089 bc39 8501     		.uleb128 0x85
 23090 bc3b 00000000 		.long	.LASF1418
 23091 bc3f F4B40000 		.long	0xb4f4
 23092 bc43 8501     		.uleb128 0x85
 23093 bc45 00000000 		.long	.LASF1428
 23094 bc49 C8840000 		.long	0x84c8
 23095 bc4d 00       		.byte	0
 23096 bc4e 8401     		.uleb128 0x84
 23097 bc50 67290000 		.long	0x2967
 23098 bc54 03       		.byte	0x3
 23099 bc55 5DBC0000 		.long	0xbc5d
 23100 bc59 72BC0000 		.long	0xbc72
 23101 bc5d 8501     		.uleb128 0x85
 23102 bc5f 00000000 		.long	.LASF1418
 23103 bc63 ECBA0000 		.long	0xbaec
GAS LISTING /tmp/ccKUqHDa.s 			page 663


 23104 bc67 8501     		.uleb128 0x85
 23105 bc69 00000000 		.long	.LASF1428
 23106 bc6d C8840000 		.long	0x84c8
 23107 bc71 00       		.byte	0
 23108 bc72 8401     		.uleb128 0x84
 23109 bc74 46380000 		.long	0x3846
 23110 bc78 03       		.byte	0x3
 23111 bc79 81BC0000 		.long	0xbc81
 23112 bc7d 96BC0000 		.long	0xbc96
 23113 bc81 8501     		.uleb128 0x85
 23114 bc83 00000000 		.long	.LASF1418
 23115 bc87 77A30000 		.long	0xa377
 23116 bc8b 8501     		.uleb128 0x85
 23117 bc8d 00000000 		.long	.LASF1428
 23118 bc91 C8840000 		.long	0x84c8
 23119 bc95 00       		.byte	0
 23120 bc96 9901     		.uleb128 0x99
 23121 bc98 00000000 		.long	.LASF1545
 23122 bc9c 01       		.byte	0x1
 23123 bc9d BABC0000 		.long	0xbcba
 23124 bca1 8B01     		.uleb128 0x8b
 23125 bca3 00000000 		.long	.LASF1448
 23126 bca7 01       		.byte	0x1
 23127 bca8 85       		.byte	0x85
 23128 bca9 E5710000 		.long	0x71e5
 23129 bcad 8B01     		.uleb128 0x8b
 23130 bcaf 00000000 		.long	.LASF1449
 23131 bcb3 01       		.byte	0x1
 23132 bcb4 85       		.byte	0x85
 23133 bcb5 E5710000 		.long	0x71e5
 23134 bcb9 00       		.byte	0
 23135 bcba 9201     		.uleb128 0x92
 23136 bcbc 21280000 		.long	0x2821
 23137 bcc0 07       		.byte	0x7
 23138 bcc1 C501     		.value	0x1c5
 23139 bcc3 01       		.byte	0x1
 23140 bcc4 CCBC0000 		.long	0xbccc
 23141 bcc8 E7BC0000 		.long	0xbce7
 23142 bccc 8501     		.uleb128 0x85
 23143 bcce 00000000 		.long	.LASF1418
 23144 bcd2 E0A90000 		.long	0xa9e0
 23145 bcd6 8701     		.uleb128 0x87
 23146 bcd8 9301     		.uleb128 0x93
 23147 bcda 5F5F7A00 		.string	"__z"
 23148 bcde 07       		.byte	0x7
 23149 bcdf CE01     		.value	0x1ce
 23150 bce1 F4260000 		.long	0x26f4
 23151 bce5 00       		.byte	0
 23152 bce6 00       		.byte	0
 23153 bce7 9201     		.uleb128 0x92
 23154 bce9 40280000 		.long	0x2840
 23155 bced 07       		.byte	0x7
 23156 bcee 8D01     		.value	0x18d
 23157 bcf0 01       		.byte	0x1
 23158 bcf1 F9BC0000 		.long	0xbcf9
 23159 bcf5 72BD0000 		.long	0xbd72
 23160 bcf9 8501     		.uleb128 0x85
GAS LISTING /tmp/ccKUqHDa.s 			page 664


 23161 bcfb 00000000 		.long	.LASF1418
 23162 bcff E0A90000 		.long	0xa9e0
 23163 bd03 8701     		.uleb128 0x87
 23164 bd05 9701     		.uleb128 0x97
 23165 bd07 00000000 		.long	.LASF1450
 23166 bd0b 07       		.byte	0x7
 23167 bd0c 9101     		.value	0x191
 23168 bd0e B6710000 		.long	0x71b6
 23169 bd12 9701     		.uleb128 0x97
 23170 bd14 00000000 		.long	.LASF1451
 23171 bd18 07       		.byte	0x7
 23172 bd19 9201     		.value	0x192
 23173 bd1b B6710000 		.long	0x71b6
 23174 bd1f 9301     		.uleb128 0x93
 23175 bd21 5F5F7900 		.string	"__y"
 23176 bd25 07       		.byte	0x7
 23177 bd26 A401     		.value	0x1a4
 23178 bd28 30000000 		.long	0x30
 23179 bd2c 9A01     		.uleb128 0x9a
 23180 bd2e 50BD0000 		.long	0xbd50
 23181 bd32 9301     		.uleb128 0x93
 23182 bd34 5F5F6B00 		.string	"__k"
 23183 bd38 07       		.byte	0x7
 23184 bd39 9401     		.value	0x194
 23185 bd3b DB070000 		.long	0x7db
 23186 bd3f 8701     		.uleb128 0x87
 23187 bd41 9301     		.uleb128 0x93
 23188 bd43 5F5F7900 		.string	"__y"
 23189 bd47 07       		.byte	0x7
 23190 bd48 9601     		.value	0x196
 23191 bd4a 30000000 		.long	0x30
 23192 bd4e 00       		.byte	0
 23193 bd4f 00       		.byte	0
 23194 bd50 8701     		.uleb128 0x87
 23195 bd52 9301     		.uleb128 0x93
 23196 bd54 5F5F6B00 		.string	"__k"
 23197 bd58 07       		.byte	0x7
 23198 bd59 9C01     		.value	0x19c
 23199 bd5b DB070000 		.long	0x7db
 23200 bd5f 8701     		.uleb128 0x87
 23201 bd61 9301     		.uleb128 0x93
 23202 bd63 5F5F7900 		.string	"__y"
 23203 bd67 07       		.byte	0x7
 23204 bd68 9E01     		.value	0x19e
 23205 bd6a 30000000 		.long	0x30
 23206 bd6e 00       		.byte	0
 23207 bd6f 00       		.byte	0
 23208 bd70 00       		.byte	0
 23209 bd71 00       		.byte	0
 23210 bd72 8401     		.uleb128 0x84
 23211 bd74 80370000 		.long	0x3780
 23212 bd78 02       		.byte	0x2
 23213 bd79 81BD0000 		.long	0xbd81
 23214 bd7d B2BD0000 		.long	0xbdb2
 23215 bd81 8501     		.uleb128 0x85
 23216 bd83 00000000 		.long	.LASF1418
 23217 bd87 77A30000 		.long	0xa377
GAS LISTING /tmp/ccKUqHDa.s 			page 665


 23218 bd8b 9001     		.uleb128 0x90
 23219 bd8d 5F5F6E00 		.string	"__n"
 23220 bd91 04       		.byte	0x4
 23221 bd92 2101     		.value	0x121
 23222 bd94 10370000 		.long	0x3710
 23223 bd98 77       		.uleb128 0x77
 23224 bd99 00000000 		.long	.LASF1214
 23225 bd9d 04       		.byte	0x4
 23226 bd9e 2101     		.value	0x121
 23227 bda0 B2BD0000 		.long	0xbdb2
 23228 bda4 9001     		.uleb128 0x90
 23229 bda6 5F5F6100 		.string	"__a"
 23230 bdaa 04       		.byte	0x4
 23231 bdab 2201     		.value	0x122
 23232 bdad B7BD0000 		.long	0xbdb7
 23233 bdb1 00       		.byte	0
 23234 bdb2 0B       		.uleb128 0xb
 23235 bdb3 979D0000 		.long	0x9d97
 23236 bdb7 0B       		.uleb128 0xb
 23237 bdb8 919D0000 		.long	0x9d91
 23238 bdbc 8401     		.uleb128 0x84
 23239 bdbe 43360000 		.long	0x3643
 23240 bdc2 03       		.byte	0x3
 23241 bdc3 CBBD0000 		.long	0xbdcb
 23242 bdc7 E2BD0000 		.long	0xbde2
 23243 bdcb 8501     		.uleb128 0x85
 23244 bdcd 00000000 		.long	.LASF1418
 23245 bdd1 57AB0000 		.long	0xab57
 23246 bdd5 8D01     		.uleb128 0x8d
 23247 bdd7 5F5F6E00 		.string	"__n"
 23248 bddb 04       		.byte	0x4
 23249 bddc B7       		.byte	0xb7
 23250 bddd DB070000 		.long	0x7db
 23251 bde1 00       		.byte	0
 23252 bde2 8401     		.uleb128 0x84
 23253 bde4 DB5F0000 		.long	0x5fdb
 23254 bde8 02       		.byte	0x2
 23255 bde9 F1BD0000 		.long	0xbdf1
 23256 bded 16BE0000 		.long	0xbe16
 23257 bdf1 8501     		.uleb128 0x85
 23258 bdf3 00000000 		.long	.LASF1418
 23259 bdf7 F4B40000 		.long	0xb4f4
 23260 bdfb 9001     		.uleb128 0x90
 23261 bdfd 5F5F6E00 		.string	"__n"
 23262 be01 04       		.byte	0x4
 23263 be02 1501     		.value	0x115
 23264 be04 8C5F0000 		.long	0x5f8c
 23265 be08 9001     		.uleb128 0x90
 23266 be0a 5F5F6100 		.string	"__a"
 23267 be0e 04       		.byte	0x4
 23268 be0f 1501     		.value	0x115
 23269 be11 16BE0000 		.long	0xbe16
 23270 be15 00       		.byte	0
 23271 be16 0B       		.uleb128 0xb
 23272 be17 7B9F0000 		.long	0x9f7b
 23273 be1b 8401     		.uleb128 0x84
 23274 be1d BF5E0000 		.long	0x5ebf
GAS LISTING /tmp/ccKUqHDa.s 			page 666


 23275 be21 03       		.byte	0x3
 23276 be22 2ABE0000 		.long	0xbe2a
 23277 be26 41BE0000 		.long	0xbe41
 23278 be2a 8501     		.uleb128 0x85
 23279 be2c 00000000 		.long	.LASF1418
 23280 be30 FFAD0000 		.long	0xadff
 23281 be34 8D01     		.uleb128 0x8d
 23282 be36 5F5F6E00 		.string	"__n"
 23283 be3a 04       		.byte	0x4
 23284 be3b B7       		.byte	0xb7
 23285 be3c DB070000 		.long	0x7db
 23286 be40 00       		.byte	0
 23287 be41 8401     		.uleb128 0x84
 23288 be43 BA570000 		.long	0x57ba
 23289 be47 01       		.byte	0x1
 23290 be48 59BE0000 		.long	0xbe59
 23291 be4c D0BE0000 		.long	0xbed0
 23292 be50 1C       		.uleb128 0x1c
 23293 be51 00000000 		.long	.LASF791
 23294 be55 B0260000 		.long	0x26b0
 23295 be59 8501     		.uleb128 0x85
 23296 be5b 00000000 		.long	.LASF1418
 23297 be5f F8B00000 		.long	0xb0f8
 23298 be63 77       		.uleb128 0x77
 23299 be64 00000000 		.long	.LASF1439
 23300 be68 07       		.byte	0x7
 23301 be69 8F07     		.value	0x78f
 23302 be6b D0BE0000 		.long	0xbed0
 23303 be6f 77       		.uleb128 0x77
 23304 be70 00000000 		.long	.LASF1452
 23305 be74 07       		.byte	0x7
 23306 be75 9007     		.value	0x790
 23307 be77 D5BE0000 		.long	0xbed5
 23308 be7b 8701     		.uleb128 0x87
 23309 be7d 9701     		.uleb128 0x97
 23310 be7f 00000000 		.long	.LASF1453
 23311 be83 07       		.byte	0x7
 23312 be84 9207     		.value	0x792
 23313 be86 57560000 		.long	0x5657
 23314 be8a 9701     		.uleb128 0x97
 23315 be8c 00000000 		.long	.LASF1454
 23316 be90 07       		.byte	0x7
 23317 be91 9407     		.value	0x794
 23318 be93 C7240000 		.long	0x24c7
 23319 be97 8701     		.uleb128 0x87
 23320 be99 9301     		.uleb128 0x93
 23321 be9b 5F5F7800 		.string	"__x"
 23322 be9f 07       		.byte	0x7
 23323 bea0 9D07     		.value	0x79d
 23324 bea2 57560000 		.long	0x5657
 23325 bea6 9301     		.uleb128 0x93
 23326 bea8 5F5F7900 		.string	"__y"
 23327 beac 07       		.byte	0x7
 23328 bead 9D07     		.value	0x79d
 23329 beaf 57560000 		.long	0x5657
 23330 beb3 9701     		.uleb128 0x97
 23331 beb5 00000000 		.long	.LASF1455
GAS LISTING /tmp/ccKUqHDa.s 			page 667


 23332 beb9 07       		.byte	0x7
 23333 beba 9D07     		.value	0x79d
 23334 bebc 57560000 		.long	0x5657
 23335 bec0 9701     		.uleb128 0x97
 23336 bec2 00000000 		.long	.LASF1456
 23337 bec6 07       		.byte	0x7
 23338 bec7 A607     		.value	0x7a6
 23339 bec9 E8570000 		.long	0x57e8
 23340 becd 00       		.byte	0
 23341 bece 00       		.byte	0
 23342 becf 00       		.byte	0
 23343 bed0 0B       		.uleb128 0xb
 23344 bed1 DF9F0000 		.long	0x9fdf
 23345 bed5 0B       		.uleb128 0xb
 23346 bed6 DF9E0000 		.long	0x9edf
 23347 beda 9B01     		.uleb128 0x9b
 23348 bedc 54A10000 		.long	0xa154
 23349 bee0 00000000 		.quad	.LFB5946
 23349      00000000 
 23350 bee8 32000000 		.quad	.LFE5946-.LFB5946
 23350      00000000 
 23351 bef0 01       		.uleb128 0x1
 23352 bef1 9C       		.byte	0x9c
 23353 bef2 FABE0000 		.long	0xbefa
 23354 bef6 B2BF0000 		.long	0xbfb2
 23355 befa 9C01     		.uleb128 0x9c
 23356 befc 63A10000 		.long	0xa163
 23357 bf00 00000000 		.long	.LLST3
 23358 bf04 9C01     		.uleb128 0x9c
 23359 bf06 6DA10000 		.long	0xa16d
 23360 bf0a 00000000 		.long	.LLST4
 23361 bf0e 9D01     		.uleb128 0x9d
 23362 bf10 30A10000 		.long	0xa130
 23363 bf14 00000000 		.quad	.LBB1830
 23363      00000000 
 23364 bf1c 00000000 		.long	.Ldebug_ranges0+0x60
 23365 bf20 02       		.byte	0x2
 23366 bf21 F6       		.byte	0xf6
 23367 bf22 A3BF0000 		.long	0xbfa3
 23368 bf26 9E01     		.uleb128 0x9e
 23369 bf28 47A10000 		.long	0xa147
 23370 bf2c 7F       		.sleb128 -1
 23371 bf2d 9C01     		.uleb128 0x9c
 23372 bf2f 3BA10000 		.long	0xa13b
 23373 bf33 00000000 		.long	.LLST5
 23374 bf37 9F01     		.uleb128 0x9f
 23375 bf39 B8A00000 		.long	0xa0b8
 23376 bf3d 00000000 		.quad	.LBB1832
 23376      00000000 
 23377 bf45 0A000000 		.quad	.LBE1832-.LBB1832
 23377      00000000 
 23378 bf4d 03       		.byte	0x3
 23379 bf4e 52       		.byte	0x52
 23380 bf4f 68BF0000 		.long	0xbf68
 23381 bf53 9C01     		.uleb128 0x9c
 23382 bf55 CFA00000 		.long	0xa0cf
 23383 bf59 00000000 		.long	.LLST6
GAS LISTING /tmp/ccKUqHDa.s 			page 668


 23384 bf5d 9C01     		.uleb128 0x9c
 23385 bf5f C3A00000 		.long	0xa0c3
 23386 bf63 00000000 		.long	.LLST7
 23387 bf67 00       		.byte	0
 23388 bf68 A001     		.uleb128 0xa0
 23389 bf6a E2A00000 		.long	0xa0e2
 23390 bf6e 00000000 		.quad	.LBB1834
 23390      00000000 
 23391 bf76 00000000 		.long	.Ldebug_ranges0+0xa0
 23392 bf7a 03       		.byte	0x3
 23393 bf7b 54       		.byte	0x54
 23394 bf7c 9C01     		.uleb128 0x9c
 23395 bf7e F9A00000 		.long	0xa0f9
 23396 bf82 00000000 		.long	.LLST8
 23397 bf86 9C01     		.uleb128 0x9c
 23398 bf88 EDA00000 		.long	0xa0ed
 23399 bf8c 00000000 		.long	.LLST9
 23400 bf90 A101     		.uleb128 0xa1
 23401 bf92 00000000 		.long	.Ldebug_ranges0+0xd0
 23402 bf96 A201     		.uleb128 0xa2
 23403 bf98 07A10000 		.long	0xa107
 23404 bf9c 00000000 		.long	.LLST10
 23405 bfa0 00       		.byte	0
 23406 bfa1 00       		.byte	0
 23407 bfa2 00       		.byte	0
 23408 bfa3 A301     		.uleb128 0xa3
 23409 bfa5 00000000 		.quad	.LVL18
 23409      00000000 
 23410 bfad 810C0000 		.long	0xc81
 23411 bfb1 00       		.byte	0
 23412 bfb2 8401     		.uleb128 0x84
 23413 bfb4 D1470000 		.long	0x47d1
 23414 bfb8 02       		.byte	0x2
 23415 bfb9 C1BF0000 		.long	0xbfc1
 23416 bfbd E6BF0000 		.long	0xbfe6
 23417 bfc1 8501     		.uleb128 0x85
 23418 bfc3 00000000 		.long	.LASF1418
 23419 bfc7 A3A30000 		.long	0xa3a3
 23420 bfcb 9001     		.uleb128 0x90
 23421 bfcd 5F5F6E00 		.string	"__n"
 23422 bfd1 04       		.byte	0x4
 23423 bfd2 1501     		.value	0x115
 23424 bfd4 82470000 		.long	0x4782
 23425 bfd8 9001     		.uleb128 0x90
 23426 bfda 5F5F6100 		.string	"__a"
 23427 bfde 04       		.byte	0x4
 23428 bfdf 1501     		.value	0x115
 23429 bfe1 E6BF0000 		.long	0xbfe6
 23430 bfe5 00       		.byte	0
 23431 bfe6 0B       		.uleb128 0xb
 23432 bfe7 4B9E0000 		.long	0x9e4b
 23433 bfeb A401     		.uleb128 0xa4
 23434 bfed B2BF0000 		.long	0xbfb2
 23435 bff1 00000000 		.long	.LASF1546
 23436 bff5 00000000 		.quad	.LFB5607
 23436      00000000 
 23437 bffd 5D000000 		.quad	.LFE5607-.LFB5607
GAS LISTING /tmp/ccKUqHDa.s 			page 669


 23437      00000000 
 23438 c005 01       		.uleb128 0x1
 23439 c006 9C       		.byte	0x9c
 23440 c007 0FC00000 		.long	0xc00f
 23441 c00b ECC20000 		.long	0xc2ec
 23442 c00f 9C01     		.uleb128 0x9c
 23443 c011 C1BF0000 		.long	0xbfc1
 23444 c015 00000000 		.long	.LLST11
 23445 c019 9C01     		.uleb128 0x9c
 23446 c01b CBBF0000 		.long	0xbfcb
 23447 c01f 00000000 		.long	.LLST12
 23448 c023 9C01     		.uleb128 0x9c
 23449 c025 D8BF0000 		.long	0xbfd8
 23450 c029 00000000 		.long	.LLST13
 23451 c02d A501     		.uleb128 0xa5
 23452 c02f F2B80000 		.long	0xb8f2
 23453 c033 00000000 		.quad	.LBB1842
 23453      00000000 
 23454 c03b 00000000 		.long	.Ldebug_ranges0+0x100
 23455 c03f 04       		.byte	0x4
 23456 c040 1601     		.value	0x116
 23457 c042 6EC10000 		.long	0xc16e
 23458 c046 9C01     		.uleb128 0x9c
 23459 c048 17B90000 		.long	0xb917
 23460 c04c 00000000 		.long	.LLST13
 23461 c050 9C01     		.uleb128 0x9c
 23462 c052 0BB90000 		.long	0xb90b
 23463 c056 00000000 		.long	.LLST12
 23464 c05a 9C01     		.uleb128 0x9c
 23465 c05c 01B90000 		.long	0xb901
 23466 c060 00000000 		.long	.LLST11
 23467 c064 9F01     		.uleb128 0x9f
 23468 c066 7DB30000 		.long	0xb37d
 23469 c06a 00000000 		.quad	.LBB1843
 23469      00000000 
 23470 c072 17000000 		.quad	.LBE1843-.LBB1843
 23470      00000000 
 23471 c07a 04       		.byte	0x4
 23472 c07b 87       		.byte	0x87
 23473 c07c 95C00000 		.long	0xc095
 23474 c080 9C01     		.uleb128 0x9c
 23475 c082 96B30000 		.long	0xb396
 23476 c086 00000000 		.long	.LLST13
 23477 c08a 9C01     		.uleb128 0x9c
 23478 c08c 8CB30000 		.long	0xb38c
 23479 c090 00000000 		.long	.LLST11
 23480 c094 00       		.byte	0
 23481 c095 A001     		.uleb128 0xa0
 23482 c097 A8B30000 		.long	0xb3a8
 23483 c09b 00000000 		.quad	.LBB1845
 23483      00000000 
 23484 c0a3 00000000 		.long	.Ldebug_ranges0+0x130
 23485 c0a7 04       		.byte	0x4
 23486 c0a8 88       		.byte	0x88
 23487 c0a9 9C01     		.uleb128 0x9c
 23488 c0ab C1B30000 		.long	0xb3c1
 23489 c0af 00000000 		.long	.LLST19
GAS LISTING /tmp/ccKUqHDa.s 			page 670


 23490 c0b3 9C01     		.uleb128 0x9c
 23491 c0b5 B7B30000 		.long	0xb3b7
 23492 c0b9 00000000 		.long	.LLST20
 23493 c0bd A601     		.uleb128 0xa6
 23494 c0bf 55B30000 		.long	0xb355
 23495 c0c3 00000000 		.quad	.LBB1847
 23495      00000000 
 23496 c0cb 12000000 		.quad	.LBE1847-.LBB1847
 23496      00000000 
 23497 c0d3 04       		.byte	0x4
 23498 c0d4 B9       		.byte	0xb9
 23499 c0d5 9601     		.uleb128 0x96
 23500 c0d7 64B30000 		.long	0xb364
 23501 c0db 9C01     		.uleb128 0x9c
 23502 c0dd 6EB30000 		.long	0xb36e
 23503 c0e1 00000000 		.long	.LLST19
 23504 c0e5 A701     		.uleb128 0xa7
 23505 c0e7 00000000 		.quad	.LBB1848
 23505      00000000 
 23506 c0ef 12000000 		.quad	.LBE1848-.LBB1848
 23506      00000000 
 23507 c0f7 A601     		.uleb128 0xa6
 23508 c0f9 2AB30000 		.long	0xb32a
 23509 c0fd 00000000 		.quad	.LBB1849
 23509      00000000 
 23510 c105 0B000000 		.quad	.LBE1849-.LBB1849
 23510      00000000 
 23511 c10d 04       		.byte	0x4
 23512 c10e AA       		.byte	0xaa
 23513 c10f 9601     		.uleb128 0x96
 23514 c111 35B30000 		.long	0xb335
 23515 c115 9C01     		.uleb128 0x9c
 23516 c117 42B30000 		.long	0xb342
 23517 c11b 00000000 		.long	.LLST22
 23518 c11f A801     		.uleb128 0xa8
 23519 c121 FFB20000 		.long	0xb2ff
 23520 c125 00000000 		.quad	.LBB1850
 23520      00000000 
 23521 c12d 0B000000 		.quad	.LBE1850-.LBB1850
 23521      00000000 
 23522 c135 26       		.byte	0x26
 23523 c136 6501     		.value	0x165
 23524 c138 9601     		.uleb128 0x96
 23525 c13a 0EB30000 		.long	0xb30e
 23526 c13e 9C01     		.uleb128 0x9c
 23527 c140 24B30000 		.long	0xb324
 23528 c144 00000000 		.long	.LLST23
 23529 c148 9C01     		.uleb128 0x9c
 23530 c14a 18B30000 		.long	0xb318
 23531 c14e 00000000 		.long	.LLST22
 23532 c152 A901     		.uleb128 0xa9
 23533 c154 00000000 		.quad	.LVL23
 23533      00000000 
 23534 c15c 92ED0000 		.long	0xed92
 23535 c160 AA01     		.uleb128 0xaa
 23536 c162 01       		.uleb128 0x1
 23537 c163 55       		.byte	0x55
GAS LISTING /tmp/ccKUqHDa.s 			page 671


 23538 c164 02       		.uleb128 0x2
 23539 c165 76       		.byte	0x76
 23540 c166 00       		.sleb128 0
 23541 c167 00       		.byte	0
 23542 c168 00       		.byte	0
 23543 c169 00       		.byte	0
 23544 c16a 00       		.byte	0
 23545 c16b 00       		.byte	0
 23546 c16c 00       		.byte	0
 23547 c16d 00       		.byte	0
 23548 c16e AB01     		.uleb128 0xab
 23549 c170 29B90000 		.long	0xb929
 23550 c174 00000000 		.quad	.LBB1854
 23550      00000000 
 23551 c17c 00000000 		.long	.Ldebug_ranges0+0x160
 23552 c180 04       		.byte	0x4
 23553 c181 1701     		.value	0x117
 23554 c183 9C01     		.uleb128 0x9c
 23555 c185 42B90000 		.long	0xb942
 23556 c189 00000000 		.long	.LLST25
 23557 c18d 9C01     		.uleb128 0x9c
 23558 c18f 38B90000 		.long	0xb938
 23559 c193 00000000 		.long	.LLST26
 23560 c197 AB01     		.uleb128 0xab
 23561 c199 A8B80000 		.long	0xb8a8
 23562 c19d 00000000 		.quad	.LBB1856
 23562      00000000 
 23563 c1a5 00000000 		.long	.Ldebug_ranges0+0x190
 23564 c1a9 04       		.byte	0x4
 23565 c1aa 1E05     		.value	0x51e
 23566 c1ac 9601     		.uleb128 0x96
 23567 c1ae E7B80000 		.long	0xb8e7
 23568 c1b2 9C01     		.uleb128 0x9c
 23569 c1b4 DAB80000 		.long	0xb8da
 23570 c1b8 00000000 		.long	.LLST25
 23571 c1bc 9C01     		.uleb128 0x9c
 23572 c1be CEB80000 		.long	0xb8ce
 23573 c1c2 00000000 		.long	.LLST28
 23574 c1c6 AB01     		.uleb128 0xab
 23575 c1c8 61B80000 		.long	0xb861
 23576 c1cc 00000000 		.quad	.LBB1857
 23576      00000000 
 23577 c1d4 00000000 		.long	.Ldebug_ranges0+0x190
 23578 c1d8 0E       		.byte	0xe
 23579 c1d9 7702     		.value	0x277
 23580 c1db 9C01     		.uleb128 0x9c
 23581 c1dd 8AB80000 		.long	0xb88a
 23582 c1e1 00000000 		.long	.LLST25
 23583 c1e5 9C01     		.uleb128 0x9c
 23584 c1e7 7EB80000 		.long	0xb87e
 23585 c1eb 00000000 		.long	.LLST28
 23586 c1ef A101     		.uleb128 0xa1
 23587 c1f1 00000000 		.long	.Ldebug_ranges0+0x190
 23588 c1f5 AC01     		.uleb128 0xac
 23589 c1f7 99B80000 		.long	0xb899
 23590 c1fb 01       		.byte	0x1
 23591 c1fc AB01     		.uleb128 0xab
GAS LISTING /tmp/ccKUqHDa.s 			page 672


 23592 c1fe 28B80000 		.long	0xb828
 23593 c202 00000000 		.quad	.LBB1859
 23593      00000000 
 23594 c20a 00000000 		.long	.Ldebug_ranges0+0x190
 23595 c20e 0E       		.byte	0xe
 23596 c20f 3802     		.value	0x238
 23597 c211 9C01     		.uleb128 0x9c
 23598 c213 51B80000 		.long	0xb851
 23599 c217 00000000 		.long	.LLST25
 23600 c21b 9C01     		.uleb128 0x9c
 23601 c21d 45B80000 		.long	0xb845
 23602 c221 00000000 		.long	.LLST28
 23603 c225 A101     		.uleb128 0xa1
 23604 c227 00000000 		.long	.Ldebug_ranges0+0x190
 23605 c22b AB01     		.uleb128 0xab
 23606 c22d D7B70000 		.long	0xb7d7
 23607 c231 00000000 		.quad	.LBB1861
 23607      00000000 
 23608 c239 00000000 		.long	.Ldebug_ranges0+0x190
 23609 c23d 0E       		.byte	0xe
 23610 c23e 1702     		.value	0x217
 23611 c240 9601     		.uleb128 0x96
 23612 c242 16B80000 		.long	0xb816
 23613 c246 9C01     		.uleb128 0x9c
 23614 c248 09B80000 		.long	0xb809
 23615 c24c 00000000 		.long	.LLST25
 23616 c250 9C01     		.uleb128 0x9c
 23617 c252 FDB70000 		.long	0xb7fd
 23618 c256 00000000 		.long	.LLST28
 23619 c25a AB01     		.uleb128 0xab
 23620 c25c 6DB70000 		.long	0xb76d
 23621 c260 00000000 		.quad	.LBB1862
 23621      00000000 
 23622 c268 00000000 		.long	.Ldebug_ranges0+0x190
 23623 c26c 06       		.byte	0x6
 23624 c26d 1D03     		.value	0x31d
 23625 c26f 9601     		.uleb128 0x96
 23626 c271 A3B70000 		.long	0xb7a3
 23627 c275 9C01     		.uleb128 0x9c
 23628 c277 96B70000 		.long	0xb796
 23629 c27b 00000000 		.long	.LLST25
 23630 c27f 9C01     		.uleb128 0x9c
 23631 c281 8AB70000 		.long	0xb78a
 23632 c285 00000000 		.long	.LLST28
 23633 c289 AB01     		.uleb128 0xab
 23634 c28b 1EB70000 		.long	0xb71e
 23635 c28f 00000000 		.quad	.LBB1863
 23635      00000000 
 23636 c297 00000000 		.long	.Ldebug_ranges0+0x190
 23637 c29b 06       		.byte	0x6
 23638 c29c 0303     		.value	0x303
 23639 c29e 9601     		.uleb128 0x96
 23640 c2a0 4AB70000 		.long	0xb74a
 23641 c2a4 9C01     		.uleb128 0x9c
 23642 c2a6 3EB70000 		.long	0xb73e
 23643 c2aa 00000000 		.long	.LLST37
 23644 c2ae 9C01     		.uleb128 0x9c
GAS LISTING /tmp/ccKUqHDa.s 			page 673


 23645 c2b0 32B70000 		.long	0xb732
 23646 c2b4 00000000 		.long	.LLST28
 23647 c2b8 A101     		.uleb128 0xa1
 23648 c2ba 00000000 		.long	.Ldebug_ranges0+0x190
 23649 c2be AC01     		.uleb128 0xac
 23650 c2c0 59B70000 		.long	0xb759
 23651 c2c4 00       		.byte	0
 23652 c2c5 A901     		.uleb128 0xa9
 23653 c2c7 00000000 		.quad	.LVL26
 23653      00000000 
 23654 c2cf ABED0000 		.long	0xedab
 23655 c2d3 AA01     		.uleb128 0xaa
 23656 c2d5 01       		.uleb128 0x1
 23657 c2d6 54       		.byte	0x54
 23658 c2d7 01       		.uleb128 0x1
 23659 c2d8 30       		.byte	0x30
 23660 c2d9 AA01     		.uleb128 0xaa
 23661 c2db 01       		.uleb128 0x1
 23662 c2dc 51       		.byte	0x51
 23663 c2dd 02       		.uleb128 0x2
 23664 c2de 76       		.byte	0x76
 23665 c2df 00       		.sleb128 0
 23666 c2e0 00       		.byte	0
 23667 c2e1 00       		.byte	0
 23668 c2e2 00       		.byte	0
 23669 c2e3 00       		.byte	0
 23670 c2e4 00       		.byte	0
 23671 c2e5 00       		.byte	0
 23672 c2e6 00       		.byte	0
 23673 c2e7 00       		.byte	0
 23674 c2e8 00       		.byte	0
 23675 c2e9 00       		.byte	0
 23676 c2ea 00       		.byte	0
 23677 c2eb 00       		.byte	0
 23678 c2ec AD01     		.uleb128 0xad
 23679 c2ee D6700000 		.long	0x70d6
 23680 c2f2 00000000 		.quad	.LFB5868
 23680      00000000 
 23681 c2fa 8D010000 		.quad	.LFE5868-.LFB5868
 23681      00000000 
 23682 c302 01       		.uleb128 0x1
 23683 c303 9C       		.byte	0x9c
 23684 c304 8CC40000 		.long	0xc48c
 23685 c308 1C       		.uleb128 0x1c
 23686 c309 00000000 		.long	.LASF792
 23687 c30d 29000000 		.long	0x29
 23688 c311 40       		.uleb128 0x40
 23689 c312 00000000 		.long	.LASF953
 23690 c316 30000000 		.long	0x30
 23691 c31a 18       		.byte	0x18
 23692 c31b 1C       		.uleb128 0x1c
 23693 c31c 00000000 		.long	.LASF791
 23694 c320 B0260000 		.long	0x26b0
 23695 c324 AE01     		.uleb128 0xae
 23696 c326 00000000 		.long	.LASF1439
 23697 c32a 07       		.byte	0x7
 23698 c32b 880D     		.value	0xd88
GAS LISTING /tmp/ccKUqHDa.s 			page 674


 23699 c32d 8CC40000 		.long	0xc48c
 23700 c331 01       		.uleb128 0x1
 23701 c332 55       		.byte	0x55
 23702 c333 A101     		.uleb128 0xa1
 23703 c335 00000000 		.long	.Ldebug_ranges0+0x1c0
 23704 c339 AF01     		.uleb128 0xaf
 23705 c33b 5F5F6200 		.string	"__b"
 23706 c33f 07       		.byte	0x7
 23707 c340 8D0D     		.value	0xd8d
 23708 c342 F7280000 		.long	0x28f7
 23709 c346 18       		.byte	0x18
 23710 c347 B001     		.uleb128 0xb0
 23711 c349 5F5F7200 		.string	"__r"
 23712 c34d 07       		.byte	0x7
 23713 c34e 900D     		.value	0xd90
 23714 c350 91C40000 		.long	0xc491
 23715 c354 10       		.byte	0x10
 23716 c355 00000000 		.long	0
 23717 c359 00000080 		.long	0x80000000
 23718 c35d 1F400000 		.long	0x401f
 23719 c361 00000000 		.long	0
 23720 c365 B101     		.uleb128 0xb1
 23721 c367 00000000 		.long	.LASF1458
 23722 c36b 07       		.byte	0x7
 23723 c36c 920D     		.value	0xd92
 23724 c36e F7280000 		.long	0x28f7
 23725 c372 20       		.byte	0x20
 23726 c373 B201     		.uleb128 0xb2
 23727 c375 5F5F6B00 		.string	"__k"
 23728 c379 07       		.byte	0x7
 23729 c37a 930D     		.value	0xd93
 23730 c37c DB070000 		.long	0x7db
 23731 c380 00000000 		.long	.LLST39
 23732 c384 B301     		.uleb128 0xb3
 23733 c386 00000000 		.long	.LASF1459
 23734 c38a 07       		.byte	0x7
 23735 c38b 940D     		.value	0xd94
 23736 c38d 29000000 		.long	0x29
 23737 c391 00000000 		.long	.LLST40
 23738 c395 B301     		.uleb128 0xb3
 23739 c397 00000000 		.long	.LASF1442
 23740 c39b 07       		.byte	0x7
 23741 c39c 950D     		.value	0xd95
 23742 c39e 29000000 		.long	0x29
 23743 c3a2 00000000 		.long	.LLST41
 23744 c3a6 AB01     		.uleb128 0xab
 23745 c3a8 BABC0000 		.long	0xbcba
 23746 c3ac 00000000 		.quad	.LBB1878
 23746      00000000 
 23747 c3b4 00000000 		.long	.Ldebug_ranges0+0x1f0
 23748 c3b8 07       		.byte	0x7
 23749 c3b9 980D     		.value	0xd98
 23750 c3bb B401     		.uleb128 0xb4
 23751 c3bd CCBC0000 		.long	0xbccc
 23752 c3c1 01       		.uleb128 0x1
 23753 c3c2 55       		.byte	0x55
 23754 c3c3 A101     		.uleb128 0xa1
GAS LISTING /tmp/ccKUqHDa.s 			page 675


 23755 c3c5 00000000 		.long	.Ldebug_ranges0+0x1f0
 23756 c3c9 A201     		.uleb128 0xa2
 23757 c3cb D8BC0000 		.long	0xbcd8
 23758 c3cf 00000000 		.long	.LLST42
 23759 c3d3 A801     		.uleb128 0xa8
 23760 c3d5 E7BC0000 		.long	0xbce7
 23761 c3d9 00000000 		.quad	.LBB1880
 23761      00000000 
 23762 c3e1 DD000000 		.quad	.LBE1880-.LBB1880
 23762      00000000 
 23763 c3e9 07       		.byte	0x7
 23764 c3ea CB01     		.value	0x1cb
 23765 c3ec 9601     		.uleb128 0x96
 23766 c3ee F9BC0000 		.long	0xbcf9
 23767 c3f2 A701     		.uleb128 0xa7
 23768 c3f4 00000000 		.quad	.LBB1881
 23768      00000000 
 23769 c3fc DD000000 		.quad	.LBE1881-.LBB1881
 23769      00000000 
 23770 c404 B501     		.uleb128 0xb5
 23771 c406 05BD0000 		.long	0xbd05
 23772 c40a B501     		.uleb128 0xb5
 23773 c40c 12BD0000 		.long	0xbd12
 23774 c410 A201     		.uleb128 0xa2
 23775 c412 1FBD0000 		.long	0xbd1f
 23776 c416 00000000 		.long	.LLST43
 23777 c41a B601     		.uleb128 0xb6
 23778 c41c 00000000 		.quad	.LBB1882
 23778      00000000 
 23779 c424 58000000 		.quad	.LBE1882-.LBB1882
 23779      00000000 
 23780 c42c 52C40000 		.long	0xc452
 23781 c430 B501     		.uleb128 0xb5
 23782 c432 32BD0000 		.long	0xbd32
 23783 c436 A701     		.uleb128 0xa7
 23784 c438 00000000 		.quad	.LBB1883
 23784      00000000 
 23785 c440 36000000 		.quad	.LBE1883-.LBB1883
 23785      00000000 
 23786 c448 B701     		.uleb128 0xb7
 23787 c44a 41BD0000 		.long	0xbd41
 23788 c44e 01       		.uleb128 0x1
 23789 c44f 50       		.byte	0x50
 23790 c450 00       		.byte	0
 23791 c451 00       		.byte	0
 23792 c452 A701     		.uleb128 0xa7
 23793 c454 00000000 		.quad	.LBB1884
 23793      00000000 
 23794 c45c 3B000000 		.quad	.LBE1884-.LBB1884
 23794      00000000 
 23795 c464 B501     		.uleb128 0xb5
 23796 c466 52BD0000 		.long	0xbd52
 23797 c46a A701     		.uleb128 0xa7
 23798 c46c 00000000 		.quad	.LBB1885
 23798      00000000 
 23799 c474 36000000 		.quad	.LBE1885-.LBB1885
 23799      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 676


 23800 c47c B701     		.uleb128 0xb7
 23801 c47e 61BD0000 		.long	0xbd61
 23802 c482 01       		.uleb128 0x1
 23803 c483 50       		.byte	0x50
 23804 c484 00       		.byte	0
 23805 c485 00       		.byte	0
 23806 c486 00       		.byte	0
 23807 c487 00       		.byte	0
 23808 c488 00       		.byte	0
 23809 c489 00       		.byte	0
 23810 c48a 00       		.byte	0
 23811 c48b 00       		.byte	0
 23812 c48c 0B       		.uleb128 0xb
 23813 c48d DF9F0000 		.long	0x9fdf
 23814 c491 0B       		.uleb128 0xb
 23815 c492 05840000 		.long	0x8405
 23816 c496 B801     		.uleb128 0xb8
 23817 c498 00000000 		.long	.LASF1460
 23818 c49c 01       		.byte	0x1
 23819 c49d 27       		.byte	0x27
 23820 c49e E5710000 		.long	0x71e5
 23821 c4a2 00000000 		.quad	.LFB5505
 23821      00000000 
 23822 c4aa 360B0000 		.quad	.LFE5505-.LFB5505
 23822      00000000 
 23823 c4b2 01       		.uleb128 0x1
 23824 c4b3 9C       		.byte	0x9c
 23825 c4b4 E8EB0000 		.long	0xebe8
 23826 c4b8 B901     		.uleb128 0xb9
 23827 c4ba 00000000 		.long	.LASF1461
 23828 c4be 01       		.byte	0x1
 23829 c4bf 27       		.byte	0x27
 23830 c4c0 E5710000 		.long	0x71e5
 23831 c4c4 00000000 		.long	.LLST44
 23832 c4c8 B901     		.uleb128 0xb9
 23833 c4ca 00000000 		.long	.LASF1462
 23834 c4ce 01       		.byte	0x1
 23835 c4cf 27       		.byte	0x27
 23836 c4d0 67870000 		.long	0x8767
 23837 c4d4 00000000 		.long	.LLST45
 23838 c4d8 BA01     		.uleb128 0xba
 23839 c4da 00000000 		.long	.Ldebug_ranges0+0x220
 23840 c4de A7EB0000 		.long	0xeba7
 23841 c4e2 BB01     		.uleb128 0xbb
 23842 c4e4 7200     		.string	"r"
 23843 c4e6 01       		.byte	0x1
 23844 c4e7 34       		.byte	0x34
 23845 c4e8 E8EB0000 		.long	0xebe8
 23846 c4ec 00000000 		.long	.LLST46
 23847 c4f0 BB01     		.uleb128 0xbb
 23848 c4f2 6400     		.string	"d"
 23849 c4f4 01       		.byte	0x1
 23850 c4f5 34       		.byte	0x34
 23851 c4f6 E8EB0000 		.long	0xebe8
 23852 c4fa 00000000 		.long	.LLST47
 23853 c4fe BC01     		.uleb128 0xbc
 23854 c500 00000000 		.long	.LASF1463
GAS LISTING /tmp/ccKUqHDa.s 			page 677


 23855 c504 01       		.byte	0x1
 23856 c505 36       		.byte	0x36
 23857 c506 7A360000 		.long	0x367a
 23858 c50a 00000000 		.long	.LLST48
 23859 c50e BD01     		.uleb128 0xbd
 23860 c510 00000000 		.long	.LASF1464
 23861 c514 01       		.byte	0x1
 23862 c515 3D       		.byte	0x3d
 23863 c516 EDEB0000 		.long	0xebed
 23864 c51a 04       		.uleb128 0x4
 23865 c51b 91       		.byte	0x91
 23866 c51c C0B07F   		.sleb128 -10176
 23867 c51f 04       		.uleb128 0x4
 23868 c520 00000000 		.long	.LASF1465
 23869 c524 01       		.byte	0x1
 23870 c525 01       		.byte	0x1
 23871 c526 3F       		.byte	0x3f
 23872 c527 E4C50000 		.long	0xc5e4
 23873 c52b BE01     		.uleb128 0xbe
 23874 c52d 00000000 		.long	.LASF1467
 23875 c531 39C50000 		.long	0xc539
 23876 c535 44C50000 		.long	0xc544
 23877 c539 08       		.uleb128 0x8
 23878 c53a 09A00000 		.long	0xa009
 23879 c53e 08       		.uleb128 0x8
 23880 c53f E5710000 		.long	0x71e5
 23881 c543 00       		.byte	0
 23882 c544 BF01     		.uleb128 0xbf
 23883 c546 00000000 		.long	.LASF331
 23884 c54a 29000000 		.long	0x29
 23885 c54e 03       		.byte	0x3
 23886 c54f 5CC50000 		.long	0xc55c
 23887 c553 76C50000 		.long	0xc576
 23888 c557 0B       		.uleb128 0xb
 23889 c558 1FC50000 		.long	0xc51f
 23890 c55c 8501     		.uleb128 0x85
 23891 c55e 00000000 		.long	.LASF1468
 23892 c562 66C50000 		.long	0xc566
 23893 c566 0B       		.uleb128 0xb
 23894 c567 0FA00000 		.long	0xa00f
 23895 c56b 8D01     		.uleb128 0x8d
 23896 c56d 6400     		.string	"d"
 23897 c56f 01       		.byte	0x1
 23898 c570 3F       		.byte	0x3f
 23899 c571 29000000 		.long	0x29
 23900 c575 00       		.byte	0
 23901 c576 BF01     		.uleb128 0xbf
 23902 c578 00000000 		.long	.LASF1469
 23903 c57c 24A00000 		.long	0xa024
 23904 c580 03       		.byte	0x3
 23905 c581 89C50000 		.long	0xc589
 23906 c585 94C50000 		.long	0xc594
 23907 c589 8501     		.uleb128 0x85
 23908 c58b 00000000 		.long	.LASF1418
 23909 c58f 66C50000 		.long	0xc566
 23910 c593 00       		.byte	0
 23911 c594 C001     		.uleb128 0xc0
GAS LISTING /tmp/ccKUqHDa.s 			page 678


 23912 c596 00000000 		.long	.LASF1470
 23913 c59a 29000000 		.long	0x29
 23914 c59e 00000000 		.quad	.LFB5507
 23914      00000000 
 23915 c5a6 18000000 		.quad	.LFE5507-.LFB5507
 23915      00000000 
 23916 c5ae 01       		.uleb128 0x1
 23917 c5af 9C       		.byte	0x9c
 23918 c5b0 C101     		.uleb128 0xc1
 23919 c5b2 29000000 		.long	0x29
 23920 c5b6 01       		.uleb128 0x1
 23921 c5b7 61       		.byte	0x61
 23922 c5b8 A601     		.uleb128 0xa6
 23923 c5ba 44C50000 		.long	0xc544
 23924 c5be 00000000 		.quad	.LBB1820
 23924      00000000 
 23925 c5c6 17000000 		.quad	.LBE1820-.LBB1820
 23925      00000000 
 23926 c5ce 01       		.byte	0x1
 23927 c5cf 3F       		.byte	0x3f
 23928 c5d0 C201     		.uleb128 0xc2
 23929 c5d2 5CC50000 		.long	0xc55c
 23930 c5d6 00       		.byte	0
 23931 c5d7 9C01     		.uleb128 0x9c
 23932 c5d9 6BC50000 		.long	0xc56b
 23933 c5dd 00000000 		.long	.LLST0
 23934 c5e1 00       		.byte	0
 23935 c5e2 00       		.byte	0
 23936 c5e3 00       		.byte	0
 23937 c5e4 04       		.uleb128 0x4
 23938 c5e5 00000000 		.long	.LASF1465
 23939 c5e9 01       		.byte	0x1
 23940 c5ea 01       		.byte	0x1
 23941 c5eb 40       		.byte	0x40
 23942 c5ec B3C60000 		.long	0xc6b3
 23943 c5f0 BE01     		.uleb128 0xbe
 23944 c5f2 00000000 		.long	.LASF1467
 23945 c5f6 FEC50000 		.long	0xc5fe
 23946 c5fa 09C60000 		.long	0xc609
 23947 c5fe 08       		.uleb128 0x8
 23948 c5ff 2AA00000 		.long	0xa02a
 23949 c603 08       		.uleb128 0x8
 23950 c604 E5710000 		.long	0x71e5
 23951 c608 00       		.byte	0
 23952 c609 BF01     		.uleb128 0xbf
 23953 c60b 00000000 		.long	.LASF331
 23954 c60f 29000000 		.long	0x29
 23955 c613 03       		.byte	0x3
 23956 c614 21C60000 		.long	0xc621
 23957 c618 36C60000 		.long	0xc636
 23958 c61c 0B       		.uleb128 0xb
 23959 c61d E4C50000 		.long	0xc5e4
 23960 c621 8501     		.uleb128 0x85
 23961 c623 00000000 		.long	.LASF1468
 23962 c627 53C60000 		.long	0xc653
 23963 c62b 8D01     		.uleb128 0x8d
 23964 c62d 6400     		.string	"d"
GAS LISTING /tmp/ccKUqHDa.s 			page 679


 23965 c62f 01       		.byte	0x1
 23966 c630 40       		.byte	0x40
 23967 c631 29000000 		.long	0x29
 23968 c635 00       		.byte	0
 23969 c636 BF01     		.uleb128 0xbf
 23970 c638 00000000 		.long	.LASF1469
 23971 c63c 24A00000 		.long	0xa024
 23972 c640 03       		.byte	0x3
 23973 c641 49C60000 		.long	0xc649
 23974 c645 59C60000 		.long	0xc659
 23975 c649 8501     		.uleb128 0x85
 23976 c64b 00000000 		.long	.LASF1418
 23977 c64f 53C60000 		.long	0xc653
 23978 c653 0B       		.uleb128 0xb
 23979 c654 30A00000 		.long	0xa030
 23980 c658 00       		.byte	0
 23981 c659 C001     		.uleb128 0xc0
 23982 c65b 00000000 		.long	.LASF1470
 23983 c65f 29000000 		.long	0x29
 23984 c663 00000000 		.quad	.LFB5510
 23984      00000000 
 23985 c66b 1B000000 		.quad	.LFE5510-.LFB5510
 23985      00000000 
 23986 c673 01       		.uleb128 0x1
 23987 c674 9C       		.byte	0x9c
 23988 c675 C101     		.uleb128 0xc1
 23989 c677 29000000 		.long	0x29
 23990 c67b 01       		.uleb128 0x1
 23991 c67c 61       		.byte	0x61
 23992 c67d A001     		.uleb128 0xa0
 23993 c67f 09C60000 		.long	0xc609
 23994 c683 00000000 		.quad	.LBB1826
 23994      00000000 
 23995 c68b 00000000 		.long	.Ldebug_ranges0+0x30
 23996 c68f 01       		.byte	0x1
 23997 c690 40       		.byte	0x40
 23998 c691 C201     		.uleb128 0xc2
 23999 c693 21C60000 		.long	0xc621
 24000 c697 00       		.byte	0
 24001 c698 9C01     		.uleb128 0x9c
 24002 c69a 2BC60000 		.long	0xc62b
 24003 c69e 00000000 		.long	.LLST2
 24004 c6a2 C301     		.uleb128 0xc3
 24005 c6a4 00000000 		.quad	.LVL11
 24005      00000000 
 24006 c6ac C9ED0000 		.long	0xedc9
 24007 c6b0 00       		.byte	0
 24008 c6b1 00       		.byte	0
 24009 c6b2 00       		.byte	0
 24010 c6b3 04       		.uleb128 0x4
 24011 c6b4 00000000 		.long	.LASF1465
 24012 c6b8 01       		.byte	0x1
 24013 c6b9 01       		.byte	0x1
 24014 c6ba 41       		.byte	0x41
 24015 c6bb 9EC70000 		.long	0xc79e
 24016 c6bf BE01     		.uleb128 0xbe
 24017 c6c1 00000000 		.long	.LASF1467
GAS LISTING /tmp/ccKUqHDa.s 			page 680


 24018 c6c5 CDC60000 		.long	0xc6cd
 24019 c6c9 D8C60000 		.long	0xc6d8
 24020 c6cd 08       		.uleb128 0x8
 24021 c6ce 36A00000 		.long	0xa036
 24022 c6d2 08       		.uleb128 0x8
 24023 c6d3 E5710000 		.long	0x71e5
 24024 c6d7 00       		.byte	0
 24025 c6d8 BF01     		.uleb128 0xbf
 24026 c6da 00000000 		.long	.LASF331
 24027 c6de 29000000 		.long	0x29
 24028 c6e2 03       		.byte	0x3
 24029 c6e3 F0C60000 		.long	0xc6f0
 24030 c6e7 05C70000 		.long	0xc705
 24031 c6eb 0B       		.uleb128 0xb
 24032 c6ec B3C60000 		.long	0xc6b3
 24033 c6f0 8501     		.uleb128 0x85
 24034 c6f2 00000000 		.long	.LASF1468
 24035 c6f6 22C70000 		.long	0xc722
 24036 c6fa 8D01     		.uleb128 0x8d
 24037 c6fc 6400     		.string	"d"
 24038 c6fe 01       		.byte	0x1
 24039 c6ff 41       		.byte	0x41
 24040 c700 29000000 		.long	0x29
 24041 c704 00       		.byte	0
 24042 c705 BF01     		.uleb128 0xbf
 24043 c707 00000000 		.long	.LASF1469
 24044 c70b 24A00000 		.long	0xa024
 24045 c70f 03       		.byte	0x3
 24046 c710 18C70000 		.long	0xc718
 24047 c714 28C70000 		.long	0xc728
 24048 c718 8501     		.uleb128 0x85
 24049 c71a 00000000 		.long	.LASF1418
 24050 c71e 22C70000 		.long	0xc722
 24051 c722 0B       		.uleb128 0xb
 24052 c723 3CA00000 		.long	0xa03c
 24053 c727 00       		.byte	0
 24054 c728 C001     		.uleb128 0xc0
 24055 c72a 00000000 		.long	.LASF1470
 24056 c72e 29000000 		.long	0x29
 24057 c732 00000000 		.quad	.LFB5513
 24057      00000000 
 24058 c73a 45000000 		.quad	.LFE5513-.LFB5513
 24058      00000000 
 24059 c742 01       		.uleb128 0x1
 24060 c743 9C       		.byte	0x9c
 24061 c744 C101     		.uleb128 0xc1
 24062 c746 29000000 		.long	0x29
 24063 c74a 01       		.uleb128 0x1
 24064 c74b 61       		.byte	0x61
 24065 c74c A001     		.uleb128 0xa0
 24066 c74e D8C60000 		.long	0xc6d8
 24067 c752 00000000 		.quad	.LBB1822
 24067      00000000 
 24068 c75a 00000000 		.long	.Ldebug_ranges0+0
 24069 c75e 01       		.byte	0x1
 24070 c75f 41       		.byte	0x41
 24071 c760 C201     		.uleb128 0xc2
GAS LISTING /tmp/ccKUqHDa.s 			page 681


 24072 c762 F0C60000 		.long	0xc6f0
 24073 c766 00       		.byte	0
 24074 c767 9C01     		.uleb128 0x9c
 24075 c769 FAC60000 		.long	0xc6fa
 24076 c76d 00000000 		.long	.LLST1
 24077 c771 C301     		.uleb128 0xc3
 24078 c773 00000000 		.quad	.LVL5
 24078      00000000 
 24079 c77b C9ED0000 		.long	0xedc9
 24080 c77f C301     		.uleb128 0xc3
 24081 c781 00000000 		.quad	.LVL6
 24081      00000000 
 24082 c789 C9ED0000 		.long	0xedc9
 24083 c78d C301     		.uleb128 0xc3
 24084 c78f 00000000 		.quad	.LVL7
 24084      00000000 
 24085 c797 C9ED0000 		.long	0xedc9
 24086 c79b 00       		.byte	0
 24087 c79c 00       		.byte	0
 24088 c79d 00       		.byte	0
 24089 c79e BC01     		.uleb128 0xbc
 24090 c7a0 00000000 		.long	.LASF1471
 24091 c7a4 01       		.byte	0x1
 24092 c7a5 45       		.byte	0x45
 24093 c7a6 E8EB0000 		.long	0xebe8
 24094 c7aa 00000000 		.long	.LLST49
 24095 c7ae 9F01     		.uleb128 0x9f
 24096 c7b0 71B90000 		.long	0xb971
 24097 c7b4 00000000 		.quad	.LBB1890
 24097      00000000 
 24098 c7bc 08000000 		.quad	.LBE1890-.LBB1890
 24098      00000000 
 24099 c7c4 01       		.byte	0x1
 24100 c7c5 2A       		.byte	0x2a
 24101 c7c6 E9C70000 		.long	0xc7e9
 24102 c7ca 9601     		.uleb128 0x96
 24103 c7cc 8AB90000 		.long	0xb98a
 24104 c7d0 9C01     		.uleb128 0x9c
 24105 c7d2 80B90000 		.long	0xb980
 24106 c7d6 00000000 		.long	.LLST50
 24107 c7da C301     		.uleb128 0xc3
 24108 c7dc 00000000 		.quad	.LVL50
 24108      00000000 
 24109 c7e4 66710000 		.long	0x7166
 24110 c7e8 00       		.byte	0
 24111 c7e9 9F01     		.uleb128 0x9f
 24112 c7eb 71B90000 		.long	0xb971
 24113 c7ef 00000000 		.quad	.LBB1892
 24113      00000000 
 24114 c7f7 08000000 		.quad	.LBE1892-.LBB1892
 24114      00000000 
 24115 c7ff 01       		.byte	0x1
 24116 c800 2B       		.byte	0x2b
 24117 c801 24C80000 		.long	0xc824
 24118 c805 9601     		.uleb128 0x96
 24119 c807 8AB90000 		.long	0xb98a
 24120 c80b 9C01     		.uleb128 0x9c
GAS LISTING /tmp/ccKUqHDa.s 			page 682


 24121 c80d 80B90000 		.long	0xb980
 24122 c811 00000000 		.long	.LLST51
 24123 c815 C301     		.uleb128 0xc3
 24124 c817 00000000 		.quad	.LVL52
 24124      00000000 
 24125 c81f 66710000 		.long	0x7166
 24126 c823 00       		.byte	0
 24127 c824 9F01     		.uleb128 0x9f
 24128 c826 71B90000 		.long	0xb971
 24129 c82a 00000000 		.quad	.LBB1894
 24129      00000000 
 24130 c832 08000000 		.quad	.LBE1894-.LBB1894
 24130      00000000 
 24131 c83a 01       		.byte	0x1
 24132 c83b 2C       		.byte	0x2c
 24133 c83c 5FC80000 		.long	0xc85f
 24134 c840 9601     		.uleb128 0x96
 24135 c842 8AB90000 		.long	0xb98a
 24136 c846 9C01     		.uleb128 0x9c
 24137 c848 80B90000 		.long	0xb980
 24138 c84c 00000000 		.long	.LLST52
 24139 c850 C301     		.uleb128 0xc3
 24140 c852 00000000 		.quad	.LVL57
 24140      00000000 
 24141 c85a 66710000 		.long	0x7166
 24142 c85e 00       		.byte	0
 24143 c85f 9F01     		.uleb128 0x9f
 24144 c861 71B90000 		.long	0xb971
 24145 c865 00000000 		.quad	.LBB1896
 24145      00000000 
 24146 c86d 08000000 		.quad	.LBE1896-.LBB1896
 24146      00000000 
 24147 c875 01       		.byte	0x1
 24148 c876 2D       		.byte	0x2d
 24149 c877 9EC80000 		.long	0xc89e
 24150 c87b 9601     		.uleb128 0x96
 24151 c87d 8AB90000 		.long	0xb98a
 24152 c881 9601     		.uleb128 0x96
 24153 c883 80B90000 		.long	0xb980
 24154 c887 A901     		.uleb128 0xa9
 24155 c889 00000000 		.quad	.LVL58
 24155      00000000 
 24156 c891 66710000 		.long	0x7166
 24157 c895 AA01     		.uleb128 0xaa
 24158 c897 01       		.uleb128 0x1
 24159 c898 55       		.byte	0x55
 24160 c899 02       		.uleb128 0x2
 24161 c89a 73       		.byte	0x73
 24162 c89b 00       		.sleb128 0
 24163 c89c 00       		.byte	0
 24164 c89d 00       		.byte	0
 24165 c89e 9F01     		.uleb128 0x9f
 24166 c8a0 71B90000 		.long	0xb971
 24167 c8a4 00000000 		.quad	.LBB1898
 24167      00000000 
 24168 c8ac 08000000 		.quad	.LBE1898-.LBB1898
 24168      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 683


 24169 c8b4 01       		.byte	0x1
 24170 c8b5 2E       		.byte	0x2e
 24171 c8b6 D9C80000 		.long	0xc8d9
 24172 c8ba 9601     		.uleb128 0x96
 24173 c8bc 8AB90000 		.long	0xb98a
 24174 c8c0 9C01     		.uleb128 0x9c
 24175 c8c2 80B90000 		.long	0xb980
 24176 c8c6 00000000 		.long	.LLST53
 24177 c8ca C301     		.uleb128 0xc3
 24178 c8cc 00000000 		.quad	.LVL60
 24178      00000000 
 24179 c8d4 66710000 		.long	0x7166
 24180 c8d8 00       		.byte	0
 24181 c8d9 9F01     		.uleb128 0x9f
 24182 c8db 71B90000 		.long	0xb971
 24183 c8df 00000000 		.quad	.LBB1900
 24183      00000000 
 24184 c8e7 08000000 		.quad	.LBE1900-.LBB1900
 24184      00000000 
 24185 c8ef 01       		.byte	0x1
 24186 c8f0 2F       		.byte	0x2f
 24187 c8f1 14C90000 		.long	0xc914
 24188 c8f5 9601     		.uleb128 0x96
 24189 c8f7 8AB90000 		.long	0xb98a
 24190 c8fb 9C01     		.uleb128 0x9c
 24191 c8fd 80B90000 		.long	0xb980
 24192 c901 00000000 		.long	.LLST54
 24193 c905 C301     		.uleb128 0xc3
 24194 c907 00000000 		.quad	.LVL62
 24194      00000000 
 24195 c90f 66710000 		.long	0x7166
 24196 c913 00       		.byte	0
 24197 c914 9F01     		.uleb128 0x9f
 24198 c916 EA850000 		.long	0x85ea
 24199 c91a 00000000 		.quad	.LBB1902
 24199      00000000 
 24200 c922 10000000 		.quad	.LBE1902-.LBB1902
 24200      00000000 
 24201 c92a 01       		.byte	0x1
 24202 c92b 34       		.byte	0x34
 24203 c92c 56C90000 		.long	0xc956
 24204 c930 9C01     		.uleb128 0x9c
 24205 c932 FB850000 		.long	0x85fb
 24206 c936 00000000 		.long	.LLST55
 24207 c93a A901     		.uleb128 0xa9
 24208 c93c 00000000 		.quad	.LVL67
 24208      00000000 
 24209 c944 6D870000 		.long	0x876d
 24210 c948 AA01     		.uleb128 0xaa
 24211 c94a 01       		.uleb128 0x1
 24212 c94b 54       		.byte	0x54
 24213 c94c 01       		.uleb128 0x1
 24214 c94d 30       		.byte	0x30
 24215 c94e AA01     		.uleb128 0xaa
 24216 c950 01       		.uleb128 0x1
 24217 c951 51       		.byte	0x51
 24218 c952 01       		.uleb128 0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 684


 24219 c953 3A       		.byte	0x3a
 24220 c954 00       		.byte	0
 24221 c955 00       		.byte	0
 24222 c956 9D01     		.uleb128 0x9d
 24223 c958 72BD0000 		.long	0xbd72
 24224 c95c 00000000 		.quad	.LBB1904
 24224      00000000 
 24225 c964 00000000 		.long	.Ldebug_ranges0+0x250
 24226 c968 01       		.byte	0x1
 24227 c969 36       		.byte	0x36
 24228 c96a 9ACA0000 		.long	0xca9a
 24229 c96e 9601     		.uleb128 0x96
 24230 c970 A4BD0000 		.long	0xbda4
 24231 c974 9601     		.uleb128 0x96
 24232 c976 98BD0000 		.long	0xbd98
 24233 c97a 9C01     		.uleb128 0x9c
 24234 c97c 8BBD0000 		.long	0xbd8b
 24235 c980 00000000 		.long	.LLST56
 24236 c984 B401     		.uleb128 0xb4
 24237 c986 81BD0000 		.long	0xbd81
 24238 c98a 06       		.uleb128 0x6
 24239 c98b F2       		.byte	0xf2
 24240 c98c 00000000 		.long	.Ldebug_info0+50430
 24241 c990 00       		.sleb128 0
 24242 c991 AB01     		.uleb128 0xab
 24243 c993 CFB60000 		.long	0xb6cf
 24244 c997 00000000 		.quad	.LBB1905
 24244      00000000 
 24245 c99f 00000000 		.long	.Ldebug_ranges0+0x250
 24246 c9a3 04       		.byte	0x4
 24247 c9a4 2301     		.value	0x123
 24248 c9a6 9601     		.uleb128 0x96
 24249 c9a8 F4B60000 		.long	0xb6f4
 24250 c9ac 9C01     		.uleb128 0x9c
 24251 c9ae E8B60000 		.long	0xb6e8
 24252 c9b2 00000000 		.long	.LLST56
 24253 c9b6 B401     		.uleb128 0xb4
 24254 c9b8 DEB60000 		.long	0xb6de
 24255 c9bc 06       		.uleb128 0x6
 24256 c9bd F2       		.byte	0xf2
 24257 c9be 00000000 		.long	.Ldebug_info0+50430
 24258 c9c2 00       		.sleb128 0
 24259 c9c3 A001     		.uleb128 0xa0
 24260 c9c5 BCBD0000 		.long	0xbdbc
 24261 c9c9 00000000 		.quad	.LBB1906
 24261      00000000 
 24262 c9d1 00000000 		.long	.Ldebug_ranges0+0x250
 24263 c9d5 04       		.byte	0x4
 24264 c9d6 88       		.byte	0x88
 24265 c9d7 9C01     		.uleb128 0x9c
 24266 c9d9 D5BD0000 		.long	0xbdd5
 24267 c9dd 00000000 		.long	.LLST56
 24268 c9e1 B401     		.uleb128 0xb4
 24269 c9e3 CBBD0000 		.long	0xbdcb
 24270 c9e7 06       		.uleb128 0x6
 24271 c9e8 F2       		.byte	0xf2
 24272 c9e9 00000000 		.long	.Ldebug_info0+50430
GAS LISTING /tmp/ccKUqHDa.s 			page 685


 24273 c9ed 00       		.sleb128 0
 24274 c9ee A001     		.uleb128 0xa0
 24275 c9f0 1CB20000 		.long	0xb21c
 24276 c9f4 00000000 		.quad	.LBB1907
 24276      00000000 
 24277 c9fc 00000000 		.long	.Ldebug_ranges0+0x250
 24278 ca00 04       		.byte	0x4
 24279 ca01 B9       		.byte	0xb9
 24280 ca02 9601     		.uleb128 0x96
 24281 ca04 2BB20000 		.long	0xb22b
 24282 ca08 9C01     		.uleb128 0x9c
 24283 ca0a 35B20000 		.long	0xb235
 24284 ca0e 00000000 		.long	.LLST56
 24285 ca12 A101     		.uleb128 0xa1
 24286 ca14 00000000 		.long	.Ldebug_ranges0+0x250
 24287 ca18 A001     		.uleb128 0xa0
 24288 ca1a F1B10000 		.long	0xb1f1
 24289 ca1e 00000000 		.quad	.LBB1909
 24289      00000000 
 24290 ca26 00000000 		.long	.Ldebug_ranges0+0x280
 24291 ca2a 04       		.byte	0x4
 24292 ca2b AA       		.byte	0xaa
 24293 ca2c 9601     		.uleb128 0x96
 24294 ca2e FCB10000 		.long	0xb1fc
 24295 ca32 9C01     		.uleb128 0x9c
 24296 ca34 09B20000 		.long	0xb209
 24297 ca38 00000000 		.long	.LLST60
 24298 ca3c AB01     		.uleb128 0xab
 24299 ca3e C6B10000 		.long	0xb1c6
 24300 ca42 00000000 		.quad	.LBB1910
 24300      00000000 
 24301 ca4a 00000000 		.long	.Ldebug_ranges0+0x280
 24302 ca4e 26       		.byte	0x26
 24303 ca4f 6501     		.value	0x165
 24304 ca51 9601     		.uleb128 0x96
 24305 ca53 D5B10000 		.long	0xb1d5
 24306 ca57 9C01     		.uleb128 0x9c
 24307 ca59 EBB10000 		.long	0xb1eb
 24308 ca5d 00000000 		.long	.LLST61
 24309 ca61 9C01     		.uleb128 0x9c
 24310 ca63 DFB10000 		.long	0xb1df
 24311 ca67 00000000 		.long	.LLST60
 24312 ca6b C401     		.uleb128 0xc4
 24313 ca6d 00000000 		.quad	.LVL220
 24313      00000000 
 24314 ca75 92ED0000 		.long	0xed92
 24315 ca79 85CA0000 		.long	0xca85
 24316 ca7d AA01     		.uleb128 0xaa
 24317 ca7f 01       		.uleb128 0x1
 24318 ca80 55       		.byte	0x55
 24319 ca81 02       		.uleb128 0x2
 24320 ca82 76       		.byte	0x76
 24321 ca83 00       		.sleb128 0
 24322 ca84 00       		.byte	0
 24323 ca85 C301     		.uleb128 0xc3
 24324 ca87 00000000 		.quad	.LVL263
 24324      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 686


 24325 ca8f 92710000 		.long	0x7192
 24326 ca93 00       		.byte	0
 24327 ca94 00       		.byte	0
 24328 ca95 00       		.byte	0
 24329 ca96 00       		.byte	0
 24330 ca97 00       		.byte	0
 24331 ca98 00       		.byte	0
 24332 ca99 00       		.byte	0
 24333 ca9a BA01     		.uleb128 0xba
 24334 ca9c 00000000 		.long	.Ldebug_ranges0+0x2b0
 24335 caa0 10CB0000 		.long	0xcb10
 24336 caa4 BB01     		.uleb128 0xbb
 24337 caa6 7900     		.string	"y"
 24338 caa8 01       		.byte	0x1
 24339 caa9 37       		.byte	0x37
 24340 caaa EC710000 		.long	0x71ec
 24341 caae 00000000 		.long	.LLST63
 24342 cab2 A101     		.uleb128 0xa1
 24343 cab4 00000000 		.long	.Ldebug_ranges0+0x2e0
 24344 cab8 BB01     		.uleb128 0xbb
 24345 caba 7800     		.string	"x"
 24346 cabc 01       		.byte	0x1
 24347 cabd 38       		.byte	0x38
 24348 cabe EC710000 		.long	0x71ec
 24349 cac2 00000000 		.long	.LLST64
 24350 cac6 9D01     		.uleb128 0x9d
 24351 cac8 CEB90000 		.long	0xb9ce
 24352 cacc 00000000 		.quad	.LBB1934
 24352      00000000 
 24353 cad4 00000000 		.long	.Ldebug_ranges0+0x310
 24354 cad8 01       		.byte	0x1
 24355 cad9 39       		.byte	0x39
 24356 cada EBCA0000 		.long	0xcaeb
 24357 cade 9601     		.uleb128 0x96
 24358 cae0 EEB90000 		.long	0xb9ee
 24359 cae4 9601     		.uleb128 0x96
 24360 cae6 E2B90000 		.long	0xb9e2
 24361 caea 00       		.byte	0
 24362 caeb A601     		.uleb128 0xa6
 24363 caed B6B90000 		.long	0xb9b6
 24364 caf1 00000000 		.quad	.LBB1939
 24364      00000000 
 24365 caf9 0D000000 		.quad	.LBE1939-.LBB1939
 24365      00000000 
 24366 cb01 01       		.byte	0x1
 24367 cb02 39       		.byte	0x39
 24368 cb03 9C01     		.uleb128 0x9c
 24369 cb05 C1B90000 		.long	0xb9c1
 24370 cb09 00000000 		.long	.LLST67
 24371 cb0d 00       		.byte	0
 24372 cb0e 00       		.byte	0
 24373 cb0f 00       		.byte	0
 24374 cb10 BA01     		.uleb128 0xba
 24375 cb12 00000000 		.long	.Ldebug_ranges0+0x350
 24376 cb16 D1D10000 		.long	0xd1d1
 24377 cb1a BB01     		.uleb128 0xbb
 24378 cb1c 7700     		.string	"w"
GAS LISTING /tmp/ccKUqHDa.s 			page 687


 24379 cb1e 01       		.byte	0x1
 24380 cb1f 49       		.byte	0x49
 24381 cb20 E8EB0000 		.long	0xebe8
 24382 cb24 00000000 		.long	.LLST68
 24383 cb28 BB01     		.uleb128 0xbb
 24384 cb2a 6800     		.string	"h"
 24385 cb2c 01       		.byte	0x1
 24386 cb2d 49       		.byte	0x49
 24387 cb2e E8EB0000 		.long	0xebe8
 24388 cb32 00000000 		.long	.LLST69
 24389 cb36 C501     		.uleb128 0xc5
 24390 cb38 686D00   		.string	"hm"
 24391 cb3b 01       		.byte	0x1
 24392 cb3c 4A       		.byte	0x4a
 24393 cb3d 919E0000 		.long	0x9e91
 24394 cb41 01       		.uleb128 0x1
 24395 cb42 5D       		.byte	0x5d
 24396 cb43 BD01     		.uleb128 0xbd
 24397 cb45 00000000 		.long	.LASF1472
 24398 cb49 01       		.byte	0x1
 24399 cb4a 4F       		.byte	0x4f
 24400 cb4b EC460000 		.long	0x46ec
 24401 cb4f 03       		.uleb128 0x3
 24402 cb50 91       		.byte	0x91
 24403 cb51 B058     		.sleb128 -5072
 24404 cb53 B601     		.uleb128 0xb6
 24405 cb55 00000000 		.quad	.LBB1946
 24405      00000000 
 24406 cb5d 24000000 		.quad	.LBE1946-.LBB1946
 24406      00000000 
 24407 cb65 A0CB0000 		.long	0xcba0
 24408 cb69 BB01     		.uleb128 0xbb
 24409 cb6b 6900     		.string	"i"
 24410 cb6d 01       		.byte	0x1
 24411 cb6e 4C       		.byte	0x4c
 24412 cb6f 26840000 		.long	0x8426
 24413 cb73 00000000 		.long	.LLST70
 24414 cb77 A901     		.uleb128 0xa9
 24415 cb79 00000000 		.quad	.LVL95
 24415      00000000 
 24416 cb81 DEED0000 		.long	0xedde
 24417 cb85 AA01     		.uleb128 0xaa
 24418 cb87 01       		.uleb128 0x1
 24419 cb88 55       		.byte	0x55
 24420 cb89 02       		.uleb128 0x2
 24421 cb8a 7D       		.byte	0x7d
 24422 cb8b 00       		.sleb128 0
 24423 cb8c AA01     		.uleb128 0xaa
 24424 cb8e 01       		.uleb128 0x1
 24425 cb8f 54       		.byte	0x54
 24426 cb90 02       		.uleb128 0x2
 24427 cb91 73       		.byte	0x73
 24428 cb92 00       		.sleb128 0
 24429 cb93 AA01     		.uleb128 0xaa
 24430 cb95 01       		.uleb128 0x1
 24431 cb96 51       		.byte	0x51
 24432 cb97 06       		.uleb128 0x6
GAS LISTING /tmp/ccKUqHDa.s 			page 688


 24433 cb98 91       		.byte	0x91
 24434 cb99 E8AE7F   		.sleb128 -10392
 24435 cb9c 94       		.byte	0x94
 24436 cb9d 04       		.byte	0x4
 24437 cb9e 00       		.byte	0
 24438 cb9f 00       		.byte	0
 24439 cba0 BA01     		.uleb128 0xba
 24440 cba2 00000000 		.long	.Ldebug_ranges0+0x3b0
 24441 cba6 40CE0000 		.long	0xce40
 24442 cbaa BC01     		.uleb128 0xbc
 24443 cbac 00000000 		.long	.LASF1473
 24444 cbb0 01       		.byte	0x1
 24445 cbb1 53       		.byte	0x53
 24446 cbb2 C9710000 		.long	0x71c9
 24447 cbb6 00000000 		.long	.LLST71
 24448 cbba 9D01     		.uleb128 0x9d
 24449 cbbc 1FBA0000 		.long	0xba1f
 24450 cbc0 00000000 		.quad	.LBB1948
 24450      00000000 
 24451 cbc8 00000000 		.long	.Ldebug_ranges0+0x400
 24452 cbcc 01       		.byte	0x1
 24453 cbcd 53       		.byte	0x53
 24454 cbce 47CC0000 		.long	0xcc47
 24455 cbd2 9C01     		.uleb128 0x9c
 24456 cbd4 2EBA0000 		.long	0xba2e
 24457 cbd8 00000000 		.long	.LLST72
 24458 cbdc C601     		.uleb128 0xc6
 24459 cbde 8BA60000 		.long	0xa68b
 24460 cbe2 00000000 		.quad	.LBB1950
 24460      00000000 
 24461 cbea 0C000000 		.quad	.LBE1950-.LBB1950
 24461      00000000 
 24462 cbf2 02       		.byte	0x2
 24463 cbf3 2302     		.value	0x223
 24464 cbf5 04CC0000 		.long	0xcc04
 24465 cbf9 9C01     		.uleb128 0x9c
 24466 cbfb 9AA60000 		.long	0xa69a
 24467 cbff 00000000 		.long	.LLST72
 24468 cc03 00       		.byte	0
 24469 cc04 AB01     		.uleb128 0xab
 24470 cc06 54A10000 		.long	0xa154
 24471 cc0a 00000000 		.quad	.LBB1952
 24471      00000000 
 24472 cc12 00000000 		.long	.Ldebug_ranges0+0x430
 24473 cc16 02       		.byte	0x2
 24474 cc17 2302     		.value	0x223
 24475 cc19 9C01     		.uleb128 0x9c
 24476 cc1b 6DA10000 		.long	0xa16d
 24477 cc1f 00000000 		.long	.LLST74
 24478 cc23 9C01     		.uleb128 0x9c
 24479 cc25 63A10000 		.long	0xa163
 24480 cc29 00000000 		.long	.LLST75
 24481 cc2d A901     		.uleb128 0xa9
 24482 cc2f 00000000 		.quad	.LVL241
 24482      00000000 
 24483 cc37 DABE0000 		.long	0xbeda
 24484 cc3b AA01     		.uleb128 0xaa
GAS LISTING /tmp/ccKUqHDa.s 			page 689


 24485 cc3d 01       		.uleb128 0x1
 24486 cc3e 54       		.byte	0x54
 24487 cc3f 04       		.uleb128 0x4
 24488 cc40 91       		.byte	0x91
 24489 cc41 F0B07F   		.sleb128 -10128
 24490 cc44 00       		.byte	0
 24491 cc45 00       		.byte	0
 24492 cc46 00       		.byte	0
 24493 cc47 9F01     		.uleb128 0x9f
 24494 cc49 48BA0000 		.long	0xba48
 24495 cc4d 00000000 		.quad	.LBB1957
 24495      00000000 
 24496 cc55 0A000000 		.quad	.LBE1957-.LBB1957
 24496      00000000 
 24497 cc5d 01       		.byte	0x1
 24498 cc5e 54       		.byte	0x54
 24499 cc5f 94CC0000 		.long	0xcc94
 24500 cc63 9C01     		.uleb128 0x9c
 24501 cc65 61BA0000 		.long	0xba61
 24502 cc69 00000000 		.long	.LLST76
 24503 cc6d 9C01     		.uleb128 0x9c
 24504 cc6f 57BA0000 		.long	0xba57
 24505 cc73 00000000 		.long	.LLST77
 24506 cc77 A901     		.uleb128 0xa9
 24507 cc79 00000000 		.quad	.LVL229
 24507      00000000 
 24508 cc81 B92F0000 		.long	0x2fb9
 24509 cc85 AA01     		.uleb128 0xaa
 24510 cc87 01       		.uleb128 0x1
 24511 cc88 54       		.byte	0x54
 24512 cc89 08       		.uleb128 0x8
 24513 cc8a 76       		.byte	0x76
 24514 cc8b 00       		.sleb128 0
 24515 cc8c 0C       		.byte	0xc
 24516 cc8d FFFFFFFF 		.long	0xffffffff
 24517 cc91 1A       		.byte	0x1a
 24518 cc92 00       		.byte	0
 24519 cc93 00       		.byte	0
 24520 cc94 9F01     		.uleb128 0x9f
 24521 cc96 71B90000 		.long	0xb971
 24522 cc9a 00000000 		.quad	.LBB1959
 24522      00000000 
 24523 cca2 08000000 		.quad	.LBE1959-.LBB1959
 24523      00000000 
 24524 ccaa 01       		.byte	0x1
 24525 ccab 54       		.byte	0x54
 24526 ccac CFCC0000 		.long	0xcccf
 24527 ccb0 9601     		.uleb128 0x96
 24528 ccb2 8AB90000 		.long	0xb98a
 24529 ccb6 9C01     		.uleb128 0x9c
 24530 ccb8 80B90000 		.long	0xb980
 24531 ccbc 00000000 		.long	.LLST78
 24532 ccc0 C301     		.uleb128 0xc3
 24533 ccc2 00000000 		.quad	.LVL232
 24533      00000000 
 24534 ccca 66710000 		.long	0x7166
 24535 ccce 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 690


 24536 cccf 9F01     		.uleb128 0x9f
 24537 ccd1 1FBA0000 		.long	0xba1f
 24538 ccd5 00000000 		.quad	.LBB1962
 24538      00000000 
 24539 ccdd 2C000000 		.quad	.LBE1962-.LBB1962
 24539      00000000 
 24540 cce5 01       		.byte	0x1
 24541 cce6 53       		.byte	0x53
 24542 cce7 64CD0000 		.long	0xcd64
 24543 cceb 9C01     		.uleb128 0x9c
 24544 cced 2EBA0000 		.long	0xba2e
 24545 ccf1 00000000 		.long	.LLST79
 24546 ccf5 C601     		.uleb128 0xc6
 24547 ccf7 8BA60000 		.long	0xa68b
 24548 ccfb 00000000 		.quad	.LBB1964
 24548      00000000 
 24549 cd03 0C000000 		.quad	.LBE1964-.LBB1964
 24549      00000000 
 24550 cd0b 02       		.byte	0x2
 24551 cd0c 2302     		.value	0x223
 24552 cd0e 1DCD0000 		.long	0xcd1d
 24553 cd12 9C01     		.uleb128 0x9c
 24554 cd14 9AA60000 		.long	0xa69a
 24555 cd18 00000000 		.long	.LLST79
 24556 cd1c 00       		.byte	0
 24557 cd1d A801     		.uleb128 0xa8
 24558 cd1f 54A10000 		.long	0xa154
 24559 cd23 00000000 		.quad	.LBB1966
 24559      00000000 
 24560 cd2b 20000000 		.quad	.LBE1966-.LBB1966
 24560      00000000 
 24561 cd33 02       		.byte	0x2
 24562 cd34 2302     		.value	0x223
 24563 cd36 9C01     		.uleb128 0x9c
 24564 cd38 6DA10000 		.long	0xa16d
 24565 cd3c 00000000 		.long	.LLST81
 24566 cd40 9C01     		.uleb128 0x9c
 24567 cd42 63A10000 		.long	0xa163
 24568 cd46 00000000 		.long	.LLST82
 24569 cd4a A901     		.uleb128 0xa9
 24570 cd4c 00000000 		.quad	.LVL274
 24570      00000000 
 24571 cd54 DABE0000 		.long	0xbeda
 24572 cd58 AA01     		.uleb128 0xaa
 24573 cd5a 01       		.uleb128 0x1
 24574 cd5b 54       		.byte	0x54
 24575 cd5c 04       		.uleb128 0x4
 24576 cd5d 91       		.byte	0x91
 24577 cd5e F0B07F   		.sleb128 -10128
 24578 cd61 00       		.byte	0
 24579 cd62 00       		.byte	0
 24580 cd63 00       		.byte	0
 24581 cd64 C701     		.uleb128 0xc7
 24582 cd66 00000000 		.quad	.LVL104
 24582      00000000 
 24583 cd6e 92CD0000 		.long	0xcd92
 24584 cd72 AA01     		.uleb128 0xaa
GAS LISTING /tmp/ccKUqHDa.s 			page 691


 24585 cd74 01       		.uleb128 0x1
 24586 cd75 55       		.byte	0x55
 24587 cd76 02       		.uleb128 0x2
 24588 cd77 7E       		.byte	0x7e
 24589 cd78 00       		.sleb128 0
 24590 cd79 AA01     		.uleb128 0xaa
 24591 cd7b 01       		.uleb128 0x1
 24592 cd7c 54       		.byte	0x54
 24593 cd7d 09       		.uleb128 0x9
 24594 cd7e 03       		.byte	0x3
 24595 cd7f 00000000 		.quad	.LC15
 24595      00000000 
 24596 cd87 AA01     		.uleb128 0xaa
 24597 cd89 01       		.uleb128 0x1
 24598 cd8a 51       		.byte	0x51
 24599 cd8b 05       		.uleb128 0x5
 24600 cd8c 91       		.byte	0x91
 24601 cd8d B0AF7F   		.sleb128 -10320
 24602 cd90 06       		.byte	0x6
 24603 cd91 00       		.byte	0
 24604 cd92 C401     		.uleb128 0xc4
 24605 cd94 00000000 		.quad	.LVL105
 24605      00000000 
 24606 cd9c 14EE0000 		.long	0xee14
 24607 cda0 CDCD0000 		.long	0xcdcd
 24608 cda4 AA01     		.uleb128 0xaa
 24609 cda6 01       		.uleb128 0x1
 24610 cda7 55       		.byte	0x55
 24611 cda8 02       		.uleb128 0x2
 24612 cda9 7E       		.byte	0x7e
 24613 cdaa 00       		.sleb128 0
 24614 cdab AA01     		.uleb128 0xaa
 24615 cdad 01       		.uleb128 0x1
 24616 cdae 54       		.byte	0x54
 24617 cdaf 02       		.uleb128 0x2
 24618 cdb0 73       		.byte	0x73
 24619 cdb1 00       		.sleb128 0
 24620 cdb2 AA01     		.uleb128 0xaa
 24621 cdb4 01       		.uleb128 0x1
 24622 cdb5 51       		.byte	0x51
 24623 cdb6 02       		.uleb128 0x2
 24624 cdb7 76       		.byte	0x76
 24625 cdb8 00       		.sleb128 0
 24626 cdb9 AA01     		.uleb128 0xaa
 24627 cdbb 01       		.uleb128 0x1
 24628 cdbc 52       		.byte	0x52
 24629 cdbd 02       		.uleb128 0x2
 24630 cdbe 7C       		.byte	0x7c
 24631 cdbf 00       		.sleb128 0
 24632 cdc0 AA01     		.uleb128 0xaa
 24633 cdc2 01       		.uleb128 0x1
 24634 cdc3 58       		.byte	0x58
 24635 cdc4 01       		.uleb128 0x1
 24636 cdc5 36       		.byte	0x36
 24637 cdc6 AA01     		.uleb128 0xaa
 24638 cdc8 01       		.uleb128 0x1
 24639 cdc9 59       		.byte	0x59
GAS LISTING /tmp/ccKUqHDa.s 			page 692


 24640 cdca 01       		.uleb128 0x1
 24641 cdcb 38       		.byte	0x38
 24642 cdcc 00       		.byte	0
 24643 cdcd C401     		.uleb128 0xc4
 24644 cdcf 00000000 		.quad	.LVL226
 24644      00000000 
 24645 cdd7 44EE0000 		.long	0xee44
 24646 cddb E7CD0000 		.long	0xcde7
 24647 cddf AA01     		.uleb128 0xaa
 24648 cde1 01       		.uleb128 0x1
 24649 cde2 55       		.byte	0x55
 24650 cde3 02       		.uleb128 0x2
 24651 cde4 76       		.byte	0x76
 24652 cde5 00       		.sleb128 0
 24653 cde6 00       		.byte	0
 24654 cde7 C401     		.uleb128 0xc4
 24655 cde9 00000000 		.quad	.LVL228
 24655      00000000 
 24656 cdf1 2DA20000 		.long	0xa22d
 24657 cdf5 08CE0000 		.long	0xce08
 24658 cdf9 AA01     		.uleb128 0xaa
 24659 cdfb 01       		.uleb128 0x1
 24660 cdfc 54       		.byte	0x54
 24661 cdfd 09       		.uleb128 0x9
 24662 cdfe 03       		.byte	0x3
 24663 cdff 00000000 		.quad	.LC16
 24663      00000000 
 24664 ce07 00       		.byte	0
 24665 ce08 C401     		.uleb128 0xc4
 24666 ce0a 00000000 		.quad	.LVL230
 24666      00000000 
 24667 ce12 2DA20000 		.long	0xa22d
 24668 ce16 29CE0000 		.long	0xce29
 24669 ce1a AA01     		.uleb128 0xaa
 24670 ce1c 01       		.uleb128 0x1
 24671 ce1d 54       		.byte	0x54
 24672 ce1e 09       		.uleb128 0x9
 24673 ce1f 03       		.byte	0x3
 24674 ce20 00000000 		.quad	.LC17
 24674      00000000 
 24675 ce28 00       		.byte	0
 24676 ce29 A901     		.uleb128 0xa9
 24677 ce2b 00000000 		.quad	.LVL231
 24677      00000000 
 24678 ce33 2DA20000 		.long	0xa22d
 24679 ce37 AA01     		.uleb128 0xaa
 24680 ce39 01       		.uleb128 0x1
 24681 ce3a 54       		.byte	0x54
 24682 ce3b 02       		.uleb128 0x2
 24683 ce3c 73       		.byte	0x73
 24684 ce3d 00       		.sleb128 0
 24685 ce3e 00       		.byte	0
 24686 ce3f 00       		.byte	0
 24687 ce40 9F01     		.uleb128 0x9f
 24688 ce42 6EBA0000 		.long	0xba6e
 24689 ce46 00000000 		.quad	.LBB1968
 24689      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 693


 24690 ce4e 12000000 		.quad	.LBE1968-.LBB1968
 24690      00000000 
 24691 ce56 01       		.byte	0x1
 24692 ce57 56       		.byte	0x56
 24693 ce58 46CF0000 		.long	0xcf46
 24694 ce5c 9C01     		.uleb128 0x9c
 24695 ce5e 7DBA0000 		.long	0xba7d
 24696 ce62 00000000 		.long	.LLST83
 24697 ce66 A801     		.uleb128 0xa8
 24698 ce68 F5AC0000 		.long	0xacf5
 24699 ce6c 00000000 		.quad	.LBB1970
 24699      00000000 
 24700 ce74 12000000 		.quad	.LBE1970-.LBB1970
 24700      00000000 
 24701 ce7c 04       		.byte	0x4
 24702 ce7d A901     		.value	0x1a9
 24703 ce7f 9C01     		.uleb128 0x9c
 24704 ce81 04AD0000 		.long	0xad04
 24705 ce85 00000000 		.long	.LLST84
 24706 ce89 A601     		.uleb128 0xa6
 24707 ce8b 77AC0000 		.long	0xac77
 24708 ce8f 00000000 		.quad	.LBB1972
 24708      00000000 
 24709 ce97 0A000000 		.quad	.LBE1972-.LBB1972
 24709      00000000 
 24710 ce9f 04       		.byte	0x4
 24711 cea0 A0       		.byte	0xa0
 24712 cea1 9601     		.uleb128 0x96
 24713 cea3 86AC0000 		.long	0xac86
 24714 cea7 9C01     		.uleb128 0x9c
 24715 cea9 9CAC0000 		.long	0xac9c
 24716 cead 00000000 		.long	.LLST85
 24717 ceb1 9C01     		.uleb128 0x9c
 24718 ceb3 90AC0000 		.long	0xac90
 24719 ceb7 00000000 		.long	.LLST86
 24720 cebb A701     		.uleb128 0xa7
 24721 cebd 00000000 		.quad	.LBB1973
 24721      00000000 
 24722 cec5 0A000000 		.quad	.LBE1973-.LBB1973
 24722      00000000 
 24723 cecd A601     		.uleb128 0xa6
 24724 cecf 3FAC0000 		.long	0xac3f
 24725 ced3 00000000 		.quad	.LBB1974
 24725      00000000 
 24726 cedb 05000000 		.quad	.LBE1974-.LBB1974
 24726      00000000 
 24727 cee3 04       		.byte	0x4
 24728 cee4 B2       		.byte	0xb2
 24729 cee5 9601     		.uleb128 0x96
 24730 cee7 4AAC0000 		.long	0xac4a
 24731 ceeb 9C01     		.uleb128 0x9c
 24732 ceed 64AC0000 		.long	0xac64
 24733 cef1 00000000 		.long	.LLST87
 24734 cef5 9C01     		.uleb128 0x9c
 24735 cef7 57AC0000 		.long	0xac57
 24736 cefb 00000000 		.long	.LLST88
 24737 ceff A801     		.uleb128 0xa8
GAS LISTING /tmp/ccKUqHDa.s 			page 694


 24738 cf01 14AC0000 		.long	0xac14
 24739 cf05 00000000 		.quad	.LBB1975
 24739      00000000 
 24740 cf0d 05000000 		.quad	.LBE1975-.LBB1975
 24740      00000000 
 24741 cf15 26       		.byte	0x26
 24742 cf16 7F01     		.value	0x17f
 24743 cf18 9601     		.uleb128 0x96
 24744 cf1a 23AC0000 		.long	0xac23
 24745 cf1e 9C01     		.uleb128 0x9c
 24746 cf20 39AC0000 		.long	0xac39
 24747 cf24 00000000 		.long	.LLST87
 24748 cf28 9C01     		.uleb128 0x9c
 24749 cf2a 2DAC0000 		.long	0xac2d
 24750 cf2e 00000000 		.long	.LLST88
 24751 cf32 C301     		.uleb128 0xc3
 24752 cf34 00000000 		.quad	.LVL113
 24752      00000000 
 24753 cf3c 5DEE0000 		.long	0xee5d
 24754 cf40 00       		.byte	0
 24755 cf41 00       		.byte	0
 24756 cf42 00       		.byte	0
 24757 cf43 00       		.byte	0
 24758 cf44 00       		.byte	0
 24759 cf45 00       		.byte	0
 24760 cf46 9F01     		.uleb128 0x9f
 24761 cf48 6EBA0000 		.long	0xba6e
 24762 cf4c 00000000 		.quad	.LBB1978
 24762      00000000 
 24763 cf54 12000000 		.quad	.LBE1978-.LBB1978
 24763      00000000 
 24764 cf5c 01       		.byte	0x1
 24765 cf5d 55       		.byte	0x55
 24766 cf5e 4CD00000 		.long	0xd04c
 24767 cf62 9C01     		.uleb128 0x9c
 24768 cf64 7DBA0000 		.long	0xba7d
 24769 cf68 00000000 		.long	.LLST91
 24770 cf6c A801     		.uleb128 0xa8
 24771 cf6e F5AC0000 		.long	0xacf5
 24772 cf72 00000000 		.quad	.LBB1980
 24772      00000000 
 24773 cf7a 12000000 		.quad	.LBE1980-.LBB1980
 24773      00000000 
 24774 cf82 04       		.byte	0x4
 24775 cf83 A901     		.value	0x1a9
 24776 cf85 9C01     		.uleb128 0x9c
 24777 cf87 04AD0000 		.long	0xad04
 24778 cf8b 00000000 		.long	.LLST91
 24779 cf8f A601     		.uleb128 0xa6
 24780 cf91 77AC0000 		.long	0xac77
 24781 cf95 00000000 		.quad	.LBB1982
 24781      00000000 
 24782 cf9d 0A000000 		.quad	.LBE1982-.LBB1982
 24782      00000000 
 24783 cfa5 04       		.byte	0x4
 24784 cfa6 A0       		.byte	0xa0
 24785 cfa7 9601     		.uleb128 0x96
GAS LISTING /tmp/ccKUqHDa.s 			page 695


 24786 cfa9 86AC0000 		.long	0xac86
 24787 cfad 9C01     		.uleb128 0x9c
 24788 cfaf 9CAC0000 		.long	0xac9c
 24789 cfb3 00000000 		.long	.LLST93
 24790 cfb7 9C01     		.uleb128 0x9c
 24791 cfb9 90AC0000 		.long	0xac90
 24792 cfbd 00000000 		.long	.LLST94
 24793 cfc1 A701     		.uleb128 0xa7
 24794 cfc3 00000000 		.quad	.LBB1983
 24794      00000000 
 24795 cfcb 0A000000 		.quad	.LBE1983-.LBB1983
 24795      00000000 
 24796 cfd3 A601     		.uleb128 0xa6
 24797 cfd5 3FAC0000 		.long	0xac3f
 24798 cfd9 00000000 		.quad	.LBB1984
 24798      00000000 
 24799 cfe1 05000000 		.quad	.LBE1984-.LBB1984
 24799      00000000 
 24800 cfe9 04       		.byte	0x4
 24801 cfea B2       		.byte	0xb2
 24802 cfeb 9601     		.uleb128 0x96
 24803 cfed 4AAC0000 		.long	0xac4a
 24804 cff1 9C01     		.uleb128 0x9c
 24805 cff3 64AC0000 		.long	0xac64
 24806 cff7 00000000 		.long	.LLST95
 24807 cffb 9C01     		.uleb128 0x9c
 24808 cffd 57AC0000 		.long	0xac57
 24809 d001 00000000 		.long	.LLST96
 24810 d005 A801     		.uleb128 0xa8
 24811 d007 14AC0000 		.long	0xac14
 24812 d00b 00000000 		.quad	.LBB1985
 24812      00000000 
 24813 d013 05000000 		.quad	.LBE1985-.LBB1985
 24813      00000000 
 24814 d01b 26       		.byte	0x26
 24815 d01c 7F01     		.value	0x17f
 24816 d01e 9601     		.uleb128 0x96
 24817 d020 23AC0000 		.long	0xac23
 24818 d024 9C01     		.uleb128 0x9c
 24819 d026 39AC0000 		.long	0xac39
 24820 d02a 00000000 		.long	.LLST95
 24821 d02e 9C01     		.uleb128 0x9c
 24822 d030 2DAC0000 		.long	0xac2d
 24823 d034 00000000 		.long	.LLST96
 24824 d038 C301     		.uleb128 0xc3
 24825 d03a 00000000 		.quad	.LVL235
 24825      00000000 
 24826 d042 5DEE0000 		.long	0xee5d
 24827 d046 00       		.byte	0
 24828 d047 00       		.byte	0
 24829 d048 00       		.byte	0
 24830 d049 00       		.byte	0
 24831 d04a 00       		.byte	0
 24832 d04b 00       		.byte	0
 24833 d04c 9F01     		.uleb128 0x9f
 24834 d04e 6EBA0000 		.long	0xba6e
 24835 d052 00000000 		.quad	.LBB1988
GAS LISTING /tmp/ccKUqHDa.s 			page 696


 24835      00000000 
 24836 d05a 12000000 		.quad	.LBE1988-.LBB1988
 24836      00000000 
 24837 d062 01       		.byte	0x1
 24838 d063 56       		.byte	0x56
 24839 d064 52D10000 		.long	0xd152
 24840 d068 9C01     		.uleb128 0x9c
 24841 d06a 7DBA0000 		.long	0xba7d
 24842 d06e 00000000 		.long	.LLST99
 24843 d072 A801     		.uleb128 0xa8
 24844 d074 F5AC0000 		.long	0xacf5
 24845 d078 00000000 		.quad	.LBB1990
 24845      00000000 
 24846 d080 12000000 		.quad	.LBE1990-.LBB1990
 24846      00000000 
 24847 d088 04       		.byte	0x4
 24848 d089 A901     		.value	0x1a9
 24849 d08b 9C01     		.uleb128 0x9c
 24850 d08d 04AD0000 		.long	0xad04
 24851 d091 00000000 		.long	.LLST99
 24852 d095 A601     		.uleb128 0xa6
 24853 d097 77AC0000 		.long	0xac77
 24854 d09b 00000000 		.quad	.LBB1992
 24854      00000000 
 24855 d0a3 0A000000 		.quad	.LBE1992-.LBB1992
 24855      00000000 
 24856 d0ab 04       		.byte	0x4
 24857 d0ac A0       		.byte	0xa0
 24858 d0ad 9601     		.uleb128 0x96
 24859 d0af 86AC0000 		.long	0xac86
 24860 d0b3 9C01     		.uleb128 0x9c
 24861 d0b5 9CAC0000 		.long	0xac9c
 24862 d0b9 00000000 		.long	.LLST101
 24863 d0bd 9C01     		.uleb128 0x9c
 24864 d0bf 90AC0000 		.long	0xac90
 24865 d0c3 00000000 		.long	.LLST102
 24866 d0c7 A701     		.uleb128 0xa7
 24867 d0c9 00000000 		.quad	.LBB1993
 24867      00000000 
 24868 d0d1 0A000000 		.quad	.LBE1993-.LBB1993
 24868      00000000 
 24869 d0d9 A601     		.uleb128 0xa6
 24870 d0db 3FAC0000 		.long	0xac3f
 24871 d0df 00000000 		.quad	.LBB1994
 24871      00000000 
 24872 d0e7 05000000 		.quad	.LBE1994-.LBB1994
 24872      00000000 
 24873 d0ef 04       		.byte	0x4
 24874 d0f0 B2       		.byte	0xb2
 24875 d0f1 9601     		.uleb128 0x96
 24876 d0f3 4AAC0000 		.long	0xac4a
 24877 d0f7 9C01     		.uleb128 0x9c
 24878 d0f9 64AC0000 		.long	0xac64
 24879 d0fd 00000000 		.long	.LLST103
 24880 d101 9C01     		.uleb128 0x9c
 24881 d103 57AC0000 		.long	0xac57
 24882 d107 00000000 		.long	.LLST104
GAS LISTING /tmp/ccKUqHDa.s 			page 697


 24883 d10b A801     		.uleb128 0xa8
 24884 d10d 14AC0000 		.long	0xac14
 24885 d111 00000000 		.quad	.LBB1995
 24885      00000000 
 24886 d119 05000000 		.quad	.LBE1995-.LBB1995
 24886      00000000 
 24887 d121 26       		.byte	0x26
 24888 d122 7F01     		.value	0x17f
 24889 d124 9601     		.uleb128 0x96
 24890 d126 23AC0000 		.long	0xac23
 24891 d12a 9C01     		.uleb128 0x9c
 24892 d12c 39AC0000 		.long	0xac39
 24893 d130 00000000 		.long	.LLST103
 24894 d134 9C01     		.uleb128 0x9c
 24895 d136 2DAC0000 		.long	0xac2d
 24896 d13a 00000000 		.long	.LLST104
 24897 d13e C301     		.uleb128 0xc3
 24898 d140 00000000 		.quad	.LVL267
 24898      00000000 
 24899 d148 5DEE0000 		.long	0xee5d
 24900 d14c 00       		.byte	0
 24901 d14d 00       		.byte	0
 24902 d14e 00       		.byte	0
 24903 d14f 00       		.byte	0
 24904 d150 00       		.byte	0
 24905 d151 00       		.byte	0
 24906 d152 C401     		.uleb128 0xc4
 24907 d154 00000000 		.quad	.LVL93
 24907      00000000 
 24908 d15c 72EE0000 		.long	0xee72
 24909 d160 77D10000 		.long	0xd177
 24910 d164 AA01     		.uleb128 0xaa
 24911 d166 01       		.uleb128 0x1
 24912 d167 55       		.byte	0x55
 24913 d168 06       		.uleb128 0x6
 24914 d169 91       		.byte	0x91
 24915 d16a F0AE7F   		.sleb128 -10384
 24916 d16d 94       		.byte	0x94
 24917 d16e 04       		.byte	0x4
 24918 d16f AA01     		.uleb128 0xaa
 24919 d171 01       		.uleb128 0x1
 24920 d172 54       		.byte	0x54
 24921 d173 02       		.uleb128 0x2
 24922 d174 7C       		.byte	0x7c
 24923 d175 00       		.sleb128 0
 24924 d176 00       		.byte	0
 24925 d177 C701     		.uleb128 0xc7
 24926 d179 00000000 		.quad	.LVL100
 24926      00000000 
 24927 d181 A0D10000 		.long	0xd1a0
 24928 d185 AA01     		.uleb128 0xaa
 24929 d187 01       		.uleb128 0x1
 24930 d188 55       		.byte	0x55
 24931 d189 02       		.uleb128 0x2
 24932 d18a 73       		.byte	0x73
 24933 d18b 00       		.sleb128 0
 24934 d18c AA01     		.uleb128 0xaa
GAS LISTING /tmp/ccKUqHDa.s 			page 698


 24935 d18e 01       		.uleb128 0x1
 24936 d18f 54       		.byte	0x54
 24937 d190 07       		.uleb128 0x7
 24938 d191 7C       		.byte	0x7c
 24939 d192 00       		.sleb128 0
 24940 d193 32       		.byte	0x32
 24941 d194 24       		.byte	0x24
 24942 d195 76       		.byte	0x76
 24943 d196 00       		.sleb128 0
 24944 d197 1E       		.byte	0x1e
 24945 d198 AA01     		.uleb128 0xaa
 24946 d19a 01       		.uleb128 0x1
 24947 d19b 51       		.byte	0x51
 24948 d19c 02       		.uleb128 0x2
 24949 d19d 7E       		.byte	0x7e
 24950 d19e 00       		.sleb128 0
 24951 d19f 00       		.byte	0
 24952 d1a0 C401     		.uleb128 0xc4
 24953 d1a2 00000000 		.quad	.LVL101
 24953      00000000 
 24954 d1aa 8CEE0000 		.long	0xee8c
 24955 d1ae BAD10000 		.long	0xd1ba
 24956 d1b2 AA01     		.uleb128 0xaa
 24957 d1b4 01       		.uleb128 0x1
 24958 d1b5 55       		.byte	0x55
 24959 d1b6 02       		.uleb128 0x2
 24960 d1b7 7D       		.byte	0x7d
 24961 d1b8 00       		.sleb128 0
 24962 d1b9 00       		.byte	0
 24963 d1ba A901     		.uleb128 0xa9
 24964 d1bc 00000000 		.quad	.LVL102
 24964      00000000 
 24965 d1c4 B6EE0000 		.long	0xeeb6
 24966 d1c8 AA01     		.uleb128 0xaa
 24967 d1ca 01       		.uleb128 0x1
 24968 d1cb 55       		.byte	0x55
 24969 d1cc 02       		.uleb128 0x2
 24970 d1cd 7D       		.byte	0x7d
 24971 d1ce 00       		.sleb128 0
 24972 d1cf 00       		.byte	0
 24973 d1d0 00       		.byte	0
 24974 d1d1 BA01     		.uleb128 0xba
 24975 d1d3 00000000 		.long	.Ldebug_ranges0+0x460
 24976 d1d7 88E70000 		.long	0xe788
 24977 d1db BB01     		.uleb128 0xbb
 24978 d1dd 7700     		.string	"w"
 24979 d1df 01       		.byte	0x1
 24980 d1e0 5D       		.byte	0x5d
 24981 d1e1 E8EB0000 		.long	0xebe8
 24982 d1e5 00000000 		.long	.LLST107
 24983 d1e9 BB01     		.uleb128 0xbb
 24984 d1eb 6800     		.string	"h"
 24985 d1ed 01       		.byte	0x1
 24986 d1ee 5D       		.byte	0x5d
 24987 d1ef E8EB0000 		.long	0xebe8
 24988 d1f3 00000000 		.long	.LLST107
 24989 d1f7 BC01     		.uleb128 0xbc
GAS LISTING /tmp/ccKUqHDa.s 			page 699


 24990 d1f9 00000000 		.long	.LASF1474
 24991 d1fd 01       		.byte	0x1
 24992 d1fe 5D       		.byte	0x5d
 24993 d1ff E8EB0000 		.long	0xebe8
 24994 d203 00000000 		.long	.LLST109
 24995 d207 C501     		.uleb128 0xc5
 24996 d209 686D7300 		.string	"hms"
 24997 d20d 01       		.byte	0x1
 24998 d20e 5E       		.byte	0x5e
 24999 d20f E4510000 		.long	0x51e4
 25000 d213 04       		.uleb128 0x4
 25001 d214 91       		.byte	0x91
 25002 d215 F0B07F   		.sleb128 -10128
 25003 d218 C501     		.uleb128 0xc5
 25004 d21a 726400   		.string	"rd"
 25005 d21d 01       		.byte	0x1
 25006 d21e 64       		.byte	0x64
 25007 d21f FC280000 		.long	0x28fc
 25008 d223 04       		.uleb128 0x4
 25009 d224 91       		.byte	0x91
 25010 d225 A0B17F   		.sleb128 -10080
 25011 d228 BD01     		.uleb128 0xbd
 25012 d22a 00000000 		.long	.LASF1475
 25013 d22e 01       		.byte	0x1
 25014 d22f 65       		.byte	0x65
 25015 d230 B02A0000 		.long	0x2ab0
 25016 d234 03       		.uleb128 0x3
 25017 d235 91       		.byte	0x91
 25018 d236 B058     		.sleb128 -5072
 25019 d238 8801     		.uleb128 0x88
 25020 d23a 00000000 		.long	.LASF1476
 25021 d23e 01       		.byte	0x1
 25022 d23f 66       		.byte	0x66
 25023 d240 B5550000 		.long	0x55b5
 25024 d244 8801     		.uleb128 0x88
 25025 d246 00000000 		.long	.LASF1477
 25026 d24a 01       		.byte	0x1
 25027 d24b 66       		.byte	0x66
 25028 d24c B5550000 		.long	0x55b5
 25029 d250 BC01     		.uleb128 0xbc
 25030 d252 00000000 		.long	.LASF1478
 25031 d256 01       		.byte	0x1
 25032 d257 68       		.byte	0x68
 25033 d258 F65E0000 		.long	0x5ef6
 25034 d25c 00000000 		.long	.LLST110
 25035 d260 04       		.uleb128 0x4
 25036 d261 00000000 		.long	.LASF1479
 25037 d265 18       		.byte	0x18
 25038 d266 01       		.byte	0x1
 25039 d267 69       		.byte	0x69
 25040 d268 4DD30000 		.long	0xd34d
 25041 d26c 11       		.uleb128 0x11
 25042 d26d 00000000 		.long	.LASF1480
 25043 d271 01       		.byte	0x1
 25044 d272 69       		.byte	0x69
 25045 d273 B6BB0000 		.long	0xbbb6
 25046 d277 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 700


 25047 d278 11       		.uleb128 0x11
 25048 d279 00000000 		.long	.LASF1481
 25049 d27d 01       		.byte	0x1
 25050 d27e 69       		.byte	0x69
 25051 d27f BCBB0000 		.long	0xbbbc
 25052 d283 08       		.byte	0x8
 25053 d284 11       		.uleb128 0x11
 25054 d285 00000000 		.long	.LASF1482
 25055 d289 01       		.byte	0x1
 25056 d28a 69       		.byte	0x69
 25057 d28b B6BB0000 		.long	0xbbb6
 25058 d28f 10       		.byte	0x10
 25059 d290 BE01     		.uleb128 0xbe
 25060 d292 00000000 		.long	.LASF1483
 25061 d296 9ED20000 		.long	0xd29e
 25062 d29a B5D20000 		.long	0xd2b5
 25063 d29e 08       		.uleb128 0x8
 25064 d29f A3D20000 		.long	0xd2a3
 25065 d2a3 69       		.uleb128 0x69
 25066 d2a4 08       		.byte	0x8
 25067 d2a5 60D20000 		.long	0xd260
 25068 d2a9 13       		.uleb128 0x13
 25069 d2aa AED20000 		.long	0xd2ae
 25070 d2ae 7B       		.uleb128 0x7b
 25071 d2af 08       		.byte	0x8
 25072 d2b0 60D20000 		.long	0xd260
 25073 d2b4 00       		.byte	0
 25074 d2b5 BE01     		.uleb128 0xbe
 25075 d2b7 00000000 		.long	.LASF1483
 25076 d2bb C3D20000 		.long	0xd2c3
 25077 d2bf D9D20000 		.long	0xd2d9
 25078 d2c3 08       		.uleb128 0x8
 25079 d2c4 A3D20000 		.long	0xd2a3
 25080 d2c8 13       		.uleb128 0x13
 25081 d2c9 CDD20000 		.long	0xd2cd
 25082 d2cd 79       		.uleb128 0x79
 25083 d2ce 08       		.byte	0x8
 25084 d2cf D3D20000 		.long	0xd2d3
 25085 d2d3 0B       		.uleb128 0xb
 25086 d2d4 60D20000 		.long	0xd260
 25087 d2d8 00       		.byte	0
 25088 d2d9 BE01     		.uleb128 0xbe
 25089 d2db 00000000 		.long	.LASF1483
 25090 d2df E7D20000 		.long	0xd2e7
 25091 d2e3 EDD20000 		.long	0xd2ed
 25092 d2e7 08       		.uleb128 0x8
 25093 d2e8 A3D20000 		.long	0xd2a3
 25094 d2ec 00       		.byte	0
 25095 d2ed BE01     		.uleb128 0xbe
 25096 d2ef 00000000 		.long	.LASF1467
 25097 d2f3 FBD20000 		.long	0xd2fb
 25098 d2f7 06D30000 		.long	0xd306
 25099 d2fb 08       		.uleb128 0x8
 25100 d2fc A3D20000 		.long	0xd2a3
 25101 d300 08       		.uleb128 0x8
 25102 d301 E5710000 		.long	0x71e5
 25103 d305 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 701


 25104 d306 C801     		.uleb128 0xc8
 25105 d308 00000000 		.long	.LASF331
 25106 d30c FC570000 		.long	0x57fc
 25107 d310 03       		.byte	0x3
 25108 d311 1BD30000 		.long	0xd31b
 25109 d315 69       		.uleb128 0x69
 25110 d316 08       		.byte	0x8
 25111 d317 D3D20000 		.long	0xd2d3
 25112 d31b 8501     		.uleb128 0x85
 25113 d31d 00000000 		.long	.LASF1468
 25114 d321 25D30000 		.long	0xd325
 25115 d325 0B       		.uleb128 0xb
 25116 d326 15D30000 		.long	0xd315
 25117 d32a 8701     		.uleb128 0x87
 25118 d32c C901     		.uleb128 0xc9
 25119 d32e 00000000 		.long	.LASF1476
 25120 d332 B6BB0000 		.long	0xbbb6
 25121 d336 C901     		.uleb128 0xc9
 25122 d338 00000000 		.long	.LASF1475
 25123 d33c BCBB0000 		.long	0xbbbc
 25124 d340 C901     		.uleb128 0xc9
 25125 d342 00000000 		.long	.LASF1477
 25126 d346 B6BB0000 		.long	0xbbb6
 25127 d34a 00       		.byte	0
 25128 d34b 00       		.byte	0
 25129 d34c 00       		.byte	0
 25130 d34d BD01     		.uleb128 0xbd
 25131 d34f 00000000 		.long	.LASF1484
 25132 d353 01       		.byte	0x1
 25133 d354 6B       		.byte	0x6b
 25134 d355 FC950000 		.long	0x95fc
 25135 d359 04       		.uleb128 0x4
 25136 d35a 91       		.byte	0x91
 25137 d35b 80B07F   		.sleb128 -10240
 25138 d35e B601     		.uleb128 0xb6
 25139 d360 00000000 		.quad	.LBB1999
 25139      00000000 
 25140 d368 29000000 		.quad	.LBE1999-.LBB1999
 25140      00000000 
 25141 d370 CFD30000 		.long	0xd3cf
 25142 d374 BB01     		.uleb128 0xbb
 25143 d376 686D00   		.string	"hm"
 25144 d379 01       		.byte	0x1
 25145 d37a 5F       		.byte	0x5f
 25146 d37b 03EC0000 		.long	0xec03
 25147 d37f 00000000 		.long	.LLST111
 25148 d383 CA01     		.uleb128 0xca
 25149 d385 00000000 		.long	.LASF1485
 25150 d389 C19E0000 		.long	0x9ec1
 25151 d38d 00000000 		.long	.LLST112
 25152 d391 CA01     		.uleb128 0xca
 25153 d393 00000000 		.long	.LASF1486
 25154 d397 38520000 		.long	0x5238
 25155 d39b 00000000 		.long	.LLST113
 25156 d39f C901     		.uleb128 0xc9
 25157 d3a1 00000000 		.long	.LASF1487
 25158 d3a5 38520000 		.long	0x5238
GAS LISTING /tmp/ccKUqHDa.s 			page 702


 25159 d3a9 A901     		.uleb128 0xa9
 25160 d3ab 00000000 		.quad	.LVL118
 25160      00000000 
 25161 d3b3 72EE0000 		.long	0xee72
 25162 d3b7 AA01     		.uleb128 0xaa
 25163 d3b9 01       		.uleb128 0x1
 25164 d3ba 55       		.byte	0x55
 25165 d3bb 06       		.uleb128 0x6
 25166 d3bc 91       		.byte	0x91
 25167 d3bd A4AF7F   		.sleb128 -10332
 25168 d3c0 94       		.byte	0x94
 25169 d3c1 04       		.byte	0x4
 25170 d3c2 AA01     		.uleb128 0xaa
 25171 d3c4 01       		.uleb128 0x1
 25172 d3c5 54       		.byte	0x54
 25173 d3c6 06       		.uleb128 0x6
 25174 d3c7 91       		.byte	0x91
 25175 d3c8 A4AF7F   		.sleb128 -10332
 25176 d3cb 94       		.byte	0x94
 25177 d3cc 04       		.byte	0x4
 25178 d3cd 00       		.byte	0
 25179 d3ce 00       		.byte	0
 25180 d3cf 9F01     		.uleb128 0x9f
 25181 d3d1 C6BA0000 		.long	0xbac6
 25182 d3d5 00000000 		.quad	.LBB2000
 25182      00000000 
 25183 d3dd 0D000000 		.quad	.LBE2000-.LBB2000
 25183      00000000 
 25184 d3e5 01       		.byte	0x1
 25185 d3e6 64       		.byte	0x64
 25186 d3e7 20D40000 		.long	0xd420
 25187 d3eb 9C01     		.uleb128 0x9c
 25188 d3ed DFBA0000 		.long	0xbadf
 25189 d3f1 00000000 		.long	.LLST114
 25190 d3f5 9C01     		.uleb128 0x9c
 25191 d3f7 D5BA0000 		.long	0xbad5
 25192 d3fb 00000000 		.long	.LLST115
 25193 d3ff A901     		.uleb128 0xa9
 25194 d401 00000000 		.quad	.LVL124
 25194      00000000 
 25195 d409 1F2A0000 		.long	0x2a1f
 25196 d40d AA01     		.uleb128 0xaa
 25197 d40f 01       		.uleb128 0x1
 25198 d410 55       		.byte	0x55
 25199 d411 05       		.uleb128 0x5
 25200 d412 91       		.byte	0x91
 25201 d413 D0AF7F   		.sleb128 -10288
 25202 d416 06       		.byte	0x6
 25203 d417 AA01     		.uleb128 0xaa
 25204 d419 01       		.uleb128 0x1
 25205 d41a 54       		.byte	0x54
 25206 d41b 02       		.uleb128 0x2
 25207 d41c 73       		.byte	0x73
 25208 d41d 00       		.sleb128 0
 25209 d41e 00       		.byte	0
 25210 d41f 00       		.byte	0
 25211 d420 BA01     		.uleb128 0xba
GAS LISTING /tmp/ccKUqHDa.s 			page 703


 25212 d422 00000000 		.long	.Ldebug_ranges0+0x4d0
 25213 d426 A0D40000 		.long	0xd4a0
 25214 d42a 9C01     		.uleb128 0x9c
 25215 d42c 2EBA0000 		.long	0xba2e
 25216 d430 00000000 		.long	.LLST116
 25217 d434 C601     		.uleb128 0xc6
 25218 d436 8BA60000 		.long	0xa68b
 25219 d43a 00000000 		.quad	.LBB2004
 25219      00000000 
 25220 d442 0C000000 		.quad	.LBE2004-.LBB2004
 25220      00000000 
 25221 d44a 02       		.byte	0x2
 25222 d44b 2302     		.value	0x223
 25223 d44d 5CD40000 		.long	0xd45c
 25224 d451 9C01     		.uleb128 0x9c
 25225 d453 9AA60000 		.long	0xa69a
 25226 d457 00000000 		.long	.LLST116
 25227 d45b 00       		.byte	0
 25228 d45c AB01     		.uleb128 0xab
 25229 d45e 54A10000 		.long	0xa154
 25230 d462 00000000 		.quad	.LBB2006
 25230      00000000 
 25231 d46a 00000000 		.long	.Ldebug_ranges0+0x500
 25232 d46e 02       		.byte	0x2
 25233 d46f 2302     		.value	0x223
 25234 d471 9C01     		.uleb128 0x9c
 25235 d473 6DA10000 		.long	0xa16d
 25236 d477 00000000 		.long	.LLST118
 25237 d47b 9C01     		.uleb128 0x9c
 25238 d47d 63A10000 		.long	0xa163
 25239 d481 00000000 		.long	.LLST119
 25240 d485 A901     		.uleb128 0xa9
 25241 d487 00000000 		.quad	.LVL243
 25241      00000000 
 25242 d48f DABE0000 		.long	0xbeda
 25243 d493 AA01     		.uleb128 0xaa
 25244 d495 01       		.uleb128 0x1
 25245 d496 54       		.byte	0x54
 25246 d497 05       		.uleb128 0x5
 25247 d498 91       		.byte	0x91
 25248 d499 B0AF7F   		.sleb128 -10320
 25249 d49c 06       		.byte	0x6
 25250 d49d 00       		.byte	0
 25251 d49e 00       		.byte	0
 25252 d49f 00       		.byte	0
 25253 d4a0 9F01     		.uleb128 0x9f
 25254 d4a2 F6BA0000 		.long	0xbaf6
 25255 d4a6 00000000 		.quad	.LBB2011
 25255      00000000 
 25256 d4ae 0A000000 		.quad	.LBE2011-.LBB2011
 25256      00000000 
 25257 d4b6 01       		.byte	0x1
 25258 d4b7 65       		.byte	0x65
 25259 d4b8 E0D40000 		.long	0xd4e0
 25260 d4bc 9C01     		.uleb128 0x9c
 25261 d4be 05BB0000 		.long	0xbb05
 25262 d4c2 00000000 		.long	.LLST120
GAS LISTING /tmp/ccKUqHDa.s 			page 704


 25263 d4c6 A901     		.uleb128 0xa9
 25264 d4c8 00000000 		.quad	.LVL127
 25264      00000000 
 25265 d4d0 772A0000 		.long	0x2a77
 25266 d4d4 AA01     		.uleb128 0xaa
 25267 d4d6 01       		.uleb128 0x1
 25268 d4d7 55       		.byte	0x55
 25269 d4d8 05       		.uleb128 0x5
 25270 d4d9 91       		.byte	0x91
 25271 d4da D0AF7F   		.sleb128 -10288
 25272 d4dd 06       		.byte	0x6
 25273 d4de 00       		.byte	0
 25274 d4df 00       		.byte	0
 25275 d4e0 9D01     		.uleb128 0x9d
 25276 d4e2 10BB0000 		.long	0xbb10
 25277 d4e6 00000000 		.quad	.LBB2013
 25277      00000000 
 25278 d4ee 00000000 		.long	.Ldebug_ranges0+0x530
 25279 d4f2 01       		.byte	0x1
 25280 d4f3 65       		.byte	0x65
 25281 d4f4 65D60000 		.long	0xd665
 25282 d4f8 9C01     		.uleb128 0x9c
 25283 d4fa 29BB0000 		.long	0xbb29
 25284 d4fe 00000000 		.long	.LLST121
 25285 d502 9C01     		.uleb128 0x9c
 25286 d504 1FBB0000 		.long	0xbb1f
 25287 d508 00000000 		.long	.LLST122
 25288 d50c AB01     		.uleb128 0xab
 25289 d50e 97A90000 		.long	0xa997
 25290 d512 00000000 		.quad	.LBB2014
 25290      00000000 
 25291 d51a 00000000 		.long	.Ldebug_ranges0+0x530
 25292 d51e 0B       		.byte	0xb
 25293 d51f F701     		.value	0x1f7
 25294 d521 9C01     		.uleb128 0x9c
 25295 d523 B3A90000 		.long	0xa9b3
 25296 d527 00000000 		.long	.LLST121
 25297 d52b 9C01     		.uleb128 0x9c
 25298 d52d A9A90000 		.long	0xa9a9
 25299 d531 00000000 		.long	.LLST122
 25300 d535 A501     		.uleb128 0xa5
 25301 d537 11A90000 		.long	0xa911
 25302 d53b 00000000 		.quad	.LBB2016
 25302      00000000 
 25303 d543 00000000 		.long	.Ldebug_ranges0+0x560
 25304 d547 07       		.byte	0x7
 25305 d548 4C01     		.value	0x14c
 25306 d54a 89D50000 		.long	0xd589
 25307 d54e 9C01     		.uleb128 0x9c
 25308 d550 4AA90000 		.long	0xa94a
 25309 d554 00000000 		.long	.LLST121
 25310 d558 A001     		.uleb128 0xa0
 25311 d55a C3A80000 		.long	0xa8c3
 25312 d55e 00000000 		.quad	.LBB2017
 25312      00000000 
 25313 d566 00000000 		.long	.Ldebug_ranges0+0x560
 25314 d56a 0B       		.byte	0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 705


 25315 d56b 96       		.byte	0x96
 25316 d56c 9C01     		.uleb128 0x9c
 25317 d56e CEA80000 		.long	0xa8ce
 25318 d572 00000000 		.long	.LLST121
 25319 d576 A101     		.uleb128 0xa1
 25320 d578 00000000 		.long	.Ldebug_ranges0+0x560
 25321 d57c A201     		.uleb128 0xa2
 25322 d57e DCA80000 		.long	0xa8dc
 25323 d582 00000000 		.long	.LLST121
 25324 d586 00       		.byte	0
 25325 d587 00       		.byte	0
 25326 d588 00       		.byte	0
 25327 d589 A101     		.uleb128 0xa1
 25328 d58b 00000000 		.long	.Ldebug_ranges0+0x590
 25329 d58f A201     		.uleb128 0xa2
 25330 d591 C1A90000 		.long	0xa9c1
 25331 d595 00000000 		.long	.LLST128
 25332 d599 A101     		.uleb128 0xa1
 25333 d59b 00000000 		.long	.Ldebug_ranges0+0x5c0
 25334 d59f A201     		.uleb128 0xa2
 25335 d5a1 D0A90000 		.long	0xa9d0
 25336 d5a5 00000000 		.long	.LLST129
 25337 d5a9 A501     		.uleb128 0xa5
 25338 d5ab 57A90000 		.long	0xa957
 25339 d5af 00000000 		.quad	.LBB2023
 25339      00000000 
 25340 d5b7 00000000 		.long	.Ldebug_ranges0+0x5f0
 25341 d5bb 07       		.byte	0x7
 25342 d5bc 5301     		.value	0x153
 25343 d5be FDD50000 		.long	0xd5fd
 25344 d5c2 9C01     		.uleb128 0x9c
 25345 d5c4 8AA90000 		.long	0xa98a
 25346 d5c8 00000000 		.long	.LLST130
 25347 d5cc A001     		.uleb128 0xa0
 25348 d5ce EAA80000 		.long	0xa8ea
 25349 d5d2 00000000 		.quad	.LBB2024
 25349      00000000 
 25350 d5da 00000000 		.long	.Ldebug_ranges0+0x5f0
 25351 d5de 0B       		.byte	0xb
 25352 d5df 96       		.byte	0x96
 25353 d5e0 9C01     		.uleb128 0x9c
 25354 d5e2 F5A80000 		.long	0xa8f5
 25355 d5e6 00000000 		.long	.LLST130
 25356 d5ea A101     		.uleb128 0xa1
 25357 d5ec 00000000 		.long	.Ldebug_ranges0+0x5f0
 25358 d5f0 A201     		.uleb128 0xa2
 25359 d5f2 03A90000 		.long	0xa903
 25360 d5f6 00000000 		.long	.LLST132
 25361 d5fa 00       		.byte	0
 25362 d5fb 00       		.byte	0
 25363 d5fc 00       		.byte	0
 25364 d5fd A801     		.uleb128 0xa8
 25365 d5ff 11A90000 		.long	0xa911
 25366 d603 00000000 		.quad	.LBB2035
 25366      00000000 
 25367 d60b 02000000 		.quad	.LBE2035-.LBB2035
 25367      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 706


 25368 d613 07       		.byte	0x7
 25369 d614 5501     		.value	0x155
 25370 d616 9C01     		.uleb128 0x9c
 25371 d618 4AA90000 		.long	0xa94a
 25372 d61c 00000000 		.long	.LLST133
 25373 d620 A601     		.uleb128 0xa6
 25374 d622 C3A80000 		.long	0xa8c3
 25375 d626 00000000 		.quad	.LBB2036
 25375      00000000 
 25376 d62e 02000000 		.quad	.LBE2036-.LBB2036
 25376      00000000 
 25377 d636 0B       		.byte	0xb
 25378 d637 96       		.byte	0x96
 25379 d638 9C01     		.uleb128 0x9c
 25380 d63a CEA80000 		.long	0xa8ce
 25381 d63e 00000000 		.long	.LLST133
 25382 d642 A701     		.uleb128 0xa7
 25383 d644 00000000 		.quad	.LBB2037
 25383      00000000 
 25384 d64c 02000000 		.quad	.LBE2037-.LBB2037
 25384      00000000 
 25385 d654 A201     		.uleb128 0xa2
 25386 d656 DCA80000 		.long	0xa8dc
 25387 d65a 00000000 		.long	.LLST135
 25388 d65e 00       		.byte	0
 25389 d65f 00       		.byte	0
 25390 d660 00       		.byte	0
 25391 d661 00       		.byte	0
 25392 d662 00       		.byte	0
 25393 d663 00       		.byte	0
 25394 d664 00       		.byte	0
 25395 d665 9D01     		.uleb128 0x9d
 25396 d667 E2BD0000 		.long	0xbde2
 25397 d66b 00000000 		.quad	.LBB2044
 25397      00000000 
 25398 d673 00000000 		.long	.Ldebug_ranges0+0x640
 25399 d677 01       		.byte	0x1
 25400 d678 68       		.byte	0x68
 25401 d679 B2D80000 		.long	0xd8b2
 25402 d67d 9601     		.uleb128 0x96
 25403 d67f 08BE0000 		.long	0xbe08
 25404 d683 9C01     		.uleb128 0x9c
 25405 d685 FBBD0000 		.long	0xbdfb
 25406 d689 00000000 		.long	.LLST137
 25407 d68d 9C01     		.uleb128 0x9c
 25408 d68f F1BD0000 		.long	0xbdf1
 25409 d693 00000000 		.long	.LLST138
 25410 d697 A501     		.uleb128 0xa5
 25411 d699 96B40000 		.long	0xb496
 25412 d69d 00000000 		.quad	.LBB2045
 25412      00000000 
 25413 d6a5 00000000 		.long	.Ldebug_ranges0+0x670
 25414 d6a9 04       		.byte	0x4
 25415 d6aa 1601     		.value	0x116
 25416 d6ac 8CD70000 		.long	0xd78c
 25417 d6b0 9601     		.uleb128 0x96
 25418 d6b2 BBB40000 		.long	0xb4bb
GAS LISTING /tmp/ccKUqHDa.s 			page 707


 25419 d6b6 9C01     		.uleb128 0x9c
 25420 d6b8 AFB40000 		.long	0xb4af
 25421 d6bc 00000000 		.long	.LLST137
 25422 d6c0 9C01     		.uleb128 0x9c
 25423 d6c2 A5B40000 		.long	0xb4a5
 25424 d6c6 00000000 		.long	.LLST138
 25425 d6ca A001     		.uleb128 0xa0
 25426 d6cc 1BBE0000 		.long	0xbe1b
 25427 d6d0 00000000 		.quad	.LBB2046
 25427      00000000 
 25428 d6d8 00000000 		.long	.Ldebug_ranges0+0x670
 25429 d6dc 04       		.byte	0x4
 25430 d6dd 88       		.byte	0x88
 25431 d6de 9C01     		.uleb128 0x9c
 25432 d6e0 34BE0000 		.long	0xbe34
 25433 d6e4 00000000 		.long	.LLST137
 25434 d6e8 9C01     		.uleb128 0x9c
 25435 d6ea 2ABE0000 		.long	0xbe2a
 25436 d6ee 00000000 		.long	.LLST138
 25437 d6f2 A001     		.uleb128 0xa0
 25438 d6f4 43B40000 		.long	0xb443
 25439 d6f8 00000000 		.quad	.LBB2047
 25439      00000000 
 25440 d700 00000000 		.long	.Ldebug_ranges0+0x670
 25441 d704 04       		.byte	0x4
 25442 d705 B9       		.byte	0xb9
 25443 d706 9601     		.uleb128 0x96
 25444 d708 52B40000 		.long	0xb452
 25445 d70c 9C01     		.uleb128 0x9c
 25446 d70e 5CB40000 		.long	0xb45c
 25447 d712 00000000 		.long	.LLST137
 25448 d716 A101     		.uleb128 0xa1
 25449 d718 00000000 		.long	.Ldebug_ranges0+0x670
 25450 d71c A001     		.uleb128 0xa0
 25451 d71e 18B40000 		.long	0xb418
 25452 d722 00000000 		.quad	.LBB2049
 25452      00000000 
 25453 d72a 00000000 		.long	.Ldebug_ranges0+0x670
 25454 d72e 04       		.byte	0x4
 25455 d72f AA       		.byte	0xaa
 25456 d730 9601     		.uleb128 0x96
 25457 d732 23B40000 		.long	0xb423
 25458 d736 9C01     		.uleb128 0x9c
 25459 d738 30B40000 		.long	0xb430
 25460 d73c 00000000 		.long	.LLST137
 25461 d740 AB01     		.uleb128 0xab
 25462 d742 EDB30000 		.long	0xb3ed
 25463 d746 00000000 		.quad	.LBB2050
 25463      00000000 
 25464 d74e 00000000 		.long	.Ldebug_ranges0+0x670
 25465 d752 26       		.byte	0x26
 25466 d753 6501     		.value	0x165
 25467 d755 9601     		.uleb128 0x96
 25468 d757 FCB30000 		.long	0xb3fc
 25469 d75b 9C01     		.uleb128 0x9c
 25470 d75d 12B40000 		.long	0xb412
 25471 d761 00000000 		.long	.LLST146
GAS LISTING /tmp/ccKUqHDa.s 			page 708


 25472 d765 9C01     		.uleb128 0x9c
 25473 d767 06B40000 		.long	0xb406
 25474 d76b 00000000 		.long	.LLST137
 25475 d76f A901     		.uleb128 0xa9
 25476 d771 00000000 		.quad	.LVL138
 25476      00000000 
 25477 d779 92ED0000 		.long	0xed92
 25478 d77d AA01     		.uleb128 0xaa
 25479 d77f 01       		.uleb128 0x1
 25480 d780 55       		.byte	0x55
 25481 d781 03       		.uleb128 0x3
 25482 d782 0A       		.byte	0xa
 25483 d783 401F     		.value	0x1f40
 25484 d785 00       		.byte	0
 25485 d786 00       		.byte	0
 25486 d787 00       		.byte	0
 25487 d788 00       		.byte	0
 25488 d789 00       		.byte	0
 25489 d78a 00       		.byte	0
 25490 d78b 00       		.byte	0
 25491 d78c A801     		.uleb128 0xa8
 25492 d78e CDB40000 		.long	0xb4cd
 25493 d792 00000000 		.quad	.LBB2059
 25493      00000000 
 25494 d79a 38000000 		.quad	.LBE2059-.LBB2059
 25494      00000000 
 25495 d7a2 04       		.byte	0x4
 25496 d7a3 1701     		.value	0x117
 25497 d7a5 9C01     		.uleb128 0x9c
 25498 d7a7 E6B40000 		.long	0xb4e6
 25499 d7ab 00000000 		.long	.LLST148
 25500 d7af 9C01     		.uleb128 0x9c
 25501 d7b1 DCB40000 		.long	0xb4dc
 25502 d7b5 00000000 		.long	.LLST149
 25503 d7b9 A801     		.uleb128 0xa8
 25504 d7bb 6EAF0000 		.long	0xaf6e
 25505 d7bf 00000000 		.quad	.LBB2060
 25505      00000000 
 25506 d7c7 38000000 		.quad	.LBE2060-.LBB2060
 25506      00000000 
 25507 d7cf 04       		.byte	0x4
 25508 d7d0 1E05     		.value	0x51e
 25509 d7d2 9601     		.uleb128 0x96
 25510 d7d4 ADAF0000 		.long	0xafad
 25511 d7d8 9C01     		.uleb128 0x9c
 25512 d7da A0AF0000 		.long	0xafa0
 25513 d7de 00000000 		.long	.LLST148
 25514 d7e2 9C01     		.uleb128 0x9c
 25515 d7e4 94AF0000 		.long	0xaf94
 25516 d7e8 00000000 		.long	.LLST151
 25517 d7ec A801     		.uleb128 0xa8
 25518 d7ee 27AF0000 		.long	0xaf27
 25519 d7f2 00000000 		.quad	.LBB2061
 25519      00000000 
 25520 d7fa 38000000 		.quad	.LBE2061-.LBB2061
 25520      00000000 
 25521 d802 0E       		.byte	0xe
GAS LISTING /tmp/ccKUqHDa.s 			page 709


 25522 d803 7702     		.value	0x277
 25523 d805 9601     		.uleb128 0x96
 25524 d807 50AF0000 		.long	0xaf50
 25525 d80b 9601     		.uleb128 0x96
 25526 d80d 44AF0000 		.long	0xaf44
 25527 d811 A701     		.uleb128 0xa7
 25528 d813 00000000 		.quad	.LBB2062
 25528      00000000 
 25529 d81b 38000000 		.quad	.LBE2062-.LBB2062
 25529      00000000 
 25530 d823 B501     		.uleb128 0xb5
 25531 d825 5FAF0000 		.long	0xaf5f
 25532 d829 A801     		.uleb128 0xa8
 25533 d82b E0AE0000 		.long	0xaee0
 25534 d82f 00000000 		.quad	.LBB2063
 25534      00000000 
 25535 d837 38000000 		.quad	.LBE2063-.LBB2063
 25535      00000000 
 25536 d83f 0E       		.byte	0xe
 25537 d840 3802     		.value	0x238
 25538 d842 9601     		.uleb128 0x96
 25539 d844 09AF0000 		.long	0xaf09
 25540 d848 9601     		.uleb128 0x96
 25541 d84a FDAE0000 		.long	0xaefd
 25542 d84e A701     		.uleb128 0xa7
 25543 d850 00000000 		.quad	.LBB2064
 25543      00000000 
 25544 d858 38000000 		.quad	.LBE2064-.LBB2064
 25544      00000000 
 25545 d860 A201     		.uleb128 0xa2
 25546 d862 18AF0000 		.long	0xaf18
 25547 d866 00000000 		.long	.LLST152
 25548 d86a A801     		.uleb128 0xa8
 25549 d86c ADAE0000 		.long	0xaead
 25550 d870 00000000 		.quad	.LBB2065
 25550      00000000 
 25551 d878 16000000 		.quad	.LBE2065-.LBB2065
 25551      00000000 
 25552 d880 0E       		.byte	0xe
 25553 d881 0302     		.value	0x203
 25554 d883 9C01     		.uleb128 0x9c
 25555 d885 C6AE0000 		.long	0xaec6
 25556 d889 00000000 		.long	.LLST153
 25557 d88d A701     		.uleb128 0xa7
 25558 d88f 00000000 		.quad	.LBB2067
 25558      00000000 
 25559 d897 11000000 		.quad	.LBE2067-.LBB2067
 25559      00000000 
 25560 d89f 9C01     		.uleb128 0x9c
 25561 d8a1 7CAE0000 		.long	0xae7c
 25562 d8a5 00000000 		.long	.LLST154
 25563 d8a9 00       		.byte	0
 25564 d8aa 00       		.byte	0
 25565 d8ab 00       		.byte	0
 25566 d8ac 00       		.byte	0
 25567 d8ad 00       		.byte	0
 25568 d8ae 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 710


 25569 d8af 00       		.byte	0
 25570 d8b0 00       		.byte	0
 25571 d8b1 00       		.byte	0
 25572 d8b2 9D01     		.uleb128 0x9d
 25573 d8b4 C2BB0000 		.long	0xbbc2
 25574 d8b8 00000000 		.quad	.LBB2070
 25574      00000000 
 25575 d8c0 00000000 		.long	.Ldebug_ranges0+0x6a0
 25576 d8c4 01       		.byte	0x1
 25577 d8c5 69       		.byte	0x69
 25578 d8c6 60DC0000 		.long	0xdc60
 25579 d8ca 9601     		.uleb128 0x96
 25580 d8cc F7BB0000 		.long	0xbbf7
 25581 d8d0 9601     		.uleb128 0x96
 25582 d8d2 EBBB0000 		.long	0xbbeb
 25583 d8d6 9C01     		.uleb128 0x9c
 25584 d8d8 DFBB0000 		.long	0xbbdf
 25585 d8dc 00000000 		.long	.LLST155
 25586 d8e0 A501     		.uleb128 0xa5
 25587 d8e2 06D30000 		.long	0xd306
 25588 d8e6 00000000 		.quad	.LBB2072
 25588      00000000 
 25589 d8ee 00000000 		.long	.Ldebug_ranges0+0x6e0
 25590 d8f2 10       		.byte	0x10
 25591 d8f3 C710     		.value	0x10c7
 25592 d8f5 39DC0000 		.long	0xdc39
 25593 d8f9 9C01     		.uleb128 0x9c
 25594 d8fb 1BD30000 		.long	0xd31b
 25595 d8ff 00000000 		.long	.LLST156
 25596 d903 A101     		.uleb128 0xa1
 25597 d905 00000000 		.long	.Ldebug_ranges0+0x6e0
 25598 d909 B501     		.uleb128 0xb5
 25599 d90b 2CD30000 		.long	0xd32c
 25600 d90f B501     		.uleb128 0xb5
 25601 d911 36D30000 		.long	0xd336
 25602 d915 B501     		.uleb128 0xb5
 25603 d917 40D30000 		.long	0xd340
 25604 d91b 9D01     		.uleb128 0x9d
 25605 d91d C9B00000 		.long	0xb0c9
 25606 d921 00000000 		.quad	.LBB2074
 25606      00000000 
 25607 d929 00000000 		.long	.Ldebug_ranges0+0x730
 25608 d92d 01       		.byte	0x1
 25609 d92e 69       		.byte	0x69
 25610 d92f ABDA0000 		.long	0xdaab
 25611 d933 9C01     		.uleb128 0x9c
 25612 d935 EBB00000 		.long	0xb0eb
 25613 d939 00000000 		.long	.LLST157
 25614 d93d 9C01     		.uleb128 0x9c
 25615 d93f E1B00000 		.long	0xb0e1
 25616 d943 00000000 		.long	.LLST158
 25617 d947 AB01     		.uleb128 0xab
 25618 d949 41BE0000 		.long	0xbe41
 25619 d94d 00000000 		.quad	.LBB2075
 25619      00000000 
 25620 d955 00000000 		.long	.Ldebug_ranges0+0x730
 25621 d959 0B       		.byte	0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 711


 25622 d95a 9608     		.value	0x896
 25623 d95c 9C01     		.uleb128 0x9c
 25624 d95e 6FBE0000 		.long	0xbe6f
 25625 d962 00000000 		.long	.LLST158
 25626 d966 9C01     		.uleb128 0x9c
 25627 d968 63BE0000 		.long	0xbe63
 25628 d96c 00000000 		.long	.LLST157
 25629 d970 9C01     		.uleb128 0x9c
 25630 d972 59BE0000 		.long	0xbe59
 25631 d976 00000000 		.long	.LLST158
 25632 d97a A101     		.uleb128 0xa1
 25633 d97c 00000000 		.long	.Ldebug_ranges0+0x730
 25634 d980 A201     		.uleb128 0xa2
 25635 d982 7DBE0000 		.long	0xbe7d
 25636 d986 00000000 		.long	.LLST162
 25637 d98a B501     		.uleb128 0xb5
 25638 d98c 8ABE0000 		.long	0xbe8a
 25639 d990 A101     		.uleb128 0xa1
 25640 d992 00000000 		.long	.Ldebug_ranges0+0x780
 25641 d996 A201     		.uleb128 0xa2
 25642 d998 99BE0000 		.long	0xbe99
 25643 d99c 00000000 		.long	.LLST163
 25644 d9a0 A201     		.uleb128 0xa2
 25645 d9a2 A6BE0000 		.long	0xbea6
 25646 d9a6 00000000 		.long	.LLST164
 25647 d9aa A201     		.uleb128 0xa2
 25648 d9ac B3BE0000 		.long	0xbeb3
 25649 d9b0 00000000 		.long	.LLST165
 25650 d9b4 A201     		.uleb128 0xa2
 25651 d9b6 C0BE0000 		.long	0xbec0
 25652 d9ba 00000000 		.long	.LLST166
 25653 d9be C601     		.uleb128 0xc6
 25654 d9c0 7DB00000 		.long	0xb07d
 25655 d9c4 00000000 		.quad	.LBB2079
 25655      00000000 
 25656 d9cc 08000000 		.quad	.LBE2079-.LBB2079
 25656      00000000 
 25657 d9d4 07       		.byte	0x7
 25658 d9d5 A007     		.value	0x7a0
 25659 d9d7 FCD90000 		.long	0xd9fc
 25660 d9db 9C01     		.uleb128 0x9c
 25661 d9dd 8CB00000 		.long	0xb08c
 25662 d9e1 00000000 		.long	.LLST167
 25663 d9e5 A901     		.uleb128 0xa9
 25664 d9e7 00000000 		.quad	.LVL148
 25664      00000000 
 25665 d9ef ECC20000 		.long	0xc2ec
 25666 d9f3 AA01     		.uleb128 0xaa
 25667 d9f5 01       		.uleb128 0x1
 25668 d9f6 55       		.byte	0x55
 25669 d9f7 02       		.uleb128 0x2
 25670 d9f8 73       		.byte	0x73
 25671 d9f9 00       		.sleb128 0
 25672 d9fa 00       		.byte	0
 25673 d9fb 00       		.byte	0
 25674 d9fc A501     		.uleb128 0xa5
 25675 d9fe 7DB00000 		.long	0xb07d
GAS LISTING /tmp/ccKUqHDa.s 			page 712


 25676 da02 00000000 		.quad	.LBB2081
 25676      00000000 
 25677 da0a 00000000 		.long	.Ldebug_ranges0+0x7b0
 25678 da0e 07       		.byte	0x7
 25679 da0f A107     		.value	0x7a1
 25680 da11 36DA0000 		.long	0xda36
 25681 da15 9C01     		.uleb128 0x9c
 25682 da17 8CB00000 		.long	0xb08c
 25683 da1b 00000000 		.long	.LLST168
 25684 da1f A901     		.uleb128 0xa9
 25685 da21 00000000 		.quad	.LVL150
 25685      00000000 
 25686 da29 ECC20000 		.long	0xc2ec
 25687 da2d AA01     		.uleb128 0xaa
 25688 da2f 01       		.uleb128 0x1
 25689 da30 55       		.byte	0x55
 25690 da31 02       		.uleb128 0x2
 25691 da32 73       		.byte	0x73
 25692 da33 00       		.sleb128 0
 25693 da34 00       		.byte	0
 25694 da35 00       		.byte	0
 25695 da36 C601     		.uleb128 0xc6
 25696 da38 97B00000 		.long	0xb097
 25697 da3c 00000000 		.quad	.LBB2085
 25697      00000000 
 25698 da44 1A000000 		.quad	.LBE2085-.LBB2085
 25698      00000000 
 25699 da4c 07       		.byte	0x7
 25700 da4d A607     		.value	0x7a6
 25701 da4f 79DA0000 		.long	0xda79
 25702 da53 9C01     		.uleb128 0x9c
 25703 da55 A2B00000 		.long	0xb0a2
 25704 da59 00000000 		.long	.LLST169
 25705 da5d A901     		.uleb128 0xa9
 25706 da5f 00000000 		.quad	.LVL155
 25706      00000000 
 25707 da67 C7EE0000 		.long	0xeec7
 25708 da6b AA01     		.uleb128 0xaa
 25709 da6d 01       		.uleb128 0x1
 25710 da6e 61       		.byte	0x61
 25711 da6f 07       		.uleb128 0x7
 25712 da70 91       		.byte	0x91
 25713 da71 E8AE7F   		.sleb128 -10392
 25714 da74 F6       		.byte	0xf6
 25715 da75 04       		.byte	0x4
 25716 da76 29       		.uleb128 0x29
 25717 da77 00       		.byte	0
 25718 da78 00       		.byte	0
 25719 da79 AB01     		.uleb128 0xab
 25720 da7b B0B00000 		.long	0xb0b0
 25721 da7f 00000000 		.quad	.LBB2087
 25721      00000000 
 25722 da87 00000000 		.long	.Ldebug_ranges0+0x7e0
 25723 da8b 07       		.byte	0x7
 25724 da8c A607     		.value	0x7a6
 25725 da8e 9C01     		.uleb128 0x9c
 25726 da90 BBB00000 		.long	0xb0bb
GAS LISTING /tmp/ccKUqHDa.s 			page 713


 25727 da94 00000000 		.long	.LLST170
 25728 da98 C301     		.uleb128 0xc3
 25729 da9a 00000000 		.quad	.LVL258
 25729      00000000 
 25730 daa2 DFEE0000 		.long	0xeedf
 25731 daa6 00       		.byte	0
 25732 daa7 00       		.byte	0
 25733 daa8 00       		.byte	0
 25734 daa9 00       		.byte	0
 25735 daaa 00       		.byte	0
 25736 daab A001     		.uleb128 0xa0
 25737 daad C9B00000 		.long	0xb0c9
 25738 dab1 00000000 		.quad	.LBB2102
 25738      00000000 
 25739 dab9 00000000 		.long	.Ldebug_ranges0+0x820
 25740 dabd 01       		.byte	0x1
 25741 dabe 69       		.byte	0x69
 25742 dabf 9C01     		.uleb128 0x9c
 25743 dac1 EBB00000 		.long	0xb0eb
 25744 dac5 00000000 		.long	.LLST171
 25745 dac9 9C01     		.uleb128 0x9c
 25746 dacb E1B00000 		.long	0xb0e1
 25747 dacf 00000000 		.long	.LLST172
 25748 dad3 AB01     		.uleb128 0xab
 25749 dad5 41BE0000 		.long	0xbe41
 25750 dad9 00000000 		.quad	.LBB2103
 25750      00000000 
 25751 dae1 00000000 		.long	.Ldebug_ranges0+0x820
 25752 dae5 0B       		.byte	0xb
 25753 dae6 9608     		.value	0x896
 25754 dae8 9C01     		.uleb128 0x9c
 25755 daea 6FBE0000 		.long	0xbe6f
 25756 daee 00000000 		.long	.LLST172
 25757 daf2 9C01     		.uleb128 0x9c
 25758 daf4 63BE0000 		.long	0xbe63
 25759 daf8 00000000 		.long	.LLST171
 25760 dafc 9C01     		.uleb128 0x9c
 25761 dafe 59BE0000 		.long	0xbe59
 25762 db02 00000000 		.long	.LLST172
 25763 db06 A101     		.uleb128 0xa1
 25764 db08 00000000 		.long	.Ldebug_ranges0+0x820
 25765 db0c A201     		.uleb128 0xa2
 25766 db0e 7DBE0000 		.long	0xbe7d
 25767 db12 00000000 		.long	.LLST176
 25768 db16 B501     		.uleb128 0xb5
 25769 db18 8ABE0000 		.long	0xbe8a
 25770 db1c A101     		.uleb128 0xa1
 25771 db1e 00000000 		.long	.Ldebug_ranges0+0x880
 25772 db22 A201     		.uleb128 0xa2
 25773 db24 99BE0000 		.long	0xbe99
 25774 db28 00000000 		.long	.LLST177
 25775 db2c A201     		.uleb128 0xa2
 25776 db2e A6BE0000 		.long	0xbea6
 25777 db32 00000000 		.long	.LLST178
 25778 db36 A201     		.uleb128 0xa2
 25779 db38 B3BE0000 		.long	0xbeb3
 25780 db3c 00000000 		.long	.LLST179
GAS LISTING /tmp/ccKUqHDa.s 			page 714


 25781 db40 A201     		.uleb128 0xa2
 25782 db42 C0BE0000 		.long	0xbec0
 25783 db46 00000000 		.long	.LLST180
 25784 db4a C601     		.uleb128 0xc6
 25785 db4c 7DB00000 		.long	0xb07d
 25786 db50 00000000 		.quad	.LBB2107
 25786      00000000 
 25787 db58 08000000 		.quad	.LBE2107-.LBB2107
 25787      00000000 
 25788 db60 07       		.byte	0x7
 25789 db61 A007     		.value	0x7a0
 25790 db63 88DB0000 		.long	0xdb88
 25791 db67 9C01     		.uleb128 0x9c
 25792 db69 8CB00000 		.long	0xb08c
 25793 db6d 00000000 		.long	.LLST181
 25794 db71 A901     		.uleb128 0xa9
 25795 db73 00000000 		.quad	.LVL164
 25795      00000000 
 25796 db7b ECC20000 		.long	0xc2ec
 25797 db7f AA01     		.uleb128 0xaa
 25798 db81 01       		.uleb128 0x1
 25799 db82 55       		.byte	0x55
 25800 db83 02       		.uleb128 0x2
 25801 db84 73       		.byte	0x73
 25802 db85 00       		.sleb128 0
 25803 db86 00       		.byte	0
 25804 db87 00       		.byte	0
 25805 db88 A501     		.uleb128 0xa5
 25806 db8a 7DB00000 		.long	0xb07d
 25807 db8e 00000000 		.quad	.LBB2109
 25807      00000000 
 25808 db96 00000000 		.long	.Ldebug_ranges0+0x8b0
 25809 db9a 07       		.byte	0x7
 25810 db9b A107     		.value	0x7a1
 25811 db9d C2DB0000 		.long	0xdbc2
 25812 dba1 9C01     		.uleb128 0x9c
 25813 dba3 8CB00000 		.long	0xb08c
 25814 dba7 00000000 		.long	.LLST182
 25815 dbab A901     		.uleb128 0xa9
 25816 dbad 00000000 		.quad	.LVL166
 25816      00000000 
 25817 dbb5 ECC20000 		.long	0xc2ec
 25818 dbb9 AA01     		.uleb128 0xaa
 25819 dbbb 01       		.uleb128 0x1
 25820 dbbc 55       		.byte	0x55
 25821 dbbd 02       		.uleb128 0x2
 25822 dbbe 73       		.byte	0x73
 25823 dbbf 00       		.sleb128 0
 25824 dbc0 00       		.byte	0
 25825 dbc1 00       		.byte	0
 25826 dbc2 C601     		.uleb128 0xc6
 25827 dbc4 97B00000 		.long	0xb097
 25828 dbc8 00000000 		.quad	.LBB2113
 25828      00000000 
 25829 dbd0 1A000000 		.quad	.LBE2113-.LBB2113
 25829      00000000 
 25830 dbd8 07       		.byte	0x7
GAS LISTING /tmp/ccKUqHDa.s 			page 715


 25831 dbd9 A607     		.value	0x7a6
 25832 dbdb 05DC0000 		.long	0xdc05
 25833 dbdf 9C01     		.uleb128 0x9c
 25834 dbe1 A2B00000 		.long	0xb0a2
 25835 dbe5 00000000 		.long	.LLST183
 25836 dbe9 A901     		.uleb128 0xa9
 25837 dbeb 00000000 		.quad	.LVL171
 25837      00000000 
 25838 dbf3 C7EE0000 		.long	0xeec7
 25839 dbf7 AA01     		.uleb128 0xaa
 25840 dbf9 01       		.uleb128 0x1
 25841 dbfa 61       		.byte	0x61
 25842 dbfb 07       		.uleb128 0x7
 25843 dbfc 91       		.byte	0x91
 25844 dbfd E8AE7F   		.sleb128 -10392
 25845 dc00 F6       		.byte	0xf6
 25846 dc01 04       		.byte	0x4
 25847 dc02 29       		.uleb128 0x29
 25848 dc03 00       		.byte	0
 25849 dc04 00       		.byte	0
 25850 dc05 AB01     		.uleb128 0xab
 25851 dc07 B0B00000 		.long	0xb0b0
 25852 dc0b 00000000 		.quad	.LBB2115
 25852      00000000 
 25853 dc13 00000000 		.long	.Ldebug_ranges0+0x8e0
 25854 dc17 07       		.byte	0x7
 25855 dc18 A607     		.value	0x7a6
 25856 dc1a 9C01     		.uleb128 0x9c
 25857 dc1c BBB00000 		.long	0xb0bb
 25858 dc20 00000000 		.long	.LLST184
 25859 dc24 C301     		.uleb128 0xc3
 25860 dc26 00000000 		.quad	.LVL261
 25860      00000000 
 25861 dc2e DFEE0000 		.long	0xeedf
 25862 dc32 00       		.byte	0
 25863 dc33 00       		.byte	0
 25864 dc34 00       		.byte	0
 25865 dc35 00       		.byte	0
 25866 dc36 00       		.byte	0
 25867 dc37 00       		.byte	0
 25868 dc38 00       		.byte	0
 25869 dc39 AB01     		.uleb128 0xab
 25870 dc3b 1CB10000 		.long	0xb11c
 25871 dc3f 00000000 		.quad	.LBB2143
 25871      00000000 
 25872 dc47 00000000 		.long	.Ldebug_ranges0+0x920
 25873 dc4b 10       		.byte	0x10
 25874 dc4c C710     		.value	0x10c7
 25875 dc4e 9601     		.uleb128 0x96
 25876 dc50 35B10000 		.long	0xb135
 25877 dc54 9C01     		.uleb128 0x9c
 25878 dc56 2BB10000 		.long	0xb12b
 25879 dc5a 00000000 		.long	.LLST186
 25880 dc5e 00       		.byte	0
 25881 dc5f 00       		.byte	0
 25882 dc60 BA01     		.uleb128 0xba
 25883 dc62 00000000 		.long	.Ldebug_ranges0+0x950
GAS LISTING /tmp/ccKUqHDa.s 			page 716


 25884 dc66 0AE30000 		.long	0xe30a
 25885 dc6a BB01     		.uleb128 0xbb
 25886 dc6c 6900     		.string	"i"
 25887 dc6e 01       		.byte	0x1
 25888 dc6f 6C       		.byte	0x6c
 25889 dc70 26840000 		.long	0x8426
 25890 dc74 00000000 		.long	.LLST187
 25891 dc78 A101     		.uleb128 0xa1
 25892 dc7a 00000000 		.long	.Ldebug_ranges0+0x9e0
 25893 dc7e BB01     		.uleb128 0xbb
 25894 dc80 686D00   		.string	"hm"
 25895 dc83 01       		.byte	0x1
 25896 dc84 6D       		.byte	0x6d
 25897 dc85 919E0000 		.long	0x9e91
 25898 dc89 00000000 		.long	.LLST188
 25899 dc8d BD01     		.uleb128 0xbd
 25900 dc8f 00000000 		.long	.LASF1472
 25901 dc93 01       		.byte	0x1
 25902 dc94 73       		.byte	0x73
 25903 dc95 EC460000 		.long	0x46ec
 25904 dc99 04       		.uleb128 0x4
 25905 dc9a 91       		.byte	0x91
 25906 dc9b A0B07F   		.sleb128 -10208
 25907 dc9e BA01     		.uleb128 0xba
 25908 dca0 00000000 		.long	.Ldebug_ranges0+0xa80
 25909 dca4 41DF0000 		.long	0xdf41
 25910 dca8 BC01     		.uleb128 0xbc
 25911 dcaa 00000000 		.long	.LASF1473
 25912 dcae 01       		.byte	0x1
 25913 dcaf 77       		.byte	0x77
 25914 dcb0 C9710000 		.long	0x71c9
 25915 dcb4 00000000 		.long	.LLST189
 25916 dcb8 9D01     		.uleb128 0x9d
 25917 dcba 1FBA0000 		.long	0xba1f
 25918 dcbe 00000000 		.quad	.LBB2155
 25918      00000000 
 25919 dcc6 00000000 		.long	.Ldebug_ranges0+0xaf0
 25920 dcca 01       		.byte	0x1
 25921 dccb 77       		.byte	0x77
 25922 dccc 46DD0000 		.long	0xdd46
 25923 dcd0 9C01     		.uleb128 0x9c
 25924 dcd2 2EBA0000 		.long	0xba2e
 25925 dcd6 00000000 		.long	.LLST190
 25926 dcda A501     		.uleb128 0xa5
 25927 dcdc 54A10000 		.long	0xa154
 25928 dce0 00000000 		.quad	.LBB2157
 25928      00000000 
 25929 dce8 00000000 		.long	.Ldebug_ranges0+0xb30
 25930 dcec 02       		.byte	0x2
 25931 dced 2302     		.value	0x223
 25932 dcef 21DD0000 		.long	0xdd21
 25933 dcf3 9C01     		.uleb128 0x9c
 25934 dcf5 6DA10000 		.long	0xa16d
 25935 dcf9 00000000 		.long	.LLST191
 25936 dcfd 9C01     		.uleb128 0x9c
 25937 dcff 63A10000 		.long	0xa163
 25938 dd03 00000000 		.long	.LLST192
GAS LISTING /tmp/ccKUqHDa.s 			page 717


 25939 dd07 A901     		.uleb128 0xa9
 25940 dd09 00000000 		.quad	.LVL224
 25940      00000000 
 25941 dd11 DABE0000 		.long	0xbeda
 25942 dd15 AA01     		.uleb128 0xaa
 25943 dd17 01       		.uleb128 0x1
 25944 dd18 54       		.byte	0x54
 25945 dd19 05       		.uleb128 0x5
 25946 dd1a 91       		.byte	0x91
 25947 dd1b F8AE7F   		.sleb128 -10376
 25948 dd1e 06       		.byte	0x6
 25949 dd1f 00       		.byte	0
 25950 dd20 00       		.byte	0
 25951 dd21 A801     		.uleb128 0xa8
 25952 dd23 8BA60000 		.long	0xa68b
 25953 dd27 00000000 		.quad	.LBB2161
 25953      00000000 
 25954 dd2f 0C000000 		.quad	.LBE2161-.LBB2161
 25954      00000000 
 25955 dd37 02       		.byte	0x2
 25956 dd38 2302     		.value	0x223
 25957 dd3a 9C01     		.uleb128 0x9c
 25958 dd3c 9AA60000 		.long	0xa69a
 25959 dd40 00000000 		.long	.LLST190
 25960 dd44 00       		.byte	0
 25961 dd45 00       		.byte	0
 25962 dd46 9F01     		.uleb128 0x9f
 25963 dd48 48BA0000 		.long	0xba48
 25964 dd4c 00000000 		.quad	.LBB2169
 25964      00000000 
 25965 dd54 0A000000 		.quad	.LBE2169-.LBB2169
 25965      00000000 
 25966 dd5c 01       		.byte	0x1
 25967 dd5d 78       		.byte	0x78
 25968 dd5e 93DD0000 		.long	0xdd93
 25969 dd62 9C01     		.uleb128 0x9c
 25970 dd64 61BA0000 		.long	0xba61
 25971 dd68 00000000 		.long	.LLST194
 25972 dd6c 9C01     		.uleb128 0x9c
 25973 dd6e 57BA0000 		.long	0xba57
 25974 dd72 00000000 		.long	.LLST195
 25975 dd76 A901     		.uleb128 0xa9
 25976 dd78 00000000 		.quad	.LVL247
 25976      00000000 
 25977 dd80 B92F0000 		.long	0x2fb9
 25978 dd84 AA01     		.uleb128 0xaa
 25979 dd86 01       		.uleb128 0x1
 25980 dd87 54       		.byte	0x54
 25981 dd88 08       		.uleb128 0x8
 25982 dd89 73       		.byte	0x73
 25983 dd8a 00       		.sleb128 0
 25984 dd8b 0C       		.byte	0xc
 25985 dd8c FFFFFFFF 		.long	0xffffffff
 25986 dd90 1A       		.byte	0x1a
 25987 dd91 00       		.byte	0
 25988 dd92 00       		.byte	0
 25989 dd93 9F01     		.uleb128 0x9f
GAS LISTING /tmp/ccKUqHDa.s 			page 718


 25990 dd95 71B90000 		.long	0xb971
 25991 dd99 00000000 		.quad	.LBB2171
 25991      00000000 
 25992 dda1 08000000 		.quad	.LBE2171-.LBB2171
 25992      00000000 
 25993 dda9 01       		.byte	0x1
 25994 ddaa 78       		.byte	0x78
 25995 ddab CEDD0000 		.long	0xddce
 25996 ddaf 9601     		.uleb128 0x96
 25997 ddb1 8AB90000 		.long	0xb98a
 25998 ddb5 9C01     		.uleb128 0x9c
 25999 ddb7 80B90000 		.long	0xb980
 26000 ddbb 00000000 		.long	.LLST196
 26001 ddbf C301     		.uleb128 0xc3
 26002 ddc1 00000000 		.quad	.LVL250
 26002      00000000 
 26003 ddc9 66710000 		.long	0x7166
 26004 ddcd 00       		.byte	0
 26005 ddce 9F01     		.uleb128 0x9f
 26006 ddd0 1FBA0000 		.long	0xba1f
 26007 ddd4 00000000 		.quad	.LBB2173
 26007      00000000 
 26008 dddc 24000000 		.quad	.LBE2173-.LBB2173
 26008      00000000 
 26009 dde4 01       		.byte	0x1
 26010 dde5 77       		.byte	0x77
 26011 dde6 61DE0000 		.long	0xde61
 26012 ddea B401     		.uleb128 0xb4
 26013 ddec 2EBA0000 		.long	0xba2e
 26014 ddf0 01       		.uleb128 0x1
 26015 ddf1 5F       		.byte	0x5f
 26016 ddf2 C601     		.uleb128 0xc6
 26017 ddf4 8BA60000 		.long	0xa68b
 26018 ddf8 00000000 		.quad	.LBB2175
 26018      00000000 
 26019 de00 0C000000 		.quad	.LBE2175-.LBB2175
 26019      00000000 
 26020 de08 02       		.byte	0x2
 26021 de09 2302     		.value	0x223
 26022 de0b 18DE0000 		.long	0xde18
 26023 de0f B401     		.uleb128 0xb4
 26024 de11 9AA60000 		.long	0xa69a
 26025 de15 01       		.uleb128 0x1
 26026 de16 5F       		.byte	0x5f
 26027 de17 00       		.byte	0
 26028 de18 A801     		.uleb128 0xa8
 26029 de1a 54A10000 		.long	0xa154
 26030 de1e 00000000 		.quad	.LBB2177
 26030      00000000 
 26031 de26 18000000 		.quad	.LBE2177-.LBB2177
 26031      00000000 
 26032 de2e 02       		.byte	0x2
 26033 de2f 2302     		.value	0x223
 26034 de31 B401     		.uleb128 0xb4
 26035 de33 6DA10000 		.long	0xa16d
 26036 de37 04       		.uleb128 0x4
 26037 de38 91       		.byte	0x91
GAS LISTING /tmp/ccKUqHDa.s 			page 719


 26038 de39 F8AE7F   		.sleb128 -10376
 26039 de3c 9C01     		.uleb128 0x9c
 26040 de3e 63A10000 		.long	0xa163
 26041 de42 00000000 		.long	.LLST197
 26042 de46 A901     		.uleb128 0xa9
 26043 de48 00000000 		.quad	.LVL294
 26043      00000000 
 26044 de50 DABE0000 		.long	0xbeda
 26045 de54 AA01     		.uleb128 0xaa
 26046 de56 01       		.uleb128 0x1
 26047 de57 54       		.byte	0x54
 26048 de58 05       		.uleb128 0x5
 26049 de59 91       		.byte	0x91
 26050 de5a F8AE7F   		.sleb128 -10376
 26051 de5d 06       		.byte	0x6
 26052 de5e 00       		.byte	0
 26053 de5f 00       		.byte	0
 26054 de60 00       		.byte	0
 26055 de61 C701     		.uleb128 0xc7
 26056 de63 00000000 		.quad	.LVL194
 26056      00000000 
 26057 de6b 8BDE0000 		.long	0xde8b
 26058 de6f AA01     		.uleb128 0xaa
 26059 de71 01       		.uleb128 0x1
 26060 de72 55       		.byte	0x55
 26061 de73 02       		.uleb128 0x2
 26062 de74 7F       		.byte	0x7f
 26063 de75 00       		.sleb128 0
 26064 de76 AA01     		.uleb128 0xaa
 26065 de78 01       		.uleb128 0x1
 26066 de79 54       		.byte	0x54
 26067 de7a 05       		.uleb128 0x5
 26068 de7b 91       		.byte	0x91
 26069 de7c C0AF7F   		.sleb128 -10304
 26070 de7f 06       		.byte	0x6
 26071 de80 AA01     		.uleb128 0xaa
 26072 de82 01       		.uleb128 0x1
 26073 de83 51       		.byte	0x51
 26074 de84 05       		.uleb128 0x5
 26075 de85 91       		.byte	0x91
 26076 de86 F0AE7F   		.sleb128 -10384
 26077 de89 06       		.byte	0x6
 26078 de8a 00       		.byte	0
 26079 de8b C401     		.uleb128 0xc4
 26080 de8d 00000000 		.quad	.LVL195
 26080      00000000 
 26081 de95 14EE0000 		.long	0xee14
 26082 de99 CEDE0000 		.long	0xdece
 26083 de9d AA01     		.uleb128 0xaa
 26084 de9f 01       		.uleb128 0x1
 26085 dea0 55       		.byte	0x55
 26086 dea1 02       		.uleb128 0x2
 26087 dea2 7F       		.byte	0x7f
 26088 dea3 00       		.sleb128 0
 26089 dea4 AA01     		.uleb128 0xaa
 26090 dea6 01       		.uleb128 0x1
 26091 dea7 54       		.byte	0x54
GAS LISTING /tmp/ccKUqHDa.s 			page 720


 26092 dea8 02       		.uleb128 0x2
 26093 dea9 73       		.byte	0x73
 26094 deaa 00       		.sleb128 0
 26095 deab AA01     		.uleb128 0xaa
 26096 dead 01       		.uleb128 0x1
 26097 deae 51       		.byte	0x51
 26098 deaf 06       		.uleb128 0x6
 26099 deb0 91       		.byte	0x91
 26100 deb1 A4AF7F   		.sleb128 -10332
 26101 deb4 94       		.byte	0x94
 26102 deb5 04       		.byte	0x4
 26103 deb6 AA01     		.uleb128 0xaa
 26104 deb8 01       		.uleb128 0x1
 26105 deb9 52       		.byte	0x52
 26106 deba 06       		.uleb128 0x6
 26107 debb 91       		.byte	0x91
 26108 debc A4AF7F   		.sleb128 -10332
 26109 debf 94       		.byte	0x94
 26110 dec0 04       		.byte	0x4
 26111 dec1 AA01     		.uleb128 0xaa
 26112 dec3 01       		.uleb128 0x1
 26113 dec4 58       		.byte	0x58
 26114 dec5 01       		.uleb128 0x1
 26115 dec6 36       		.byte	0x36
 26116 dec7 AA01     		.uleb128 0xaa
 26117 dec9 01       		.uleb128 0x1
 26118 deca 59       		.byte	0x59
 26119 decb 01       		.uleb128 0x1
 26120 decc 38       		.byte	0x38
 26121 decd 00       		.byte	0
 26122 dece C401     		.uleb128 0xc4
 26123 ded0 00000000 		.quad	.LVL245
 26123      00000000 
 26124 ded8 44EE0000 		.long	0xee44
 26125 dedc E8DE0000 		.long	0xdee8
 26126 dee0 AA01     		.uleb128 0xaa
 26127 dee2 01       		.uleb128 0x1
 26128 dee3 55       		.byte	0x55
 26129 dee4 02       		.uleb128 0x2
 26130 dee5 73       		.byte	0x73
 26131 dee6 00       		.sleb128 0
 26132 dee7 00       		.byte	0
 26133 dee8 C401     		.uleb128 0xc4
 26134 deea 00000000 		.quad	.LVL246
 26134      00000000 
 26135 def2 2DA20000 		.long	0xa22d
 26136 def6 09DF0000 		.long	0xdf09
 26137 defa AA01     		.uleb128 0xaa
 26138 defc 01       		.uleb128 0x1
 26139 defd 54       		.byte	0x54
 26140 defe 09       		.uleb128 0x9
 26141 deff 03       		.byte	0x3
 26142 df00 00000000 		.quad	.LC16
 26142      00000000 
 26143 df08 00       		.byte	0
 26144 df09 C401     		.uleb128 0xc4
 26145 df0b 00000000 		.quad	.LVL248
GAS LISTING /tmp/ccKUqHDa.s 			page 721


 26145      00000000 
 26146 df13 2DA20000 		.long	0xa22d
 26147 df17 2ADF0000 		.long	0xdf2a
 26148 df1b AA01     		.uleb128 0xaa
 26149 df1d 01       		.uleb128 0x1
 26150 df1e 54       		.byte	0x54
 26151 df1f 09       		.uleb128 0x9
 26152 df20 03       		.byte	0x3
 26153 df21 00000000 		.quad	.LC17
 26153      00000000 
 26154 df29 00       		.byte	0
 26155 df2a A901     		.uleb128 0xa9
 26156 df2c 00000000 		.quad	.LVL249
 26156      00000000 
 26157 df34 2DA20000 		.long	0xa22d
 26158 df38 AA01     		.uleb128 0xaa
 26159 df3a 01       		.uleb128 0x1
 26160 df3b 54       		.byte	0x54
 26161 df3c 02       		.uleb128 0x2
 26162 df3d 76       		.byte	0x76
 26163 df3e 00       		.sleb128 0
 26164 df3f 00       		.byte	0
 26165 df40 00       		.byte	0
 26166 df41 B601     		.uleb128 0xb6
 26167 df43 00000000 		.quad	.LBB2179
 26167      00000000 
 26168 df4b 1F000000 		.quad	.LBE2179-.LBB2179
 26168      00000000 
 26169 df53 A7DF0000 		.long	0xdfa7
 26170 df57 BC01     		.uleb128 0xbc
 26171 df59 00000000 		.long	.LASF1488
 26172 df5d 01       		.byte	0x1
 26173 df5e 6F       		.byte	0x6f
 26174 df5f FC570000 		.long	0x57fc
 26175 df63 00000000 		.long	.LLST198
 26176 df67 CA01     		.uleb128 0xca
 26177 df69 00000000 		.long	.LASF1485
 26178 df6d 939F0000 		.long	0x9f93
 26179 df71 00000000 		.long	.LLST199
 26180 df75 C901     		.uleb128 0xc9
 26181 df77 00000000 		.long	.LASF1486
 26182 df7b 5C5F0000 		.long	0x5f5c
 26183 df7f C901     		.uleb128 0xc9
 26184 df81 00000000 		.long	.LASF1487
 26185 df85 5C5F0000 		.long	0x5f5c
 26186 df89 A901     		.uleb128 0xa9
 26187 df8b 00000000 		.quad	.LVL187
 26187      00000000 
 26188 df93 DEED0000 		.long	0xedde
 26189 df97 AA01     		.uleb128 0xaa
 26190 df99 01       		.uleb128 0x1
 26191 df9a 55       		.byte	0x55
 26192 df9b 02       		.uleb128 0x2
 26193 df9c 7C       		.byte	0x7c
 26194 df9d 00       		.sleb128 0
 26195 df9e AA01     		.uleb128 0xaa
 26196 dfa0 01       		.uleb128 0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 722


 26197 dfa1 52       		.byte	0x52
 26198 dfa2 02       		.uleb128 0x2
 26199 dfa3 7D       		.byte	0x7d
 26200 dfa4 00       		.sleb128 0
 26201 dfa5 00       		.byte	0
 26202 dfa6 00       		.byte	0
 26203 dfa7 9D01     		.uleb128 0x9d
 26204 dfa9 6EBA0000 		.long	0xba6e
 26205 dfad 00000000 		.quad	.LBB2181
 26205      00000000 
 26206 dfb5 00000000 		.long	.Ldebug_ranges0+0xb70
 26207 dfb9 01       		.byte	0x1
 26208 dfba 7E       		.byte	0x7e
 26209 dfbb A5E00000 		.long	0xe0a5
 26210 dfbf 9C01     		.uleb128 0x9c
 26211 dfc1 7DBA0000 		.long	0xba7d
 26212 dfc5 00000000 		.long	.LLST200
 26213 dfc9 AB01     		.uleb128 0xab
 26214 dfcb F5AC0000 		.long	0xacf5
 26215 dfcf 00000000 		.quad	.LBB2183
 26215      00000000 
 26216 dfd7 00000000 		.long	.Ldebug_ranges0+0xba0
 26217 dfdb 04       		.byte	0x4
 26218 dfdc A901     		.value	0x1a9
 26219 dfde 9C01     		.uleb128 0x9c
 26220 dfe0 04AD0000 		.long	0xad04
 26221 dfe4 00000000 		.long	.LLST200
 26222 dfe8 A601     		.uleb128 0xa6
 26223 dfea 77AC0000 		.long	0xac77
 26224 dfee 00000000 		.quad	.LBB2185
 26224      00000000 
 26225 dff6 0A000000 		.quad	.LBE2185-.LBB2185
 26225      00000000 
 26226 dffe 04       		.byte	0x4
 26227 dfff A0       		.byte	0xa0
 26228 e000 9601     		.uleb128 0x96
 26229 e002 86AC0000 		.long	0xac86
 26230 e006 9C01     		.uleb128 0x9c
 26231 e008 9CAC0000 		.long	0xac9c
 26232 e00c 00000000 		.long	.LLST202
 26233 e010 9C01     		.uleb128 0x9c
 26234 e012 90AC0000 		.long	0xac90
 26235 e016 00000000 		.long	.LLST203
 26236 e01a A701     		.uleb128 0xa7
 26237 e01c 00000000 		.quad	.LBB2186
 26237      00000000 
 26238 e024 0A000000 		.quad	.LBE2186-.LBB2186
 26238      00000000 
 26239 e02c A601     		.uleb128 0xa6
 26240 e02e 3FAC0000 		.long	0xac3f
 26241 e032 00000000 		.quad	.LBB2187
 26241      00000000 
 26242 e03a 05000000 		.quad	.LBE2187-.LBB2187
 26242      00000000 
 26243 e042 04       		.byte	0x4
 26244 e043 B2       		.byte	0xb2
 26245 e044 9601     		.uleb128 0x96
GAS LISTING /tmp/ccKUqHDa.s 			page 723


 26246 e046 4AAC0000 		.long	0xac4a
 26247 e04a 9C01     		.uleb128 0x9c
 26248 e04c 64AC0000 		.long	0xac64
 26249 e050 00000000 		.long	.LLST204
 26250 e054 9C01     		.uleb128 0x9c
 26251 e056 57AC0000 		.long	0xac57
 26252 e05a 00000000 		.long	.LLST205
 26253 e05e A801     		.uleb128 0xa8
 26254 e060 14AC0000 		.long	0xac14
 26255 e064 00000000 		.quad	.LBB2188
 26255      00000000 
 26256 e06c 05000000 		.quad	.LBE2188-.LBB2188
 26256      00000000 
 26257 e074 26       		.byte	0x26
 26258 e075 7F01     		.value	0x17f
 26259 e077 9601     		.uleb128 0x96
 26260 e079 23AC0000 		.long	0xac23
 26261 e07d 9C01     		.uleb128 0x9c
 26262 e07f 39AC0000 		.long	0xac39
 26263 e083 00000000 		.long	.LLST204
 26264 e087 9C01     		.uleb128 0x9c
 26265 e089 2DAC0000 		.long	0xac2d
 26266 e08d 00000000 		.long	.LLST205
 26267 e091 C301     		.uleb128 0xc3
 26268 e093 00000000 		.quad	.LVL202
 26268      00000000 
 26269 e09b 5DEE0000 		.long	0xee5d
 26270 e09f 00       		.byte	0
 26271 e0a0 00       		.byte	0
 26272 e0a1 00       		.byte	0
 26273 e0a2 00       		.byte	0
 26274 e0a3 00       		.byte	0
 26275 e0a4 00       		.byte	0
 26276 e0a5 9F01     		.uleb128 0x9f
 26277 e0a7 6EBA0000 		.long	0xba6e
 26278 e0ab 00000000 		.quad	.LBB2197
 26278      00000000 
 26279 e0b3 12000000 		.quad	.LBE2197-.LBB2197
 26279      00000000 
 26280 e0bb 01       		.byte	0x1
 26281 e0bc 79       		.byte	0x79
 26282 e0bd ABE10000 		.long	0xe1ab
 26283 e0c1 9C01     		.uleb128 0x9c
 26284 e0c3 7DBA0000 		.long	0xba7d
 26285 e0c7 00000000 		.long	.LLST208
 26286 e0cb A801     		.uleb128 0xa8
 26287 e0cd F5AC0000 		.long	0xacf5
 26288 e0d1 00000000 		.quad	.LBB2199
 26288      00000000 
 26289 e0d9 12000000 		.quad	.LBE2199-.LBB2199
 26289      00000000 
 26290 e0e1 04       		.byte	0x4
 26291 e0e2 A901     		.value	0x1a9
 26292 e0e4 9C01     		.uleb128 0x9c
 26293 e0e6 04AD0000 		.long	0xad04
 26294 e0ea 00000000 		.long	.LLST208
 26295 e0ee A601     		.uleb128 0xa6
GAS LISTING /tmp/ccKUqHDa.s 			page 724


 26296 e0f0 77AC0000 		.long	0xac77
 26297 e0f4 00000000 		.quad	.LBB2201
 26297      00000000 
 26298 e0fc 0A000000 		.quad	.LBE2201-.LBB2201
 26298      00000000 
 26299 e104 04       		.byte	0x4
 26300 e105 A0       		.byte	0xa0
 26301 e106 9601     		.uleb128 0x96
 26302 e108 86AC0000 		.long	0xac86
 26303 e10c 9C01     		.uleb128 0x9c
 26304 e10e 9CAC0000 		.long	0xac9c
 26305 e112 00000000 		.long	.LLST210
 26306 e116 9C01     		.uleb128 0x9c
 26307 e118 90AC0000 		.long	0xac90
 26308 e11c 00000000 		.long	.LLST211
 26309 e120 A701     		.uleb128 0xa7
 26310 e122 00000000 		.quad	.LBB2202
 26310      00000000 
 26311 e12a 0A000000 		.quad	.LBE2202-.LBB2202
 26311      00000000 
 26312 e132 A601     		.uleb128 0xa6
 26313 e134 3FAC0000 		.long	0xac3f
 26314 e138 00000000 		.quad	.LBB2203
 26314      00000000 
 26315 e140 05000000 		.quad	.LBE2203-.LBB2203
 26315      00000000 
 26316 e148 04       		.byte	0x4
 26317 e149 B2       		.byte	0xb2
 26318 e14a 9601     		.uleb128 0x96
 26319 e14c 4AAC0000 		.long	0xac4a
 26320 e150 9C01     		.uleb128 0x9c
 26321 e152 64AC0000 		.long	0xac64
 26322 e156 00000000 		.long	.LLST212
 26323 e15a 9C01     		.uleb128 0x9c
 26324 e15c 57AC0000 		.long	0xac57
 26325 e160 00000000 		.long	.LLST213
 26326 e164 A801     		.uleb128 0xa8
 26327 e166 14AC0000 		.long	0xac14
 26328 e16a 00000000 		.quad	.LBB2204
 26328      00000000 
 26329 e172 05000000 		.quad	.LBE2204-.LBB2204
 26329      00000000 
 26330 e17a 26       		.byte	0x26
 26331 e17b 7F01     		.value	0x17f
 26332 e17d 9601     		.uleb128 0x96
 26333 e17f 23AC0000 		.long	0xac23
 26334 e183 9C01     		.uleb128 0x9c
 26335 e185 39AC0000 		.long	0xac39
 26336 e189 00000000 		.long	.LLST212
 26337 e18d 9C01     		.uleb128 0x9c
 26338 e18f 2DAC0000 		.long	0xac2d
 26339 e193 00000000 		.long	.LLST213
 26340 e197 C301     		.uleb128 0xc3
 26341 e199 00000000 		.quad	.LVL253
 26341      00000000 
 26342 e1a1 5DEE0000 		.long	0xee5d
 26343 e1a5 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 725


 26344 e1a6 00       		.byte	0
 26345 e1a7 00       		.byte	0
 26346 e1a8 00       		.byte	0
 26347 e1a9 00       		.byte	0
 26348 e1aa 00       		.byte	0
 26349 e1ab 9F01     		.uleb128 0x9f
 26350 e1ad 6EBA0000 		.long	0xba6e
 26351 e1b1 00000000 		.quad	.LBB2206
 26351      00000000 
 26352 e1b9 17000000 		.quad	.LBE2206-.LBB2206
 26352      00000000 
 26353 e1c1 01       		.byte	0x1
 26354 e1c2 7E       		.byte	0x7e
 26355 e1c3 B1E20000 		.long	0xe2b1
 26356 e1c7 9C01     		.uleb128 0x9c
 26357 e1c9 7DBA0000 		.long	0xba7d
 26358 e1cd 00000000 		.long	.LLST216
 26359 e1d1 A801     		.uleb128 0xa8
 26360 e1d3 F5AC0000 		.long	0xacf5
 26361 e1d7 00000000 		.quad	.LBB2208
 26361      00000000 
 26362 e1df 17000000 		.quad	.LBE2208-.LBB2208
 26362      00000000 
 26363 e1e7 04       		.byte	0x4
 26364 e1e8 A901     		.value	0x1a9
 26365 e1ea 9C01     		.uleb128 0x9c
 26366 e1ec 04AD0000 		.long	0xad04
 26367 e1f0 00000000 		.long	.LLST216
 26368 e1f4 A601     		.uleb128 0xa6
 26369 e1f6 77AC0000 		.long	0xac77
 26370 e1fa 00000000 		.quad	.LBB2210
 26370      00000000 
 26371 e202 0F000000 		.quad	.LBE2210-.LBB2210
 26371      00000000 
 26372 e20a 04       		.byte	0x4
 26373 e20b A0       		.byte	0xa0
 26374 e20c 9601     		.uleb128 0x96
 26375 e20e 86AC0000 		.long	0xac86
 26376 e212 9C01     		.uleb128 0x9c
 26377 e214 9CAC0000 		.long	0xac9c
 26378 e218 00000000 		.long	.LLST218
 26379 e21c 9C01     		.uleb128 0x9c
 26380 e21e 90AC0000 		.long	0xac90
 26381 e222 00000000 		.long	.LLST219
 26382 e226 A701     		.uleb128 0xa7
 26383 e228 00000000 		.quad	.LBB2211
 26383      00000000 
 26384 e230 0F000000 		.quad	.LBE2211-.LBB2211
 26384      00000000 
 26385 e238 A601     		.uleb128 0xa6
 26386 e23a 3FAC0000 		.long	0xac3f
 26387 e23e 00000000 		.quad	.LBB2212
 26387      00000000 
 26388 e246 0A000000 		.quad	.LBE2212-.LBB2212
 26388      00000000 
 26389 e24e 04       		.byte	0x4
 26390 e24f B2       		.byte	0xb2
GAS LISTING /tmp/ccKUqHDa.s 			page 726


 26391 e250 9601     		.uleb128 0x96
 26392 e252 4AAC0000 		.long	0xac4a
 26393 e256 9C01     		.uleb128 0x9c
 26394 e258 64AC0000 		.long	0xac64
 26395 e25c 00000000 		.long	.LLST220
 26396 e260 9C01     		.uleb128 0x9c
 26397 e262 57AC0000 		.long	0xac57
 26398 e266 00000000 		.long	.LLST221
 26399 e26a A801     		.uleb128 0xa8
 26400 e26c 14AC0000 		.long	0xac14
 26401 e270 00000000 		.quad	.LBB2213
 26401      00000000 
 26402 e278 0A000000 		.quad	.LBE2213-.LBB2213
 26402      00000000 
 26403 e280 26       		.byte	0x26
 26404 e281 7F01     		.value	0x17f
 26405 e283 9601     		.uleb128 0x96
 26406 e285 23AC0000 		.long	0xac23
 26407 e289 9C01     		.uleb128 0x9c
 26408 e28b 39AC0000 		.long	0xac39
 26409 e28f 00000000 		.long	.LLST220
 26410 e293 9C01     		.uleb128 0x9c
 26411 e295 2DAC0000 		.long	0xac2d
 26412 e299 00000000 		.long	.LLST221
 26413 e29d C301     		.uleb128 0xc3
 26414 e29f 00000000 		.quad	.LVL286
 26414      00000000 
 26415 e2a7 5DEE0000 		.long	0xee5d
 26416 e2ab 00       		.byte	0
 26417 e2ac 00       		.byte	0
 26418 e2ad 00       		.byte	0
 26419 e2ae 00       		.byte	0
 26420 e2af 00       		.byte	0
 26421 e2b0 00       		.byte	0
 26422 e2b1 C701     		.uleb128 0xc7
 26423 e2b3 00000000 		.quad	.LVL191
 26423      00000000 
 26424 e2bb D8E20000 		.long	0xe2d8
 26425 e2bf AA01     		.uleb128 0xaa
 26426 e2c1 01       		.uleb128 0x1
 26427 e2c2 55       		.byte	0x55
 26428 e2c3 02       		.uleb128 0x2
 26429 e2c4 73       		.byte	0x73
 26430 e2c5 00       		.sleb128 0
 26431 e2c6 AA01     		.uleb128 0xaa
 26432 e2c8 01       		.uleb128 0x1
 26433 e2c9 54       		.byte	0x54
 26434 e2ca 05       		.uleb128 0x5
 26435 e2cb 91       		.byte	0x91
 26436 e2cc E8AE7F   		.sleb128 -10392
 26437 e2cf 06       		.byte	0x6
 26438 e2d0 AA01     		.uleb128 0xaa
 26439 e2d2 01       		.uleb128 0x1
 26440 e2d3 51       		.byte	0x51
 26441 e2d4 02       		.uleb128 0x2
 26442 e2d5 7F       		.byte	0x7f
 26443 e2d6 00       		.sleb128 0
GAS LISTING /tmp/ccKUqHDa.s 			page 727


 26444 e2d7 00       		.byte	0
 26445 e2d8 C401     		.uleb128 0xc4
 26446 e2da 00000000 		.quad	.LVL192
 26446      00000000 
 26447 e2e2 F7EE0000 		.long	0xeef7
 26448 e2e6 F2E20000 		.long	0xe2f2
 26449 e2ea AA01     		.uleb128 0xaa
 26450 e2ec 01       		.uleb128 0x1
 26451 e2ed 55       		.byte	0x55
 26452 e2ee 02       		.uleb128 0x2
 26453 e2ef 7C       		.byte	0x7c
 26454 e2f0 00       		.sleb128 0
 26455 e2f1 00       		.byte	0
 26456 e2f2 A901     		.uleb128 0xa9
 26457 e2f4 00000000 		.quad	.LVL193
 26457      00000000 
 26458 e2fc B6EE0000 		.long	0xeeb6
 26459 e300 AA01     		.uleb128 0xaa
 26460 e302 01       		.uleb128 0x1
 26461 e303 55       		.byte	0x55
 26462 e304 02       		.uleb128 0x2
 26463 e305 7C       		.byte	0x7c
 26464 e306 00       		.sleb128 0
 26465 e307 00       		.byte	0
 26466 e308 00       		.byte	0
 26467 e309 00       		.byte	0
 26468 e30a 9F01     		.uleb128 0x9f
 26469 e30c 2ABC0000 		.long	0xbc2a
 26470 e310 00000000 		.quad	.LBB2226
 26470      00000000 
 26471 e318 0A000000 		.quad	.LBE2226-.LBB2226
 26471      00000000 
 26472 e320 01       		.byte	0x1
 26473 e321 68       		.byte	0x68
 26474 e322 0FE40000 		.long	0xe40f
 26475 e326 9C01     		.uleb128 0x9c
 26476 e328 39BC0000 		.long	0xbc39
 26477 e32c 00000000 		.long	.LLST224
 26478 e330 A801     		.uleb128 0xa8
 26479 e332 49AE0000 		.long	0xae49
 26480 e336 00000000 		.quad	.LBB2227
 26480      00000000 
 26481 e33e 0A000000 		.quad	.LBE2227-.LBB2227
 26481      00000000 
 26482 e346 04       		.byte	0x4
 26483 e347 A901     		.value	0x1a9
 26484 e349 9C01     		.uleb128 0x9c
 26485 e34b 58AE0000 		.long	0xae58
 26486 e34f 00000000 		.long	.LLST224
 26487 e353 A601     		.uleb128 0xa6
 26488 e355 CBAD0000 		.long	0xadcb
 26489 e359 00000000 		.quad	.LBB2228
 26489      00000000 
 26490 e361 0A000000 		.quad	.LBE2228-.LBB2228
 26490      00000000 
 26491 e369 04       		.byte	0x4
 26492 e36a A0       		.byte	0xa0
GAS LISTING /tmp/ccKUqHDa.s 			page 728


 26493 e36b 9601     		.uleb128 0x96
 26494 e36d DAAD0000 		.long	0xadda
 26495 e371 9601     		.uleb128 0x96
 26496 e373 F0AD0000 		.long	0xadf0
 26497 e377 9C01     		.uleb128 0x9c
 26498 e379 E4AD0000 		.long	0xade4
 26499 e37d 00000000 		.long	.LLST226
 26500 e381 A701     		.uleb128 0xa7
 26501 e383 00000000 		.quad	.LBB2229
 26501      00000000 
 26502 e38b 0A000000 		.quad	.LBE2229-.LBB2229
 26502      00000000 
 26503 e393 A601     		.uleb128 0xa6
 26504 e395 93AD0000 		.long	0xad93
 26505 e399 00000000 		.quad	.LBB2230
 26505      00000000 
 26506 e3a1 0A000000 		.quad	.LBE2230-.LBB2230
 26506      00000000 
 26507 e3a9 04       		.byte	0x4
 26508 e3aa B2       		.byte	0xb2
 26509 e3ab 9601     		.uleb128 0x96
 26510 e3ad 9EAD0000 		.long	0xad9e
 26511 e3b1 9601     		.uleb128 0x96
 26512 e3b3 B8AD0000 		.long	0xadb8
 26513 e3b7 9C01     		.uleb128 0x9c
 26514 e3b9 ABAD0000 		.long	0xadab
 26515 e3bd 00000000 		.long	.LLST226
 26516 e3c1 A801     		.uleb128 0xa8
 26517 e3c3 68AD0000 		.long	0xad68
 26518 e3c7 00000000 		.quad	.LBB2231
 26518      00000000 
 26519 e3cf 0A000000 		.quad	.LBE2231-.LBB2231
 26519      00000000 
 26520 e3d7 26       		.byte	0x26
 26521 e3d8 7F01     		.value	0x17f
 26522 e3da 9601     		.uleb128 0x96
 26523 e3dc 77AD0000 		.long	0xad77
 26524 e3e0 9601     		.uleb128 0x96
 26525 e3e2 8DAD0000 		.long	0xad8d
 26526 e3e6 9C01     		.uleb128 0x9c
 26527 e3e8 81AD0000 		.long	0xad81
 26528 e3ec 00000000 		.long	.LLST226
 26529 e3f0 A901     		.uleb128 0xa9
 26530 e3f2 00000000 		.quad	.LVL205
 26530      00000000 
 26531 e3fa 5DEE0000 		.long	0xee5d
 26532 e3fe AA01     		.uleb128 0xaa
 26533 e400 01       		.uleb128 0x1
 26534 e401 55       		.byte	0x55
 26535 e402 05       		.uleb128 0x5
 26536 e403 91       		.byte	0x91
 26537 e404 A8AF7F   		.sleb128 -10328
 26538 e407 06       		.byte	0x6
 26539 e408 00       		.byte	0
 26540 e409 00       		.byte	0
 26541 e40a 00       		.byte	0
 26542 e40b 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 729


 26543 e40c 00       		.byte	0
 26544 e40d 00       		.byte	0
 26545 e40e 00       		.byte	0
 26546 e40f 9F01     		.uleb128 0x9f
 26547 e411 4EBC0000 		.long	0xbc4e
 26548 e415 00000000 		.quad	.LBB2233
 26548      00000000 
 26549 e41d 0F000000 		.quad	.LBE2233-.LBB2233
 26549      00000000 
 26550 e425 01       		.byte	0x1
 26551 e426 7E       		.byte	0x7e
 26552 e427 4FE40000 		.long	0xe44f
 26553 e42b 9C01     		.uleb128 0x9c
 26554 e42d 5DBC0000 		.long	0xbc5d
 26555 e431 00000000 		.long	.LLST229
 26556 e435 A901     		.uleb128 0xa9
 26557 e437 00000000 		.quad	.LVL206
 26557      00000000 
 26558 e43f 5D2A0000 		.long	0x2a5d
 26559 e443 AA01     		.uleb128 0xaa
 26560 e445 01       		.uleb128 0x1
 26561 e446 55       		.byte	0x55
 26562 e447 05       		.uleb128 0x5
 26563 e448 91       		.byte	0x91
 26564 e449 D0AF7F   		.sleb128 -10288
 26565 e44c 06       		.byte	0x6
 26566 e44d 00       		.byte	0
 26567 e44e 00       		.byte	0
 26568 e44f B601     		.uleb128 0xb6
 26569 e451 00000000 		.quad	.LBB2240
 26569      00000000 
 26570 e459 0A000000 		.quad	.LBE2240-.LBB2240
 26570      00000000 
 26571 e461 4EE50000 		.long	0xe54e
 26572 e465 9C01     		.uleb128 0x9c
 26573 e467 39BC0000 		.long	0xbc39
 26574 e46b 00000000 		.long	.LLST230
 26575 e46f A801     		.uleb128 0xa8
 26576 e471 49AE0000 		.long	0xae49
 26577 e475 00000000 		.quad	.LBB2241
 26577      00000000 
 26578 e47d 0A000000 		.quad	.LBE2241-.LBB2241
 26578      00000000 
 26579 e485 04       		.byte	0x4
 26580 e486 A901     		.value	0x1a9
 26581 e488 9C01     		.uleb128 0x9c
 26582 e48a 58AE0000 		.long	0xae58
 26583 e48e 00000000 		.long	.LLST230
 26584 e492 A601     		.uleb128 0xa6
 26585 e494 CBAD0000 		.long	0xadcb
 26586 e498 00000000 		.quad	.LBB2242
 26586      00000000 
 26587 e4a0 0A000000 		.quad	.LBE2242-.LBB2242
 26587      00000000 
 26588 e4a8 04       		.byte	0x4
 26589 e4a9 A0       		.byte	0xa0
 26590 e4aa 9601     		.uleb128 0x96
GAS LISTING /tmp/ccKUqHDa.s 			page 730


 26591 e4ac DAAD0000 		.long	0xadda
 26592 e4b0 9601     		.uleb128 0x96
 26593 e4b2 F0AD0000 		.long	0xadf0
 26594 e4b6 9C01     		.uleb128 0x9c
 26595 e4b8 E4AD0000 		.long	0xade4
 26596 e4bc 00000000 		.long	.LLST232
 26597 e4c0 A701     		.uleb128 0xa7
 26598 e4c2 00000000 		.quad	.LBB2243
 26598      00000000 
 26599 e4ca 0A000000 		.quad	.LBE2243-.LBB2243
 26599      00000000 
 26600 e4d2 A601     		.uleb128 0xa6
 26601 e4d4 93AD0000 		.long	0xad93
 26602 e4d8 00000000 		.quad	.LBB2244
 26602      00000000 
 26603 e4e0 0A000000 		.quad	.LBE2244-.LBB2244
 26603      00000000 
 26604 e4e8 04       		.byte	0x4
 26605 e4e9 B2       		.byte	0xb2
 26606 e4ea 9601     		.uleb128 0x96
 26607 e4ec 9EAD0000 		.long	0xad9e
 26608 e4f0 9601     		.uleb128 0x96
 26609 e4f2 B8AD0000 		.long	0xadb8
 26610 e4f6 9C01     		.uleb128 0x9c
 26611 e4f8 ABAD0000 		.long	0xadab
 26612 e4fc 00000000 		.long	.LLST232
 26613 e500 A801     		.uleb128 0xa8
 26614 e502 68AD0000 		.long	0xad68
 26615 e506 00000000 		.quad	.LBB2245
 26615      00000000 
 26616 e50e 0A000000 		.quad	.LBE2245-.LBB2245
 26616      00000000 
 26617 e516 26       		.byte	0x26
 26618 e517 7F01     		.value	0x17f
 26619 e519 9601     		.uleb128 0x96
 26620 e51b 77AD0000 		.long	0xad77
 26621 e51f 9601     		.uleb128 0x96
 26622 e521 8DAD0000 		.long	0xad8d
 26623 e525 9C01     		.uleb128 0x9c
 26624 e527 81AD0000 		.long	0xad81
 26625 e52b 00000000 		.long	.LLST232
 26626 e52f A901     		.uleb128 0xa9
 26627 e531 00000000 		.quad	.LVL254
 26627      00000000 
 26628 e539 5DEE0000 		.long	0xee5d
 26629 e53d AA01     		.uleb128 0xaa
 26630 e53f 01       		.uleb128 0x1
 26631 e540 55       		.byte	0x55
 26632 e541 05       		.uleb128 0x5
 26633 e542 91       		.byte	0x91
 26634 e543 A8AF7F   		.sleb128 -10328
 26635 e546 06       		.byte	0x6
 26636 e547 00       		.byte	0
 26637 e548 00       		.byte	0
 26638 e549 00       		.byte	0
 26639 e54a 00       		.byte	0
 26640 e54b 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 731


 26641 e54c 00       		.byte	0
 26642 e54d 00       		.byte	0
 26643 e54e B601     		.uleb128 0xb6
 26644 e550 00000000 		.quad	.LBB2247
 26644      00000000 
 26645 e558 1B000000 		.quad	.LBE2247-.LBB2247
 26645      00000000 
 26646 e560 88E50000 		.long	0xe588
 26647 e564 9C01     		.uleb128 0x9c
 26648 e566 5DBC0000 		.long	0xbc5d
 26649 e56a 00000000 		.long	.LLST235
 26650 e56e A901     		.uleb128 0xa9
 26651 e570 00000000 		.quad	.LVL255
 26651      00000000 
 26652 e578 5D2A0000 		.long	0x2a5d
 26653 e57c AA01     		.uleb128 0xaa
 26654 e57e 01       		.uleb128 0x1
 26655 e57f 55       		.byte	0x55
 26656 e580 05       		.uleb128 0x5
 26657 e581 91       		.byte	0x91
 26658 e582 D0AF7F   		.sleb128 -10288
 26659 e585 06       		.byte	0x6
 26660 e586 00       		.byte	0
 26661 e587 00       		.byte	0
 26662 e588 9F01     		.uleb128 0x9f
 26663 e58a 4EBC0000 		.long	0xbc4e
 26664 e58e 00000000 		.quad	.LBB2250
 26664      00000000 
 26665 e596 0F000000 		.quad	.LBE2250-.LBB2250
 26665      00000000 
 26666 e59e 01       		.byte	0x1
 26667 e59f 7E       		.byte	0x7e
 26668 e5a0 C8E50000 		.long	0xe5c8
 26669 e5a4 9C01     		.uleb128 0x9c
 26670 e5a6 5DBC0000 		.long	0xbc5d
 26671 e5aa 00000000 		.long	.LLST236
 26672 e5ae A901     		.uleb128 0xa9
 26673 e5b0 00000000 		.quad	.LVL278
 26673      00000000 
 26674 e5b8 5D2A0000 		.long	0x2a5d
 26675 e5bc AA01     		.uleb128 0xaa
 26676 e5be 01       		.uleb128 0x1
 26677 e5bf 55       		.byte	0x55
 26678 e5c0 05       		.uleb128 0x5
 26679 e5c1 91       		.byte	0x91
 26680 e5c2 D0AF7F   		.sleb128 -10288
 26681 e5c5 06       		.byte	0x6
 26682 e5c6 00       		.byte	0
 26683 e5c7 00       		.byte	0
 26684 e5c8 9F01     		.uleb128 0x9f
 26685 e5ca 2ABC0000 		.long	0xbc2a
 26686 e5ce 00000000 		.quad	.LBB2252
 26686      00000000 
 26687 e5d6 0F000000 		.quad	.LBE2252-.LBB2252
 26687      00000000 
 26688 e5de 01       		.byte	0x1
 26689 e5df 68       		.byte	0x68
GAS LISTING /tmp/ccKUqHDa.s 			page 732


 26690 e5e0 CDE60000 		.long	0xe6cd
 26691 e5e4 9C01     		.uleb128 0x9c
 26692 e5e6 39BC0000 		.long	0xbc39
 26693 e5ea 00000000 		.long	.LLST237
 26694 e5ee A801     		.uleb128 0xa8
 26695 e5f0 49AE0000 		.long	0xae49
 26696 e5f4 00000000 		.quad	.LBB2253
 26696      00000000 
 26697 e5fc 0F000000 		.quad	.LBE2253-.LBB2253
 26697      00000000 
 26698 e604 04       		.byte	0x4
 26699 e605 A901     		.value	0x1a9
 26700 e607 9C01     		.uleb128 0x9c
 26701 e609 58AE0000 		.long	0xae58
 26702 e60d 00000000 		.long	.LLST237
 26703 e611 A601     		.uleb128 0xa6
 26704 e613 CBAD0000 		.long	0xadcb
 26705 e617 00000000 		.quad	.LBB2254
 26705      00000000 
 26706 e61f 0F000000 		.quad	.LBE2254-.LBB2254
 26706      00000000 
 26707 e627 04       		.byte	0x4
 26708 e628 A0       		.byte	0xa0
 26709 e629 9601     		.uleb128 0x96
 26710 e62b DAAD0000 		.long	0xadda
 26711 e62f 9601     		.uleb128 0x96
 26712 e631 F0AD0000 		.long	0xadf0
 26713 e635 9C01     		.uleb128 0x9c
 26714 e637 E4AD0000 		.long	0xade4
 26715 e63b 00000000 		.long	.LLST239
 26716 e63f A701     		.uleb128 0xa7
 26717 e641 00000000 		.quad	.LBB2255
 26717      00000000 
 26718 e649 0F000000 		.quad	.LBE2255-.LBB2255
 26718      00000000 
 26719 e651 A601     		.uleb128 0xa6
 26720 e653 93AD0000 		.long	0xad93
 26721 e657 00000000 		.quad	.LBB2256
 26721      00000000 
 26722 e65f 0F000000 		.quad	.LBE2256-.LBB2256
 26722      00000000 
 26723 e667 04       		.byte	0x4
 26724 e668 B2       		.byte	0xb2
 26725 e669 9601     		.uleb128 0x96
 26726 e66b 9EAD0000 		.long	0xad9e
 26727 e66f 9601     		.uleb128 0x96
 26728 e671 B8AD0000 		.long	0xadb8
 26729 e675 9C01     		.uleb128 0x9c
 26730 e677 ABAD0000 		.long	0xadab
 26731 e67b 00000000 		.long	.LLST239
 26732 e67f A801     		.uleb128 0xa8
 26733 e681 68AD0000 		.long	0xad68
 26734 e685 00000000 		.quad	.LBB2257
 26734      00000000 
 26735 e68d 0F000000 		.quad	.LBE2257-.LBB2257
 26735      00000000 
 26736 e695 26       		.byte	0x26
GAS LISTING /tmp/ccKUqHDa.s 			page 733


 26737 e696 7F01     		.value	0x17f
 26738 e698 9601     		.uleb128 0x96
 26739 e69a 77AD0000 		.long	0xad77
 26740 e69e 9601     		.uleb128 0x96
 26741 e6a0 8DAD0000 		.long	0xad8d
 26742 e6a4 9C01     		.uleb128 0x9c
 26743 e6a6 81AD0000 		.long	0xad81
 26744 e6aa 00000000 		.long	.LLST239
 26745 e6ae A901     		.uleb128 0xa9
 26746 e6b0 00000000 		.quad	.LVL281
 26746      00000000 
 26747 e6b8 5DEE0000 		.long	0xee5d
 26748 e6bc AA01     		.uleb128 0xaa
 26749 e6be 01       		.uleb128 0x1
 26750 e6bf 55       		.byte	0x55
 26751 e6c0 05       		.uleb128 0x5
 26752 e6c1 91       		.byte	0x91
 26753 e6c2 A8AF7F   		.sleb128 -10328
 26754 e6c5 06       		.byte	0x6
 26755 e6c6 00       		.byte	0
 26756 e6c7 00       		.byte	0
 26757 e6c8 00       		.byte	0
 26758 e6c9 00       		.byte	0
 26759 e6ca 00       		.byte	0
 26760 e6cb 00       		.byte	0
 26761 e6cc 00       		.byte	0
 26762 e6cd B601     		.uleb128 0xb6
 26763 e6cf 00000000 		.quad	.LBB2260
 26763      00000000 
 26764 e6d7 2B000000 		.quad	.LBE2260-.LBB2260
 26764      00000000 
 26765 e6df 5DE70000 		.long	0xe75d
 26766 e6e3 9C01     		.uleb128 0x9c
 26767 e6e5 2EBA0000 		.long	0xba2e
 26768 e6e9 00000000 		.long	.LLST242
 26769 e6ed C601     		.uleb128 0xc6
 26770 e6ef 8BA60000 		.long	0xa68b
 26771 e6f3 00000000 		.quad	.LBB2262
 26771      00000000 
 26772 e6fb 0C000000 		.quad	.LBE2262-.LBB2262
 26772      00000000 
 26773 e703 02       		.byte	0x2
 26774 e704 2302     		.value	0x223
 26775 e706 15E70000 		.long	0xe715
 26776 e70a 9C01     		.uleb128 0x9c
 26777 e70c 9AA60000 		.long	0xa69a
 26778 e710 00000000 		.long	.LLST242
 26779 e714 00       		.byte	0
 26780 e715 A801     		.uleb128 0xa8
 26781 e717 54A10000 		.long	0xa154
 26782 e71b 00000000 		.quad	.LBB2264
 26782      00000000 
 26783 e723 1F000000 		.quad	.LBE2264-.LBB2264
 26783      00000000 
 26784 e72b 02       		.byte	0x2
 26785 e72c 2302     		.value	0x223
 26786 e72e 9C01     		.uleb128 0x9c
GAS LISTING /tmp/ccKUqHDa.s 			page 734


 26787 e730 6DA10000 		.long	0xa16d
 26788 e734 00000000 		.long	.LLST244
 26789 e738 9C01     		.uleb128 0x9c
 26790 e73a 63A10000 		.long	0xa163
 26791 e73e 00000000 		.long	.LLST245
 26792 e742 A901     		.uleb128 0xa9
 26793 e744 00000000 		.quad	.LVL290
 26793      00000000 
 26794 e74c DABE0000 		.long	0xbeda
 26795 e750 AA01     		.uleb128 0xaa
 26796 e752 01       		.uleb128 0x1
 26797 e753 54       		.byte	0x54
 26798 e754 05       		.uleb128 0x5
 26799 e755 91       		.byte	0x91
 26800 e756 B0AF7F   		.sleb128 -10320
 26801 e759 06       		.byte	0x6
 26802 e75a 00       		.byte	0
 26803 e75b 00       		.byte	0
 26804 e75c 00       		.byte	0
 26805 e75d CB01     		.uleb128 0xcb
 26806 e75f 00000000 		.quad	.LVL123
 26806      00000000 
 26807 e767 AA01     		.uleb128 0xaa
 26808 e769 01       		.uleb128 0x1
 26809 e76a 55       		.byte	0x55
 26810 e76b 02       		.uleb128 0x2
 26811 e76c 73       		.byte	0x73
 26812 e76d 00       		.sleb128 0
 26813 e76e AA01     		.uleb128 0xaa
 26814 e770 01       		.uleb128 0x1
 26815 e771 54       		.byte	0x54
 26816 e772 09       		.uleb128 0x9
 26817 e773 03       		.byte	0x3
 26818 e774 00000000 		.quad	.LC18
 26818      00000000 
 26819 e77c AA01     		.uleb128 0xaa
 26820 e77e 01       		.uleb128 0x1
 26821 e77f 51       		.byte	0x51
 26822 e780 05       		.uleb128 0x5
 26823 e781 91       		.byte	0x91
 26824 e782 C0AF7F   		.sleb128 -10304
 26825 e785 06       		.byte	0x6
 26826 e786 00       		.byte	0
 26827 e787 00       		.byte	0
 26828 e788 B601     		.uleb128 0xb6
 26829 e78a 00000000 		.quad	.LBB2267
 26829      00000000 
 26830 e792 1A000000 		.quad	.LBE2267-.LBB2267
 26830      00000000 
 26831 e79a E7E70000 		.long	0xe7e7
 26832 e79e BC01     		.uleb128 0xbc
 26833 e7a0 00000000 		.long	.LASF1489
 26834 e7a4 01       		.byte	0x1
 26835 e7a5 81       		.byte	0x81
 26836 e7a6 FDEB0000 		.long	0xebfd
 26837 e7aa 00000000 		.long	.LLST246
 26838 e7ae CA01     		.uleb128 0xca
GAS LISTING /tmp/ccKUqHDa.s 			page 735


 26839 e7b0 00000000 		.long	.LASF1485
 26840 e7b4 08EC0000 		.long	0xec08
 26841 e7b8 00000000 		.long	.LLST247
 26842 e7bc CA01     		.uleb128 0xca
 26843 e7be 00000000 		.long	.LASF1486
 26844 e7c2 0EEC0000 		.long	0xec0e
 26845 e7c6 00000000 		.long	.LLST248
 26846 e7ca CA01     		.uleb128 0xca
 26847 e7cc 00000000 		.long	.LASF1487
 26848 e7d0 0EEC0000 		.long	0xec0e
 26849 e7d4 00000000 		.long	.LLST249
 26850 e7d8 C301     		.uleb128 0xc3
 26851 e7da 00000000 		.quad	.LVL209
 26851      00000000 
 26852 e7e2 11EF0000 		.long	0xef11
 26853 e7e6 00       		.byte	0
 26854 e7e7 9F01     		.uleb128 0x9f
 26855 e7e9 72BC0000 		.long	0xbc72
 26856 e7ed 00000000 		.quad	.LBB2268
 26856      00000000 
 26857 e7f5 25000000 		.quad	.LBE2268-.LBB2268
 26857      00000000 
 26858 e7fd 01       		.byte	0x1
 26859 e7fe 84       		.byte	0x84
 26860 e7ff ECE80000 		.long	0xe8ec
 26861 e803 9C01     		.uleb128 0x9c
 26862 e805 81BC0000 		.long	0xbc81
 26863 e809 00000000 		.long	.LLST250
 26864 e80d A801     		.uleb128 0xa8
 26865 e80f A1AB0000 		.long	0xaba1
 26866 e813 00000000 		.quad	.LBB2269
 26866      00000000 
 26867 e81b 25000000 		.quad	.LBE2269-.LBB2269
 26867      00000000 
 26868 e823 04       		.byte	0x4
 26869 e824 A901     		.value	0x1a9
 26870 e826 9C01     		.uleb128 0x9c
 26871 e828 B0AB0000 		.long	0xabb0
 26872 e82c 00000000 		.long	.LLST250
 26873 e830 A601     		.uleb128 0xa6
 26874 e832 23AB0000 		.long	0xab23
 26875 e836 00000000 		.quad	.LBB2270
 26875      00000000 
 26876 e83e 25000000 		.quad	.LBE2270-.LBB2270
 26876      00000000 
 26877 e846 04       		.byte	0x4
 26878 e847 A0       		.byte	0xa0
 26879 e848 9601     		.uleb128 0x96
 26880 e84a 32AB0000 		.long	0xab32
 26881 e84e 9601     		.uleb128 0x96
 26882 e850 48AB0000 		.long	0xab48
 26883 e854 9C01     		.uleb128 0x9c
 26884 e856 3CAB0000 		.long	0xab3c
 26885 e85a 00000000 		.long	.LLST252
 26886 e85e A701     		.uleb128 0xa7
 26887 e860 00000000 		.quad	.LBB2271
 26887      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 736


 26888 e868 25000000 		.quad	.LBE2271-.LBB2271
 26888      00000000 
 26889 e870 A601     		.uleb128 0xa6
 26890 e872 EBAA0000 		.long	0xaaeb
 26891 e876 00000000 		.quad	.LBB2272
 26891      00000000 
 26892 e87e 17000000 		.quad	.LBE2272-.LBB2272
 26892      00000000 
 26893 e886 04       		.byte	0x4
 26894 e887 B2       		.byte	0xb2
 26895 e888 9601     		.uleb128 0x96
 26896 e88a F6AA0000 		.long	0xaaf6
 26897 e88e 9601     		.uleb128 0x96
 26898 e890 10AB0000 		.long	0xab10
 26899 e894 9C01     		.uleb128 0x9c
 26900 e896 03AB0000 		.long	0xab03
 26901 e89a 00000000 		.long	.LLST253
 26902 e89e A801     		.uleb128 0xa8
 26903 e8a0 C0AA0000 		.long	0xaac0
 26904 e8a4 00000000 		.quad	.LBB2273
 26904      00000000 
 26905 e8ac 17000000 		.quad	.LBE2273-.LBB2273
 26905      00000000 
 26906 e8b4 26       		.byte	0x26
 26907 e8b5 7F01     		.value	0x17f
 26908 e8b7 9601     		.uleb128 0x96
 26909 e8b9 CFAA0000 		.long	0xaacf
 26910 e8bd 9601     		.uleb128 0x96
 26911 e8bf E5AA0000 		.long	0xaae5
 26912 e8c3 9C01     		.uleb128 0x9c
 26913 e8c5 D9AA0000 		.long	0xaad9
 26914 e8c9 00000000 		.long	.LLST253
 26915 e8cd A901     		.uleb128 0xa9
 26916 e8cf 00000000 		.quad	.LVL213
 26916      00000000 
 26917 e8d7 5DEE0000 		.long	0xee5d
 26918 e8db AA01     		.uleb128 0xaa
 26919 e8dd 01       		.uleb128 0x1
 26920 e8de 55       		.byte	0x55
 26921 e8df 05       		.uleb128 0x5
 26922 e8e0 91       		.byte	0x91
 26923 e8e1 B8AF7F   		.sleb128 -10312
 26924 e8e4 06       		.byte	0x6
 26925 e8e5 00       		.byte	0
 26926 e8e6 00       		.byte	0
 26927 e8e7 00       		.byte	0
 26928 e8e8 00       		.byte	0
 26929 e8e9 00       		.byte	0
 26930 e8ea 00       		.byte	0
 26931 e8eb 00       		.byte	0
 26932 e8ec 9F01     		.uleb128 0x9f
 26933 e8ee 72BC0000 		.long	0xbc72
 26934 e8f2 00000000 		.quad	.LBB2284
 26934      00000000 
 26935 e8fa 1D000000 		.quad	.LBE2284-.LBB2284
 26935      00000000 
 26936 e902 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 737


 26937 e903 84       		.byte	0x84
 26938 e904 F1E90000 		.long	0xe9f1
 26939 e908 9C01     		.uleb128 0x9c
 26940 e90a 81BC0000 		.long	0xbc81
 26941 e90e 00000000 		.long	.LLST255
 26942 e912 A801     		.uleb128 0xa8
 26943 e914 A1AB0000 		.long	0xaba1
 26944 e918 00000000 		.quad	.LBB2285
 26944      00000000 
 26945 e920 1D000000 		.quad	.LBE2285-.LBB2285
 26945      00000000 
 26946 e928 04       		.byte	0x4
 26947 e929 A901     		.value	0x1a9
 26948 e92b 9C01     		.uleb128 0x9c
 26949 e92d B0AB0000 		.long	0xabb0
 26950 e931 00000000 		.long	.LLST255
 26951 e935 A601     		.uleb128 0xa6
 26952 e937 23AB0000 		.long	0xab23
 26953 e93b 00000000 		.quad	.LBB2286
 26953      00000000 
 26954 e943 1D000000 		.quad	.LBE2286-.LBB2286
 26954      00000000 
 26955 e94b 04       		.byte	0x4
 26956 e94c A0       		.byte	0xa0
 26957 e94d 9601     		.uleb128 0x96
 26958 e94f 32AB0000 		.long	0xab32
 26959 e953 9601     		.uleb128 0x96
 26960 e955 48AB0000 		.long	0xab48
 26961 e959 9C01     		.uleb128 0x9c
 26962 e95b 3CAB0000 		.long	0xab3c
 26963 e95f 00000000 		.long	.LLST257
 26964 e963 A701     		.uleb128 0xa7
 26965 e965 00000000 		.quad	.LBB2287
 26965      00000000 
 26966 e96d 1D000000 		.quad	.LBE2287-.LBB2287
 26966      00000000 
 26967 e975 A601     		.uleb128 0xa6
 26968 e977 EBAA0000 		.long	0xaaeb
 26969 e97b 00000000 		.quad	.LBB2288
 26969      00000000 
 26970 e983 13000000 		.quad	.LBE2288-.LBB2288
 26970      00000000 
 26971 e98b 04       		.byte	0x4
 26972 e98c B2       		.byte	0xb2
 26973 e98d 9601     		.uleb128 0x96
 26974 e98f F6AA0000 		.long	0xaaf6
 26975 e993 9601     		.uleb128 0x96
 26976 e995 10AB0000 		.long	0xab10
 26977 e999 9C01     		.uleb128 0x9c
 26978 e99b 03AB0000 		.long	0xab03
 26979 e99f 00000000 		.long	.LLST258
 26980 e9a3 A801     		.uleb128 0xa8
 26981 e9a5 C0AA0000 		.long	0xaac0
 26982 e9a9 00000000 		.quad	.LBB2289
 26982      00000000 
 26983 e9b1 13000000 		.quad	.LBE2289-.LBB2289
 26983      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 738


 26984 e9b9 26       		.byte	0x26
 26985 e9ba 7F01     		.value	0x17f
 26986 e9bc 9601     		.uleb128 0x96
 26987 e9be CFAA0000 		.long	0xaacf
 26988 e9c2 9601     		.uleb128 0x96
 26989 e9c4 E5AA0000 		.long	0xaae5
 26990 e9c8 9C01     		.uleb128 0x9c
 26991 e9ca D9AA0000 		.long	0xaad9
 26992 e9ce 00000000 		.long	.LLST258
 26993 e9d2 A901     		.uleb128 0xa9
 26994 e9d4 00000000 		.quad	.LVL269
 26994      00000000 
 26995 e9dc 5DEE0000 		.long	0xee5d
 26996 e9e0 AA01     		.uleb128 0xaa
 26997 e9e2 01       		.uleb128 0x1
 26998 e9e3 55       		.byte	0x55
 26999 e9e4 05       		.uleb128 0x5
 27000 e9e5 91       		.byte	0x91
 27001 e9e6 B8AF7F   		.sleb128 -10312
 27002 e9e9 06       		.byte	0x6
 27003 e9ea 00       		.byte	0
 27004 e9eb 00       		.byte	0
 27005 e9ec 00       		.byte	0
 27006 e9ed 00       		.byte	0
 27007 e9ee 00       		.byte	0
 27008 e9ef 00       		.byte	0
 27009 e9f0 00       		.byte	0
 27010 e9f1 C401     		.uleb128 0xc4
 27011 e9f3 00000000 		.quad	.LVL49
 27011      00000000 
 27012 e9fb 2DA20000 		.long	0xa22d
 27013 e9ff 12EA0000 		.long	0xea12
 27014 ea03 AA01     		.uleb128 0xaa
 27015 ea05 01       		.uleb128 0x1
 27016 ea06 54       		.byte	0x54
 27017 ea07 09       		.uleb128 0x9
 27018 ea08 03       		.byte	0x3
 27019 ea09 00000000 		.quad	.LC8
 27019      00000000 
 27020 ea11 00       		.byte	0
 27021 ea12 C401     		.uleb128 0xc4
 27022 ea14 00000000 		.quad	.LVL51
 27022      00000000 
 27023 ea1c 2DA20000 		.long	0xa22d
 27024 ea20 3AEA0000 		.long	0xea3a
 27025 ea24 AA01     		.uleb128 0xaa
 27026 ea26 01       		.uleb128 0x1
 27027 ea27 55       		.byte	0x55
 27028 ea28 02       		.uleb128 0x2
 27029 ea29 73       		.byte	0x73
 27030 ea2a 00       		.sleb128 0
 27031 ea2b AA01     		.uleb128 0xaa
 27032 ea2d 01       		.uleb128 0x1
 27033 ea2e 54       		.byte	0x54
 27034 ea2f 09       		.uleb128 0x9
 27035 ea30 03       		.byte	0x3
 27036 ea31 00000000 		.quad	.LC9
GAS LISTING /tmp/ccKUqHDa.s 			page 739


 27036      00000000 
 27037 ea39 00       		.byte	0
 27038 ea3a C401     		.uleb128 0xc4
 27039 ea3c 00000000 		.quad	.LVL54
 27039      00000000 
 27040 ea44 2DA20000 		.long	0xa22d
 27041 ea48 62EA0000 		.long	0xea62
 27042 ea4c AA01     		.uleb128 0xaa
 27043 ea4e 01       		.uleb128 0x1
 27044 ea4f 55       		.byte	0x55
 27045 ea50 02       		.uleb128 0x2
 27046 ea51 73       		.byte	0x73
 27047 ea52 00       		.sleb128 0
 27048 ea53 AA01     		.uleb128 0xaa
 27049 ea55 01       		.uleb128 0x1
 27050 ea56 54       		.byte	0x54
 27051 ea57 09       		.uleb128 0x9
 27052 ea58 03       		.byte	0x3
 27053 ea59 00000000 		.quad	.LC10
 27053      00000000 
 27054 ea61 00       		.byte	0
 27055 ea62 C401     		.uleb128 0xc4
 27056 ea64 00000000 		.quad	.LVL55
 27056      00000000 
 27057 ea6c 2DA20000 		.long	0xa22d
 27058 ea70 7CEA0000 		.long	0xea7c
 27059 ea74 AA01     		.uleb128 0xaa
 27060 ea76 01       		.uleb128 0x1
 27061 ea77 54       		.byte	0x54
 27062 ea78 02       		.uleb128 0x2
 27063 ea79 76       		.byte	0x76
 27064 ea7a 00       		.sleb128 0
 27065 ea7b 00       		.byte	0
 27066 ea7c C401     		.uleb128 0xc4
 27067 ea7e 00000000 		.quad	.LVL56
 27067      00000000 
 27068 ea86 2DA20000 		.long	0xa22d
 27069 ea8a 9DEA0000 		.long	0xea9d
 27070 ea8e AA01     		.uleb128 0xaa
 27071 ea90 01       		.uleb128 0x1
 27072 ea91 54       		.byte	0x54
 27073 ea92 09       		.uleb128 0x9
 27074 ea93 03       		.byte	0x3
 27075 ea94 00000000 		.quad	.LC11
 27075      00000000 
 27076 ea9c 00       		.byte	0
 27077 ea9d C401     		.uleb128 0xc4
 27078 ea9f 00000000 		.quad	.LVL59
 27078      00000000 
 27079 eaa7 2DA20000 		.long	0xa22d
 27080 eaab C5EA0000 		.long	0xeac5
 27081 eaaf AA01     		.uleb128 0xaa
 27082 eab1 01       		.uleb128 0x1
 27083 eab2 55       		.byte	0x55
 27084 eab3 02       		.uleb128 0x2
 27085 eab4 73       		.byte	0x73
 27086 eab5 00       		.sleb128 0
GAS LISTING /tmp/ccKUqHDa.s 			page 740


 27087 eab6 AA01     		.uleb128 0xaa
 27088 eab8 01       		.uleb128 0x1
 27089 eab9 54       		.byte	0x54
 27090 eaba 09       		.uleb128 0x9
 27091 eabb 03       		.byte	0x3
 27092 eabc 00000000 		.quad	.LC12
 27092      00000000 
 27093 eac4 00       		.byte	0
 27094 eac5 C401     		.uleb128 0xc4
 27095 eac7 00000000 		.quad	.LVL61
 27095      00000000 
 27096 eacf 2DA20000 		.long	0xa22d
 27097 ead3 EDEA0000 		.long	0xeaed
 27098 ead7 AA01     		.uleb128 0xaa
 27099 ead9 01       		.uleb128 0x1
 27100 eada 55       		.byte	0x55
 27101 eadb 02       		.uleb128 0x2
 27102 eadc 73       		.byte	0x73
 27103 eadd 00       		.sleb128 0
 27104 eade AA01     		.uleb128 0xaa
 27105 eae0 01       		.uleb128 0x1
 27106 eae1 54       		.byte	0x54
 27107 eae2 09       		.uleb128 0x9
 27108 eae3 03       		.byte	0x3
 27109 eae4 00000000 		.quad	.LC13
 27109      00000000 
 27110 eaec 00       		.byte	0
 27111 eaed C401     		.uleb128 0xc4
 27112 eaef 00000000 		.quad	.LVL82
 27112      00000000 
 27113 eaf7 22EF0000 		.long	0xef22
 27114 eafb 07EB0000 		.long	0xeb07
 27115 eaff AA01     		.uleb128 0xaa
 27116 eb01 01       		.uleb128 0x1
 27117 eb02 55       		.byte	0x55
 27118 eb03 02       		.uleb128 0x2
 27119 eb04 73       		.byte	0x73
 27120 eb05 00       		.sleb128 0
 27121 eb06 00       		.byte	0
 27122 eb07 C401     		.uleb128 0xc4
 27123 eb09 00000000 		.quad	.LVL84
 27123      00000000 
 27124 eb11 37EF0000 		.long	0xef37
 27125 eb15 2FEB0000 		.long	0xeb2f
 27126 eb19 AA01     		.uleb128 0xaa
 27127 eb1b 01       		.uleb128 0x1
 27128 eb1c 55       		.byte	0x55
 27129 eb1d 02       		.uleb128 0x2
 27130 eb1e 73       		.byte	0x73
 27131 eb1f 00       		.sleb128 0
 27132 eb20 AA01     		.uleb128 0xaa
 27133 eb22 01       		.uleb128 0x1
 27134 eb23 54       		.byte	0x54
 27135 eb24 09       		.uleb128 0x9
 27136 eb25 03       		.byte	0x3
 27137 eb26 00000000 		.quad	_ZZ4mainENUlfE_4_FUNEf
 27137      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 741


 27138 eb2e 00       		.byte	0
 27139 eb2f C401     		.uleb128 0xc4
 27140 eb31 00000000 		.quad	.LVL86
 27140      00000000 
 27141 eb39 37EF0000 		.long	0xef37
 27142 eb3d 57EB0000 		.long	0xeb57
 27143 eb41 AA01     		.uleb128 0xaa
 27144 eb43 01       		.uleb128 0x1
 27145 eb44 55       		.byte	0x55
 27146 eb45 02       		.uleb128 0x2
 27147 eb46 73       		.byte	0x73
 27148 eb47 00       		.sleb128 0
 27149 eb48 AA01     		.uleb128 0xaa
 27150 eb4a 01       		.uleb128 0x1
 27151 eb4b 54       		.byte	0x54
 27152 eb4c 09       		.uleb128 0x9
 27153 eb4d 03       		.byte	0x3
 27154 eb4e 00000000 		.quad	_ZZ4mainENUlfE0_4_FUNEf
 27154      00000000 
 27155 eb56 00       		.byte	0
 27156 eb57 C401     		.uleb128 0xc4
 27157 eb59 00000000 		.quad	.LVL88
 27157      00000000 
 27158 eb61 37EF0000 		.long	0xef37
 27159 eb65 7FEB0000 		.long	0xeb7f
 27160 eb69 AA01     		.uleb128 0xaa
 27161 eb6b 01       		.uleb128 0x1
 27162 eb6c 55       		.byte	0x55
 27163 eb6d 02       		.uleb128 0x2
 27164 eb6e 73       		.byte	0x73
 27165 eb6f 00       		.sleb128 0
 27166 eb70 AA01     		.uleb128 0xaa
 27167 eb72 01       		.uleb128 0x1
 27168 eb73 54       		.byte	0x54
 27169 eb74 09       		.uleb128 0x9
 27170 eb75 03       		.byte	0x3
 27171 eb76 00000000 		.quad	_ZZ4mainENUlfE1_4_FUNEf
 27171      00000000 
 27172 eb7e 00       		.byte	0
 27173 eb7f A901     		.uleb128 0xa9
 27174 eb81 00000000 		.quad	.LVL90
 27174      00000000 
 27175 eb89 51EF0000 		.long	0xef51
 27176 eb8d AA01     		.uleb128 0xaa
 27177 eb8f 01       		.uleb128 0x1
 27178 eb90 55       		.byte	0x55
 27179 eb91 02       		.uleb128 0x2
 27180 eb92 7C       		.byte	0x7c
 27181 eb93 00       		.sleb128 0
 27182 eb94 AA01     		.uleb128 0xaa
 27183 eb96 01       		.uleb128 0x1
 27184 eb97 54       		.byte	0x54
 27185 eb98 02       		.uleb128 0x2
 27186 eb99 7C       		.byte	0x7c
 27187 eb9a 00       		.sleb128 0
 27188 eb9b AA01     		.uleb128 0xaa
 27189 eb9d 01       		.uleb128 0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 742


 27190 eb9e 51       		.byte	0x51
 27191 eb9f 05       		.uleb128 0x5
 27192 eba0 91       		.byte	0x91
 27193 eba1 B8AF7F   		.sleb128 -10312
 27194 eba4 06       		.byte	0x6
 27195 eba5 00       		.byte	0
 27196 eba6 00       		.byte	0
 27197 eba7 C401     		.uleb128 0xc4
 27198 eba9 00000000 		.quad	.LVL222
 27198      00000000 
 27199 ebb1 ABED0000 		.long	0xedab
 27200 ebb5 D1EB0000 		.long	0xebd1
 27201 ebb9 AA01     		.uleb128 0xaa
 27202 ebbb 01       		.uleb128 0x1
 27203 ebbc 55       		.byte	0x55
 27204 ebbd 05       		.uleb128 0x5
 27205 ebbe 91       		.byte	0x91
 27206 ebbf B8AF7F   		.sleb128 -10312
 27207 ebc2 06       		.byte	0x6
 27208 ebc3 AA01     		.uleb128 0xaa
 27209 ebc5 01       		.uleb128 0x1
 27210 ebc6 54       		.byte	0x54
 27211 ebc7 01       		.uleb128 0x1
 27212 ebc8 30       		.byte	0x30
 27213 ebc9 AA01     		.uleb128 0xaa
 27214 ebcb 01       		.uleb128 0x1
 27215 ebcc 51       		.byte	0x51
 27216 ebcd 02       		.uleb128 0x2
 27217 ebce 76       		.byte	0x76
 27218 ebcf 00       		.sleb128 0
 27219 ebd0 00       		.byte	0
 27220 ebd1 A901     		.uleb128 0xa9
 27221 ebd3 00000000 		.quad	.LVL270
 27221      00000000 
 27222 ebdb 70EF0000 		.long	0xef70
 27223 ebdf AA01     		.uleb128 0xaa
 27224 ebe1 01       		.uleb128 0x1
 27225 ebe2 55       		.byte	0x55
 27226 ebe3 02       		.uleb128 0x2
 27227 ebe4 73       		.byte	0x73
 27228 ebe5 00       		.sleb128 0
 27229 ebe6 00       		.byte	0
 27230 ebe7 00       		.byte	0
 27231 ebe8 0B       		.uleb128 0xb
 27232 ebe9 26840000 		.long	0x8426
 27233 ebed 71       		.uleb128 0x71
 27234 ebee FDEB0000 		.long	0xebfd
 27235 ebf2 FDEB0000 		.long	0xebfd
 27236 ebf6 72       		.uleb128 0x72
 27237 ebf7 C1840000 		.long	0x84c1
 27238 ebfb 04       		.byte	0x4
 27239 ebfc 00       		.byte	0
 27240 ebfd 69       		.uleb128 0x69
 27241 ebfe 08       		.byte	0x8
 27242 ebff C09C0000 		.long	0x9cc0
 27243 ec03 0B       		.uleb128 0xb
 27244 ec04 979E0000 		.long	0x9e97
GAS LISTING /tmp/ccKUqHDa.s 			page 743


 27245 ec08 79       		.uleb128 0x79
 27246 ec09 08       		.byte	0x8
 27247 ec0a EDEB0000 		.long	0xebed
 27248 ec0e 69       		.uleb128 0x69
 27249 ec0f 08       		.byte	0x8
 27250 ec10 FDEB0000 		.long	0xebfd
 27251 ec14 CC01     		.uleb128 0xcc
 27252 ec16 00000000 		.long	.LASF1490
 27253 ec1a 00000000 		.quad	.LFB5938
 27253      00000000 
 27254 ec22 2E000000 		.quad	.LFE5938-.LFB5938
 27254      00000000 
 27255 ec2a 01       		.uleb128 0x1
 27256 ec2b 9C       		.byte	0x9c
 27257 ec2c 93EC0000 		.long	0xec93
 27258 ec30 A001     		.uleb128 0xa0
 27259 ec32 96BC0000 		.long	0xbc96
 27260 ec36 00000000 		.quad	.LBB2294
 27260      00000000 
 27261 ec3e 00000000 		.long	.Ldebug_ranges0+0xbd0
 27262 ec42 01       		.byte	0x1
 27263 ec43 85       		.byte	0x85
 27264 ec44 C201     		.uleb128 0xc2
 27265 ec46 A1BC0000 		.long	0xbca1
 27266 ec4a 01       		.byte	0x1
 27267 ec4b CD01     		.uleb128 0xcd
 27268 ec4d ADBC0000 		.long	0xbcad
 27269 ec51 FFFF     		.value	0xffff
 27270 ec53 C701     		.uleb128 0xc7
 27271 ec55 00000000 		.quad	.LVL296
 27271      00000000 
 27272 ec5d 70EC0000 		.long	0xec70
 27273 ec61 AA01     		.uleb128 0xaa
 27274 ec63 01       		.uleb128 0x1
 27275 ec64 55       		.byte	0x55
 27276 ec65 09       		.uleb128 0x9
 27277 ec66 03       		.byte	0x3
 27278 ec67 00000000 		.quad	_ZStL8__ioinit
 27278      00000000 
 27279 ec6f 00       		.byte	0
 27280 ec70 CE01     		.uleb128 0xce
 27281 ec72 00000000 		.quad	.LVL297
 27281      00000000 
 27282 ec7a 84EF0000 		.long	0xef84
 27283 ec7e AA01     		.uleb128 0xaa
 27284 ec80 01       		.uleb128 0x1
 27285 ec81 54       		.byte	0x54
 27286 ec82 09       		.uleb128 0x9
 27287 ec83 03       		.byte	0x3
 27288 ec84 00000000 		.quad	_ZStL8__ioinit
 27288      00000000 
 27289 ec8c CF01     		.uleb128 0xcf
 27290 ec8e 01       		.uleb128 0x1
 27291 ec8f 51       		.byte	0x51
 27292 ec90 00       		.byte	0
 27293 ec91 00       		.byte	0
 27294 ec92 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 744


 27295 ec93 D001     		.uleb128 0xd0
 27296 ec95 00000000 		.long	.LASF1492
 27297 ec99 39       		.byte	0x39
 27298 ec9a A5       		.byte	0xa5
 27299 ec9b E0950000 		.long	0x95e0
 27300 ec9f D001     		.uleb128 0xd0
 27301 eca1 00000000 		.long	.LASF1493
 27302 eca5 39       		.byte	0x39
 27303 eca6 A6       		.byte	0xa6
 27304 eca7 E0950000 		.long	0x95e0
 27305 ecab D101     		.uleb128 0xd1
 27306 ecad 00000000 		.long	.LASF1494
 27307 ecb1 43       		.byte	0x43
 27308 ecb2 0C01     		.value	0x10c
 27309 ecb4 B8EC0000 		.long	0xecb8
 27310 ecb8 0B       		.uleb128 0xb
 27311 ecb9 EA9A0000 		.long	0x9aea
 27312 ecbd D101     		.uleb128 0xd1
 27313 ecbf 00000000 		.long	.LASF1495
 27314 ecc3 43       		.byte	0x43
 27315 ecc4 2E01     		.value	0x12e
 27316 ecc6 CAEC0000 		.long	0xecca
 27317 ecca 0B       		.uleb128 0xb
 27318 eccb 869B0000 		.long	0x9b86
 27319 eccf D001     		.uleb128 0xd0
 27320 ecd1 00000000 		.long	.LASF1496
 27321 ecd5 46       		.byte	0x46
 27322 ecd6 23       		.byte	0x23
 27323 ecd7 DBEC0000 		.long	0xecdb
 27324 ecdb 69       		.uleb128 0x69
 27325 ecdc 08       		.byte	0x8
 27326 ecdd E1EC0000 		.long	0xece1
 27327 ece1 0B       		.uleb128 0xb
 27328 ece2 F09C0000 		.long	0x9cf0
 27329 ece6 D201     		.uleb128 0xd2
 27330 ece8 00000000 		.long	.LASF1497
 27331 ecec 16850000 		.long	0x8516
 27332 ecf0 D301     		.uleb128 0xd3
 27333 ecf2 0C710000 		.long	0x710c
 27334 ecf6 D401     		.uleb128 0xd4
 27335 ecf8 5B710000 		.long	0x715b
 27336 ecfc 09       		.uleb128 0x9
 27337 ecfd 03       		.byte	0x3
 27338 ecfe 00000000 		.quad	_ZStL8__ioinit
 27338      00000000 
 27339 ed06 D501     		.uleb128 0xd5
 27340 ed08 4E000000 		.long	0x4e
 27341 ed0c 00000000 		.long	.LASF1498
 27342 ed10 D501     		.uleb128 0xd5
 27343 ed12 A6000000 		.long	0xa6
 27344 ed16 00000000 		.long	.LASF1499
 27345 ed1a D501     		.uleb128 0xd5
 27346 ed1c 67720000 		.long	0x7267
 27347 ed20 00000000 		.long	.LASF1500
 27348 ed24 D501     		.uleb128 0xd5
 27349 ed26 72720000 		.long	0x7272
 27350 ed2a 00000000 		.long	.LASF1501
GAS LISTING /tmp/ccKUqHDa.s 			page 745


 27351 ed2e D501     		.uleb128 0xd5
 27352 ed30 14740000 		.long	0x7414
 27353 ed34 00000000 		.long	.LASF1502
 27354 ed38 D501     		.uleb128 0xd5
 27355 ed3a 1F740000 		.long	0x741f
 27356 ed3e 00000000 		.long	.LASF1503
 27357 ed42 D501     		.uleb128 0xd5
 27358 ed44 B5780000 		.long	0x78b5
 27359 ed48 00000000 		.long	.LASF1504
 27360 ed4c D501     		.uleb128 0xd5
 27361 ed4e F7780000 		.long	0x78f7
 27362 ed52 00000000 		.long	.LASF1505
 27363 ed56 D501     		.uleb128 0xd5
 27364 ed58 39790000 		.long	0x7939
 27365 ed5c 00000000 		.long	.LASF1506
 27366 ed60 D501     		.uleb128 0xd5
 27367 ed62 CB260000 		.long	0x26cb
 27368 ed66 00000000 		.long	.LASF1507
 27369 ed6a D501     		.uleb128 0xd5
 27370 ed6c 7B790000 		.long	0x797b
 27371 ed70 00000000 		.long	.LASF1508
 27372 ed74 D501     		.uleb128 0xd5
 27373 ed76 A7790000 		.long	0x79a7
 27374 ed7a 00000000 		.long	.LASF1509
 27375 ed7e D501     		.uleb128 0xd5
 27376 ed80 DE790000 		.long	0x79de
 27377 ed84 00000000 		.long	.LASF1510
 27378 ed88 D501     		.uleb128 0xd5
 27379 ed8a E9790000 		.long	0x79e9
 27380 ed8e 00000000 		.long	.LASF1511
 27381 ed92 3E       		.uleb128 0x3e
 27382 ed93 00000000 		.long	.LASF1425
 27383 ed97 15       		.byte	0x15
 27384 ed98 80       		.byte	0x80
 27385 ed99 00000000 		.long	.LASF1512
 27386 ed9d 16850000 		.long	0x8516
 27387 eda1 ABED0000 		.long	0xedab
 27388 eda5 13       		.uleb128 0x13
 27389 eda6 DB070000 		.long	0x7db
 27390 edaa 00       		.byte	0
 27391 edab D601     		.uleb128 0xd6
 27392 edad 00000000 		.long	.LASF1513
 27393 edb1 16850000 		.long	0x8516
 27394 edb5 C9ED0000 		.long	0xedc9
 27395 edb9 13       		.uleb128 0x13
 27396 edba 16850000 		.long	0x8516
 27397 edbe 13       		.uleb128 0x13
 27398 edbf E5710000 		.long	0x71e5
 27399 edc3 13       		.uleb128 0x13
 27400 edc4 C1840000 		.long	0x84c1
 27401 edc8 00       		.byte	0
 27402 edc9 42       		.uleb128 0x42
 27403 edca 00000000 		.long	.LASF1514
 27404 edce 47       		.byte	0x47
 27405 edcf 9D       		.byte	0x9d
 27406 edd0 29000000 		.long	0x29
 27407 edd4 DEED0000 		.long	0xedde
GAS LISTING /tmp/ccKUqHDa.s 			page 746


 27408 edd8 13       		.uleb128 0x13
 27409 edd9 29000000 		.long	0x29
 27410 eddd 00       		.byte	0
 27411 edde 1B       		.uleb128 0x1b
 27412 eddf 00000000 		.long	.LASF1515
 27413 ede3 44       		.byte	0x44
 27414 ede4 51       		.byte	0x51
 27415 ede5 FEED0000 		.long	0xedfe
 27416 ede9 13       		.uleb128 0x13
 27417 edea 919E0000 		.long	0x9e91
 27418 edee 13       		.uleb128 0x13
 27419 edef C9710000 		.long	0x71c9
 27420 edf3 13       		.uleb128 0x13
 27421 edf4 C9710000 		.long	0x71c9
 27422 edf8 13       		.uleb128 0x13
 27423 edf9 FEED0000 		.long	0xedfe
 27424 edfd 00       		.byte	0
 27425 edfe 69       		.uleb128 0x69
 27426 edff 08       		.byte	0x8
 27427 ee00 04EE0000 		.long	0xee04
 27428 ee04 0B       		.uleb128 0xb
 27429 ee05 C09C0000 		.long	0x9cc0
 27430 ee09 0F       		.uleb128 0xf
 27431 ee0a 00000000 		.long	.LASF1516
 27432 ee0e 43       		.byte	0x43
 27433 ee0f C4       		.byte	0xc4
 27434 ee10 44EE0000 		.long	0xee44
 27435 ee14 D701     		.uleb128 0xd7
 27436 ee16 00000000 		.long	.LASF1517
 27437 ee1a 43       		.byte	0x43
 27438 ee1b E9       		.byte	0xe9
 27439 ee1c 00000000 		.long	.LASF1518
 27440 ee20 C9710000 		.long	0x71c9
 27441 ee24 13       		.uleb128 0x13
 27442 ee25 D5980000 		.long	0x98d5
 27443 ee29 13       		.uleb128 0x13
 27444 ee2a 579E0000 		.long	0x9e57
 27445 ee2e 13       		.uleb128 0x13
 27446 ee2f C9710000 		.long	0x71c9
 27447 ee33 13       		.uleb128 0x13
 27448 ee34 C9710000 		.long	0x71c9
 27449 ee38 13       		.uleb128 0x13
 27450 ee39 DF9A0000 		.long	0x9adf
 27451 ee3d 13       		.uleb128 0x13
 27452 ee3e C9710000 		.long	0x71c9
 27453 ee42 00       		.byte	0
 27454 ee43 00       		.byte	0
 27455 ee44 3E       		.uleb128 0x3e
 27456 ee45 00000000 		.long	.LASF1519
 27457 ee49 43       		.byte	0x43
 27458 ee4a F4       		.byte	0xf4
 27459 ee4b 00000000 		.long	.LASF1520
 27460 ee4f CD840000 		.long	0x84cd
 27461 ee53 5DEE0000 		.long	0xee5d
 27462 ee57 13       		.uleb128 0x13
 27463 ee58 C9710000 		.long	0x71c9
 27464 ee5c 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 747


 27465 ee5d 1F       		.uleb128 0x1f
 27466 ee5e 00000000 		.long	.LASF1426
 27467 ee62 15       		.byte	0x15
 27468 ee63 84       		.byte	0x84
 27469 ee64 00000000 		.long	.LASF1521
 27470 ee68 72EE0000 		.long	0xee72
 27471 ee6c 13       		.uleb128 0x13
 27472 ee6d 16850000 		.long	0x8516
 27473 ee71 00       		.byte	0
 27474 ee72 42       		.uleb128 0x42
 27475 ee73 00000000 		.long	.LASF1522
 27476 ee77 44       		.byte	0x44
 27477 ee78 45       		.byte	0x45
 27478 ee79 919E0000 		.long	0x9e91
 27479 ee7d 8CEE0000 		.long	0xee8c
 27480 ee81 13       		.uleb128 0x13
 27481 ee82 C9710000 		.long	0x71c9
 27482 ee86 13       		.uleb128 0x13
 27483 ee87 C9710000 		.long	0x71c9
 27484 ee8b 00       		.byte	0
 27485 ee8c 42       		.uleb128 0x42
 27486 ee8d 00000000 		.long	.LASF1523
 27487 ee91 44       		.byte	0x44
 27488 ee92 73       		.byte	0x73
 27489 ee93 5E9B0000 		.long	0x9b5e
 27490 ee97 ABEE0000 		.long	0xeeab
 27491 ee9b 13       		.uleb128 0x13
 27492 ee9c ABEE0000 		.long	0xeeab
 27493 eea0 13       		.uleb128 0x13
 27494 eea1 DBEC0000 		.long	0xecdb
 27495 eea5 13       		.uleb128 0x13
 27496 eea6 5E9B0000 		.long	0x9b5e
 27497 eeaa 00       		.byte	0
 27498 eeab 69       		.uleb128 0x69
 27499 eeac 08       		.byte	0x8
 27500 eead B1EE0000 		.long	0xeeb1
 27501 eeb1 0B       		.uleb128 0xb
 27502 eeb2 889C0000 		.long	0x9c88
 27503 eeb6 1B       		.uleb128 0x1b
 27504 eeb7 00000000 		.long	.LASF1524
 27505 eebb 44       		.byte	0x44
 27506 eebc 47       		.byte	0x47
 27507 eebd C7EE0000 		.long	0xeec7
 27508 eec1 13       		.uleb128 0x13
 27509 eec2 919E0000 		.long	0x9e91
 27510 eec6 00       		.byte	0
 27511 eec7 D801     		.uleb128 0xd8
 27512 eec9 00000000 		.long	.LASF1525
 27513 eecd 00000000 		.long	.LASF1527
 27514 eed1 29000000 		.long	0x29
 27515 eed5 DFEE0000 		.long	0xeedf
 27516 eed9 13       		.uleb128 0x13
 27517 eeda 29000000 		.long	0x29
 27518 eede 00       		.byte	0
 27519 eedf D801     		.uleb128 0xd8
 27520 eee1 00000000 		.long	.LASF1526
 27521 eee5 00000000 		.long	.LASF1514
GAS LISTING /tmp/ccKUqHDa.s 			page 748


 27522 eee9 29000000 		.long	0x29
 27523 eeed F7EE0000 		.long	0xeef7
 27524 eef1 13       		.uleb128 0x13
 27525 eef2 29000000 		.long	0x29
 27526 eef6 00       		.byte	0
 27527 eef7 42       		.uleb128 0x42
 27528 eef8 00000000 		.long	.LASF1528
 27529 eefc 44       		.byte	0x44
 27530 eefd 69       		.byte	0x69
 27531 eefe 5E9B0000 		.long	0x9b5e
 27532 ef02 11EF0000 		.long	0xef11
 27533 ef06 13       		.uleb128 0x13
 27534 ef07 ABEE0000 		.long	0xeeab
 27535 ef0b 13       		.uleb128 0x13
 27536 ef0c 5E9B0000 		.long	0x9b5e
 27537 ef10 00       		.byte	0
 27538 ef11 1B       		.uleb128 0x1b
 27539 ef12 00000000 		.long	.LASF1529
 27540 ef16 44       		.byte	0x44
 27541 ef17 A3       		.byte	0xa3
 27542 ef18 22EF0000 		.long	0xef22
 27543 ef1c 13       		.uleb128 0x13
 27544 ef1d FDEB0000 		.long	0xebfd
 27545 ef21 00       		.byte	0
 27546 ef22 42       		.uleb128 0x42
 27547 ef23 00000000 		.long	.LASF1530
 27548 ef27 44       		.byte	0x44
 27549 ef28 93       		.byte	0x93
 27550 ef29 FDEB0000 		.long	0xebfd
 27551 ef2d 37EF0000 		.long	0xef37
 27552 ef31 13       		.uleb128 0x13
 27553 ef32 C9710000 		.long	0x71c9
 27554 ef36 00       		.byte	0
 27555 ef37 42       		.uleb128 0x42
 27556 ef38 00000000 		.long	.LASF1531
 27557 ef3c 44       		.byte	0x44
 27558 ef3d A0       		.byte	0xa0
 27559 ef3e FDEB0000 		.long	0xebfd
 27560 ef42 51EF0000 		.long	0xef51
 27561 ef46 13       		.uleb128 0x13
 27562 ef47 C9710000 		.long	0x71c9
 27563 ef4b 13       		.uleb128 0x13
 27564 ef4c 24A00000 		.long	0xa024
 27565 ef50 00       		.byte	0
 27566 ef51 42       		.uleb128 0x42
 27567 ef52 00000000 		.long	.LASF1532
 27568 ef56 44       		.byte	0x44
 27569 ef57 8B       		.byte	0x8b
 27570 ef58 FDEB0000 		.long	0xebfd
 27571 ef5c 70EF0000 		.long	0xef70
 27572 ef60 13       		.uleb128 0x13
 27573 ef61 C9710000 		.long	0x71c9
 27574 ef65 13       		.uleb128 0x13
 27575 ef66 C9710000 		.long	0x71c9
 27576 ef6a 13       		.uleb128 0x13
 27577 ef6b 829C0000 		.long	0x9c82
 27578 ef6f 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 749


 27579 ef70 D901     		.uleb128 0xd9
 27580 ef72 00000000 		.long	.LASF1533
 27581 ef76 00000000 		.long	.LASF1547
 27582 ef7a 84EF0000 		.long	0xef84
 27583 ef7e 13       		.uleb128 0x13
 27584 ef7f 16850000 		.long	0x8516
 27585 ef83 00       		.byte	0
 27586 ef84 DA01     		.uleb128 0xda
 27587 ef86 00000000 		.long	.LASF1534
 27588 ef8a E5710000 		.long	0x71e5
 27589 ef8e 13       		.uleb128 0x13
 27590 ef8f 60950000 		.long	0x9560
 27591 ef93 13       		.uleb128 0x13
 27592 ef94 16850000 		.long	0x8516
 27593 ef98 13       		.uleb128 0x13
 27594 ef99 16850000 		.long	0x8516
 27595 ef9d 00       		.byte	0
 27596 ef9e 00       		.byte	0
 27597              		.section	.debug_abbrev,"",@progbits
 27598              	.Ldebug_abbrev0:
 27599 0000 01       		.uleb128 0x1
 27600 0001 11       		.uleb128 0x11
 27601 0002 01       		.byte	0x1
 27602 0003 25       		.uleb128 0x25
 27603 0004 0E       		.uleb128 0xe
 27604 0005 13       		.uleb128 0x13
 27605 0006 0B       		.uleb128 0xb
 27606 0007 03       		.uleb128 0x3
 27607 0008 0E       		.uleb128 0xe
 27608 0009 1B       		.uleb128 0x1b
 27609 000a 0E       		.uleb128 0xe
 27610 000b 55       		.uleb128 0x55
 27611 000c 17       		.uleb128 0x17
 27612 000d 11       		.uleb128 0x11
 27613 000e 01       		.uleb128 0x1
 27614 000f 10       		.uleb128 0x10
 27615 0010 17       		.uleb128 0x17
 27616 0011 00       		.byte	0
 27617 0012 00       		.byte	0
 27618 0013 02       		.uleb128 0x2
 27619 0014 24       		.uleb128 0x24
 27620 0015 00       		.byte	0
 27621 0016 0B       		.uleb128 0xb
 27622 0017 0B       		.uleb128 0xb
 27623 0018 3E       		.uleb128 0x3e
 27624 0019 0B       		.uleb128 0xb
 27625 001a 03       		.uleb128 0x3
 27626 001b 0E       		.uleb128 0xe
 27627 001c 00       		.byte	0
 27628 001d 00       		.byte	0
 27629 001e 03       		.uleb128 0x3
 27630 001f 39       		.uleb128 0x39
 27631 0020 01       		.byte	0x1
 27632 0021 03       		.uleb128 0x3
 27633 0022 08       		.uleb128 0x8
 27634 0023 3A       		.uleb128 0x3a
 27635 0024 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 750


 27636 0025 3B       		.uleb128 0x3b
 27637 0026 0B       		.uleb128 0xb
 27638 0027 01       		.uleb128 0x1
 27639 0028 13       		.uleb128 0x13
 27640 0029 00       		.byte	0
 27641 002a 00       		.byte	0
 27642 002b 04       		.uleb128 0x4
 27643 002c 13       		.uleb128 0x13
 27644 002d 01       		.byte	0x1
 27645 002e 03       		.uleb128 0x3
 27646 002f 0E       		.uleb128 0xe
 27647 0030 0B       		.uleb128 0xb
 27648 0031 0B       		.uleb128 0xb
 27649 0032 3A       		.uleb128 0x3a
 27650 0033 0B       		.uleb128 0xb
 27651 0034 3B       		.uleb128 0x3b
 27652 0035 0B       		.uleb128 0xb
 27653 0036 01       		.uleb128 0x1
 27654 0037 13       		.uleb128 0x13
 27655 0038 00       		.byte	0
 27656 0039 00       		.byte	0
 27657 003a 05       		.uleb128 0x5
 27658 003b 0D       		.uleb128 0xd
 27659 003c 00       		.byte	0
 27660 003d 03       		.uleb128 0x3
 27661 003e 0E       		.uleb128 0xe
 27662 003f 3A       		.uleb128 0x3a
 27663 0040 0B       		.uleb128 0xb
 27664 0041 3B       		.uleb128 0x3b
 27665 0042 0B       		.uleb128 0xb
 27666 0043 49       		.uleb128 0x49
 27667 0044 13       		.uleb128 0x13
 27668 0045 3F       		.uleb128 0x3f
 27669 0046 19       		.uleb128 0x19
 27670 0047 3C       		.uleb128 0x3c
 27671 0048 19       		.uleb128 0x19
 27672 0049 00       		.byte	0
 27673 004a 00       		.byte	0
 27674 004b 06       		.uleb128 0x6
 27675 004c 16       		.uleb128 0x16
 27676 004d 00       		.byte	0
 27677 004e 03       		.uleb128 0x3
 27678 004f 0E       		.uleb128 0xe
 27679 0050 3A       		.uleb128 0x3a
 27680 0051 0B       		.uleb128 0xb
 27681 0052 3B       		.uleb128 0x3b
 27682 0053 0B       		.uleb128 0xb
 27683 0054 49       		.uleb128 0x49
 27684 0055 13       		.uleb128 0x13
 27685 0056 00       		.byte	0
 27686 0057 00       		.byte	0
 27687 0058 07       		.uleb128 0x7
 27688 0059 2E       		.uleb128 0x2e
 27689 005a 01       		.byte	0x1
 27690 005b 3F       		.uleb128 0x3f
 27691 005c 19       		.uleb128 0x19
 27692 005d 03       		.uleb128 0x3
GAS LISTING /tmp/ccKUqHDa.s 			page 751


 27693 005e 0E       		.uleb128 0xe
 27694 005f 3A       		.uleb128 0x3a
 27695 0060 0B       		.uleb128 0xb
 27696 0061 3B       		.uleb128 0x3b
 27697 0062 0B       		.uleb128 0xb
 27698 0063 6E       		.uleb128 0x6e
 27699 0064 0E       		.uleb128 0xe
 27700 0065 49       		.uleb128 0x49
 27701 0066 13       		.uleb128 0x13
 27702 0067 3C       		.uleb128 0x3c
 27703 0068 19       		.uleb128 0x19
 27704 0069 64       		.uleb128 0x64
 27705 006a 13       		.uleb128 0x13
 27706 006b 01       		.uleb128 0x1
 27707 006c 13       		.uleb128 0x13
 27708 006d 00       		.byte	0
 27709 006e 00       		.byte	0
 27710 006f 08       		.uleb128 0x8
 27711 0070 05       		.uleb128 0x5
 27712 0071 00       		.byte	0
 27713 0072 49       		.uleb128 0x49
 27714 0073 13       		.uleb128 0x13
 27715 0074 34       		.uleb128 0x34
 27716 0075 19       		.uleb128 0x19
 27717 0076 00       		.byte	0
 27718 0077 00       		.byte	0
 27719 0078 09       		.uleb128 0x9
 27720 0079 2F       		.uleb128 0x2f
 27721 007a 00       		.byte	0
 27722 007b 03       		.uleb128 0x3
 27723 007c 08       		.uleb128 0x8
 27724 007d 49       		.uleb128 0x49
 27725 007e 13       		.uleb128 0x13
 27726 007f 00       		.byte	0
 27727 0080 00       		.byte	0
 27728 0081 0A       		.uleb128 0xa
 27729 0082 30       		.uleb128 0x30
 27730 0083 00       		.byte	0
 27731 0084 03       		.uleb128 0x3
 27732 0085 08       		.uleb128 0x8
 27733 0086 49       		.uleb128 0x49
 27734 0087 13       		.uleb128 0x13
 27735 0088 1C       		.uleb128 0x1c
 27736 0089 0B       		.uleb128 0xb
 27737 008a 00       		.byte	0
 27738 008b 00       		.byte	0
 27739 008c 0B       		.uleb128 0xb
 27740 008d 26       		.uleb128 0x26
 27741 008e 00       		.byte	0
 27742 008f 49       		.uleb128 0x49
 27743 0090 13       		.uleb128 0x13
 27744 0091 00       		.byte	0
 27745 0092 00       		.byte	0
 27746 0093 0C       		.uleb128 0xc
 27747 0094 13       		.uleb128 0x13
 27748 0095 00       		.byte	0
 27749 0096 03       		.uleb128 0x3
GAS LISTING /tmp/ccKUqHDa.s 			page 752


 27750 0097 0E       		.uleb128 0xe
 27751 0098 0B       		.uleb128 0xb
 27752 0099 0B       		.uleb128 0xb
 27753 009a 3A       		.uleb128 0x3a
 27754 009b 0B       		.uleb128 0xb
 27755 009c 3B       		.uleb128 0x3b
 27756 009d 0B       		.uleb128 0xb
 27757 009e 00       		.byte	0
 27758 009f 00       		.byte	0
 27759 00a0 0D       		.uleb128 0xd
 27760 00a1 39       		.uleb128 0x39
 27761 00a2 00       		.byte	0
 27762 00a3 03       		.uleb128 0x3
 27763 00a4 0E       		.uleb128 0xe
 27764 00a5 3A       		.uleb128 0x3a
 27765 00a6 0B       		.uleb128 0xb
 27766 00a7 3B       		.uleb128 0x3b
 27767 00a8 0B       		.uleb128 0xb
 27768 00a9 00       		.byte	0
 27769 00aa 00       		.byte	0
 27770 00ab 0E       		.uleb128 0xe
 27771 00ac 08       		.uleb128 0x8
 27772 00ad 00       		.byte	0
 27773 00ae 3A       		.uleb128 0x3a
 27774 00af 0B       		.uleb128 0xb
 27775 00b0 3B       		.uleb128 0x3b
 27776 00b1 0B       		.uleb128 0xb
 27777 00b2 18       		.uleb128 0x18
 27778 00b3 13       		.uleb128 0x13
 27779 00b4 00       		.byte	0
 27780 00b5 00       		.byte	0
 27781 00b6 0F       		.uleb128 0xf
 27782 00b7 39       		.uleb128 0x39
 27783 00b8 01       		.byte	0x1
 27784 00b9 03       		.uleb128 0x3
 27785 00ba 0E       		.uleb128 0xe
 27786 00bb 3A       		.uleb128 0x3a
 27787 00bc 0B       		.uleb128 0xb
 27788 00bd 3B       		.uleb128 0x3b
 27789 00be 0B       		.uleb128 0xb
 27790 00bf 01       		.uleb128 0x1
 27791 00c0 13       		.uleb128 0x13
 27792 00c1 00       		.byte	0
 27793 00c2 00       		.byte	0
 27794 00c3 10       		.uleb128 0x10
 27795 00c4 02       		.uleb128 0x2
 27796 00c5 01       		.byte	0x1
 27797 00c6 03       		.uleb128 0x3
 27798 00c7 0E       		.uleb128 0xe
 27799 00c8 0B       		.uleb128 0xb
 27800 00c9 0B       		.uleb128 0xb
 27801 00ca 3A       		.uleb128 0x3a
 27802 00cb 0B       		.uleb128 0xb
 27803 00cc 3B       		.uleb128 0x3b
 27804 00cd 0B       		.uleb128 0xb
 27805 00ce 01       		.uleb128 0x1
 27806 00cf 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 753


 27807 00d0 00       		.byte	0
 27808 00d1 00       		.byte	0
 27809 00d2 11       		.uleb128 0x11
 27810 00d3 0D       		.uleb128 0xd
 27811 00d4 00       		.byte	0
 27812 00d5 03       		.uleb128 0x3
 27813 00d6 0E       		.uleb128 0xe
 27814 00d7 3A       		.uleb128 0x3a
 27815 00d8 0B       		.uleb128 0xb
 27816 00d9 3B       		.uleb128 0x3b
 27817 00da 0B       		.uleb128 0xb
 27818 00db 49       		.uleb128 0x49
 27819 00dc 13       		.uleb128 0x13
 27820 00dd 38       		.uleb128 0x38
 27821 00de 0B       		.uleb128 0xb
 27822 00df 00       		.byte	0
 27823 00e0 00       		.byte	0
 27824 00e1 12       		.uleb128 0x12
 27825 00e2 2E       		.uleb128 0x2e
 27826 00e3 01       		.byte	0x1
 27827 00e4 3F       		.uleb128 0x3f
 27828 00e5 19       		.uleb128 0x19
 27829 00e6 03       		.uleb128 0x3
 27830 00e7 0E       		.uleb128 0xe
 27831 00e8 3A       		.uleb128 0x3a
 27832 00e9 0B       		.uleb128 0xb
 27833 00ea 3B       		.uleb128 0x3b
 27834 00eb 0B       		.uleb128 0xb
 27835 00ec 3C       		.uleb128 0x3c
 27836 00ed 19       		.uleb128 0x19
 27837 00ee 63       		.uleb128 0x63
 27838 00ef 19       		.uleb128 0x19
 27839 00f0 64       		.uleb128 0x64
 27840 00f1 13       		.uleb128 0x13
 27841 00f2 01       		.uleb128 0x1
 27842 00f3 13       		.uleb128 0x13
 27843 00f4 00       		.byte	0
 27844 00f5 00       		.byte	0
 27845 00f6 13       		.uleb128 0x13
 27846 00f7 05       		.uleb128 0x5
 27847 00f8 00       		.byte	0
 27848 00f9 49       		.uleb128 0x49
 27849 00fa 13       		.uleb128 0x13
 27850 00fb 00       		.byte	0
 27851 00fc 00       		.byte	0
 27852 00fd 14       		.uleb128 0x14
 27853 00fe 2E       		.uleb128 0x2e
 27854 00ff 01       		.byte	0x1
 27855 0100 3F       		.uleb128 0x3f
 27856 0101 19       		.uleb128 0x19
 27857 0102 03       		.uleb128 0x3
 27858 0103 0E       		.uleb128 0xe
 27859 0104 3A       		.uleb128 0x3a
 27860 0105 0B       		.uleb128 0xb
 27861 0106 3B       		.uleb128 0x3b
 27862 0107 0B       		.uleb128 0xb
 27863 0108 6E       		.uleb128 0x6e
GAS LISTING /tmp/ccKUqHDa.s 			page 754


 27864 0109 0E       		.uleb128 0xe
 27865 010a 3C       		.uleb128 0x3c
 27866 010b 19       		.uleb128 0x19
 27867 010c 64       		.uleb128 0x64
 27868 010d 13       		.uleb128 0x13
 27869 010e 01       		.uleb128 0x1
 27870 010f 13       		.uleb128 0x13
 27871 0110 00       		.byte	0
 27872 0111 00       		.byte	0
 27873 0112 15       		.uleb128 0x15
 27874 0113 2E       		.uleb128 0x2e
 27875 0114 01       		.byte	0x1
 27876 0115 3F       		.uleb128 0x3f
 27877 0116 19       		.uleb128 0x19
 27878 0117 03       		.uleb128 0x3
 27879 0118 0E       		.uleb128 0xe
 27880 0119 3A       		.uleb128 0x3a
 27881 011a 0B       		.uleb128 0xb
 27882 011b 3B       		.uleb128 0x3b
 27883 011c 0B       		.uleb128 0xb
 27884 011d 32       		.uleb128 0x32
 27885 011e 0B       		.uleb128 0xb
 27886 011f 3C       		.uleb128 0x3c
 27887 0120 19       		.uleb128 0x19
 27888 0121 64       		.uleb128 0x64
 27889 0122 13       		.uleb128 0x13
 27890 0123 01       		.uleb128 0x1
 27891 0124 13       		.uleb128 0x13
 27892 0125 00       		.byte	0
 27893 0126 00       		.byte	0
 27894 0127 16       		.uleb128 0x16
 27895 0128 2E       		.uleb128 0x2e
 27896 0129 01       		.byte	0x1
 27897 012a 3F       		.uleb128 0x3f
 27898 012b 19       		.uleb128 0x19
 27899 012c 03       		.uleb128 0x3
 27900 012d 0E       		.uleb128 0xe
 27901 012e 3A       		.uleb128 0x3a
 27902 012f 0B       		.uleb128 0xb
 27903 0130 3B       		.uleb128 0x3b
 27904 0131 0B       		.uleb128 0xb
 27905 0132 6E       		.uleb128 0x6e
 27906 0133 0E       		.uleb128 0xe
 27907 0134 49       		.uleb128 0x49
 27908 0135 13       		.uleb128 0x13
 27909 0136 32       		.uleb128 0x32
 27910 0137 0B       		.uleb128 0xb
 27911 0138 3C       		.uleb128 0x3c
 27912 0139 19       		.uleb128 0x19
 27913 013a 64       		.uleb128 0x64
 27914 013b 13       		.uleb128 0x13
 27915 013c 01       		.uleb128 0x1
 27916 013d 13       		.uleb128 0x13
 27917 013e 00       		.byte	0
 27918 013f 00       		.byte	0
 27919 0140 17       		.uleb128 0x17
 27920 0141 2E       		.uleb128 0x2e
GAS LISTING /tmp/ccKUqHDa.s 			page 755


 27921 0142 01       		.byte	0x1
 27922 0143 3F       		.uleb128 0x3f
 27923 0144 19       		.uleb128 0x19
 27924 0145 03       		.uleb128 0x3
 27925 0146 0E       		.uleb128 0xe
 27926 0147 3A       		.uleb128 0x3a
 27927 0148 0B       		.uleb128 0xb
 27928 0149 3B       		.uleb128 0x3b
 27929 014a 0B       		.uleb128 0xb
 27930 014b 6E       		.uleb128 0x6e
 27931 014c 0E       		.uleb128 0xe
 27932 014d 32       		.uleb128 0x32
 27933 014e 0B       		.uleb128 0xb
 27934 014f 3C       		.uleb128 0x3c
 27935 0150 19       		.uleb128 0x19
 27936 0151 64       		.uleb128 0x64
 27937 0152 13       		.uleb128 0x13
 27938 0153 01       		.uleb128 0x1
 27939 0154 13       		.uleb128 0x13
 27940 0155 00       		.byte	0
 27941 0156 00       		.byte	0
 27942 0157 18       		.uleb128 0x18
 27943 0158 2E       		.uleb128 0x2e
 27944 0159 01       		.byte	0x1
 27945 015a 3F       		.uleb128 0x3f
 27946 015b 19       		.uleb128 0x19
 27947 015c 03       		.uleb128 0x3
 27948 015d 0E       		.uleb128 0xe
 27949 015e 3A       		.uleb128 0x3a
 27950 015f 0B       		.uleb128 0xb
 27951 0160 3B       		.uleb128 0x3b
 27952 0161 0B       		.uleb128 0xb
 27953 0162 6E       		.uleb128 0x6e
 27954 0163 0E       		.uleb128 0xe
 27955 0164 49       		.uleb128 0x49
 27956 0165 13       		.uleb128 0x13
 27957 0166 32       		.uleb128 0x32
 27958 0167 0B       		.uleb128 0xb
 27959 0168 3C       		.uleb128 0x3c
 27960 0169 19       		.uleb128 0x19
 27961 016a 63       		.uleb128 0x63
 27962 016b 19       		.uleb128 0x19
 27963 016c 64       		.uleb128 0x64
 27964 016d 13       		.uleb128 0x13
 27965 016e 01       		.uleb128 0x1
 27966 016f 13       		.uleb128 0x13
 27967 0170 00       		.byte	0
 27968 0171 00       		.byte	0
 27969 0172 19       		.uleb128 0x19
 27970 0173 2E       		.uleb128 0x2e
 27971 0174 01       		.byte	0x1
 27972 0175 3F       		.uleb128 0x3f
 27973 0176 19       		.uleb128 0x19
 27974 0177 03       		.uleb128 0x3
 27975 0178 0E       		.uleb128 0xe
 27976 0179 3A       		.uleb128 0x3a
 27977 017a 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 756


 27978 017b 3B       		.uleb128 0x3b
 27979 017c 0B       		.uleb128 0xb
 27980 017d 6E       		.uleb128 0x6e
 27981 017e 0E       		.uleb128 0xe
 27982 017f 49       		.uleb128 0x49
 27983 0180 13       		.uleb128 0x13
 27984 0181 32       		.uleb128 0x32
 27985 0182 0B       		.uleb128 0xb
 27986 0183 3C       		.uleb128 0x3c
 27987 0184 19       		.uleb128 0x19
 27988 0185 64       		.uleb128 0x64
 27989 0186 13       		.uleb128 0x13
 27990 0187 00       		.byte	0
 27991 0188 00       		.byte	0
 27992 0189 1A       		.uleb128 0x1a
 27993 018a 02       		.uleb128 0x2
 27994 018b 00       		.byte	0
 27995 018c 03       		.uleb128 0x3
 27996 018d 0E       		.uleb128 0xe
 27997 018e 3C       		.uleb128 0x3c
 27998 018f 19       		.uleb128 0x19
 27999 0190 00       		.byte	0
 28000 0191 00       		.byte	0
 28001 0192 1B       		.uleb128 0x1b
 28002 0193 2E       		.uleb128 0x2e
 28003 0194 01       		.byte	0x1
 28004 0195 3F       		.uleb128 0x3f
 28005 0196 19       		.uleb128 0x19
 28006 0197 03       		.uleb128 0x3
 28007 0198 0E       		.uleb128 0xe
 28008 0199 3A       		.uleb128 0x3a
 28009 019a 0B       		.uleb128 0xb
 28010 019b 3B       		.uleb128 0x3b
 28011 019c 0B       		.uleb128 0xb
 28012 019d 3C       		.uleb128 0x3c
 28013 019e 19       		.uleb128 0x19
 28014 019f 01       		.uleb128 0x1
 28015 01a0 13       		.uleb128 0x13
 28016 01a1 00       		.byte	0
 28017 01a2 00       		.byte	0
 28018 01a3 1C       		.uleb128 0x1c
 28019 01a4 2F       		.uleb128 0x2f
 28020 01a5 00       		.byte	0
 28021 01a6 03       		.uleb128 0x3
 28022 01a7 0E       		.uleb128 0xe
 28023 01a8 49       		.uleb128 0x49
 28024 01a9 13       		.uleb128 0x13
 28025 01aa 00       		.byte	0
 28026 01ab 00       		.byte	0
 28027 01ac 1D       		.uleb128 0x1d
 28028 01ad 2E       		.uleb128 0x2e
 28029 01ae 01       		.byte	0x1
 28030 01af 3F       		.uleb128 0x3f
 28031 01b0 19       		.uleb128 0x19
 28032 01b1 03       		.uleb128 0x3
 28033 01b2 0E       		.uleb128 0xe
 28034 01b3 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccKUqHDa.s 			page 757


 28035 01b4 0B       		.uleb128 0xb
 28036 01b5 3B       		.uleb128 0x3b
 28037 01b6 0B       		.uleb128 0xb
 28038 01b7 3C       		.uleb128 0x3c
 28039 01b8 19       		.uleb128 0x19
 28040 01b9 00       		.byte	0
 28041 01ba 00       		.byte	0
 28042 01bb 1E       		.uleb128 0x1e
 28043 01bc 08       		.uleb128 0x8
 28044 01bd 00       		.byte	0
 28045 01be 3A       		.uleb128 0x3a
 28046 01bf 0B       		.uleb128 0xb
 28047 01c0 3B       		.uleb128 0x3b
 28048 01c1 05       		.uleb128 0x5
 28049 01c2 18       		.uleb128 0x18
 28050 01c3 13       		.uleb128 0x13
 28051 01c4 00       		.byte	0
 28052 01c5 00       		.byte	0
 28053 01c6 1F       		.uleb128 0x1f
 28054 01c7 2E       		.uleb128 0x2e
 28055 01c8 01       		.byte	0x1
 28056 01c9 3F       		.uleb128 0x3f
 28057 01ca 19       		.uleb128 0x19
 28058 01cb 03       		.uleb128 0x3
 28059 01cc 0E       		.uleb128 0xe
 28060 01cd 3A       		.uleb128 0x3a
 28061 01ce 0B       		.uleb128 0xb
 28062 01cf 3B       		.uleb128 0x3b
 28063 01d0 0B       		.uleb128 0xb
 28064 01d1 6E       		.uleb128 0x6e
 28065 01d2 0E       		.uleb128 0xe
 28066 01d3 3C       		.uleb128 0x3c
 28067 01d4 19       		.uleb128 0x19
 28068 01d5 01       		.uleb128 0x1
 28069 01d6 13       		.uleb128 0x13
 28070 01d7 00       		.byte	0
 28071 01d8 00       		.byte	0
 28072 01d9 20       		.uleb128 0x20
 28073 01da 2E       		.uleb128 0x2e
 28074 01db 01       		.byte	0x1
 28075 01dc 3F       		.uleb128 0x3f
 28076 01dd 19       		.uleb128 0x19
 28077 01de 03       		.uleb128 0x3
 28078 01df 08       		.uleb128 0x8
 28079 01e0 3A       		.uleb128 0x3a
 28080 01e1 0B       		.uleb128 0xb
 28081 01e2 3B       		.uleb128 0x3b
 28082 01e3 0B       		.uleb128 0xb
 28083 01e4 6E       		.uleb128 0x6e
 28084 01e5 0E       		.uleb128 0xe
 28085 01e6 49       		.uleb128 0x49
 28086 01e7 13       		.uleb128 0x13
 28087 01e8 3C       		.uleb128 0x3c
 28088 01e9 19       		.uleb128 0x19
 28089 01ea 01       		.uleb128 0x1
 28090 01eb 13       		.uleb128 0x13
 28091 01ec 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 758


 28092 01ed 00       		.byte	0
 28093 01ee 21       		.uleb128 0x21
 28094 01ef 2E       		.uleb128 0x2e
 28095 01f0 01       		.byte	0x1
 28096 01f1 3F       		.uleb128 0x3f
 28097 01f2 19       		.uleb128 0x19
 28098 01f3 03       		.uleb128 0x3
 28099 01f4 0E       		.uleb128 0xe
 28100 01f5 3A       		.uleb128 0x3a
 28101 01f6 0B       		.uleb128 0xb
 28102 01f7 3B       		.uleb128 0x3b
 28103 01f8 05       		.uleb128 0x5
 28104 01f9 6E       		.uleb128 0x6e
 28105 01fa 0E       		.uleb128 0xe
 28106 01fb 49       		.uleb128 0x49
 28107 01fc 13       		.uleb128 0x13
 28108 01fd 3C       		.uleb128 0x3c
 28109 01fe 19       		.uleb128 0x19
 28110 01ff 01       		.uleb128 0x1
 28111 0200 13       		.uleb128 0x13
 28112 0201 00       		.byte	0
 28113 0202 00       		.byte	0
 28114 0203 22       		.uleb128 0x22
 28115 0204 2E       		.uleb128 0x2e
 28116 0205 00       		.byte	0
 28117 0206 3F       		.uleb128 0x3f
 28118 0207 19       		.uleb128 0x19
 28119 0208 03       		.uleb128 0x3
 28120 0209 08       		.uleb128 0x8
 28121 020a 3A       		.uleb128 0x3a
 28122 020b 0B       		.uleb128 0xb
 28123 020c 3B       		.uleb128 0x3b
 28124 020d 05       		.uleb128 0x5
 28125 020e 6E       		.uleb128 0x6e
 28126 020f 0E       		.uleb128 0xe
 28127 0210 49       		.uleb128 0x49
 28128 0211 13       		.uleb128 0x13
 28129 0212 3C       		.uleb128 0x3c
 28130 0213 19       		.uleb128 0x19
 28131 0214 00       		.byte	0
 28132 0215 00       		.byte	0
 28133 0216 23       		.uleb128 0x23
 28134 0217 2E       		.uleb128 0x2e
 28135 0218 01       		.byte	0x1
 28136 0219 3F       		.uleb128 0x3f
 28137 021a 19       		.uleb128 0x19
 28138 021b 03       		.uleb128 0x3
 28139 021c 0E       		.uleb128 0xe
 28140 021d 3A       		.uleb128 0x3a
 28141 021e 0B       		.uleb128 0xb
 28142 021f 3B       		.uleb128 0x3b
 28143 0220 05       		.uleb128 0x5
 28144 0221 6E       		.uleb128 0x6e
 28145 0222 0E       		.uleb128 0xe
 28146 0223 49       		.uleb128 0x49
 28147 0224 13       		.uleb128 0x13
 28148 0225 3C       		.uleb128 0x3c
GAS LISTING /tmp/ccKUqHDa.s 			page 759


 28149 0226 19       		.uleb128 0x19
 28150 0227 00       		.byte	0
 28151 0228 00       		.byte	0
 28152 0229 24       		.uleb128 0x24
 28153 022a 1C       		.uleb128 0x1c
 28154 022b 00       		.byte	0
 28155 022c 49       		.uleb128 0x49
 28156 022d 13       		.uleb128 0x13
 28157 022e 38       		.uleb128 0x38
 28158 022f 0B       		.uleb128 0xb
 28159 0230 32       		.uleb128 0x32
 28160 0231 0B       		.uleb128 0xb
 28161 0232 00       		.byte	0
 28162 0233 00       		.byte	0
 28163 0234 25       		.uleb128 0x25
 28164 0235 16       		.uleb128 0x16
 28165 0236 00       		.byte	0
 28166 0237 03       		.uleb128 0x3
 28167 0238 0E       		.uleb128 0xe
 28168 0239 3A       		.uleb128 0x3a
 28169 023a 0B       		.uleb128 0xb
 28170 023b 3B       		.uleb128 0x3b
 28171 023c 0B       		.uleb128 0xb
 28172 023d 49       		.uleb128 0x49
 28173 023e 13       		.uleb128 0x13
 28174 023f 32       		.uleb128 0x32
 28175 0240 0B       		.uleb128 0xb
 28176 0241 00       		.byte	0
 28177 0242 00       		.byte	0
 28178 0243 26       		.uleb128 0x26
 28179 0244 2E       		.uleb128 0x2e
 28180 0245 01       		.byte	0x1
 28181 0246 3F       		.uleb128 0x3f
 28182 0247 19       		.uleb128 0x19
 28183 0248 03       		.uleb128 0x3
 28184 0249 0E       		.uleb128 0xe
 28185 024a 3A       		.uleb128 0x3a
 28186 024b 0B       		.uleb128 0xb
 28187 024c 3B       		.uleb128 0x3b
 28188 024d 0B       		.uleb128 0xb
 28189 024e 32       		.uleb128 0x32
 28190 024f 0B       		.uleb128 0xb
 28191 0250 3C       		.uleb128 0x3c
 28192 0251 19       		.uleb128 0x19
 28193 0252 64       		.uleb128 0x64
 28194 0253 13       		.uleb128 0x13
 28195 0254 00       		.byte	0
 28196 0255 00       		.byte	0
 28197 0256 27       		.uleb128 0x27
 28198 0257 13       		.uleb128 0x13
 28199 0258 01       		.byte	0x1
 28200 0259 03       		.uleb128 0x3
 28201 025a 0E       		.uleb128 0xe
 28202 025b 0B       		.uleb128 0xb
 28203 025c 0B       		.uleb128 0xb
 28204 025d 3A       		.uleb128 0x3a
 28205 025e 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 760


 28206 025f 3B       		.uleb128 0x3b
 28207 0260 05       		.uleb128 0x5
 28208 0261 01       		.uleb128 0x1
 28209 0262 13       		.uleb128 0x13
 28210 0263 00       		.byte	0
 28211 0264 00       		.byte	0
 28212 0265 28       		.uleb128 0x28
 28213 0266 1C       		.uleb128 0x1c
 28214 0267 00       		.byte	0
 28215 0268 49       		.uleb128 0x49
 28216 0269 13       		.uleb128 0x13
 28217 026a 38       		.uleb128 0x38
 28218 026b 0B       		.uleb128 0xb
 28219 026c 00       		.byte	0
 28220 026d 00       		.byte	0
 28221 026e 29       		.uleb128 0x29
 28222 026f 0D       		.uleb128 0xd
 28223 0270 00       		.byte	0
 28224 0271 03       		.uleb128 0x3
 28225 0272 0E       		.uleb128 0xe
 28226 0273 3A       		.uleb128 0x3a
 28227 0274 0B       		.uleb128 0xb
 28228 0275 3B       		.uleb128 0x3b
 28229 0276 05       		.uleb128 0x5
 28230 0277 49       		.uleb128 0x49
 28231 0278 13       		.uleb128 0x13
 28232 0279 38       		.uleb128 0x38
 28233 027a 0B       		.uleb128 0xb
 28234 027b 00       		.byte	0
 28235 027c 00       		.byte	0
 28236 027d 2A       		.uleb128 0x2a
 28237 027e 2E       		.uleb128 0x2e
 28238 027f 01       		.byte	0x1
 28239 0280 3F       		.uleb128 0x3f
 28240 0281 19       		.uleb128 0x19
 28241 0282 03       		.uleb128 0x3
 28242 0283 0E       		.uleb128 0xe
 28243 0284 3A       		.uleb128 0x3a
 28244 0285 0B       		.uleb128 0xb
 28245 0286 3B       		.uleb128 0x3b
 28246 0287 05       		.uleb128 0x5
 28247 0288 3C       		.uleb128 0x3c
 28248 0289 19       		.uleb128 0x19
 28249 028a 64       		.uleb128 0x64
 28250 028b 13       		.uleb128 0x13
 28251 028c 01       		.uleb128 0x1
 28252 028d 13       		.uleb128 0x13
 28253 028e 00       		.byte	0
 28254 028f 00       		.byte	0
 28255 0290 2B       		.uleb128 0x2b
 28256 0291 2E       		.uleb128 0x2e
 28257 0292 01       		.byte	0x1
 28258 0293 3F       		.uleb128 0x3f
 28259 0294 19       		.uleb128 0x19
 28260 0295 03       		.uleb128 0x3
 28261 0296 0E       		.uleb128 0xe
 28262 0297 34       		.uleb128 0x34
GAS LISTING /tmp/ccKUqHDa.s 			page 761


 28263 0298 19       		.uleb128 0x19
 28264 0299 3C       		.uleb128 0x3c
 28265 029a 19       		.uleb128 0x19
 28266 029b 64       		.uleb128 0x64
 28267 029c 13       		.uleb128 0x13
 28268 029d 00       		.byte	0
 28269 029e 00       		.byte	0
 28270 029f 2C       		.uleb128 0x2c
 28271 02a0 0D       		.uleb128 0xd
 28272 02a1 00       		.byte	0
 28273 02a2 03       		.uleb128 0x3
 28274 02a3 0E       		.uleb128 0xe
 28275 02a4 3A       		.uleb128 0x3a
 28276 02a5 0B       		.uleb128 0xb
 28277 02a6 3B       		.uleb128 0x3b
 28278 02a7 05       		.uleb128 0x5
 28279 02a8 49       		.uleb128 0x49
 28280 02a9 13       		.uleb128 0x13
 28281 02aa 3F       		.uleb128 0x3f
 28282 02ab 19       		.uleb128 0x19
 28283 02ac 32       		.uleb128 0x32
 28284 02ad 0B       		.uleb128 0xb
 28285 02ae 3C       		.uleb128 0x3c
 28286 02af 19       		.uleb128 0x19
 28287 02b0 00       		.byte	0
 28288 02b1 00       		.byte	0
 28289 02b2 2D       		.uleb128 0x2d
 28290 02b3 2E       		.uleb128 0x2e
 28291 02b4 00       		.byte	0
 28292 02b5 3F       		.uleb128 0x3f
 28293 02b6 19       		.uleb128 0x19
 28294 02b7 03       		.uleb128 0x3
 28295 02b8 0E       		.uleb128 0xe
 28296 02b9 3A       		.uleb128 0x3a
 28297 02ba 0B       		.uleb128 0xb
 28298 02bb 3B       		.uleb128 0x3b
 28299 02bc 0B       		.uleb128 0xb
 28300 02bd 6E       		.uleb128 0x6e
 28301 02be 0E       		.uleb128 0xe
 28302 02bf 49       		.uleb128 0x49
 28303 02c0 13       		.uleb128 0x13
 28304 02c1 3C       		.uleb128 0x3c
 28305 02c2 19       		.uleb128 0x19
 28306 02c3 00       		.byte	0
 28307 02c4 00       		.byte	0
 28308 02c5 2E       		.uleb128 0x2e
 28309 02c6 2E       		.uleb128 0x2e
 28310 02c7 01       		.byte	0x1
 28311 02c8 3F       		.uleb128 0x3f
 28312 02c9 19       		.uleb128 0x19
 28313 02ca 03       		.uleb128 0x3
 28314 02cb 0E       		.uleb128 0xe
 28315 02cc 3A       		.uleb128 0x3a
 28316 02cd 0B       		.uleb128 0xb
 28317 02ce 3B       		.uleb128 0x3b
 28318 02cf 05       		.uleb128 0x5
 28319 02d0 6E       		.uleb128 0x6e
GAS LISTING /tmp/ccKUqHDa.s 			page 762


 28320 02d1 0E       		.uleb128 0xe
 28321 02d2 3C       		.uleb128 0x3c
 28322 02d3 19       		.uleb128 0x19
 28323 02d4 64       		.uleb128 0x64
 28324 02d5 13       		.uleb128 0x13
 28325 02d6 01       		.uleb128 0x1
 28326 02d7 13       		.uleb128 0x13
 28327 02d8 00       		.byte	0
 28328 02d9 00       		.byte	0
 28329 02da 2F       		.uleb128 0x2f
 28330 02db 2E       		.uleb128 0x2e
 28331 02dc 01       		.byte	0x1
 28332 02dd 3F       		.uleb128 0x3f
 28333 02de 19       		.uleb128 0x19
 28334 02df 03       		.uleb128 0x3
 28335 02e0 0E       		.uleb128 0xe
 28336 02e1 3A       		.uleb128 0x3a
 28337 02e2 0B       		.uleb128 0xb
 28338 02e3 3B       		.uleb128 0x3b
 28339 02e4 05       		.uleb128 0x5
 28340 02e5 6E       		.uleb128 0x6e
 28341 02e6 0E       		.uleb128 0xe
 28342 02e7 49       		.uleb128 0x49
 28343 02e8 13       		.uleb128 0x13
 28344 02e9 3C       		.uleb128 0x3c
 28345 02ea 19       		.uleb128 0x19
 28346 02eb 64       		.uleb128 0x64
 28347 02ec 13       		.uleb128 0x13
 28348 02ed 01       		.uleb128 0x1
 28349 02ee 13       		.uleb128 0x13
 28350 02ef 00       		.byte	0
 28351 02f0 00       		.byte	0
 28352 02f1 30       		.uleb128 0x30
 28353 02f2 2E       		.uleb128 0x2e
 28354 02f3 01       		.byte	0x1
 28355 02f4 3F       		.uleb128 0x3f
 28356 02f5 19       		.uleb128 0x19
 28357 02f6 03       		.uleb128 0x3
 28358 02f7 0E       		.uleb128 0xe
 28359 02f8 3A       		.uleb128 0x3a
 28360 02f9 0B       		.uleb128 0xb
 28361 02fa 3B       		.uleb128 0x3b
 28362 02fb 05       		.uleb128 0x5
 28363 02fc 6E       		.uleb128 0x6e
 28364 02fd 0E       		.uleb128 0xe
 28365 02fe 49       		.uleb128 0x49
 28366 02ff 13       		.uleb128 0x13
 28367 0300 3C       		.uleb128 0x3c
 28368 0301 19       		.uleb128 0x19
 28369 0302 64       		.uleb128 0x64
 28370 0303 13       		.uleb128 0x13
 28371 0304 00       		.byte	0
 28372 0305 00       		.byte	0
 28373 0306 31       		.uleb128 0x31
 28374 0307 2E       		.uleb128 0x2e
 28375 0308 01       		.byte	0x1
 28376 0309 3F       		.uleb128 0x3f
GAS LISTING /tmp/ccKUqHDa.s 			page 763


 28377 030a 19       		.uleb128 0x19
 28378 030b 03       		.uleb128 0x3
 28379 030c 0E       		.uleb128 0xe
 28380 030d 3A       		.uleb128 0x3a
 28381 030e 0B       		.uleb128 0xb
 28382 030f 3B       		.uleb128 0x3b
 28383 0310 05       		.uleb128 0x5
 28384 0311 6E       		.uleb128 0x6e
 28385 0312 0E       		.uleb128 0xe
 28386 0313 3C       		.uleb128 0x3c
 28387 0314 19       		.uleb128 0x19
 28388 0315 01       		.uleb128 0x1
 28389 0316 13       		.uleb128 0x13
 28390 0317 00       		.byte	0
 28391 0318 00       		.byte	0
 28392 0319 32       		.uleb128 0x32
 28393 031a 2E       		.uleb128 0x2e
 28394 031b 00       		.byte	0
 28395 031c 3F       		.uleb128 0x3f
 28396 031d 19       		.uleb128 0x19
 28397 031e 03       		.uleb128 0x3
 28398 031f 0E       		.uleb128 0xe
 28399 0320 3A       		.uleb128 0x3a
 28400 0321 0B       		.uleb128 0xb
 28401 0322 3B       		.uleb128 0x3b
 28402 0323 05       		.uleb128 0x5
 28403 0324 6E       		.uleb128 0x6e
 28404 0325 0E       		.uleb128 0xe
 28405 0326 49       		.uleb128 0x49
 28406 0327 13       		.uleb128 0x13
 28407 0328 3C       		.uleb128 0x3c
 28408 0329 19       		.uleb128 0x19
 28409 032a 00       		.byte	0
 28410 032b 00       		.byte	0
 28411 032c 33       		.uleb128 0x33
 28412 032d 2E       		.uleb128 0x2e
 28413 032e 01       		.byte	0x1
 28414 032f 3F       		.uleb128 0x3f
 28415 0330 19       		.uleb128 0x19
 28416 0331 03       		.uleb128 0x3
 28417 0332 0E       		.uleb128 0xe
 28418 0333 3A       		.uleb128 0x3a
 28419 0334 0B       		.uleb128 0xb
 28420 0335 3B       		.uleb128 0x3b
 28421 0336 05       		.uleb128 0x5
 28422 0337 32       		.uleb128 0x32
 28423 0338 0B       		.uleb128 0xb
 28424 0339 3C       		.uleb128 0x3c
 28425 033a 19       		.uleb128 0x19
 28426 033b 64       		.uleb128 0x64
 28427 033c 13       		.uleb128 0x13
 28428 033d 01       		.uleb128 0x1
 28429 033e 13       		.uleb128 0x13
 28430 033f 00       		.byte	0
 28431 0340 00       		.byte	0
 28432 0341 34       		.uleb128 0x34
 28433 0342 2E       		.uleb128 0x2e
GAS LISTING /tmp/ccKUqHDa.s 			page 764


 28434 0343 01       		.byte	0x1
 28435 0344 3F       		.uleb128 0x3f
 28436 0345 19       		.uleb128 0x19
 28437 0346 03       		.uleb128 0x3
 28438 0347 0E       		.uleb128 0xe
 28439 0348 3A       		.uleb128 0x3a
 28440 0349 0B       		.uleb128 0xb
 28441 034a 3B       		.uleb128 0x3b
 28442 034b 05       		.uleb128 0x5
 28443 034c 32       		.uleb128 0x32
 28444 034d 0B       		.uleb128 0xb
 28445 034e 3C       		.uleb128 0x3c
 28446 034f 19       		.uleb128 0x19
 28447 0350 63       		.uleb128 0x63
 28448 0351 19       		.uleb128 0x19
 28449 0352 64       		.uleb128 0x64
 28450 0353 13       		.uleb128 0x13
 28451 0354 01       		.uleb128 0x1
 28452 0355 13       		.uleb128 0x13
 28453 0356 00       		.byte	0
 28454 0357 00       		.byte	0
 28455 0358 35       		.uleb128 0x35
 28456 0359 2E       		.uleb128 0x2e
 28457 035a 01       		.byte	0x1
 28458 035b 3F       		.uleb128 0x3f
 28459 035c 19       		.uleb128 0x19
 28460 035d 03       		.uleb128 0x3
 28461 035e 0E       		.uleb128 0xe
 28462 035f 3A       		.uleb128 0x3a
 28463 0360 0B       		.uleb128 0xb
 28464 0361 3B       		.uleb128 0x3b
 28465 0362 05       		.uleb128 0x5
 28466 0363 6E       		.uleb128 0x6e
 28467 0364 0E       		.uleb128 0xe
 28468 0365 49       		.uleb128 0x49
 28469 0366 13       		.uleb128 0x13
 28470 0367 32       		.uleb128 0x32
 28471 0368 0B       		.uleb128 0xb
 28472 0369 3C       		.uleb128 0x3c
 28473 036a 19       		.uleb128 0x19
 28474 036b 64       		.uleb128 0x64
 28475 036c 13       		.uleb128 0x13
 28476 036d 01       		.uleb128 0x1
 28477 036e 13       		.uleb128 0x13
 28478 036f 00       		.byte	0
 28479 0370 00       		.byte	0
 28480 0371 36       		.uleb128 0x36
 28481 0372 2E       		.uleb128 0x2e
 28482 0373 01       		.byte	0x1
 28483 0374 3F       		.uleb128 0x3f
 28484 0375 19       		.uleb128 0x19
 28485 0376 03       		.uleb128 0x3
 28486 0377 08       		.uleb128 0x8
 28487 0378 3A       		.uleb128 0x3a
 28488 0379 0B       		.uleb128 0xb
 28489 037a 3B       		.uleb128 0x3b
 28490 037b 05       		.uleb128 0x5
GAS LISTING /tmp/ccKUqHDa.s 			page 765


 28491 037c 6E       		.uleb128 0x6e
 28492 037d 0E       		.uleb128 0xe
 28493 037e 49       		.uleb128 0x49
 28494 037f 13       		.uleb128 0x13
 28495 0380 32       		.uleb128 0x32
 28496 0381 0B       		.uleb128 0xb
 28497 0382 3C       		.uleb128 0x3c
 28498 0383 19       		.uleb128 0x19
 28499 0384 64       		.uleb128 0x64
 28500 0385 13       		.uleb128 0x13
 28501 0386 01       		.uleb128 0x1
 28502 0387 13       		.uleb128 0x13
 28503 0388 00       		.byte	0
 28504 0389 00       		.byte	0
 28505 038a 37       		.uleb128 0x37
 28506 038b 2E       		.uleb128 0x2e
 28507 038c 01       		.byte	0x1
 28508 038d 3F       		.uleb128 0x3f
 28509 038e 19       		.uleb128 0x19
 28510 038f 03       		.uleb128 0x3
 28511 0390 0E       		.uleb128 0xe
 28512 0391 3A       		.uleb128 0x3a
 28513 0392 0B       		.uleb128 0xb
 28514 0393 3B       		.uleb128 0x3b
 28515 0394 05       		.uleb128 0x5
 28516 0395 6E       		.uleb128 0x6e
 28517 0396 0E       		.uleb128 0xe
 28518 0397 32       		.uleb128 0x32
 28519 0398 0B       		.uleb128 0xb
 28520 0399 3C       		.uleb128 0x3c
 28521 039a 19       		.uleb128 0x19
 28522 039b 64       		.uleb128 0x64
 28523 039c 13       		.uleb128 0x13
 28524 039d 01       		.uleb128 0x1
 28525 039e 13       		.uleb128 0x13
 28526 039f 00       		.byte	0
 28527 03a0 00       		.byte	0
 28528 03a1 38       		.uleb128 0x38
 28529 03a2 2F       		.uleb128 0x2f
 28530 03a3 00       		.byte	0
 28531 03a4 03       		.uleb128 0x3
 28532 03a5 0E       		.uleb128 0xe
 28533 03a6 49       		.uleb128 0x49
 28534 03a7 13       		.uleb128 0x13
 28535 03a8 1E       		.uleb128 0x1e
 28536 03a9 19       		.uleb128 0x19
 28537 03aa 00       		.byte	0
 28538 03ab 00       		.byte	0
 28539 03ac 39       		.uleb128 0x39
 28540 03ad 2E       		.uleb128 0x2e
 28541 03ae 01       		.byte	0x1
 28542 03af 3F       		.uleb128 0x3f
 28543 03b0 19       		.uleb128 0x19
 28544 03b1 03       		.uleb128 0x3
 28545 03b2 0E       		.uleb128 0xe
 28546 03b3 3A       		.uleb128 0x3a
 28547 03b4 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 766


 28548 03b5 3B       		.uleb128 0x3b
 28549 03b6 0B       		.uleb128 0xb
 28550 03b7 3C       		.uleb128 0x3c
 28551 03b8 19       		.uleb128 0x19
 28552 03b9 64       		.uleb128 0x64
 28553 03ba 13       		.uleb128 0x13
 28554 03bb 01       		.uleb128 0x1
 28555 03bc 13       		.uleb128 0x13
 28556 03bd 00       		.byte	0
 28557 03be 00       		.byte	0
 28558 03bf 3A       		.uleb128 0x3a
 28559 03c0 2E       		.uleb128 0x2e
 28560 03c1 01       		.byte	0x1
 28561 03c2 3F       		.uleb128 0x3f
 28562 03c3 19       		.uleb128 0x19
 28563 03c4 03       		.uleb128 0x3
 28564 03c5 08       		.uleb128 0x8
 28565 03c6 3A       		.uleb128 0x3a
 28566 03c7 0B       		.uleb128 0xb
 28567 03c8 3B       		.uleb128 0x3b
 28568 03c9 0B       		.uleb128 0xb
 28569 03ca 6E       		.uleb128 0x6e
 28570 03cb 0E       		.uleb128 0xe
 28571 03cc 49       		.uleb128 0x49
 28572 03cd 13       		.uleb128 0x13
 28573 03ce 32       		.uleb128 0x32
 28574 03cf 0B       		.uleb128 0xb
 28575 03d0 3C       		.uleb128 0x3c
 28576 03d1 19       		.uleb128 0x19
 28577 03d2 64       		.uleb128 0x64
 28578 03d3 13       		.uleb128 0x13
 28579 03d4 01       		.uleb128 0x1
 28580 03d5 13       		.uleb128 0x13
 28581 03d6 00       		.byte	0
 28582 03d7 00       		.byte	0
 28583 03d8 3B       		.uleb128 0x3b
 28584 03d9 2E       		.uleb128 0x2e
 28585 03da 01       		.byte	0x1
 28586 03db 3F       		.uleb128 0x3f
 28587 03dc 19       		.uleb128 0x19
 28588 03dd 03       		.uleb128 0x3
 28589 03de 0E       		.uleb128 0xe
 28590 03df 3A       		.uleb128 0x3a
 28591 03e0 0B       		.uleb128 0xb
 28592 03e1 3B       		.uleb128 0x3b
 28593 03e2 05       		.uleb128 0x5
 28594 03e3 3C       		.uleb128 0x3c
 28595 03e4 19       		.uleb128 0x19
 28596 03e5 00       		.byte	0
 28597 03e6 00       		.byte	0
 28598 03e7 3C       		.uleb128 0x3c
 28599 03e8 0D       		.uleb128 0xd
 28600 03e9 00       		.byte	0
 28601 03ea 03       		.uleb128 0x3
 28602 03eb 0E       		.uleb128 0xe
 28603 03ec 3A       		.uleb128 0x3a
 28604 03ed 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 767


 28605 03ee 3B       		.uleb128 0x3b
 28606 03ef 0B       		.uleb128 0xb
 28607 03f0 49       		.uleb128 0x49
 28608 03f1 13       		.uleb128 0x13
 28609 03f2 38       		.uleb128 0x38
 28610 03f3 0B       		.uleb128 0xb
 28611 03f4 32       		.uleb128 0x32
 28612 03f5 0B       		.uleb128 0xb
 28613 03f6 00       		.byte	0
 28614 03f7 00       		.byte	0
 28615 03f8 3D       		.uleb128 0x3d
 28616 03f9 2E       		.uleb128 0x2e
 28617 03fa 01       		.byte	0x1
 28618 03fb 3F       		.uleb128 0x3f
 28619 03fc 19       		.uleb128 0x19
 28620 03fd 03       		.uleb128 0x3
 28621 03fe 08       		.uleb128 0x8
 28622 03ff 3A       		.uleb128 0x3a
 28623 0400 0B       		.uleb128 0xb
 28624 0401 3B       		.uleb128 0x3b
 28625 0402 0B       		.uleb128 0xb
 28626 0403 6E       		.uleb128 0x6e
 28627 0404 0E       		.uleb128 0xe
 28628 0405 49       		.uleb128 0x49
 28629 0406 13       		.uleb128 0x13
 28630 0407 3C       		.uleb128 0x3c
 28631 0408 19       		.uleb128 0x19
 28632 0409 64       		.uleb128 0x64
 28633 040a 13       		.uleb128 0x13
 28634 040b 01       		.uleb128 0x1
 28635 040c 13       		.uleb128 0x13
 28636 040d 00       		.byte	0
 28637 040e 00       		.byte	0
 28638 040f 3E       		.uleb128 0x3e
 28639 0410 2E       		.uleb128 0x2e
 28640 0411 01       		.byte	0x1
 28641 0412 3F       		.uleb128 0x3f
 28642 0413 19       		.uleb128 0x19
 28643 0414 03       		.uleb128 0x3
 28644 0415 0E       		.uleb128 0xe
 28645 0416 3A       		.uleb128 0x3a
 28646 0417 0B       		.uleb128 0xb
 28647 0418 3B       		.uleb128 0x3b
 28648 0419 0B       		.uleb128 0xb
 28649 041a 6E       		.uleb128 0x6e
 28650 041b 0E       		.uleb128 0xe
 28651 041c 49       		.uleb128 0x49
 28652 041d 13       		.uleb128 0x13
 28653 041e 3C       		.uleb128 0x3c
 28654 041f 19       		.uleb128 0x19
 28655 0420 01       		.uleb128 0x1
 28656 0421 13       		.uleb128 0x13
 28657 0422 00       		.byte	0
 28658 0423 00       		.byte	0
 28659 0424 3F       		.uleb128 0x3f
 28660 0425 30       		.uleb128 0x30
 28661 0426 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 768


 28662 0427 03       		.uleb128 0x3
 28663 0428 08       		.uleb128 0x8
 28664 0429 49       		.uleb128 0x49
 28665 042a 13       		.uleb128 0x13
 28666 042b 1C       		.uleb128 0x1c
 28667 042c 07       		.uleb128 0x7
 28668 042d 00       		.byte	0
 28669 042e 00       		.byte	0
 28670 042f 40       		.uleb128 0x40
 28671 0430 30       		.uleb128 0x30
 28672 0431 00       		.byte	0
 28673 0432 03       		.uleb128 0x3
 28674 0433 0E       		.uleb128 0xe
 28675 0434 49       		.uleb128 0x49
 28676 0435 13       		.uleb128 0x13
 28677 0436 1C       		.uleb128 0x1c
 28678 0437 0B       		.uleb128 0xb
 28679 0438 00       		.byte	0
 28680 0439 00       		.byte	0
 28681 043a 41       		.uleb128 0x41
 28682 043b 30       		.uleb128 0x30
 28683 043c 00       		.byte	0
 28684 043d 03       		.uleb128 0x3
 28685 043e 08       		.uleb128 0x8
 28686 043f 49       		.uleb128 0x49
 28687 0440 13       		.uleb128 0x13
 28688 0441 1C       		.uleb128 0x1c
 28689 0442 05       		.uleb128 0x5
 28690 0443 00       		.byte	0
 28691 0444 00       		.byte	0
 28692 0445 42       		.uleb128 0x42
 28693 0446 2E       		.uleb128 0x2e
 28694 0447 01       		.byte	0x1
 28695 0448 3F       		.uleb128 0x3f
 28696 0449 19       		.uleb128 0x19
 28697 044a 03       		.uleb128 0x3
 28698 044b 0E       		.uleb128 0xe
 28699 044c 3A       		.uleb128 0x3a
 28700 044d 0B       		.uleb128 0xb
 28701 044e 3B       		.uleb128 0x3b
 28702 044f 0B       		.uleb128 0xb
 28703 0450 49       		.uleb128 0x49
 28704 0451 13       		.uleb128 0x13
 28705 0452 3C       		.uleb128 0x3c
 28706 0453 19       		.uleb128 0x19
 28707 0454 01       		.uleb128 0x1
 28708 0455 13       		.uleb128 0x13
 28709 0456 00       		.byte	0
 28710 0457 00       		.byte	0
 28711 0458 43       		.uleb128 0x43
 28712 0459 2E       		.uleb128 0x2e
 28713 045a 01       		.byte	0x1
 28714 045b 3F       		.uleb128 0x3f
 28715 045c 19       		.uleb128 0x19
 28716 045d 03       		.uleb128 0x3
 28717 045e 0E       		.uleb128 0xe
 28718 045f 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccKUqHDa.s 			page 769


 28719 0460 0B       		.uleb128 0xb
 28720 0461 3B       		.uleb128 0x3b
 28721 0462 0B       		.uleb128 0xb
 28722 0463 49       		.uleb128 0x49
 28723 0464 13       		.uleb128 0x13
 28724 0465 3C       		.uleb128 0x3c
 28725 0466 19       		.uleb128 0x19
 28726 0467 00       		.byte	0
 28727 0468 00       		.byte	0
 28728 0469 44       		.uleb128 0x44
 28729 046a 02       		.uleb128 0x2
 28730 046b 01       		.byte	0x1
 28731 046c 03       		.uleb128 0x3
 28732 046d 0E       		.uleb128 0xe
 28733 046e 0B       		.uleb128 0xb
 28734 046f 05       		.uleb128 0x5
 28735 0470 3A       		.uleb128 0x3a
 28736 0471 0B       		.uleb128 0xb
 28737 0472 3B       		.uleb128 0x3b
 28738 0473 05       		.uleb128 0x5
 28739 0474 01       		.uleb128 0x1
 28740 0475 13       		.uleb128 0x13
 28741 0476 00       		.byte	0
 28742 0477 00       		.byte	0
 28743 0478 45       		.uleb128 0x45
 28744 0479 0D       		.uleb128 0xd
 28745 047a 00       		.byte	0
 28746 047b 03       		.uleb128 0x3
 28747 047c 0E       		.uleb128 0xe
 28748 047d 3A       		.uleb128 0x3a
 28749 047e 0B       		.uleb128 0xb
 28750 047f 3B       		.uleb128 0x3b
 28751 0480 05       		.uleb128 0x5
 28752 0481 49       		.uleb128 0x49
 28753 0482 13       		.uleb128 0x13
 28754 0483 3F       		.uleb128 0x3f
 28755 0484 19       		.uleb128 0x19
 28756 0485 32       		.uleb128 0x32
 28757 0486 0B       		.uleb128 0xb
 28758 0487 3C       		.uleb128 0x3c
 28759 0488 19       		.uleb128 0x19
 28760 0489 1C       		.uleb128 0x1c
 28761 048a 05       		.uleb128 0x5
 28762 048b 00       		.byte	0
 28763 048c 00       		.byte	0
 28764 048d 46       		.uleb128 0x46
 28765 048e 16       		.uleb128 0x16
 28766 048f 00       		.byte	0
 28767 0490 03       		.uleb128 0x3
 28768 0491 0E       		.uleb128 0xe
 28769 0492 3A       		.uleb128 0x3a
 28770 0493 0B       		.uleb128 0xb
 28771 0494 3B       		.uleb128 0x3b
 28772 0495 05       		.uleb128 0x5
 28773 0496 49       		.uleb128 0x49
 28774 0497 13       		.uleb128 0x13
 28775 0498 32       		.uleb128 0x32
GAS LISTING /tmp/ccKUqHDa.s 			page 770


 28776 0499 0B       		.uleb128 0xb
 28777 049a 00       		.byte	0
 28778 049b 00       		.byte	0
 28779 049c 47       		.uleb128 0x47
 28780 049d 0D       		.uleb128 0xd
 28781 049e 00       		.byte	0
 28782 049f 03       		.uleb128 0x3
 28783 04a0 0E       		.uleb128 0xe
 28784 04a1 3A       		.uleb128 0x3a
 28785 04a2 0B       		.uleb128 0xb
 28786 04a3 3B       		.uleb128 0x3b
 28787 04a4 05       		.uleb128 0x5
 28788 04a5 49       		.uleb128 0x49
 28789 04a6 13       		.uleb128 0x13
 28790 04a7 38       		.uleb128 0x38
 28791 04a8 05       		.uleb128 0x5
 28792 04a9 00       		.byte	0
 28793 04aa 00       		.byte	0
 28794 04ab 48       		.uleb128 0x48
 28795 04ac 2E       		.uleb128 0x2e
 28796 04ad 00       		.byte	0
 28797 04ae 3F       		.uleb128 0x3f
 28798 04af 19       		.uleb128 0x19
 28799 04b0 03       		.uleb128 0x3
 28800 04b1 08       		.uleb128 0x8
 28801 04b2 3A       		.uleb128 0x3a
 28802 04b3 0B       		.uleb128 0xb
 28803 04b4 3B       		.uleb128 0x3b
 28804 04b5 05       		.uleb128 0x5
 28805 04b6 6E       		.uleb128 0x6e
 28806 04b7 0E       		.uleb128 0xe
 28807 04b8 49       		.uleb128 0x49
 28808 04b9 13       		.uleb128 0x13
 28809 04ba 32       		.uleb128 0x32
 28810 04bb 0B       		.uleb128 0xb
 28811 04bc 3C       		.uleb128 0x3c
 28812 04bd 19       		.uleb128 0x19
 28813 04be 00       		.byte	0
 28814 04bf 00       		.byte	0
 28815 04c0 49       		.uleb128 0x49
 28816 04c1 30       		.uleb128 0x30
 28817 04c2 00       		.byte	0
 28818 04c3 03       		.uleb128 0x3
 28819 04c4 08       		.uleb128 0x8
 28820 04c5 49       		.uleb128 0x49
 28821 04c6 13       		.uleb128 0x13
 28822 04c7 1C       		.uleb128 0x1c
 28823 04c8 06       		.uleb128 0x6
 28824 04c9 00       		.byte	0
 28825 04ca 00       		.byte	0
 28826 04cb 4A       		.uleb128 0x4a
 28827 04cc 17       		.uleb128 0x17
 28828 04cd 01       		.byte	0x1
 28829 04ce 0B       		.uleb128 0xb
 28830 04cf 05       		.uleb128 0x5
 28831 04d0 3A       		.uleb128 0x3a
 28832 04d1 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 771


 28833 04d2 3B       		.uleb128 0x3b
 28834 04d3 05       		.uleb128 0x5
 28835 04d4 01       		.uleb128 0x1
 28836 04d5 13       		.uleb128 0x13
 28837 04d6 00       		.byte	0
 28838 04d7 00       		.byte	0
 28839 04d8 4B       		.uleb128 0x4b
 28840 04d9 0D       		.uleb128 0xd
 28841 04da 00       		.byte	0
 28842 04db 03       		.uleb128 0x3
 28843 04dc 0E       		.uleb128 0xe
 28844 04dd 3A       		.uleb128 0x3a
 28845 04de 0B       		.uleb128 0xb
 28846 04df 3B       		.uleb128 0x3b
 28847 04e0 05       		.uleb128 0x5
 28848 04e1 49       		.uleb128 0x49
 28849 04e2 13       		.uleb128 0x13
 28850 04e3 00       		.byte	0
 28851 04e4 00       		.byte	0
 28852 04e5 4C       		.uleb128 0x4c
 28853 04e6 2E       		.uleb128 0x2e
 28854 04e7 01       		.byte	0x1
 28855 04e8 3F       		.uleb128 0x3f
 28856 04e9 19       		.uleb128 0x19
 28857 04ea 34       		.uleb128 0x34
 28858 04eb 19       		.uleb128 0x19
 28859 04ec 3C       		.uleb128 0x3c
 28860 04ed 19       		.uleb128 0x19
 28861 04ee 64       		.uleb128 0x64
 28862 04ef 13       		.uleb128 0x13
 28863 04f0 00       		.byte	0
 28864 04f1 00       		.byte	0
 28865 04f2 4D       		.uleb128 0x4d
 28866 04f3 0D       		.uleb128 0xd
 28867 04f4 00       		.byte	0
 28868 04f5 49       		.uleb128 0x49
 28869 04f6 13       		.uleb128 0x13
 28870 04f7 38       		.uleb128 0x38
 28871 04f8 0B       		.uleb128 0xb
 28872 04f9 00       		.byte	0
 28873 04fa 00       		.byte	0
 28874 04fb 4E       		.uleb128 0x4e
 28875 04fc 16       		.uleb128 0x16
 28876 04fd 00       		.byte	0
 28877 04fe 03       		.uleb128 0x3
 28878 04ff 0E       		.uleb128 0xe
 28879 0500 3A       		.uleb128 0x3a
 28880 0501 0B       		.uleb128 0xb
 28881 0502 3B       		.uleb128 0x3b
 28882 0503 05       		.uleb128 0x5
 28883 0504 49       		.uleb128 0x49
 28884 0505 13       		.uleb128 0x13
 28885 0506 00       		.byte	0
 28886 0507 00       		.byte	0
 28887 0508 4F       		.uleb128 0x4f
 28888 0509 02       		.uleb128 0x2
 28889 050a 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 772


 28890 050b 03       		.uleb128 0x3
 28891 050c 0E       		.uleb128 0xe
 28892 050d 0B       		.uleb128 0xb
 28893 050e 0B       		.uleb128 0xb
 28894 050f 3A       		.uleb128 0x3a
 28895 0510 0B       		.uleb128 0xb
 28896 0511 3B       		.uleb128 0x3b
 28897 0512 05       		.uleb128 0x5
 28898 0513 01       		.uleb128 0x1
 28899 0514 13       		.uleb128 0x13
 28900 0515 00       		.byte	0
 28901 0516 00       		.byte	0
 28902 0517 50       		.uleb128 0x50
 28903 0518 04       		.uleb128 0x4
 28904 0519 01       		.byte	0x1
 28905 051a 03       		.uleb128 0x3
 28906 051b 0E       		.uleb128 0xe
 28907 051c 0B       		.uleb128 0xb
 28908 051d 0B       		.uleb128 0xb
 28909 051e 3A       		.uleb128 0x3a
 28910 051f 0B       		.uleb128 0xb
 28911 0520 3B       		.uleb128 0x3b
 28912 0521 0B       		.uleb128 0xb
 28913 0522 01       		.uleb128 0x1
 28914 0523 13       		.uleb128 0x13
 28915 0524 00       		.byte	0
 28916 0525 00       		.byte	0
 28917 0526 51       		.uleb128 0x51
 28918 0527 28       		.uleb128 0x28
 28919 0528 00       		.byte	0
 28920 0529 03       		.uleb128 0x3
 28921 052a 0E       		.uleb128 0xe
 28922 052b 1C       		.uleb128 0x1c
 28923 052c 0D       		.uleb128 0xd
 28924 052d 00       		.byte	0
 28925 052e 00       		.byte	0
 28926 052f 52       		.uleb128 0x52
 28927 0530 02       		.uleb128 0x2
 28928 0531 01       		.byte	0x1
 28929 0532 03       		.uleb128 0x3
 28930 0533 0E       		.uleb128 0xe
 28931 0534 3C       		.uleb128 0x3c
 28932 0535 19       		.uleb128 0x19
 28933 0536 01       		.uleb128 0x1
 28934 0537 13       		.uleb128 0x13
 28935 0538 00       		.byte	0
 28936 0539 00       		.byte	0
 28937 053a 53       		.uleb128 0x53
 28938 053b 02       		.uleb128 0x2
 28939 053c 01       		.byte	0x1
 28940 053d 03       		.uleb128 0x3
 28941 053e 0E       		.uleb128 0xe
 28942 053f 0B       		.uleb128 0xb
 28943 0540 0B       		.uleb128 0xb
 28944 0541 3A       		.uleb128 0x3a
 28945 0542 0B       		.uleb128 0xb
 28946 0543 3B       		.uleb128 0x3b
GAS LISTING /tmp/ccKUqHDa.s 			page 773


 28947 0544 05       		.uleb128 0x5
 28948 0545 32       		.uleb128 0x32
 28949 0546 0B       		.uleb128 0xb
 28950 0547 01       		.uleb128 0x1
 28951 0548 13       		.uleb128 0x13
 28952 0549 00       		.byte	0
 28953 054a 00       		.byte	0
 28954 054b 54       		.uleb128 0x54
 28955 054c 0D       		.uleb128 0xd
 28956 054d 00       		.byte	0
 28957 054e 03       		.uleb128 0x3
 28958 054f 0E       		.uleb128 0xe
 28959 0550 3A       		.uleb128 0x3a
 28960 0551 0B       		.uleb128 0xb
 28961 0552 3B       		.uleb128 0x3b
 28962 0553 05       		.uleb128 0x5
 28963 0554 49       		.uleb128 0x49
 28964 0555 13       		.uleb128 0x13
 28965 0556 3F       		.uleb128 0x3f
 28966 0557 19       		.uleb128 0x19
 28967 0558 3C       		.uleb128 0x3c
 28968 0559 19       		.uleb128 0x19
 28969 055a 00       		.byte	0
 28970 055b 00       		.byte	0
 28971 055c 55       		.uleb128 0x55
 28972 055d 2E       		.uleb128 0x2e
 28973 055e 01       		.byte	0x1
 28974 055f 3F       		.uleb128 0x3f
 28975 0560 19       		.uleb128 0x19
 28976 0561 03       		.uleb128 0x3
 28977 0562 0E       		.uleb128 0xe
 28978 0563 3A       		.uleb128 0x3a
 28979 0564 0B       		.uleb128 0xb
 28980 0565 3B       		.uleb128 0x3b
 28981 0566 05       		.uleb128 0x5
 28982 0567 32       		.uleb128 0x32
 28983 0568 0B       		.uleb128 0xb
 28984 0569 3C       		.uleb128 0x3c
 28985 056a 19       		.uleb128 0x19
 28986 056b 64       		.uleb128 0x64
 28987 056c 13       		.uleb128 0x13
 28988 056d 00       		.byte	0
 28989 056e 00       		.byte	0
 28990 056f 56       		.uleb128 0x56
 28991 0570 0D       		.uleb128 0xd
 28992 0571 00       		.byte	0
 28993 0572 03       		.uleb128 0x3
 28994 0573 0E       		.uleb128 0xe
 28995 0574 3A       		.uleb128 0x3a
 28996 0575 0B       		.uleb128 0xb
 28997 0576 3B       		.uleb128 0x3b
 28998 0577 05       		.uleb128 0x5
 28999 0578 49       		.uleb128 0x49
 29000 0579 13       		.uleb128 0x13
 29001 057a 3F       		.uleb128 0x3f
 29002 057b 19       		.uleb128 0x19
 29003 057c 32       		.uleb128 0x32
GAS LISTING /tmp/ccKUqHDa.s 			page 774


 29004 057d 0B       		.uleb128 0xb
 29005 057e 3C       		.uleb128 0x3c
 29006 057f 19       		.uleb128 0x19
 29007 0580 1C       		.uleb128 0x1c
 29008 0581 0B       		.uleb128 0xb
 29009 0582 00       		.byte	0
 29010 0583 00       		.byte	0
 29011 0584 57       		.uleb128 0x57
 29012 0585 0D       		.uleb128 0xd
 29013 0586 00       		.byte	0
 29014 0587 03       		.uleb128 0x3
 29015 0588 08       		.uleb128 0x8
 29016 0589 3A       		.uleb128 0x3a
 29017 058a 0B       		.uleb128 0xb
 29018 058b 3B       		.uleb128 0x3b
 29019 058c 05       		.uleb128 0x5
 29020 058d 49       		.uleb128 0x49
 29021 058e 13       		.uleb128 0x13
 29022 058f 3F       		.uleb128 0x3f
 29023 0590 19       		.uleb128 0x19
 29024 0591 32       		.uleb128 0x32
 29025 0592 0B       		.uleb128 0xb
 29026 0593 3C       		.uleb128 0x3c
 29027 0594 19       		.uleb128 0x19
 29028 0595 1C       		.uleb128 0x1c
 29029 0596 0B       		.uleb128 0xb
 29030 0597 00       		.byte	0
 29031 0598 00       		.byte	0
 29032 0599 58       		.uleb128 0x58
 29033 059a 13       		.uleb128 0x13
 29034 059b 01       		.byte	0x1
 29035 059c 03       		.uleb128 0x3
 29036 059d 0E       		.uleb128 0xe
 29037 059e 0B       		.uleb128 0xb
 29038 059f 0B       		.uleb128 0xb
 29039 05a0 3A       		.uleb128 0x3a
 29040 05a1 0B       		.uleb128 0xb
 29041 05a2 3B       		.uleb128 0x3b
 29042 05a3 0B       		.uleb128 0xb
 29043 05a4 32       		.uleb128 0x32
 29044 05a5 0B       		.uleb128 0xb
 29045 05a6 00       		.byte	0
 29046 05a7 00       		.byte	0
 29047 05a8 59       		.uleb128 0x59
 29048 05a9 2E       		.uleb128 0x2e
 29049 05aa 01       		.byte	0x1
 29050 05ab 3F       		.uleb128 0x3f
 29051 05ac 19       		.uleb128 0x19
 29052 05ad 03       		.uleb128 0x3
 29053 05ae 0E       		.uleb128 0xe
 29054 05af 3A       		.uleb128 0x3a
 29055 05b0 0B       		.uleb128 0xb
 29056 05b1 3B       		.uleb128 0x3b
 29057 05b2 0B       		.uleb128 0xb
 29058 05b3 6E       		.uleb128 0x6e
 29059 05b4 0E       		.uleb128 0xe
 29060 05b5 49       		.uleb128 0x49
GAS LISTING /tmp/ccKUqHDa.s 			page 775


 29061 05b6 13       		.uleb128 0x13
 29062 05b7 32       		.uleb128 0x32
 29063 05b8 0B       		.uleb128 0xb
 29064 05b9 3C       		.uleb128 0x3c
 29065 05ba 19       		.uleb128 0x19
 29066 05bb 01       		.uleb128 0x1
 29067 05bc 13       		.uleb128 0x13
 29068 05bd 00       		.byte	0
 29069 05be 00       		.byte	0
 29070 05bf 5A       		.uleb128 0x5a
 29071 05c0 18       		.uleb128 0x18
 29072 05c1 00       		.byte	0
 29073 05c2 00       		.byte	0
 29074 05c3 00       		.byte	0
 29075 05c4 5B       		.uleb128 0x5b
 29076 05c5 13       		.uleb128 0x13
 29077 05c6 01       		.byte	0x1
 29078 05c7 03       		.uleb128 0x3
 29079 05c8 0E       		.uleb128 0xe
 29080 05c9 0B       		.uleb128 0xb
 29081 05ca 0B       		.uleb128 0xb
 29082 05cb 3A       		.uleb128 0x3a
 29083 05cc 0B       		.uleb128 0xb
 29084 05cd 3B       		.uleb128 0x3b
 29085 05ce 05       		.uleb128 0x5
 29086 05cf 32       		.uleb128 0x32
 29087 05d0 0B       		.uleb128 0xb
 29088 05d1 01       		.uleb128 0x1
 29089 05d2 13       		.uleb128 0x13
 29090 05d3 00       		.byte	0
 29091 05d4 00       		.byte	0
 29092 05d5 5C       		.uleb128 0x5c
 29093 05d6 0D       		.uleb128 0xd
 29094 05d7 00       		.byte	0
 29095 05d8 03       		.uleb128 0x3
 29096 05d9 0E       		.uleb128 0xe
 29097 05da 3A       		.uleb128 0x3a
 29098 05db 0B       		.uleb128 0xb
 29099 05dc 3B       		.uleb128 0x3b
 29100 05dd 05       		.uleb128 0x5
 29101 05de 49       		.uleb128 0x49
 29102 05df 13       		.uleb128 0x13
 29103 05e0 38       		.uleb128 0x38
 29104 05e1 0B       		.uleb128 0xb
 29105 05e2 32       		.uleb128 0x32
 29106 05e3 0B       		.uleb128 0xb
 29107 05e4 00       		.byte	0
 29108 05e5 00       		.byte	0
 29109 05e6 5D       		.uleb128 0x5d
 29110 05e7 2E       		.uleb128 0x2e
 29111 05e8 01       		.byte	0x1
 29112 05e9 3F       		.uleb128 0x3f
 29113 05ea 19       		.uleb128 0x19
 29114 05eb 03       		.uleb128 0x3
 29115 05ec 0E       		.uleb128 0xe
 29116 05ed 3A       		.uleb128 0x3a
 29117 05ee 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 776


 29118 05ef 3B       		.uleb128 0x3b
 29119 05f0 05       		.uleb128 0x5
 29120 05f1 3C       		.uleb128 0x3c
 29121 05f2 19       		.uleb128 0x19
 29122 05f3 63       		.uleb128 0x63
 29123 05f4 19       		.uleb128 0x19
 29124 05f5 64       		.uleb128 0x64
 29125 05f6 13       		.uleb128 0x13
 29126 05f7 01       		.uleb128 0x1
 29127 05f8 13       		.uleb128 0x13
 29128 05f9 00       		.byte	0
 29129 05fa 00       		.byte	0
 29130 05fb 5E       		.uleb128 0x5e
 29131 05fc 2E       		.uleb128 0x2e
 29132 05fd 01       		.byte	0x1
 29133 05fe 3F       		.uleb128 0x3f
 29134 05ff 19       		.uleb128 0x19
 29135 0600 03       		.uleb128 0x3
 29136 0601 0E       		.uleb128 0xe
 29137 0602 3A       		.uleb128 0x3a
 29138 0603 0B       		.uleb128 0xb
 29139 0604 3B       		.uleb128 0x3b
 29140 0605 05       		.uleb128 0x5
 29141 0606 49       		.uleb128 0x49
 29142 0607 13       		.uleb128 0x13
 29143 0608 32       		.uleb128 0x32
 29144 0609 0B       		.uleb128 0xb
 29145 060a 3C       		.uleb128 0x3c
 29146 060b 19       		.uleb128 0x19
 29147 060c 64       		.uleb128 0x64
 29148 060d 13       		.uleb128 0x13
 29149 060e 01       		.uleb128 0x1
 29150 060f 13       		.uleb128 0x13
 29151 0610 00       		.byte	0
 29152 0611 00       		.byte	0
 29153 0612 5F       		.uleb128 0x5f
 29154 0613 2E       		.uleb128 0x2e
 29155 0614 01       		.byte	0x1
 29156 0615 3F       		.uleb128 0x3f
 29157 0616 19       		.uleb128 0x19
 29158 0617 03       		.uleb128 0x3
 29159 0618 0E       		.uleb128 0xe
 29160 0619 3A       		.uleb128 0x3a
 29161 061a 0B       		.uleb128 0xb
 29162 061b 3B       		.uleb128 0x3b
 29163 061c 05       		.uleb128 0x5
 29164 061d 3C       		.uleb128 0x3c
 29165 061e 19       		.uleb128 0x19
 29166 061f 01       		.uleb128 0x1
 29167 0620 13       		.uleb128 0x13
 29168 0621 00       		.byte	0
 29169 0622 00       		.byte	0
 29170 0623 60       		.uleb128 0x60
 29171 0624 2E       		.uleb128 0x2e
 29172 0625 01       		.byte	0x1
 29173 0626 3F       		.uleb128 0x3f
 29174 0627 19       		.uleb128 0x19
GAS LISTING /tmp/ccKUqHDa.s 			page 777


 29175 0628 03       		.uleb128 0x3
 29176 0629 0E       		.uleb128 0xe
 29177 062a 3A       		.uleb128 0x3a
 29178 062b 0B       		.uleb128 0xb
 29179 062c 3B       		.uleb128 0x3b
 29180 062d 05       		.uleb128 0x5
 29181 062e 49       		.uleb128 0x49
 29182 062f 13       		.uleb128 0x13
 29183 0630 3C       		.uleb128 0x3c
 29184 0631 19       		.uleb128 0x19
 29185 0632 01       		.uleb128 0x1
 29186 0633 13       		.uleb128 0x13
 29187 0634 00       		.byte	0
 29188 0635 00       		.byte	0
 29189 0636 61       		.uleb128 0x61
 29190 0637 878201   		.uleb128 0x4107
 29191 063a 00       		.byte	0
 29192 063b 03       		.uleb128 0x3
 29193 063c 0E       		.uleb128 0xe
 29194 063d 00       		.byte	0
 29195 063e 00       		.byte	0
 29196 063f 62       		.uleb128 0x62
 29197 0640 2E       		.uleb128 0x2e
 29198 0641 01       		.byte	0x1
 29199 0642 3F       		.uleb128 0x3f
 29200 0643 19       		.uleb128 0x19
 29201 0644 03       		.uleb128 0x3
 29202 0645 08       		.uleb128 0x8
 29203 0646 3A       		.uleb128 0x3a
 29204 0647 0B       		.uleb128 0xb
 29205 0648 3B       		.uleb128 0x3b
 29206 0649 05       		.uleb128 0x5
 29207 064a 49       		.uleb128 0x49
 29208 064b 13       		.uleb128 0x13
 29209 064c 3C       		.uleb128 0x3c
 29210 064d 19       		.uleb128 0x19
 29211 064e 01       		.uleb128 0x1
 29212 064f 13       		.uleb128 0x13
 29213 0650 00       		.byte	0
 29214 0651 00       		.byte	0
 29215 0652 63       		.uleb128 0x63
 29216 0653 2E       		.uleb128 0x2e
 29217 0654 01       		.byte	0x1
 29218 0655 3F       		.uleb128 0x3f
 29219 0656 19       		.uleb128 0x19
 29220 0657 03       		.uleb128 0x3
 29221 0658 08       		.uleb128 0x8
 29222 0659 3A       		.uleb128 0x3a
 29223 065a 0B       		.uleb128 0xb
 29224 065b 3B       		.uleb128 0x3b
 29225 065c 0B       		.uleb128 0xb
 29226 065d 49       		.uleb128 0x49
 29227 065e 13       		.uleb128 0x13
 29228 065f 3C       		.uleb128 0x3c
 29229 0660 19       		.uleb128 0x19
 29230 0661 01       		.uleb128 0x1
 29231 0662 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 778


 29232 0663 00       		.byte	0
 29233 0664 00       		.byte	0
 29234 0665 64       		.uleb128 0x64
 29235 0666 2E       		.uleb128 0x2e
 29236 0667 01       		.byte	0x1
 29237 0668 03       		.uleb128 0x3
 29238 0669 0E       		.uleb128 0xe
 29239 066a 3A       		.uleb128 0x3a
 29240 066b 0B       		.uleb128 0xb
 29241 066c 3B       		.uleb128 0x3b
 29242 066d 05       		.uleb128 0x5
 29243 066e 3C       		.uleb128 0x3c
 29244 066f 19       		.uleb128 0x19
 29245 0670 01       		.uleb128 0x1
 29246 0671 13       		.uleb128 0x13
 29247 0672 00       		.byte	0
 29248 0673 00       		.byte	0
 29249 0674 65       		.uleb128 0x65
 29250 0675 34       		.uleb128 0x34
 29251 0676 00       		.byte	0
 29252 0677 03       		.uleb128 0x3
 29253 0678 0E       		.uleb128 0xe
 29254 0679 3A       		.uleb128 0x3a
 29255 067a 0B       		.uleb128 0xb
 29256 067b 3B       		.uleb128 0x3b
 29257 067c 0B       		.uleb128 0xb
 29258 067d 49       		.uleb128 0x49
 29259 067e 13       		.uleb128 0x13
 29260 067f 3C       		.uleb128 0x3c
 29261 0680 19       		.uleb128 0x19
 29262 0681 1C       		.uleb128 0x1c
 29263 0682 0A       		.uleb128 0xa
 29264 0683 00       		.byte	0
 29265 0684 00       		.byte	0
 29266 0685 66       		.uleb128 0x66
 29267 0686 34       		.uleb128 0x34
 29268 0687 00       		.byte	0
 29269 0688 03       		.uleb128 0x3
 29270 0689 0E       		.uleb128 0xe
 29271 068a 3A       		.uleb128 0x3a
 29272 068b 0B       		.uleb128 0xb
 29273 068c 3B       		.uleb128 0x3b
 29274 068d 0B       		.uleb128 0xb
 29275 068e 6E       		.uleb128 0x6e
 29276 068f 0E       		.uleb128 0xe
 29277 0690 49       		.uleb128 0x49
 29278 0691 13       		.uleb128 0x13
 29279 0692 3F       		.uleb128 0x3f
 29280 0693 19       		.uleb128 0x19
 29281 0694 3C       		.uleb128 0x3c
 29282 0695 19       		.uleb128 0x19
 29283 0696 00       		.byte	0
 29284 0697 00       		.byte	0
 29285 0698 67       		.uleb128 0x67
 29286 0699 34       		.uleb128 0x34
 29287 069a 00       		.byte	0
 29288 069b 03       		.uleb128 0x3
GAS LISTING /tmp/ccKUqHDa.s 			page 779


 29289 069c 0E       		.uleb128 0xe
 29290 069d 3A       		.uleb128 0x3a
 29291 069e 0B       		.uleb128 0xb
 29292 069f 3B       		.uleb128 0x3b
 29293 06a0 0B       		.uleb128 0xb
 29294 06a1 49       		.uleb128 0x49
 29295 06a2 13       		.uleb128 0x13
 29296 06a3 3C       		.uleb128 0x3c
 29297 06a4 19       		.uleb128 0x19
 29298 06a5 00       		.byte	0
 29299 06a6 00       		.byte	0
 29300 06a7 68       		.uleb128 0x68
 29301 06a8 2E       		.uleb128 0x2e
 29302 06a9 00       		.byte	0
 29303 06aa 3F       		.uleb128 0x3f
 29304 06ab 19       		.uleb128 0x19
 29305 06ac 03       		.uleb128 0x3
 29306 06ad 0E       		.uleb128 0xe
 29307 06ae 3A       		.uleb128 0x3a
 29308 06af 0B       		.uleb128 0xb
 29309 06b0 3B       		.uleb128 0x3b
 29310 06b1 0B       		.uleb128 0xb
 29311 06b2 6E       		.uleb128 0x6e
 29312 06b3 0E       		.uleb128 0xe
 29313 06b4 3C       		.uleb128 0x3c
 29314 06b5 19       		.uleb128 0x19
 29315 06b6 00       		.byte	0
 29316 06b7 00       		.byte	0
 29317 06b8 69       		.uleb128 0x69
 29318 06b9 0F       		.uleb128 0xf
 29319 06ba 00       		.byte	0
 29320 06bb 0B       		.uleb128 0xb
 29321 06bc 0B       		.uleb128 0xb
 29322 06bd 49       		.uleb128 0x49
 29323 06be 13       		.uleb128 0x13
 29324 06bf 00       		.byte	0
 29325 06c0 00       		.byte	0
 29326 06c1 6A       		.uleb128 0x6a
 29327 06c2 24       		.uleb128 0x24
 29328 06c3 00       		.byte	0
 29329 06c4 0B       		.uleb128 0xb
 29330 06c5 0B       		.uleb128 0xb
 29331 06c6 3E       		.uleb128 0x3e
 29332 06c7 0B       		.uleb128 0xb
 29333 06c8 03       		.uleb128 0x3
 29334 06c9 08       		.uleb128 0x8
 29335 06ca 00       		.byte	0
 29336 06cb 00       		.byte	0
 29337 06cc 6B       		.uleb128 0x6b
 29338 06cd 2E       		.uleb128 0x2e
 29339 06ce 01       		.byte	0x1
 29340 06cf 03       		.uleb128 0x3
 29341 06d0 0E       		.uleb128 0xe
 29342 06d1 3A       		.uleb128 0x3a
 29343 06d2 0B       		.uleb128 0xb
 29344 06d3 3B       		.uleb128 0x3b
 29345 06d4 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 780


 29346 06d5 49       		.uleb128 0x49
 29347 06d6 13       		.uleb128 0x13
 29348 06d7 3C       		.uleb128 0x3c
 29349 06d8 19       		.uleb128 0x19
 29350 06d9 01       		.uleb128 0x1
 29351 06da 13       		.uleb128 0x13
 29352 06db 00       		.byte	0
 29353 06dc 00       		.byte	0
 29354 06dd 6C       		.uleb128 0x6c
 29355 06de 2E       		.uleb128 0x2e
 29356 06df 01       		.byte	0x1
 29357 06e0 3F       		.uleb128 0x3f
 29358 06e1 19       		.uleb128 0x19
 29359 06e2 03       		.uleb128 0x3
 29360 06e3 0E       		.uleb128 0xe
 29361 06e4 3A       		.uleb128 0x3a
 29362 06e5 0B       		.uleb128 0xb
 29363 06e6 3B       		.uleb128 0x3b
 29364 06e7 05       		.uleb128 0x5
 29365 06e8 49       		.uleb128 0x49
 29366 06e9 13       		.uleb128 0x13
 29367 06ea 3C       		.uleb128 0x3c
 29368 06eb 19       		.uleb128 0x19
 29369 06ec 00       		.byte	0
 29370 06ed 00       		.byte	0
 29371 06ee 6D       		.uleb128 0x6d
 29372 06ef 3A       		.uleb128 0x3a
 29373 06f0 00       		.byte	0
 29374 06f1 3A       		.uleb128 0x3a
 29375 06f2 0B       		.uleb128 0xb
 29376 06f3 3B       		.uleb128 0x3b
 29377 06f4 0B       		.uleb128 0xb
 29378 06f5 18       		.uleb128 0x18
 29379 06f6 13       		.uleb128 0x13
 29380 06f7 00       		.byte	0
 29381 06f8 00       		.byte	0
 29382 06f9 6E       		.uleb128 0x6e
 29383 06fa 13       		.uleb128 0x13
 29384 06fb 01       		.byte	0x1
 29385 06fc 0B       		.uleb128 0xb
 29386 06fd 0B       		.uleb128 0xb
 29387 06fe 3A       		.uleb128 0x3a
 29388 06ff 0B       		.uleb128 0xb
 29389 0700 3B       		.uleb128 0x3b
 29390 0701 0B       		.uleb128 0xb
 29391 0702 6E       		.uleb128 0x6e
 29392 0703 0E       		.uleb128 0xe
 29393 0704 01       		.uleb128 0x1
 29394 0705 13       		.uleb128 0x13
 29395 0706 00       		.byte	0
 29396 0707 00       		.byte	0
 29397 0708 6F       		.uleb128 0x6f
 29398 0709 0D       		.uleb128 0xd
 29399 070a 00       		.byte	0
 29400 070b 03       		.uleb128 0x3
 29401 070c 08       		.uleb128 0x8
 29402 070d 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccKUqHDa.s 			page 781


 29403 070e 0B       		.uleb128 0xb
 29404 070f 3B       		.uleb128 0x3b
 29405 0710 0B       		.uleb128 0xb
 29406 0711 49       		.uleb128 0x49
 29407 0712 13       		.uleb128 0x13
 29408 0713 38       		.uleb128 0x38
 29409 0714 0B       		.uleb128 0xb
 29410 0715 00       		.byte	0
 29411 0716 00       		.byte	0
 29412 0717 70       		.uleb128 0x70
 29413 0718 0F       		.uleb128 0xf
 29414 0719 00       		.byte	0
 29415 071a 0B       		.uleb128 0xb
 29416 071b 0B       		.uleb128 0xb
 29417 071c 00       		.byte	0
 29418 071d 00       		.byte	0
 29419 071e 71       		.uleb128 0x71
 29420 071f 01       		.uleb128 0x1
 29421 0720 01       		.byte	0x1
 29422 0721 49       		.uleb128 0x49
 29423 0722 13       		.uleb128 0x13
 29424 0723 01       		.uleb128 0x1
 29425 0724 13       		.uleb128 0x13
 29426 0725 00       		.byte	0
 29427 0726 00       		.byte	0
 29428 0727 72       		.uleb128 0x72
 29429 0728 21       		.uleb128 0x21
 29430 0729 00       		.byte	0
 29431 072a 49       		.uleb128 0x49
 29432 072b 13       		.uleb128 0x13
 29433 072c 2F       		.uleb128 0x2f
 29434 072d 0B       		.uleb128 0xb
 29435 072e 00       		.byte	0
 29436 072f 00       		.byte	0
 29437 0730 73       		.uleb128 0x73
 29438 0731 15       		.uleb128 0x15
 29439 0732 01       		.byte	0x1
 29440 0733 49       		.uleb128 0x49
 29441 0734 13       		.uleb128 0x13
 29442 0735 01       		.uleb128 0x1
 29443 0736 13       		.uleb128 0x13
 29444 0737 00       		.byte	0
 29445 0738 00       		.byte	0
 29446 0739 74       		.uleb128 0x74
 29447 073a 26       		.uleb128 0x26
 29448 073b 00       		.byte	0
 29449 073c 00       		.byte	0
 29450 073d 00       		.byte	0
 29451 073e 75       		.uleb128 0x75
 29452 073f 15       		.uleb128 0x15
 29453 0740 00       		.byte	0
 29454 0741 00       		.byte	0
 29455 0742 00       		.byte	0
 29456 0743 76       		.uleb128 0x76
 29457 0744 2E       		.uleb128 0x2e
 29458 0745 01       		.byte	0x1
 29459 0746 3F       		.uleb128 0x3f
GAS LISTING /tmp/ccKUqHDa.s 			page 782


 29460 0747 19       		.uleb128 0x19
 29461 0748 03       		.uleb128 0x3
 29462 0749 0E       		.uleb128 0xe
 29463 074a 3A       		.uleb128 0x3a
 29464 074b 0B       		.uleb128 0xb
 29465 074c 3B       		.uleb128 0x3b
 29466 074d 05       		.uleb128 0x5
 29467 074e 49       		.uleb128 0x49
 29468 074f 13       		.uleb128 0x13
 29469 0750 20       		.uleb128 0x20
 29470 0751 0B       		.uleb128 0xb
 29471 0752 01       		.uleb128 0x1
 29472 0753 13       		.uleb128 0x13
 29473 0754 00       		.byte	0
 29474 0755 00       		.byte	0
 29475 0756 77       		.uleb128 0x77
 29476 0757 05       		.uleb128 0x5
 29477 0758 00       		.byte	0
 29478 0759 03       		.uleb128 0x3
 29479 075a 0E       		.uleb128 0xe
 29480 075b 3A       		.uleb128 0x3a
 29481 075c 0B       		.uleb128 0xb
 29482 075d 3B       		.uleb128 0x3b
 29483 075e 05       		.uleb128 0x5
 29484 075f 49       		.uleb128 0x49
 29485 0760 13       		.uleb128 0x13
 29486 0761 00       		.byte	0
 29487 0762 00       		.byte	0
 29488 0763 78       		.uleb128 0x78
 29489 0764 2E       		.uleb128 0x2e
 29490 0765 00       		.byte	0
 29491 0766 3F       		.uleb128 0x3f
 29492 0767 19       		.uleb128 0x19
 29493 0768 03       		.uleb128 0x3
 29494 0769 0E       		.uleb128 0xe
 29495 076a 3A       		.uleb128 0x3a
 29496 076b 0B       		.uleb128 0xb
 29497 076c 3B       		.uleb128 0x3b
 29498 076d 05       		.uleb128 0x5
 29499 076e 49       		.uleb128 0x49
 29500 076f 13       		.uleb128 0x13
 29501 0770 3C       		.uleb128 0x3c
 29502 0771 19       		.uleb128 0x19
 29503 0772 00       		.byte	0
 29504 0773 00       		.byte	0
 29505 0774 79       		.uleb128 0x79
 29506 0775 10       		.uleb128 0x10
 29507 0776 00       		.byte	0
 29508 0777 0B       		.uleb128 0xb
 29509 0778 0B       		.uleb128 0xb
 29510 0779 49       		.uleb128 0x49
 29511 077a 13       		.uleb128 0x13
 29512 077b 00       		.byte	0
 29513 077c 00       		.byte	0
 29514 077d 7A       		.uleb128 0x7a
 29515 077e 3B       		.uleb128 0x3b
 29516 077f 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 783


 29517 0780 03       		.uleb128 0x3
 29518 0781 0E       		.uleb128 0xe
 29519 0782 00       		.byte	0
 29520 0783 00       		.byte	0
 29521 0784 7B       		.uleb128 0x7b
 29522 0785 42       		.uleb128 0x42
 29523 0786 00       		.byte	0
 29524 0787 0B       		.uleb128 0xb
 29525 0788 0B       		.uleb128 0xb
 29526 0789 49       		.uleb128 0x49
 29527 078a 13       		.uleb128 0x13
 29528 078b 00       		.byte	0
 29529 078c 00       		.byte	0
 29530 078d 7C       		.uleb128 0x7c
 29531 078e 17       		.uleb128 0x17
 29532 078f 01       		.byte	0x1
 29533 0790 0B       		.uleb128 0xb
 29534 0791 0B       		.uleb128 0xb
 29535 0792 3A       		.uleb128 0x3a
 29536 0793 0B       		.uleb128 0xb
 29537 0794 3B       		.uleb128 0x3b
 29538 0795 0B       		.uleb128 0xb
 29539 0796 01       		.uleb128 0x1
 29540 0797 13       		.uleb128 0x13
 29541 0798 00       		.byte	0
 29542 0799 00       		.byte	0
 29543 079a 7D       		.uleb128 0x7d
 29544 079b 0D       		.uleb128 0xd
 29545 079c 00       		.byte	0
 29546 079d 03       		.uleb128 0x3
 29547 079e 0E       		.uleb128 0xe
 29548 079f 3A       		.uleb128 0x3a
 29549 07a0 0B       		.uleb128 0xb
 29550 07a1 3B       		.uleb128 0x3b
 29551 07a2 0B       		.uleb128 0xb
 29552 07a3 49       		.uleb128 0x49
 29553 07a4 13       		.uleb128 0x13
 29554 07a5 00       		.byte	0
 29555 07a6 00       		.byte	0
 29556 07a7 7E       		.uleb128 0x7e
 29557 07a8 13       		.uleb128 0x13
 29558 07a9 01       		.byte	0x1
 29559 07aa 03       		.uleb128 0x3
 29560 07ab 08       		.uleb128 0x8
 29561 07ac 0B       		.uleb128 0xb
 29562 07ad 0B       		.uleb128 0xb
 29563 07ae 3A       		.uleb128 0x3a
 29564 07af 0B       		.uleb128 0xb
 29565 07b0 3B       		.uleb128 0x3b
 29566 07b1 0B       		.uleb128 0xb
 29567 07b2 01       		.uleb128 0x1
 29568 07b3 13       		.uleb128 0x13
 29569 07b4 00       		.byte	0
 29570 07b5 00       		.byte	0
 29571 07b6 7F       		.uleb128 0x7f
 29572 07b7 2E       		.uleb128 0x2e
 29573 07b8 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 784


 29574 07b9 3F       		.uleb128 0x3f
 29575 07ba 19       		.uleb128 0x19
 29576 07bb 03       		.uleb128 0x3
 29577 07bc 0E       		.uleb128 0xe
 29578 07bd 3A       		.uleb128 0x3a
 29579 07be 0B       		.uleb128 0xb
 29580 07bf 3B       		.uleb128 0x3b
 29581 07c0 0B       		.uleb128 0xb
 29582 07c1 49       		.uleb128 0x49
 29583 07c2 13       		.uleb128 0x13
 29584 07c3 3C       		.uleb128 0x3c
 29585 07c4 19       		.uleb128 0x19
 29586 07c5 00       		.byte	0
 29587 07c6 00       		.byte	0
 29588 07c7 8001     		.uleb128 0x80
 29589 07c9 15       		.uleb128 0x15
 29590 07ca 01       		.byte	0x1
 29591 07cb 01       		.uleb128 0x1
 29592 07cc 13       		.uleb128 0x13
 29593 07cd 00       		.byte	0
 29594 07ce 00       		.byte	0
 29595 07cf 8101     		.uleb128 0x81
 29596 07d1 16       		.uleb128 0x16
 29597 07d2 00       		.byte	0
 29598 07d3 03       		.uleb128 0x3
 29599 07d4 0E       		.uleb128 0xe
 29600 07d5 3A       		.uleb128 0x3a
 29601 07d6 0B       		.uleb128 0xb
 29602 07d7 3B       		.uleb128 0x3b
 29603 07d8 0B       		.uleb128 0xb
 29604 07d9 00       		.byte	0
 29605 07da 00       		.byte	0
 29606 07db 8201     		.uleb128 0x82
 29607 07dd 21       		.uleb128 0x21
 29608 07de 00       		.byte	0
 29609 07df 00       		.byte	0
 29610 07e0 00       		.byte	0
 29611 07e1 8301     		.uleb128 0x83
 29612 07e3 21       		.uleb128 0x21
 29613 07e4 00       		.byte	0
 29614 07e5 49       		.uleb128 0x49
 29615 07e6 13       		.uleb128 0x13
 29616 07e7 2F       		.uleb128 0x2f
 29617 07e8 05       		.uleb128 0x5
 29618 07e9 00       		.byte	0
 29619 07ea 00       		.byte	0
 29620 07eb 8401     		.uleb128 0x84
 29621 07ed 2E       		.uleb128 0x2e
 29622 07ee 01       		.byte	0x1
 29623 07ef 47       		.uleb128 0x47
 29624 07f0 13       		.uleb128 0x13
 29625 07f1 20       		.uleb128 0x20
 29626 07f2 0B       		.uleb128 0xb
 29627 07f3 64       		.uleb128 0x64
 29628 07f4 13       		.uleb128 0x13
 29629 07f5 01       		.uleb128 0x1
 29630 07f6 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 785


 29631 07f7 00       		.byte	0
 29632 07f8 00       		.byte	0
 29633 07f9 8501     		.uleb128 0x85
 29634 07fb 05       		.uleb128 0x5
 29635 07fc 00       		.byte	0
 29636 07fd 03       		.uleb128 0x3
 29637 07fe 0E       		.uleb128 0xe
 29638 07ff 49       		.uleb128 0x49
 29639 0800 13       		.uleb128 0x13
 29640 0801 34       		.uleb128 0x34
 29641 0802 19       		.uleb128 0x19
 29642 0803 00       		.byte	0
 29643 0804 00       		.byte	0
 29644 0805 8601     		.uleb128 0x86
 29645 0807 2E       		.uleb128 0x2e
 29646 0808 01       		.byte	0x1
 29647 0809 03       		.uleb128 0x3
 29648 080a 0E       		.uleb128 0xe
 29649 080b 3A       		.uleb128 0x3a
 29650 080c 0B       		.uleb128 0xb
 29651 080d 3B       		.uleb128 0x3b
 29652 080e 0B       		.uleb128 0xb
 29653 080f 49       		.uleb128 0x49
 29654 0810 13       		.uleb128 0x13
 29655 0811 20       		.uleb128 0x20
 29656 0812 0B       		.uleb128 0xb
 29657 0813 01       		.uleb128 0x1
 29658 0814 13       		.uleb128 0x13
 29659 0815 00       		.byte	0
 29660 0816 00       		.byte	0
 29661 0817 8701     		.uleb128 0x87
 29662 0819 0B       		.uleb128 0xb
 29663 081a 01       		.byte	0x1
 29664 081b 00       		.byte	0
 29665 081c 00       		.byte	0
 29666 081d 8801     		.uleb128 0x88
 29667 081f 34       		.uleb128 0x34
 29668 0820 00       		.byte	0
 29669 0821 03       		.uleb128 0x3
 29670 0822 0E       		.uleb128 0xe
 29671 0823 3A       		.uleb128 0x3a
 29672 0824 0B       		.uleb128 0xb
 29673 0825 3B       		.uleb128 0x3b
 29674 0826 0B       		.uleb128 0xb
 29675 0827 49       		.uleb128 0x49
 29676 0828 13       		.uleb128 0x13
 29677 0829 00       		.byte	0
 29678 082a 00       		.byte	0
 29679 082b 8901     		.uleb128 0x89
 29680 082d 35       		.uleb128 0x35
 29681 082e 00       		.byte	0
 29682 082f 49       		.uleb128 0x49
 29683 0830 13       		.uleb128 0x13
 29684 0831 00       		.byte	0
 29685 0832 00       		.byte	0
 29686 0833 8A01     		.uleb128 0x8a
 29687 0835 2E       		.uleb128 0x2e
GAS LISTING /tmp/ccKUqHDa.s 			page 786


 29688 0836 01       		.byte	0x1
 29689 0837 47       		.uleb128 0x47
 29690 0838 13       		.uleb128 0x13
 29691 0839 20       		.uleb128 0x20
 29692 083a 0B       		.uleb128 0xb
 29693 083b 01       		.uleb128 0x1
 29694 083c 13       		.uleb128 0x13
 29695 083d 00       		.byte	0
 29696 083e 00       		.byte	0
 29697 083f 8B01     		.uleb128 0x8b
 29698 0841 05       		.uleb128 0x5
 29699 0842 00       		.byte	0
 29700 0843 03       		.uleb128 0x3
 29701 0844 0E       		.uleb128 0xe
 29702 0845 3A       		.uleb128 0x3a
 29703 0846 0B       		.uleb128 0xb
 29704 0847 3B       		.uleb128 0x3b
 29705 0848 0B       		.uleb128 0xb
 29706 0849 49       		.uleb128 0x49
 29707 084a 13       		.uleb128 0x13
 29708 084b 00       		.byte	0
 29709 084c 00       		.byte	0
 29710 084d 8C01     		.uleb128 0x8c
 29711 084f 34       		.uleb128 0x34
 29712 0850 00       		.byte	0
 29713 0851 03       		.uleb128 0x3
 29714 0852 08       		.uleb128 0x8
 29715 0853 3A       		.uleb128 0x3a
 29716 0854 0B       		.uleb128 0xb
 29717 0855 3B       		.uleb128 0x3b
 29718 0856 0B       		.uleb128 0xb
 29719 0857 49       		.uleb128 0x49
 29720 0858 13       		.uleb128 0x13
 29721 0859 00       		.byte	0
 29722 085a 00       		.byte	0
 29723 085b 8D01     		.uleb128 0x8d
 29724 085d 05       		.uleb128 0x5
 29725 085e 00       		.byte	0
 29726 085f 03       		.uleb128 0x3
 29727 0860 08       		.uleb128 0x8
 29728 0861 3A       		.uleb128 0x3a
 29729 0862 0B       		.uleb128 0xb
 29730 0863 3B       		.uleb128 0x3b
 29731 0864 0B       		.uleb128 0xb
 29732 0865 49       		.uleb128 0x49
 29733 0866 13       		.uleb128 0x13
 29734 0867 00       		.byte	0
 29735 0868 00       		.byte	0
 29736 0869 8E01     		.uleb128 0x8e
 29737 086b 2E       		.uleb128 0x2e
 29738 086c 01       		.byte	0x1
 29739 086d 3F       		.uleb128 0x3f
 29740 086e 19       		.uleb128 0x19
 29741 086f 03       		.uleb128 0x3
 29742 0870 0E       		.uleb128 0xe
 29743 0871 3A       		.uleb128 0x3a
 29744 0872 0B       		.uleb128 0xb
GAS LISTING /tmp/ccKUqHDa.s 			page 787


 29745 0873 3B       		.uleb128 0x3b
 29746 0874 0B       		.uleb128 0xb
 29747 0875 49       		.uleb128 0x49
 29748 0876 13       		.uleb128 0x13
 29749 0877 20       		.uleb128 0x20
 29750 0878 0B       		.uleb128 0xb
 29751 0879 01       		.uleb128 0x1
 29752 087a 13       		.uleb128 0x13
 29753 087b 00       		.byte	0
 29754 087c 00       		.byte	0
 29755 087d 8F01     		.uleb128 0x8f
 29756 087f 2E       		.uleb128 0x2e
 29757 0880 01       		.byte	0x1
 29758 0881 3F       		.uleb128 0x3f
 29759 0882 19       		.uleb128 0x19
 29760 0883 03       		.uleb128 0x3
 29761 0884 0E       		.uleb128 0xe
 29762 0885 3A       		.uleb128 0x3a
 29763 0886 0B       		.uleb128 0xb
 29764 0887 3B       		.uleb128 0x3b
 29765 0888 0B       		.uleb128 0xb
 29766 0889 20       		.uleb128 0x20
 29767 088a 0B       		.uleb128 0xb
 29768 088b 01       		.uleb128 0x1
 29769 088c 13       		.uleb128 0x13
 29770 088d 00       		.byte	0
 29771 088e 00       		.byte	0
 29772 088f 9001     		.uleb128 0x90
 29773 0891 05       		.uleb128 0x5
 29774 0892 00       		.byte	0
 29775 0893 03       		.uleb128 0x3
 29776 0894 08       		.uleb128 0x8
 29777 0895 3A       		.uleb128 0x3a
 29778 0896 0B       		.uleb128 0xb
 29779 0897 3B       		.uleb128 0x3b
 29780 0898 05       		.uleb128 0x5
 29781 0899 49       		.uleb128 0x49
 29782 089a 13       		.uleb128 0x13
 29783 089b 00       		.byte	0
 29784 089c 00       		.byte	0
 29785 089d 9101     		.uleb128 0x91
 29786 089f 0B       		.uleb128 0xb
 29787 08a0 00       		.byte	0
 29788 08a1 00       		.byte	0
 29789 08a2 00       		.byte	0
 29790 08a3 9201     		.uleb128 0x92
 29791 08a5 2E       		.uleb128 0x2e
 29792 08a6 01       		.byte	0x1
 29793 08a7 47       		.uleb128 0x47
 29794 08a8 13       		.uleb128 0x13
 29795 08a9 3A       		.uleb128 0x3a
 29796 08aa 0B       		.uleb128 0xb
 29797 08ab 3B       		.uleb128 0x3b
 29798 08ac 05       		.uleb128 0x5
 29799 08ad 20       		.uleb128 0x20
 29800 08ae 0B       		.uleb128 0xb
 29801 08af 64       		.uleb128 0x64
GAS LISTING /tmp/ccKUqHDa.s 			page 788


 29802 08b0 13       		.uleb128 0x13
 29803 08b1 01       		.uleb128 0x1
 29804 08b2 13       		.uleb128 0x13
 29805 08b3 00       		.byte	0
 29806 08b4 00       		.byte	0
 29807 08b5 9301     		.uleb128 0x93
 29808 08b7 34       		.uleb128 0x34
 29809 08b8 00       		.byte	0
 29810 08b9 03       		.uleb128 0x3
 29811 08ba 08       		.uleb128 0x8
 29812 08bb 3A       		.uleb128 0x3a
 29813 08bc 0B       		.uleb128 0xb
 29814 08bd 3B       		.uleb128 0x3b
 29815 08be 05       		.uleb128 0x5
 29816 08bf 49       		.uleb128 0x49
 29817 08c0 13       		.uleb128 0x13
 29818 08c1 00       		.byte	0
 29819 08c2 00       		.byte	0
 29820 08c3 9401     		.uleb128 0x94
 29821 08c5 2E       		.uleb128 0x2e
 29822 08c6 01       		.byte	0x1
 29823 08c7 47       		.uleb128 0x47
 29824 08c8 13       		.uleb128 0x13
 29825 08c9 3A       		.uleb128 0x3a
 29826 08ca 0B       		.uleb128 0xb
 29827 08cb 3B       		.uleb128 0x3b
 29828 08cc 0B       		.uleb128 0xb
 29829 08cd 20       		.uleb128 0x20
 29830 08ce 0B       		.uleb128 0xb
 29831 08cf 64       		.uleb128 0x64
 29832 08d0 13       		.uleb128 0x13
 29833 08d1 01       		.uleb128 0x1
 29834 08d2 13       		.uleb128 0x13
 29835 08d3 00       		.byte	0
 29836 08d4 00       		.byte	0
 29837 08d5 9501     		.uleb128 0x95
 29838 08d7 888201   		.uleb128 0x4108
 29839 08da 00       		.byte	0
 29840 08db 3A       		.uleb128 0x3a
 29841 08dc 0B       		.uleb128 0xb
 29842 08dd 3B       		.uleb128 0x3b
 29843 08de 0B       		.uleb128 0xb
 29844 08df 00       		.byte	0
 29845 08e0 00       		.byte	0
 29846 08e1 9601     		.uleb128 0x96
 29847 08e3 05       		.uleb128 0x5
 29848 08e4 00       		.byte	0
 29849 08e5 31       		.uleb128 0x31
 29850 08e6 13       		.uleb128 0x13
 29851 08e7 00       		.byte	0
 29852 08e8 00       		.byte	0
 29853 08e9 9701     		.uleb128 0x97
 29854 08eb 34       		.uleb128 0x34
 29855 08ec 00       		.byte	0
 29856 08ed 03       		.uleb128 0x3
 29857 08ee 0E       		.uleb128 0xe
 29858 08ef 3A       		.uleb128 0x3a
GAS LISTING /tmp/ccKUqHDa.s 			page 789


 29859 08f0 0B       		.uleb128 0xb
 29860 08f1 3B       		.uleb128 0x3b
 29861 08f2 05       		.uleb128 0x5
 29862 08f3 49       		.uleb128 0x49
 29863 08f4 13       		.uleb128 0x13
 29864 08f5 00       		.byte	0
 29865 08f6 00       		.byte	0
 29866 08f7 9801     		.uleb128 0x98
 29867 08f9 2E       		.uleb128 0x2e
 29868 08fa 00       		.byte	0
 29869 08fb 47       		.uleb128 0x47
 29870 08fc 13       		.uleb128 0x13
 29871 08fd 20       		.uleb128 0x20
 29872 08fe 0B       		.uleb128 0xb
 29873 08ff 00       		.byte	0
 29874 0900 00       		.byte	0
 29875 0901 9901     		.uleb128 0x99
 29876 0903 2E       		.uleb128 0x2e
 29877 0904 01       		.byte	0x1
 29878 0905 03       		.uleb128 0x3
 29879 0906 0E       		.uleb128 0xe
 29880 0907 34       		.uleb128 0x34
 29881 0908 19       		.uleb128 0x19
 29882 0909 20       		.uleb128 0x20
 29883 090a 0B       		.uleb128 0xb
 29884 090b 01       		.uleb128 0x1
 29885 090c 13       		.uleb128 0x13
 29886 090d 00       		.byte	0
 29887 090e 00       		.byte	0
 29888 090f 9A01     		.uleb128 0x9a
 29889 0911 0B       		.uleb128 0xb
 29890 0912 01       		.byte	0x1
 29891 0913 01       		.uleb128 0x1
 29892 0914 13       		.uleb128 0x13
 29893 0915 00       		.byte	0
 29894 0916 00       		.byte	0
 29895 0917 9B01     		.uleb128 0x9b
 29896 0919 2E       		.uleb128 0x2e
 29897 091a 01       		.byte	0x1
 29898 091b 31       		.uleb128 0x31
 29899 091c 13       		.uleb128 0x13
 29900 091d 11       		.uleb128 0x11
 29901 091e 01       		.uleb128 0x1
 29902 091f 12       		.uleb128 0x12
 29903 0920 07       		.uleb128 0x7
 29904 0921 40       		.uleb128 0x40
 29905 0922 18       		.uleb128 0x18
 29906 0923 64       		.uleb128 0x64
 29907 0924 13       		.uleb128 0x13
 29908 0925 9742     		.uleb128 0x2117
 29909 0927 19       		.uleb128 0x19
 29910 0928 01       		.uleb128 0x1
 29911 0929 13       		.uleb128 0x13
 29912 092a 00       		.byte	0
 29913 092b 00       		.byte	0
 29914 092c 9C01     		.uleb128 0x9c
 29915 092e 05       		.uleb128 0x5
GAS LISTING /tmp/ccKUqHDa.s 			page 790


 29916 092f 00       		.byte	0
 29917 0930 31       		.uleb128 0x31
 29918 0931 13       		.uleb128 0x13
 29919 0932 02       		.uleb128 0x2
 29920 0933 17       		.uleb128 0x17
 29921 0934 00       		.byte	0
 29922 0935 00       		.byte	0
 29923 0936 9D01     		.uleb128 0x9d
 29924 0938 1D       		.uleb128 0x1d
 29925 0939 01       		.byte	0x1
 29926 093a 31       		.uleb128 0x31
 29927 093b 13       		.uleb128 0x13
 29928 093c 52       		.uleb128 0x52
 29929 093d 01       		.uleb128 0x1
 29930 093e 55       		.uleb128 0x55
 29931 093f 17       		.uleb128 0x17
 29932 0940 58       		.uleb128 0x58
 29933 0941 0B       		.uleb128 0xb
 29934 0942 59       		.uleb128 0x59
 29935 0943 0B       		.uleb128 0xb
 29936 0944 01       		.uleb128 0x1
 29937 0945 13       		.uleb128 0x13
 29938 0946 00       		.byte	0
 29939 0947 00       		.byte	0
 29940 0948 9E01     		.uleb128 0x9e
 29941 094a 05       		.uleb128 0x5
 29942 094b 00       		.byte	0
 29943 094c 31       		.uleb128 0x31
 29944 094d 13       		.uleb128 0x13
 29945 094e 1C       		.uleb128 0x1c
 29946 094f 0D       		.uleb128 0xd
 29947 0950 00       		.byte	0
 29948 0951 00       		.byte	0
 29949 0952 9F01     		.uleb128 0x9f
 29950 0954 1D       		.uleb128 0x1d
 29951 0955 01       		.byte	0x1
 29952 0956 31       		.uleb128 0x31
 29953 0957 13       		.uleb128 0x13
 29954 0958 11       		.uleb128 0x11
 29955 0959 01       		.uleb128 0x1
 29956 095a 12       		.uleb128 0x12
 29957 095b 07       		.uleb128 0x7
 29958 095c 58       		.uleb128 0x58
 29959 095d 0B       		.uleb128 0xb
 29960 095e 59       		.uleb128 0x59
 29961 095f 0B       		.uleb128 0xb
 29962 0960 01       		.uleb128 0x1
 29963 0961 13       		.uleb128 0x13
 29964 0962 00       		.byte	0
 29965 0963 00       		.byte	0
 29966 0964 A001     		.uleb128 0xa0
 29967 0966 1D       		.uleb128 0x1d
 29968 0967 01       		.byte	0x1
 29969 0968 31       		.uleb128 0x31
 29970 0969 13       		.uleb128 0x13
 29971 096a 52       		.uleb128 0x52
 29972 096b 01       		.uleb128 0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 791


 29973 096c 55       		.uleb128 0x55
 29974 096d 17       		.uleb128 0x17
 29975 096e 58       		.uleb128 0x58
 29976 096f 0B       		.uleb128 0xb
 29977 0970 59       		.uleb128 0x59
 29978 0971 0B       		.uleb128 0xb
 29979 0972 00       		.byte	0
 29980 0973 00       		.byte	0
 29981 0974 A101     		.uleb128 0xa1
 29982 0976 0B       		.uleb128 0xb
 29983 0977 01       		.byte	0x1
 29984 0978 55       		.uleb128 0x55
 29985 0979 17       		.uleb128 0x17
 29986 097a 00       		.byte	0
 29987 097b 00       		.byte	0
 29988 097c A201     		.uleb128 0xa2
 29989 097e 34       		.uleb128 0x34
 29990 097f 00       		.byte	0
 29991 0980 31       		.uleb128 0x31
 29992 0981 13       		.uleb128 0x13
 29993 0982 02       		.uleb128 0x2
 29994 0983 17       		.uleb128 0x17
 29995 0984 00       		.byte	0
 29996 0985 00       		.byte	0
 29997 0986 A301     		.uleb128 0xa3
 29998 0988 898201   		.uleb128 0x4109
 29999 098b 00       		.byte	0
 30000 098c 11       		.uleb128 0x11
 30001 098d 01       		.uleb128 0x1
 30002 098e 9542     		.uleb128 0x2115
 30003 0990 19       		.uleb128 0x19
 30004 0991 31       		.uleb128 0x31
 30005 0992 13       		.uleb128 0x13
 30006 0993 00       		.byte	0
 30007 0994 00       		.byte	0
 30008 0995 A401     		.uleb128 0xa4
 30009 0997 2E       		.uleb128 0x2e
 30010 0998 01       		.byte	0x1
 30011 0999 31       		.uleb128 0x31
 30012 099a 13       		.uleb128 0x13
 30013 099b 6E       		.uleb128 0x6e
 30014 099c 0E       		.uleb128 0xe
 30015 099d 11       		.uleb128 0x11
 30016 099e 01       		.uleb128 0x1
 30017 099f 12       		.uleb128 0x12
 30018 09a0 07       		.uleb128 0x7
 30019 09a1 40       		.uleb128 0x40
 30020 09a2 18       		.uleb128 0x18
 30021 09a3 64       		.uleb128 0x64
 30022 09a4 13       		.uleb128 0x13
 30023 09a5 9742     		.uleb128 0x2117
 30024 09a7 19       		.uleb128 0x19
 30025 09a8 01       		.uleb128 0x1
 30026 09a9 13       		.uleb128 0x13
 30027 09aa 00       		.byte	0
 30028 09ab 00       		.byte	0
 30029 09ac A501     		.uleb128 0xa5
GAS LISTING /tmp/ccKUqHDa.s 			page 792


 30030 09ae 1D       		.uleb128 0x1d
 30031 09af 01       		.byte	0x1
 30032 09b0 31       		.uleb128 0x31
 30033 09b1 13       		.uleb128 0x13
 30034 09b2 52       		.uleb128 0x52
 30035 09b3 01       		.uleb128 0x1
 30036 09b4 55       		.uleb128 0x55
 30037 09b5 17       		.uleb128 0x17
 30038 09b6 58       		.uleb128 0x58
 30039 09b7 0B       		.uleb128 0xb
 30040 09b8 59       		.uleb128 0x59
 30041 09b9 05       		.uleb128 0x5
 30042 09ba 01       		.uleb128 0x1
 30043 09bb 13       		.uleb128 0x13
 30044 09bc 00       		.byte	0
 30045 09bd 00       		.byte	0
 30046 09be A601     		.uleb128 0xa6
 30047 09c0 1D       		.uleb128 0x1d
 30048 09c1 01       		.byte	0x1
 30049 09c2 31       		.uleb128 0x31
 30050 09c3 13       		.uleb128 0x13
 30051 09c4 11       		.uleb128 0x11
 30052 09c5 01       		.uleb128 0x1
 30053 09c6 12       		.uleb128 0x12
 30054 09c7 07       		.uleb128 0x7
 30055 09c8 58       		.uleb128 0x58
 30056 09c9 0B       		.uleb128 0xb
 30057 09ca 59       		.uleb128 0x59
 30058 09cb 0B       		.uleb128 0xb
 30059 09cc 00       		.byte	0
 30060 09cd 00       		.byte	0
 30061 09ce A701     		.uleb128 0xa7
 30062 09d0 0B       		.uleb128 0xb
 30063 09d1 01       		.byte	0x1
 30064 09d2 11       		.uleb128 0x11
 30065 09d3 01       		.uleb128 0x1
 30066 09d4 12       		.uleb128 0x12
 30067 09d5 07       		.uleb128 0x7
 30068 09d6 00       		.byte	0
 30069 09d7 00       		.byte	0
 30070 09d8 A801     		.uleb128 0xa8
 30071 09da 1D       		.uleb128 0x1d
 30072 09db 01       		.byte	0x1
 30073 09dc 31       		.uleb128 0x31
 30074 09dd 13       		.uleb128 0x13
 30075 09de 11       		.uleb128 0x11
 30076 09df 01       		.uleb128 0x1
 30077 09e0 12       		.uleb128 0x12
 30078 09e1 07       		.uleb128 0x7
 30079 09e2 58       		.uleb128 0x58
 30080 09e3 0B       		.uleb128 0xb
 30081 09e4 59       		.uleb128 0x59
 30082 09e5 05       		.uleb128 0x5
 30083 09e6 00       		.byte	0
 30084 09e7 00       		.byte	0
 30085 09e8 A901     		.uleb128 0xa9
 30086 09ea 898201   		.uleb128 0x4109
GAS LISTING /tmp/ccKUqHDa.s 			page 793


 30087 09ed 01       		.byte	0x1
 30088 09ee 11       		.uleb128 0x11
 30089 09ef 01       		.uleb128 0x1
 30090 09f0 31       		.uleb128 0x31
 30091 09f1 13       		.uleb128 0x13
 30092 09f2 00       		.byte	0
 30093 09f3 00       		.byte	0
 30094 09f4 AA01     		.uleb128 0xaa
 30095 09f6 8A8201   		.uleb128 0x410a
 30096 09f9 00       		.byte	0
 30097 09fa 02       		.uleb128 0x2
 30098 09fb 18       		.uleb128 0x18
 30099 09fc 9142     		.uleb128 0x2111
 30100 09fe 18       		.uleb128 0x18
 30101 09ff 00       		.byte	0
 30102 0a00 00       		.byte	0
 30103 0a01 AB01     		.uleb128 0xab
 30104 0a03 1D       		.uleb128 0x1d
 30105 0a04 01       		.byte	0x1
 30106 0a05 31       		.uleb128 0x31
 30107 0a06 13       		.uleb128 0x13
 30108 0a07 52       		.uleb128 0x52
 30109 0a08 01       		.uleb128 0x1
 30110 0a09 55       		.uleb128 0x55
 30111 0a0a 17       		.uleb128 0x17
 30112 0a0b 58       		.uleb128 0x58
 30113 0a0c 0B       		.uleb128 0xb
 30114 0a0d 59       		.uleb128 0x59
 30115 0a0e 05       		.uleb128 0x5
 30116 0a0f 00       		.byte	0
 30117 0a10 00       		.byte	0
 30118 0a11 AC01     		.uleb128 0xac
 30119 0a13 34       		.uleb128 0x34
 30120 0a14 00       		.byte	0
 30121 0a15 31       		.uleb128 0x31
 30122 0a16 13       		.uleb128 0x13
 30123 0a17 1C       		.uleb128 0x1c
 30124 0a18 0B       		.uleb128 0xb
 30125 0a19 00       		.byte	0
 30126 0a1a 00       		.byte	0
 30127 0a1b AD01     		.uleb128 0xad
 30128 0a1d 2E       		.uleb128 0x2e
 30129 0a1e 01       		.byte	0x1
 30130 0a1f 47       		.uleb128 0x47
 30131 0a20 13       		.uleb128 0x13
 30132 0a21 11       		.uleb128 0x11
 30133 0a22 01       		.uleb128 0x1
 30134 0a23 12       		.uleb128 0x12
 30135 0a24 07       		.uleb128 0x7
 30136 0a25 40       		.uleb128 0x40
 30137 0a26 18       		.uleb128 0x18
 30138 0a27 9742     		.uleb128 0x2117
 30139 0a29 19       		.uleb128 0x19
 30140 0a2a 01       		.uleb128 0x1
 30141 0a2b 13       		.uleb128 0x13
 30142 0a2c 00       		.byte	0
 30143 0a2d 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 794


 30144 0a2e AE01     		.uleb128 0xae
 30145 0a30 05       		.uleb128 0x5
 30146 0a31 00       		.byte	0
 30147 0a32 03       		.uleb128 0x3
 30148 0a33 0E       		.uleb128 0xe
 30149 0a34 3A       		.uleb128 0x3a
 30150 0a35 0B       		.uleb128 0xb
 30151 0a36 3B       		.uleb128 0x3b
 30152 0a37 05       		.uleb128 0x5
 30153 0a38 49       		.uleb128 0x49
 30154 0a39 13       		.uleb128 0x13
 30155 0a3a 02       		.uleb128 0x2
 30156 0a3b 18       		.uleb128 0x18
 30157 0a3c 00       		.byte	0
 30158 0a3d 00       		.byte	0
 30159 0a3e AF01     		.uleb128 0xaf
 30160 0a40 34       		.uleb128 0x34
 30161 0a41 00       		.byte	0
 30162 0a42 03       		.uleb128 0x3
 30163 0a43 08       		.uleb128 0x8
 30164 0a44 3A       		.uleb128 0x3a
 30165 0a45 0B       		.uleb128 0xb
 30166 0a46 3B       		.uleb128 0x3b
 30167 0a47 05       		.uleb128 0x5
 30168 0a48 49       		.uleb128 0x49
 30169 0a49 13       		.uleb128 0x13
 30170 0a4a 1C       		.uleb128 0x1c
 30171 0a4b 0B       		.uleb128 0xb
 30172 0a4c 00       		.byte	0
 30173 0a4d 00       		.byte	0
 30174 0a4e B001     		.uleb128 0xb0
 30175 0a50 34       		.uleb128 0x34
 30176 0a51 00       		.byte	0
 30177 0a52 03       		.uleb128 0x3
 30178 0a53 08       		.uleb128 0x8
 30179 0a54 3A       		.uleb128 0x3a
 30180 0a55 0B       		.uleb128 0xb
 30181 0a56 3B       		.uleb128 0x3b
 30182 0a57 05       		.uleb128 0x5
 30183 0a58 49       		.uleb128 0x49
 30184 0a59 13       		.uleb128 0x13
 30185 0a5a 1C       		.uleb128 0x1c
 30186 0a5b 0A       		.uleb128 0xa
 30187 0a5c 00       		.byte	0
 30188 0a5d 00       		.byte	0
 30189 0a5e B101     		.uleb128 0xb1
 30190 0a60 34       		.uleb128 0x34
 30191 0a61 00       		.byte	0
 30192 0a62 03       		.uleb128 0x3
 30193 0a63 0E       		.uleb128 0xe
 30194 0a64 3A       		.uleb128 0x3a
 30195 0a65 0B       		.uleb128 0xb
 30196 0a66 3B       		.uleb128 0x3b
 30197 0a67 05       		.uleb128 0x5
 30198 0a68 49       		.uleb128 0x49
 30199 0a69 13       		.uleb128 0x13
 30200 0a6a 1C       		.uleb128 0x1c
GAS LISTING /tmp/ccKUqHDa.s 			page 795


 30201 0a6b 0B       		.uleb128 0xb
 30202 0a6c 00       		.byte	0
 30203 0a6d 00       		.byte	0
 30204 0a6e B201     		.uleb128 0xb2
 30205 0a70 34       		.uleb128 0x34
 30206 0a71 00       		.byte	0
 30207 0a72 03       		.uleb128 0x3
 30208 0a73 08       		.uleb128 0x8
 30209 0a74 3A       		.uleb128 0x3a
 30210 0a75 0B       		.uleb128 0xb
 30211 0a76 3B       		.uleb128 0x3b
 30212 0a77 05       		.uleb128 0x5
 30213 0a78 49       		.uleb128 0x49
 30214 0a79 13       		.uleb128 0x13
 30215 0a7a 02       		.uleb128 0x2
 30216 0a7b 17       		.uleb128 0x17
 30217 0a7c 00       		.byte	0
 30218 0a7d 00       		.byte	0
 30219 0a7e B301     		.uleb128 0xb3
 30220 0a80 34       		.uleb128 0x34
 30221 0a81 00       		.byte	0
 30222 0a82 03       		.uleb128 0x3
 30223 0a83 0E       		.uleb128 0xe
 30224 0a84 3A       		.uleb128 0x3a
 30225 0a85 0B       		.uleb128 0xb
 30226 0a86 3B       		.uleb128 0x3b
 30227 0a87 05       		.uleb128 0x5
 30228 0a88 49       		.uleb128 0x49
 30229 0a89 13       		.uleb128 0x13
 30230 0a8a 02       		.uleb128 0x2
 30231 0a8b 17       		.uleb128 0x17
 30232 0a8c 00       		.byte	0
 30233 0a8d 00       		.byte	0
 30234 0a8e B401     		.uleb128 0xb4
 30235 0a90 05       		.uleb128 0x5
 30236 0a91 00       		.byte	0
 30237 0a92 31       		.uleb128 0x31
 30238 0a93 13       		.uleb128 0x13
 30239 0a94 02       		.uleb128 0x2
 30240 0a95 18       		.uleb128 0x18
 30241 0a96 00       		.byte	0
 30242 0a97 00       		.byte	0
 30243 0a98 B501     		.uleb128 0xb5
 30244 0a9a 34       		.uleb128 0x34
 30245 0a9b 00       		.byte	0
 30246 0a9c 31       		.uleb128 0x31
 30247 0a9d 13       		.uleb128 0x13
 30248 0a9e 00       		.byte	0
 30249 0a9f 00       		.byte	0
 30250 0aa0 B601     		.uleb128 0xb6
 30251 0aa2 0B       		.uleb128 0xb
 30252 0aa3 01       		.byte	0x1
 30253 0aa4 11       		.uleb128 0x11
 30254 0aa5 01       		.uleb128 0x1
 30255 0aa6 12       		.uleb128 0x12
 30256 0aa7 07       		.uleb128 0x7
 30257 0aa8 01       		.uleb128 0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 796


 30258 0aa9 13       		.uleb128 0x13
 30259 0aaa 00       		.byte	0
 30260 0aab 00       		.byte	0
 30261 0aac B701     		.uleb128 0xb7
 30262 0aae 34       		.uleb128 0x34
 30263 0aaf 00       		.byte	0
 30264 0ab0 31       		.uleb128 0x31
 30265 0ab1 13       		.uleb128 0x13
 30266 0ab2 02       		.uleb128 0x2
 30267 0ab3 18       		.uleb128 0x18
 30268 0ab4 00       		.byte	0
 30269 0ab5 00       		.byte	0
 30270 0ab6 B801     		.uleb128 0xb8
 30271 0ab8 2E       		.uleb128 0x2e
 30272 0ab9 01       		.byte	0x1
 30273 0aba 3F       		.uleb128 0x3f
 30274 0abb 19       		.uleb128 0x19
 30275 0abc 03       		.uleb128 0x3
 30276 0abd 0E       		.uleb128 0xe
 30277 0abe 3A       		.uleb128 0x3a
 30278 0abf 0B       		.uleb128 0xb
 30279 0ac0 3B       		.uleb128 0x3b
 30280 0ac1 0B       		.uleb128 0xb
 30281 0ac2 49       		.uleb128 0x49
 30282 0ac3 13       		.uleb128 0x13
 30283 0ac4 11       		.uleb128 0x11
 30284 0ac5 01       		.uleb128 0x1
 30285 0ac6 12       		.uleb128 0x12
 30286 0ac7 07       		.uleb128 0x7
 30287 0ac8 40       		.uleb128 0x40
 30288 0ac9 18       		.uleb128 0x18
 30289 0aca 9742     		.uleb128 0x2117
 30290 0acc 19       		.uleb128 0x19
 30291 0acd 01       		.uleb128 0x1
 30292 0ace 13       		.uleb128 0x13
 30293 0acf 00       		.byte	0
 30294 0ad0 00       		.byte	0
 30295 0ad1 B901     		.uleb128 0xb9
 30296 0ad3 05       		.uleb128 0x5
 30297 0ad4 00       		.byte	0
 30298 0ad5 03       		.uleb128 0x3
 30299 0ad6 0E       		.uleb128 0xe
 30300 0ad7 3A       		.uleb128 0x3a
 30301 0ad8 0B       		.uleb128 0xb
 30302 0ad9 3B       		.uleb128 0x3b
 30303 0ada 0B       		.uleb128 0xb
 30304 0adb 49       		.uleb128 0x49
 30305 0adc 13       		.uleb128 0x13
 30306 0add 02       		.uleb128 0x2
 30307 0ade 17       		.uleb128 0x17
 30308 0adf 00       		.byte	0
 30309 0ae0 00       		.byte	0
 30310 0ae1 BA01     		.uleb128 0xba
 30311 0ae3 0B       		.uleb128 0xb
 30312 0ae4 01       		.byte	0x1
 30313 0ae5 55       		.uleb128 0x55
 30314 0ae6 17       		.uleb128 0x17
GAS LISTING /tmp/ccKUqHDa.s 			page 797


 30315 0ae7 01       		.uleb128 0x1
 30316 0ae8 13       		.uleb128 0x13
 30317 0ae9 00       		.byte	0
 30318 0aea 00       		.byte	0
 30319 0aeb BB01     		.uleb128 0xbb
 30320 0aed 34       		.uleb128 0x34
 30321 0aee 00       		.byte	0
 30322 0aef 03       		.uleb128 0x3
 30323 0af0 08       		.uleb128 0x8
 30324 0af1 3A       		.uleb128 0x3a
 30325 0af2 0B       		.uleb128 0xb
 30326 0af3 3B       		.uleb128 0x3b
 30327 0af4 0B       		.uleb128 0xb
 30328 0af5 49       		.uleb128 0x49
 30329 0af6 13       		.uleb128 0x13
 30330 0af7 02       		.uleb128 0x2
 30331 0af8 17       		.uleb128 0x17
 30332 0af9 00       		.byte	0
 30333 0afa 00       		.byte	0
 30334 0afb BC01     		.uleb128 0xbc
 30335 0afd 34       		.uleb128 0x34
 30336 0afe 00       		.byte	0
 30337 0aff 03       		.uleb128 0x3
 30338 0b00 0E       		.uleb128 0xe
 30339 0b01 3A       		.uleb128 0x3a
 30340 0b02 0B       		.uleb128 0xb
 30341 0b03 3B       		.uleb128 0x3b
 30342 0b04 0B       		.uleb128 0xb
 30343 0b05 49       		.uleb128 0x49
 30344 0b06 13       		.uleb128 0x13
 30345 0b07 02       		.uleb128 0x2
 30346 0b08 17       		.uleb128 0x17
 30347 0b09 00       		.byte	0
 30348 0b0a 00       		.byte	0
 30349 0b0b BD01     		.uleb128 0xbd
 30350 0b0d 34       		.uleb128 0x34
 30351 0b0e 00       		.byte	0
 30352 0b0f 03       		.uleb128 0x3
 30353 0b10 0E       		.uleb128 0xe
 30354 0b11 3A       		.uleb128 0x3a
 30355 0b12 0B       		.uleb128 0xb
 30356 0b13 3B       		.uleb128 0x3b
 30357 0b14 0B       		.uleb128 0xb
 30358 0b15 49       		.uleb128 0x49
 30359 0b16 13       		.uleb128 0x13
 30360 0b17 02       		.uleb128 0x2
 30361 0b18 18       		.uleb128 0x18
 30362 0b19 00       		.byte	0
 30363 0b1a 00       		.byte	0
 30364 0b1b BE01     		.uleb128 0xbe
 30365 0b1d 2E       		.uleb128 0x2e
 30366 0b1e 01       		.byte	0x1
 30367 0b1f 03       		.uleb128 0x3
 30368 0b20 0E       		.uleb128 0xe
 30369 0b21 34       		.uleb128 0x34
 30370 0b22 19       		.uleb128 0x19
 30371 0b23 3C       		.uleb128 0x3c
GAS LISTING /tmp/ccKUqHDa.s 			page 798


 30372 0b24 19       		.uleb128 0x19
 30373 0b25 64       		.uleb128 0x64
 30374 0b26 13       		.uleb128 0x13
 30375 0b27 01       		.uleb128 0x1
 30376 0b28 13       		.uleb128 0x13
 30377 0b29 00       		.byte	0
 30378 0b2a 00       		.byte	0
 30379 0b2b BF01     		.uleb128 0xbf
 30380 0b2d 2E       		.uleb128 0x2e
 30381 0b2e 01       		.byte	0x1
 30382 0b2f 03       		.uleb128 0x3
 30383 0b30 0E       		.uleb128 0xe
 30384 0b31 49       		.uleb128 0x49
 30385 0b32 13       		.uleb128 0x13
 30386 0b33 34       		.uleb128 0x34
 30387 0b34 19       		.uleb128 0x19
 30388 0b35 20       		.uleb128 0x20
 30389 0b36 0B       		.uleb128 0xb
 30390 0b37 64       		.uleb128 0x64
 30391 0b38 13       		.uleb128 0x13
 30392 0b39 01       		.uleb128 0x1
 30393 0b3a 13       		.uleb128 0x13
 30394 0b3b 00       		.byte	0
 30395 0b3c 00       		.byte	0
 30396 0b3d C001     		.uleb128 0xc0
 30397 0b3f 2E       		.uleb128 0x2e
 30398 0b40 01       		.byte	0x1
 30399 0b41 03       		.uleb128 0x3
 30400 0b42 0E       		.uleb128 0xe
 30401 0b43 49       		.uleb128 0x49
 30402 0b44 13       		.uleb128 0x13
 30403 0b45 34       		.uleb128 0x34
 30404 0b46 19       		.uleb128 0x19
 30405 0b47 11       		.uleb128 0x11
 30406 0b48 01       		.uleb128 0x1
 30407 0b49 12       		.uleb128 0x12
 30408 0b4a 07       		.uleb128 0x7
 30409 0b4b 40       		.uleb128 0x40
 30410 0b4c 18       		.uleb128 0x18
 30411 0b4d 9742     		.uleb128 0x2117
 30412 0b4f 19       		.uleb128 0x19
 30413 0b50 00       		.byte	0
 30414 0b51 00       		.byte	0
 30415 0b52 C101     		.uleb128 0xc1
 30416 0b54 05       		.uleb128 0x5
 30417 0b55 00       		.byte	0
 30418 0b56 49       		.uleb128 0x49
 30419 0b57 13       		.uleb128 0x13
 30420 0b58 02       		.uleb128 0x2
 30421 0b59 18       		.uleb128 0x18
 30422 0b5a 00       		.byte	0
 30423 0b5b 00       		.byte	0
 30424 0b5c C201     		.uleb128 0xc2
 30425 0b5e 05       		.uleb128 0x5
 30426 0b5f 00       		.byte	0
 30427 0b60 31       		.uleb128 0x31
 30428 0b61 13       		.uleb128 0x13
GAS LISTING /tmp/ccKUqHDa.s 			page 799


 30429 0b62 1C       		.uleb128 0x1c
 30430 0b63 0B       		.uleb128 0xb
 30431 0b64 00       		.byte	0
 30432 0b65 00       		.byte	0
 30433 0b66 C301     		.uleb128 0xc3
 30434 0b68 898201   		.uleb128 0x4109
 30435 0b6b 00       		.byte	0
 30436 0b6c 11       		.uleb128 0x11
 30437 0b6d 01       		.uleb128 0x1
 30438 0b6e 31       		.uleb128 0x31
 30439 0b6f 13       		.uleb128 0x13
 30440 0b70 00       		.byte	0
 30441 0b71 00       		.byte	0
 30442 0b72 C401     		.uleb128 0xc4
 30443 0b74 898201   		.uleb128 0x4109
 30444 0b77 01       		.byte	0x1
 30445 0b78 11       		.uleb128 0x11
 30446 0b79 01       		.uleb128 0x1
 30447 0b7a 31       		.uleb128 0x31
 30448 0b7b 13       		.uleb128 0x13
 30449 0b7c 01       		.uleb128 0x1
 30450 0b7d 13       		.uleb128 0x13
 30451 0b7e 00       		.byte	0
 30452 0b7f 00       		.byte	0
 30453 0b80 C501     		.uleb128 0xc5
 30454 0b82 34       		.uleb128 0x34
 30455 0b83 00       		.byte	0
 30456 0b84 03       		.uleb128 0x3
 30457 0b85 08       		.uleb128 0x8
 30458 0b86 3A       		.uleb128 0x3a
 30459 0b87 0B       		.uleb128 0xb
 30460 0b88 3B       		.uleb128 0x3b
 30461 0b89 0B       		.uleb128 0xb
 30462 0b8a 49       		.uleb128 0x49
 30463 0b8b 13       		.uleb128 0x13
 30464 0b8c 02       		.uleb128 0x2
 30465 0b8d 18       		.uleb128 0x18
 30466 0b8e 00       		.byte	0
 30467 0b8f 00       		.byte	0
 30468 0b90 C601     		.uleb128 0xc6
 30469 0b92 1D       		.uleb128 0x1d
 30470 0b93 01       		.byte	0x1
 30471 0b94 31       		.uleb128 0x31
 30472 0b95 13       		.uleb128 0x13
 30473 0b96 11       		.uleb128 0x11
 30474 0b97 01       		.uleb128 0x1
 30475 0b98 12       		.uleb128 0x12
 30476 0b99 07       		.uleb128 0x7
 30477 0b9a 58       		.uleb128 0x58
 30478 0b9b 0B       		.uleb128 0xb
 30479 0b9c 59       		.uleb128 0x59
 30480 0b9d 05       		.uleb128 0x5
 30481 0b9e 01       		.uleb128 0x1
 30482 0b9f 13       		.uleb128 0x13
 30483 0ba0 00       		.byte	0
 30484 0ba1 00       		.byte	0
 30485 0ba2 C701     		.uleb128 0xc7
GAS LISTING /tmp/ccKUqHDa.s 			page 800


 30486 0ba4 898201   		.uleb128 0x4109
 30487 0ba7 01       		.byte	0x1
 30488 0ba8 11       		.uleb128 0x11
 30489 0ba9 01       		.uleb128 0x1
 30490 0baa 01       		.uleb128 0x1
 30491 0bab 13       		.uleb128 0x13
 30492 0bac 00       		.byte	0
 30493 0bad 00       		.byte	0
 30494 0bae C801     		.uleb128 0xc8
 30495 0bb0 2E       		.uleb128 0x2e
 30496 0bb1 01       		.byte	0x1
 30497 0bb2 03       		.uleb128 0x3
 30498 0bb3 0E       		.uleb128 0xe
 30499 0bb4 49       		.uleb128 0x49
 30500 0bb5 13       		.uleb128 0x13
 30501 0bb6 34       		.uleb128 0x34
 30502 0bb7 19       		.uleb128 0x19
 30503 0bb8 20       		.uleb128 0x20
 30504 0bb9 0B       		.uleb128 0xb
 30505 0bba 64       		.uleb128 0x64
 30506 0bbb 13       		.uleb128 0x13
 30507 0bbc 00       		.byte	0
 30508 0bbd 00       		.byte	0
 30509 0bbe C901     		.uleb128 0xc9
 30510 0bc0 34       		.uleb128 0x34
 30511 0bc1 00       		.byte	0
 30512 0bc2 03       		.uleb128 0x3
 30513 0bc3 0E       		.uleb128 0xe
 30514 0bc4 49       		.uleb128 0x49
 30515 0bc5 13       		.uleb128 0x13
 30516 0bc6 34       		.uleb128 0x34
 30517 0bc7 19       		.uleb128 0x19
 30518 0bc8 00       		.byte	0
 30519 0bc9 00       		.byte	0
 30520 0bca CA01     		.uleb128 0xca
 30521 0bcc 34       		.uleb128 0x34
 30522 0bcd 00       		.byte	0
 30523 0bce 03       		.uleb128 0x3
 30524 0bcf 0E       		.uleb128 0xe
 30525 0bd0 49       		.uleb128 0x49
 30526 0bd1 13       		.uleb128 0x13
 30527 0bd2 34       		.uleb128 0x34
 30528 0bd3 19       		.uleb128 0x19
 30529 0bd4 02       		.uleb128 0x2
 30530 0bd5 17       		.uleb128 0x17
 30531 0bd6 00       		.byte	0
 30532 0bd7 00       		.byte	0
 30533 0bd8 CB01     		.uleb128 0xcb
 30534 0bda 898201   		.uleb128 0x4109
 30535 0bdd 01       		.byte	0x1
 30536 0bde 11       		.uleb128 0x11
 30537 0bdf 01       		.uleb128 0x1
 30538 0be0 00       		.byte	0
 30539 0be1 00       		.byte	0
 30540 0be2 CC01     		.uleb128 0xcc
 30541 0be4 2E       		.uleb128 0x2e
 30542 0be5 01       		.byte	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 801


 30543 0be6 03       		.uleb128 0x3
 30544 0be7 0E       		.uleb128 0xe
 30545 0be8 34       		.uleb128 0x34
 30546 0be9 19       		.uleb128 0x19
 30547 0bea 11       		.uleb128 0x11
 30548 0beb 01       		.uleb128 0x1
 30549 0bec 12       		.uleb128 0x12
 30550 0bed 07       		.uleb128 0x7
 30551 0bee 40       		.uleb128 0x40
 30552 0bef 18       		.uleb128 0x18
 30553 0bf0 9742     		.uleb128 0x2117
 30554 0bf2 19       		.uleb128 0x19
 30555 0bf3 01       		.uleb128 0x1
 30556 0bf4 13       		.uleb128 0x13
 30557 0bf5 00       		.byte	0
 30558 0bf6 00       		.byte	0
 30559 0bf7 CD01     		.uleb128 0xcd
 30560 0bf9 05       		.uleb128 0x5
 30561 0bfa 00       		.byte	0
 30562 0bfb 31       		.uleb128 0x31
 30563 0bfc 13       		.uleb128 0x13
 30564 0bfd 1C       		.uleb128 0x1c
 30565 0bfe 05       		.uleb128 0x5
 30566 0bff 00       		.byte	0
 30567 0c00 00       		.byte	0
 30568 0c01 CE01     		.uleb128 0xce
 30569 0c03 898201   		.uleb128 0x4109
 30570 0c06 01       		.byte	0x1
 30571 0c07 11       		.uleb128 0x11
 30572 0c08 01       		.uleb128 0x1
 30573 0c09 9542     		.uleb128 0x2115
 30574 0c0b 19       		.uleb128 0x19
 30575 0c0c 31       		.uleb128 0x31
 30576 0c0d 13       		.uleb128 0x13
 30577 0c0e 00       		.byte	0
 30578 0c0f 00       		.byte	0
 30579 0c10 CF01     		.uleb128 0xcf
 30580 0c12 8A8201   		.uleb128 0x410a
 30581 0c15 00       		.byte	0
 30582 0c16 02       		.uleb128 0x2
 30583 0c17 18       		.uleb128 0x18
 30584 0c18 00       		.byte	0
 30585 0c19 00       		.byte	0
 30586 0c1a D001     		.uleb128 0xd0
 30587 0c1c 34       		.uleb128 0x34
 30588 0c1d 00       		.byte	0
 30589 0c1e 03       		.uleb128 0x3
 30590 0c1f 0E       		.uleb128 0xe
 30591 0c20 3A       		.uleb128 0x3a
 30592 0c21 0B       		.uleb128 0xb
 30593 0c22 3B       		.uleb128 0x3b
 30594 0c23 0B       		.uleb128 0xb
 30595 0c24 49       		.uleb128 0x49
 30596 0c25 13       		.uleb128 0x13
 30597 0c26 3F       		.uleb128 0x3f
 30598 0c27 19       		.uleb128 0x19
 30599 0c28 3C       		.uleb128 0x3c
GAS LISTING /tmp/ccKUqHDa.s 			page 802


 30600 0c29 19       		.uleb128 0x19
 30601 0c2a 00       		.byte	0
 30602 0c2b 00       		.byte	0
 30603 0c2c D101     		.uleb128 0xd1
 30604 0c2e 34       		.uleb128 0x34
 30605 0c2f 00       		.byte	0
 30606 0c30 03       		.uleb128 0x3
 30607 0c31 0E       		.uleb128 0xe
 30608 0c32 3A       		.uleb128 0x3a
 30609 0c33 0B       		.uleb128 0xb
 30610 0c34 3B       		.uleb128 0x3b
 30611 0c35 05       		.uleb128 0x5
 30612 0c36 49       		.uleb128 0x49
 30613 0c37 13       		.uleb128 0x13
 30614 0c38 3F       		.uleb128 0x3f
 30615 0c39 19       		.uleb128 0x19
 30616 0c3a 3C       		.uleb128 0x3c
 30617 0c3b 19       		.uleb128 0x19
 30618 0c3c 00       		.byte	0
 30619 0c3d 00       		.byte	0
 30620 0c3e D201     		.uleb128 0xd2
 30621 0c40 34       		.uleb128 0x34
 30622 0c41 00       		.byte	0
 30623 0c42 03       		.uleb128 0x3
 30624 0c43 0E       		.uleb128 0xe
 30625 0c44 49       		.uleb128 0x49
 30626 0c45 13       		.uleb128 0x13
 30627 0c46 3F       		.uleb128 0x3f
 30628 0c47 19       		.uleb128 0x19
 30629 0c48 34       		.uleb128 0x34
 30630 0c49 19       		.uleb128 0x19
 30631 0c4a 3C       		.uleb128 0x3c
 30632 0c4b 19       		.uleb128 0x19
 30633 0c4c 00       		.byte	0
 30634 0c4d 00       		.byte	0
 30635 0c4e D301     		.uleb128 0xd3
 30636 0c50 34       		.uleb128 0x34
 30637 0c51 00       		.byte	0
 30638 0c52 47       		.uleb128 0x47
 30639 0c53 13       		.uleb128 0x13
 30640 0c54 00       		.byte	0
 30641 0c55 00       		.byte	0
 30642 0c56 D401     		.uleb128 0xd4
 30643 0c58 34       		.uleb128 0x34
 30644 0c59 00       		.byte	0
 30645 0c5a 47       		.uleb128 0x47
 30646 0c5b 13       		.uleb128 0x13
 30647 0c5c 02       		.uleb128 0x2
 30648 0c5d 18       		.uleb128 0x18
 30649 0c5e 00       		.byte	0
 30650 0c5f 00       		.byte	0
 30651 0c60 D501     		.uleb128 0xd5
 30652 0c62 34       		.uleb128 0x34
 30653 0c63 00       		.byte	0
 30654 0c64 47       		.uleb128 0x47
 30655 0c65 13       		.uleb128 0x13
 30656 0c66 6E       		.uleb128 0x6e
GAS LISTING /tmp/ccKUqHDa.s 			page 803


 30657 0c67 0E       		.uleb128 0xe
 30658 0c68 00       		.byte	0
 30659 0c69 00       		.byte	0
 30660 0c6a D601     		.uleb128 0xd6
 30661 0c6c 2E       		.uleb128 0x2e
 30662 0c6d 01       		.byte	0x1
 30663 0c6e 3F       		.uleb128 0x3f
 30664 0c6f 19       		.uleb128 0x19
 30665 0c70 03       		.uleb128 0x3
 30666 0c71 0E       		.uleb128 0xe
 30667 0c72 49       		.uleb128 0x49
 30668 0c73 13       		.uleb128 0x13
 30669 0c74 34       		.uleb128 0x34
 30670 0c75 19       		.uleb128 0x19
 30671 0c76 3C       		.uleb128 0x3c
 30672 0c77 19       		.uleb128 0x19
 30673 0c78 01       		.uleb128 0x1
 30674 0c79 13       		.uleb128 0x13
 30675 0c7a 00       		.byte	0
 30676 0c7b 00       		.byte	0
 30677 0c7c D701     		.uleb128 0xd7
 30678 0c7e 2E       		.uleb128 0x2e
 30679 0c7f 01       		.byte	0x1
 30680 0c80 3F       		.uleb128 0x3f
 30681 0c81 19       		.uleb128 0x19
 30682 0c82 03       		.uleb128 0x3
 30683 0c83 0E       		.uleb128 0xe
 30684 0c84 3A       		.uleb128 0x3a
 30685 0c85 0B       		.uleb128 0xb
 30686 0c86 3B       		.uleb128 0x3b
 30687 0c87 0B       		.uleb128 0xb
 30688 0c88 6E       		.uleb128 0x6e
 30689 0c89 0E       		.uleb128 0xe
 30690 0c8a 49       		.uleb128 0x49
 30691 0c8b 13       		.uleb128 0x13
 30692 0c8c 3C       		.uleb128 0x3c
 30693 0c8d 19       		.uleb128 0x19
 30694 0c8e 00       		.byte	0
 30695 0c8f 00       		.byte	0
 30696 0c90 D801     		.uleb128 0xd8
 30697 0c92 2E       		.uleb128 0x2e
 30698 0c93 01       		.byte	0x1
 30699 0c94 3F       		.uleb128 0x3f
 30700 0c95 19       		.uleb128 0x19
 30701 0c96 03       		.uleb128 0x3
 30702 0c97 0E       		.uleb128 0xe
 30703 0c98 6E       		.uleb128 0x6e
 30704 0c99 0E       		.uleb128 0xe
 30705 0c9a 49       		.uleb128 0x49
 30706 0c9b 13       		.uleb128 0x13
 30707 0c9c 34       		.uleb128 0x34
 30708 0c9d 19       		.uleb128 0x19
 30709 0c9e 3C       		.uleb128 0x3c
 30710 0c9f 19       		.uleb128 0x19
 30711 0ca0 01       		.uleb128 0x1
 30712 0ca1 13       		.uleb128 0x13
 30713 0ca2 00       		.byte	0
GAS LISTING /tmp/ccKUqHDa.s 			page 804


 30714 0ca3 00       		.byte	0
 30715 0ca4 D901     		.uleb128 0xd9
 30716 0ca6 2E       		.uleb128 0x2e
 30717 0ca7 01       		.byte	0x1
 30718 0ca8 3F       		.uleb128 0x3f
 30719 0ca9 19       		.uleb128 0x19
 30720 0caa 03       		.uleb128 0x3
 30721 0cab 0E       		.uleb128 0xe
 30722 0cac 6E       		.uleb128 0x6e
 30723 0cad 0E       		.uleb128 0xe
 30724 0cae 34       		.uleb128 0x34
 30725 0caf 19       		.uleb128 0x19
 30726 0cb0 3C       		.uleb128 0x3c
 30727 0cb1 19       		.uleb128 0x19
 30728 0cb2 01       		.uleb128 0x1
 30729 0cb3 13       		.uleb128 0x13
 30730 0cb4 00       		.byte	0
 30731 0cb5 00       		.byte	0
 30732 0cb6 DA01     		.uleb128 0xda
 30733 0cb8 2E       		.uleb128 0x2e
 30734 0cb9 01       		.byte	0x1
 30735 0cba 3F       		.uleb128 0x3f
 30736 0cbb 19       		.uleb128 0x19
 30737 0cbc 03       		.uleb128 0x3
 30738 0cbd 0E       		.uleb128 0xe
 30739 0cbe 49       		.uleb128 0x49
 30740 0cbf 13       		.uleb128 0x13
 30741 0cc0 34       		.uleb128 0x34
 30742 0cc1 19       		.uleb128 0x19
 30743 0cc2 3C       		.uleb128 0x3c
 30744 0cc3 19       		.uleb128 0x19
 30745 0cc4 00       		.byte	0
 30746 0cc5 00       		.byte	0
 30747 0cc6 00       		.byte	0
 30748              		.section	.debug_loc,"",@progbits
 30749              	.Ldebug_loc0:
 30750              	.LLST3:
 30751 0000 00000000 		.quad	.LVL12
 30751      00000000 
 30752 0008 00000000 		.quad	.LVL18-1
 30752      00000000 
 30753 0010 0100     		.value	0x1
 30754 0012 55       		.byte	0x55
 30755 0013 00000000 		.quad	.LVL18-1
 30755      00000000 
 30756 001b 00000000 		.quad	.LFE5946
 30756      00000000 
 30757 0023 0400     		.value	0x4
 30758 0025 F3       		.byte	0xf3
 30759 0026 01       		.uleb128 0x1
 30760 0027 55       		.byte	0x55
 30761 0028 9F       		.byte	0x9f
 30762 0029 00000000 		.quad	0
 30762      00000000 
 30763 0031 00000000 		.quad	0
 30763      00000000 
 30764              	.LLST4:
GAS LISTING /tmp/ccKUqHDa.s 			page 805


 30765 0039 00000000 		.quad	.LVL12
 30765      00000000 
 30766 0041 00000000 		.quad	.LVL18-1
 30766      00000000 
 30767 0049 0100     		.value	0x1
 30768 004b 54       		.byte	0x54
 30769 004c 00000000 		.quad	.LVL18-1
 30769      00000000 
 30770 0054 00000000 		.quad	.LFE5946
 30770      00000000 
 30771 005c 0400     		.value	0x4
 30772 005e F3       		.byte	0xf3
 30773 005f 01       		.uleb128 0x1
 30774 0060 54       		.byte	0x54
 30775 0061 9F       		.byte	0x9f
 30776 0062 00000000 		.quad	0
 30776      00000000 
 30777 006a 00000000 		.quad	0
 30777      00000000 
 30778              	.LLST5:
 30779 0072 00000000 		.quad	.LVL12
 30779      00000000 
 30780 007a 00000000 		.quad	.LVL18-1
 30780      00000000 
 30781 0082 0300     		.value	0x3
 30782 0084 75       		.byte	0x75
 30783 0085 10       		.sleb128 16
 30784 0086 9F       		.byte	0x9f
 30785 0087 00000000 		.quad	.LVL18-1
 30785      00000000 
 30786 008f 00000000 		.quad	.LFE5946
 30786      00000000 
 30787 0097 0600     		.value	0x6
 30788 0099 F3       		.byte	0xf3
 30789 009a 01       		.uleb128 0x1
 30790 009b 55       		.byte	0x55
 30791 009c 23       		.byte	0x23
 30792 009d 10       		.uleb128 0x10
 30793 009e 9F       		.byte	0x9f
 30794 009f 00000000 		.quad	0
 30794      00000000 
 30795 00a7 00000000 		.quad	0
 30795      00000000 
 30796              	.LLST6:
 30797 00af 00000000 		.quad	.LVL13
 30797      00000000 
 30798 00b7 00000000 		.quad	.LVL14
 30798      00000000 
 30799 00bf 0300     		.value	0x3
 30800 00c1 09       		.byte	0x9
 30801 00c2 FF       		.byte	0xff
 30802 00c3 9F       		.byte	0x9f
 30803 00c4 00000000 		.quad	0
 30803      00000000 
 30804 00cc 00000000 		.quad	0
 30804      00000000 
 30805              	.LLST7:
GAS LISTING /tmp/ccKUqHDa.s 			page 806


 30806 00d4 00000000 		.quad	.LVL13
 30806      00000000 
 30807 00dc 00000000 		.quad	.LVL14
 30807      00000000 
 30808 00e4 0300     		.value	0x3
 30809 00e6 75       		.byte	0x75
 30810 00e7 10       		.sleb128 16
 30811 00e8 9F       		.byte	0x9f
 30812 00e9 00000000 		.quad	0
 30812      00000000 
 30813 00f1 00000000 		.quad	0
 30813      00000000 
 30814              	.LLST8:
 30815 00f9 00000000 		.quad	.LVL15
 30815      00000000 
 30816 0101 00000000 		.quad	.LVL17
 30816      00000000 
 30817 0109 0300     		.value	0x3
 30818 010b 09       		.byte	0x9
 30819 010c FF       		.byte	0xff
 30820 010d 9F       		.byte	0x9f
 30821 010e 00000000 		.quad	0
 30821      00000000 
 30822 0116 00000000 		.quad	0
 30822      00000000 
 30823              	.LLST9:
 30824 011e 00000000 		.quad	.LVL15
 30824      00000000 
 30825 0126 00000000 		.quad	.LVL17
 30825      00000000 
 30826 012e 0300     		.value	0x3
 30827 0130 75       		.byte	0x75
 30828 0131 10       		.sleb128 16
 30829 0132 9F       		.byte	0x9f
 30830 0133 00000000 		.quad	0
 30830      00000000 
 30831 013b 00000000 		.quad	0
 30831      00000000 
 30832              	.LLST10:
 30833 0143 00000000 		.quad	.LVL16
 30833      00000000 
 30834 014b 00000000 		.quad	.LVL17
 30834      00000000 
 30835 0153 0100     		.value	0x1
 30836 0155 50       		.byte	0x50
 30837 0156 00000000 		.quad	0
 30837      00000000 
 30838 015e 00000000 		.quad	0
 30838      00000000 
 30839              	.LLST11:
 30840 0166 00000000 		.quad	.LVL19
 30840      00000000 
 30841 016e 00000000 		.quad	.LVL21
 30841      00000000 
 30842 0176 0100     		.value	0x1
 30843 0178 55       		.byte	0x55
 30844 0179 00000000 		.quad	.LVL21
GAS LISTING /tmp/ccKUqHDa.s 			page 807


 30844      00000000 
 30845 0181 00000000 		.quad	.LVL27
 30845      00000000 
 30846 0189 0100     		.value	0x1
 30847 018b 53       		.byte	0x53
 30848 018c 00000000 		.quad	.LVL27
 30848      00000000 
 30849 0194 00000000 		.quad	.LFE5607
 30849      00000000 
 30850 019c 0400     		.value	0x4
 30851 019e F3       		.byte	0xf3
 30852 019f 01       		.uleb128 0x1
 30853 01a0 55       		.byte	0x55
 30854 01a1 9F       		.byte	0x9f
 30855 01a2 00000000 		.quad	0
 30855      00000000 
 30856 01aa 00000000 		.quad	0
 30856      00000000 
 30857              	.LLST12:
 30858 01b2 00000000 		.quad	.LVL19
 30858      00000000 
 30859 01ba 00000000 		.quad	.LVL23-1
 30859      00000000 
 30860 01c2 0100     		.value	0x1
 30861 01c4 54       		.byte	0x54
 30862 01c5 00000000 		.quad	.LVL23-1
 30862      00000000 
 30863 01cd 00000000 		.quad	.LVL28
 30863      00000000 
 30864 01d5 0100     		.value	0x1
 30865 01d7 56       		.byte	0x56
 30866 01d8 00000000 		.quad	.LVL28
 30866      00000000 
 30867 01e0 00000000 		.quad	.LFE5607
 30867      00000000 
 30868 01e8 0400     		.value	0x4
 30869 01ea F3       		.byte	0xf3
 30870 01eb 01       		.uleb128 0x1
 30871 01ec 54       		.byte	0x54
 30872 01ed 9F       		.byte	0x9f
 30873 01ee 00000000 		.quad	0
 30873      00000000 
 30874 01f6 00000000 		.quad	0
 30874      00000000 
 30875              	.LLST13:
 30876 01fe 00000000 		.quad	.LVL19
 30876      00000000 
 30877 0206 00000000 		.quad	.LVL23-1
 30877      00000000 
 30878 020e 0100     		.value	0x1
 30879 0210 51       		.byte	0x51
 30880 0211 00000000 		.quad	.LVL23-1
 30880      00000000 
 30881 0219 00000000 		.quad	.LFE5607
 30881      00000000 
 30882 0221 0400     		.value	0x4
 30883 0223 F3       		.byte	0xf3
GAS LISTING /tmp/ccKUqHDa.s 			page 808


 30884 0224 01       		.uleb128 0x1
 30885 0225 51       		.byte	0x51
 30886 0226 9F       		.byte	0x9f
 30887 0227 00000000 		.quad	0
 30887      00000000 
 30888 022f 00000000 		.quad	0
 30888      00000000 
 30889              	.LLST19:
 30890 0237 00000000 		.quad	.LVL20
 30890      00000000 
 30891 023f 00000000 		.quad	.LVL23-1
 30891      00000000 
 30892 0247 0100     		.value	0x1
 30893 0249 54       		.byte	0x54
 30894 024a 00000000 		.quad	.LVL23-1
 30894      00000000 
 30895 0252 00000000 		.quad	.LVL28
 30895      00000000 
 30896 025a 0100     		.value	0x1
 30897 025c 56       		.byte	0x56
 30898 025d 00000000 		.quad	.LVL28
 30898      00000000 
 30899 0265 00000000 		.quad	.LFE5607
 30899      00000000 
 30900 026d 0400     		.value	0x4
 30901 026f F3       		.byte	0xf3
 30902 0270 01       		.uleb128 0x1
 30903 0271 54       		.byte	0x54
 30904 0272 9F       		.byte	0x9f
 30905 0273 00000000 		.quad	0
 30905      00000000 
 30906 027b 00000000 		.quad	0
 30906      00000000 
 30907              	.LLST20:
 30908 0283 00000000 		.quad	.LVL20
 30908      00000000 
 30909 028b 00000000 		.quad	.LVL21
 30909      00000000 
 30910 0293 0100     		.value	0x1
 30911 0295 55       		.byte	0x55
 30912 0296 00000000 		.quad	.LVL21
 30912      00000000 
 30913 029e 00000000 		.quad	.LVL27
 30913      00000000 
 30914 02a6 0100     		.value	0x1
 30915 02a8 53       		.byte	0x53
 30916 02a9 00000000 		.quad	.LVL27
 30916      00000000 
 30917 02b1 00000000 		.quad	.LFE5607
 30917      00000000 
 30918 02b9 0400     		.value	0x4
 30919 02bb F3       		.byte	0xf3
 30920 02bc 01       		.uleb128 0x1
 30921 02bd 55       		.byte	0x55
 30922 02be 9F       		.byte	0x9f
 30923 02bf 00000000 		.quad	0
 30923      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 809


 30924 02c7 00000000 		.quad	0
 30924      00000000 
 30925              	.LLST22:
 30926 02cf 00000000 		.quad	.LVL22
 30926      00000000 
 30927 02d7 00000000 		.quad	.LVL23-1
 30927      00000000 
 30928 02df 0100     		.value	0x1
 30929 02e1 54       		.byte	0x54
 30930 02e2 00000000 		.quad	.LVL23-1
 30930      00000000 
 30931 02ea 00000000 		.quad	.LVL24
 30931      00000000 
 30932 02f2 0100     		.value	0x1
 30933 02f4 56       		.byte	0x56
 30934 02f5 00000000 		.quad	0
 30934      00000000 
 30935 02fd 00000000 		.quad	0
 30935      00000000 
 30936              	.LLST23:
 30937 0305 00000000 		.quad	.LVL22
 30937      00000000 
 30938 030d 00000000 		.quad	.LVL24
 30938      00000000 
 30939 0315 0200     		.value	0x2
 30940 0317 30       		.byte	0x30
 30941 0318 9F       		.byte	0x9f
 30942 0319 00000000 		.quad	0
 30942      00000000 
 30943 0321 00000000 		.quad	0
 30943      00000000 
 30944              	.LLST25:
 30945 0329 00000000 		.quad	.LVL25
 30945      00000000 
 30946 0331 00000000 		.quad	.LVL26-1
 30946      00000000 
 30947 0339 0100     		.value	0x1
 30948 033b 51       		.byte	0x51
 30949 033c 00000000 		.quad	.LVL26-1
 30949      00000000 
 30950 0344 00000000 		.quad	.LVL28
 30950      00000000 
 30951 034c 0100     		.value	0x1
 30952 034e 56       		.byte	0x56
 30953 034f 00000000 		.quad	.LVL28
 30953      00000000 
 30954 0357 00000000 		.quad	.LFE5607
 30954      00000000 
 30955 035f 0400     		.value	0x4
 30956 0361 F3       		.byte	0xf3
 30957 0362 01       		.uleb128 0x1
 30958 0363 54       		.byte	0x54
 30959 0364 9F       		.byte	0x9f
 30960 0365 00000000 		.quad	0
 30960      00000000 
 30961 036d 00000000 		.quad	0
 30961      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 810


 30962              	.LLST26:
 30963 0375 00000000 		.quad	.LVL25
 30963      00000000 
 30964 037d 00000000 		.quad	.LVL27
 30964      00000000 
 30965 0385 0100     		.value	0x1
 30966 0387 53       		.byte	0x53
 30967 0388 00000000 		.quad	.LVL27
 30967      00000000 
 30968 0390 00000000 		.quad	.LFE5607
 30968      00000000 
 30969 0398 0400     		.value	0x4
 30970 039a F3       		.byte	0xf3
 30971 039b 01       		.uleb128 0x1
 30972 039c 55       		.byte	0x55
 30973 039d 9F       		.byte	0x9f
 30974 039e 00000000 		.quad	0
 30974      00000000 
 30975 03a6 00000000 		.quad	0
 30975      00000000 
 30976              	.LLST28:
 30977 03ae 00000000 		.quad	.LVL25
 30977      00000000 
 30978 03b6 00000000 		.quad	.LVL26-1
 30978      00000000 
 30979 03be 0100     		.value	0x1
 30980 03c0 55       		.byte	0x55
 30981 03c1 00000000 		.quad	0
 30981      00000000 
 30982 03c9 00000000 		.quad	0
 30982      00000000 
 30983              	.LLST37:
 30984 03d1 00000000 		.quad	.LVL25
 30984      00000000 
 30985 03d9 00000000 		.quad	.LVL26-1
 30985      00000000 
 30986 03e1 0100     		.value	0x1
 30987 03e3 50       		.byte	0x50
 30988 03e4 00000000 		.quad	0
 30988      00000000 
 30989 03ec 00000000 		.quad	0
 30989      00000000 
 30990              	.LLST39:
 30991 03f4 00000000 		.quad	.LVL29
 30991      00000000 
 30992 03fc 00000000 		.quad	.LVL35
 30992      00000000 
 30993 0404 0200     		.value	0x2
 30994 0406 31       		.byte	0x31
 30995 0407 9F       		.byte	0x9f
 30996 0408 00000000 		.quad	.LVL35
 30996      00000000 
 30997 0410 00000000 		.quad	.LVL40
 30997      00000000 
 30998 0418 0200     		.value	0x2
 30999 041a 30       		.byte	0x30
 31000 041b 9F       		.byte	0x9f
GAS LISTING /tmp/ccKUqHDa.s 			page 811


 31001 041c 00000000 		.quad	.LVL40
 31001      00000000 
 31002 0424 00000000 		.quad	.LFE5868
 31002      00000000 
 31003 042c 0200     		.value	0x2
 31004 042e 31       		.byte	0x31
 31005 042f 9F       		.byte	0x9f
 31006 0430 00000000 		.quad	0
 31006      00000000 
 31007 0438 00000000 		.quad	0
 31007      00000000 
 31008              	.LLST40:
 31009 0440 00000000 		.quad	.LVL29
 31009      00000000 
 31010 0448 00000000 		.quad	.LVL35
 31010      00000000 
 31011 0450 0600     		.value	0x6
 31012 0452 9E       		.byte	0x9e
 31013 0453 04       		.uleb128 0x4
 31014 0454 00000000 		.long	0
 31015 0458 00000000 		.quad	.LVL35
 31015      00000000 
 31016 0460 00000000 		.quad	.LVL36
 31016      00000000 
 31017 0468 1200     		.value	0x12
 31018 046a 71       		.byte	0x71
 31019 046b 00       		.sleb128 0
 31020 046c 70       		.byte	0x70
 31021 046d 00       		.sleb128 0
 31022 046e 27       		.byte	0x27
 31023 046f F7       		.byte	0xf7
 31024 0470 30       		.uleb128 0x30
 31025 0471 F7       		.byte	0xf7
 31026 0472 29       		.uleb128 0x29
 31027 0473 F4       		.byte	0xf4
 31028 0474 29       		.uleb128 0x29
 31029 0475 04       		.byte	0x4
 31030 0476 00000000 		.long	0
 31031 047a 22       		.byte	0x22
 31032 047b 9F       		.byte	0x9f
 31033 047c 00000000 		.quad	.LVL40
 31033      00000000 
 31034 0484 00000000 		.quad	.LFE5868
 31034      00000000 
 31035 048c 0600     		.value	0x6
 31036 048e 9E       		.byte	0x9e
 31037 048f 04       		.uleb128 0x4
 31038 0490 00000000 		.long	0
 31039 0494 00000000 		.quad	0
 31039      00000000 
 31040 049c 00000000 		.quad	0
 31040      00000000 
 31041              	.LLST41:
 31042 04a4 00000000 		.quad	.LVL29
 31042      00000000 
 31043 04ac 00000000 		.quad	.LVL35
 31043      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 812


 31044 04b4 0600     		.value	0x6
 31045 04b6 9E       		.byte	0x9e
 31046 04b7 04       		.uleb128 0x4
 31047 04b8 0000803F 		.long	0x3f800000
 31048 04bc 00000000 		.quad	.LVL35
 31048      00000000 
 31049 04c4 00000000 		.quad	.LVL40
 31049      00000000 
 31050 04cc 0600     		.value	0x6
 31051 04ce 9E       		.byte	0x9e
 31052 04cf 04       		.uleb128 0x4
 31053 04d0 0000804F 		.long	0x4f800000
 31054 04d4 00000000 		.quad	.LVL40
 31054      00000000 
 31055 04dc 00000000 		.quad	.LFE5868
 31055      00000000 
 31056 04e4 0600     		.value	0x6
 31057 04e6 9E       		.byte	0x9e
 31058 04e7 04       		.uleb128 0x4
 31059 04e8 0000803F 		.long	0x3f800000
 31060 04ec 00000000 		.quad	0
 31060      00000000 
 31061 04f4 00000000 		.quad	0
 31061      00000000 
 31062              	.LLST42:
 31063 04fc 00000000 		.quad	.LVL30
 31063      00000000 
 31064 0504 00000000 		.quad	.LVL31
 31064      00000000 
 31065 050c 0100     		.value	0x1
 31066 050e 50       		.byte	0x50
 31067 050f 00000000 		.quad	.LVL31
 31067      00000000 
 31068 0517 00000000 		.quad	.LVL32
 31068      00000000 
 31069 051f 0100     		.value	0x1
 31070 0521 51       		.byte	0x51
 31071 0522 00000000 		.quad	.LVL32
 31071      00000000 
 31072 052a 00000000 		.quad	.LVL33
 31072      00000000 
 31073 0532 0100     		.value	0x1
 31074 0534 50       		.byte	0x50
 31075 0535 00000000 		.quad	.LVL33
 31075      00000000 
 31076 053d 00000000 		.quad	.LVL34
 31076      00000000 
 31077 0545 0100     		.value	0x1
 31078 0547 51       		.byte	0x51
 31079 0548 00000000 		.quad	.LVL34
 31079      00000000 
 31080 0550 00000000 		.quad	.LVL35
 31080      00000000 
 31081 0558 0100     		.value	0x1
 31082 055a 50       		.byte	0x50
 31083 055b 00000000 		.quad	.LVL35
 31083      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 813


 31084 0563 00000000 		.quad	.LVL36
 31084      00000000 
 31085 056b 0600     		.value	0x6
 31086 056d 71       		.byte	0x71
 31087 056e 00       		.sleb128 0
 31088 056f 70       		.byte	0x70
 31089 0570 00       		.sleb128 0
 31090 0571 27       		.byte	0x27
 31091 0572 9F       		.byte	0x9f
 31092 0573 00000000 		.quad	.LVL36
 31092      00000000 
 31093 057b 00000000 		.quad	.LVL37
 31093      00000000 
 31094 0583 0100     		.value	0x1
 31095 0585 50       		.byte	0x50
 31096 0586 00000000 		.quad	.LVL38
 31096      00000000 
 31097 058e 00000000 		.quad	.LVL39
 31097      00000000 
 31098 0596 0100     		.value	0x1
 31099 0598 50       		.byte	0x50
 31100 0599 00000000 		.quad	0
 31100      00000000 
 31101 05a1 00000000 		.quad	0
 31101      00000000 
 31102              	.LLST43:
 31103 05a9 00000000 		.quad	.LVL43
 31103      00000000 
 31104 05b1 00000000 		.quad	.LVL44
 31104      00000000 
 31105 05b9 0100     		.value	0x1
 31106 05bb 51       		.byte	0x51
 31107 05bc 00000000 		.quad	.LVL44
 31107      00000000 
 31108 05c4 00000000 		.quad	.LVL45
 31108      00000000 
 31109 05cc 1300     		.value	0x13
 31110 05ce 75       		.byte	0x75
 31111 05cf F826     		.sleb128 4984
 31112 05d1 06       		.byte	0x6
 31113 05d2 40       		.byte	0x40
 31114 05d3 4B       		.byte	0x4b
 31115 05d4 24       		.byte	0x24
 31116 05d5 1F       		.byte	0x1f
 31117 05d6 1A       		.byte	0x1a
 31118 05d7 70       		.byte	0x70
 31119 05d8 00       		.sleb128 0
 31120 05d9 0C       		.byte	0xc
 31121 05da FFFFFF7F 		.long	0x7fffffff
 31122 05de 1A       		.byte	0x1a
 31123 05df 21       		.byte	0x21
 31124 05e0 9F       		.byte	0x9f
 31125 05e1 00000000 		.quad	0
 31125      00000000 
 31126 05e9 00000000 		.quad	0
 31126      00000000 
 31127              	.LLST44:
GAS LISTING /tmp/ccKUqHDa.s 			page 814


 31128 05f1 00000000 		.quad	.LVL46
 31128      00000000 
 31129 05f9 00000000 		.quad	.LVL47
 31129      00000000 
 31130 0601 0100     		.value	0x1
 31131 0603 55       		.byte	0x55
 31132 0604 00000000 		.quad	.LVL47
 31132      00000000 
 31133 060c 00000000 		.quad	.LVL64
 31133      00000000 
 31134 0614 0400     		.value	0x4
 31135 0616 F3       		.byte	0xf3
 31136 0617 01       		.uleb128 0x1
 31137 0618 55       		.byte	0x55
 31138 0619 9F       		.byte	0x9f
 31139 061a 00000000 		.quad	.LVL64
 31139      00000000 
 31140 0622 00000000 		.quad	.LVL65
 31140      00000000 
 31141 062a 0100     		.value	0x1
 31142 062c 55       		.byte	0x55
 31143 062d 00000000 		.quad	.LVL65
 31143      00000000 
 31144 0635 00000000 		.quad	.LFE5505
 31144      00000000 
 31145 063d 0400     		.value	0x4
 31146 063f F3       		.byte	0xf3
 31147 0640 01       		.uleb128 0x1
 31148 0641 55       		.byte	0x55
 31149 0642 9F       		.byte	0x9f
 31150 0643 00000000 		.quad	0
 31150      00000000 
 31151 064b 00000000 		.quad	0
 31151      00000000 
 31152              	.LLST45:
 31153 0653 00000000 		.quad	.LVL46
 31153      00000000 
 31154 065b 00000000 		.quad	.LVL48
 31154      00000000 
 31155 0663 0100     		.value	0x1
 31156 0665 54       		.byte	0x54
 31157 0666 00000000 		.quad	.LVL48
 31157      00000000 
 31158 066e 00000000 		.quad	.LVL53
 31158      00000000 
 31159 0676 0100     		.value	0x1
 31160 0678 56       		.byte	0x56
 31161 0679 00000000 		.quad	.LVL53
 31161      00000000 
 31162 0681 00000000 		.quad	.LVL64
 31162      00000000 
 31163 0689 0400     		.value	0x4
 31164 068b F3       		.byte	0xf3
 31165 068c 01       		.uleb128 0x1
 31166 068d 54       		.byte	0x54
 31167 068e 9F       		.byte	0x9f
 31168 068f 00000000 		.quad	.LVL64
GAS LISTING /tmp/ccKUqHDa.s 			page 815


 31168      00000000 
 31169 0697 00000000 		.quad	.LVL66
 31169      00000000 
 31170 069f 0100     		.value	0x1
 31171 06a1 54       		.byte	0x54
 31172 06a2 00000000 		.quad	.LVL66
 31172      00000000 
 31173 06aa 00000000 		.quad	.LVL71
 31173      00000000 
 31174 06b2 0100     		.value	0x1
 31175 06b4 56       		.byte	0x56
 31176 06b5 00000000 		.quad	.LVL71
 31176      00000000 
 31177 06bd 00000000 		.quad	.LVL218
 31177      00000000 
 31178 06c5 0400     		.value	0x4
 31179 06c7 F3       		.byte	0xf3
 31180 06c8 01       		.uleb128 0x1
 31181 06c9 54       		.byte	0x54
 31182 06ca 9F       		.byte	0x9f
 31183 06cb 00000000 		.quad	.LVL218
 31183      00000000 
 31184 06d3 00000000 		.quad	.LVL219
 31184      00000000 
 31185 06db 0100     		.value	0x1
 31186 06dd 56       		.byte	0x56
 31187 06de 00000000 		.quad	.LVL219
 31187      00000000 
 31188 06e6 00000000 		.quad	.LVL262
 31188      00000000 
 31189 06ee 0400     		.value	0x4
 31190 06f0 F3       		.byte	0xf3
 31191 06f1 01       		.uleb128 0x1
 31192 06f2 54       		.byte	0x54
 31193 06f3 9F       		.byte	0x9f
 31194 06f4 00000000 		.quad	.LVL262
 31194      00000000 
 31195 06fc 00000000 		.quad	.LVL263
 31195      00000000 
 31196 0704 0100     		.value	0x1
 31197 0706 56       		.byte	0x56
 31198 0707 00000000 		.quad	.LVL263
 31198      00000000 
 31199 070f 00000000 		.quad	.LFE5505
 31199      00000000 
 31200 0717 0400     		.value	0x4
 31201 0719 F3       		.byte	0xf3
 31202 071a 01       		.uleb128 0x1
 31203 071b 54       		.byte	0x54
 31204 071c 9F       		.byte	0x9f
 31205 071d 00000000 		.quad	0
 31205      00000000 
 31206 0725 00000000 		.quad	0
 31206      00000000 
 31207              	.LLST46:
 31208 072d 00000000 		.quad	.LVL68
 31208      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 816


 31209 0735 00000000 		.quad	.LVL94
 31209      00000000 
 31210 073d 0100     		.value	0x1
 31211 073f 53       		.byte	0x53
 31212 0740 00000000 		.quad	.LVL218
 31212      00000000 
 31213 0748 00000000 		.quad	.LVL223
 31213      00000000 
 31214 0750 0100     		.value	0x1
 31215 0752 53       		.byte	0x53
 31216 0753 00000000 		.quad	.LVL236
 31216      00000000 
 31217 075b 00000000 		.quad	.LVL237
 31217      00000000 
 31218 0763 0100     		.value	0x1
 31219 0765 53       		.byte	0x53
 31220 0766 00000000 		.quad	.LVL262
 31220      00000000 
 31221 076e 00000000 		.quad	.LVL263
 31221      00000000 
 31222 0776 0100     		.value	0x1
 31223 0778 53       		.byte	0x53
 31224 0779 00000000 		.quad	0
 31224      00000000 
 31225 0781 00000000 		.quad	0
 31225      00000000 
 31226              	.LLST47:
 31227 0789 00000000 		.quad	.LVL69
 31227      00000000 
 31228 0791 00000000 		.quad	.LVL116
 31228      00000000 
 31229 0799 0100     		.value	0x1
 31230 079b 5C       		.byte	0x5c
 31231 079c 00000000 		.quad	.LVL218
 31231      00000000 
 31232 07a4 00000000 		.quad	.LVL223
 31232      00000000 
 31233 07ac 0100     		.value	0x1
 31234 07ae 5C       		.byte	0x5c
 31235 07af 00000000 		.quad	.LVL225
 31235      00000000 
 31236 07b7 00000000 		.quad	.LVL235
 31236      00000000 
 31237 07bf 0100     		.value	0x1
 31238 07c1 5C       		.byte	0x5c
 31239 07c2 00000000 		.quad	.LVL236
 31239      00000000 
 31240 07ca 00000000 		.quad	.LVL237
 31240      00000000 
 31241 07d2 0100     		.value	0x1
 31242 07d4 5C       		.byte	0x5c
 31243 07d5 00000000 		.quad	.LVL239
 31243      00000000 
 31244 07dd 00000000 		.quad	.LVL242
 31244      00000000 
 31245 07e5 0100     		.value	0x1
 31246 07e7 5C       		.byte	0x5c
GAS LISTING /tmp/ccKUqHDa.s 			page 817


 31247 07e8 00000000 		.quad	.LVL262
 31247      00000000 
 31248 07f0 00000000 		.quad	.LVL267
 31248      00000000 
 31249 07f8 0100     		.value	0x1
 31250 07fa 5C       		.byte	0x5c
 31251 07fb 00000000 		.quad	.LVL270
 31251      00000000 
 31252 0803 00000000 		.quad	.LVL275
 31252      00000000 
 31253 080b 0100     		.value	0x1
 31254 080d 5C       		.byte	0x5c
 31255 080e 00000000 		.quad	0
 31255      00000000 
 31256 0816 00000000 		.quad	0
 31256      00000000 
 31257              	.LLST48:
 31258 081e 00000000 		.quad	.LVL70
 31258      00000000 
 31259 0826 00000000 		.quad	.LVL71
 31259      00000000 
 31260 082e 0C00     		.value	0xc
 31261 0830 30       		.byte	0x30
 31262 0831 9F       		.byte	0x9f
 31263 0832 93       		.byte	0x93
 31264 0833 08       		.uleb128 0x8
 31265 0834 30       		.byte	0x30
 31266 0835 9F       		.byte	0x9f
 31267 0836 93       		.byte	0x93
 31268 0837 08       		.uleb128 0x8
 31269 0838 30       		.byte	0x30
 31270 0839 9F       		.byte	0x9f
 31271 083a 93       		.byte	0x93
 31272 083b 08       		.uleb128 0x8
 31273 083c 00000000 		.quad	.LVL218
 31273      00000000 
 31274 0844 00000000 		.quad	.LVL221
 31274      00000000 
 31275 084c 0C00     		.value	0xc
 31276 084e 30       		.byte	0x30
 31277 084f 9F       		.byte	0x9f
 31278 0850 93       		.byte	0x93
 31279 0851 08       		.uleb128 0x8
 31280 0852 30       		.byte	0x30
 31281 0853 9F       		.byte	0x9f
 31282 0854 93       		.byte	0x93
 31283 0855 08       		.uleb128 0x8
 31284 0856 30       		.byte	0x30
 31285 0857 9F       		.byte	0x9f
 31286 0858 93       		.byte	0x93
 31287 0859 08       		.uleb128 0x8
 31288 085a 00000000 		.quad	.LVL221
 31288      00000000 
 31289 0862 00000000 		.quad	.LVL222-1
 31289      00000000 
 31290 086a 1300     		.value	0x13
 31291 086c 50       		.byte	0x50
GAS LISTING /tmp/ccKUqHDa.s 			page 818


 31292 086d 93       		.byte	0x93
 31293 086e 08       		.uleb128 0x8
 31294 086f 50       		.byte	0x50
 31295 0870 93       		.byte	0x93
 31296 0871 08       		.uleb128 0x8
 31297 0872 7C       		.byte	0x7c
 31298 0873 00       		.sleb128 0
 31299 0874 7C       		.byte	0x7c
 31300 0875 00       		.sleb128 0
 31301 0876 1E       		.byte	0x1e
 31302 0877 32       		.byte	0x32
 31303 0878 24       		.byte	0x24
 31304 0879 70       		.byte	0x70
 31305 087a 00       		.sleb128 0
 31306 087b 22       		.byte	0x22
 31307 087c 9F       		.byte	0x9f
 31308 087d 93       		.byte	0x93
 31309 087e 08       		.uleb128 0x8
 31310 087f 00000000 		.quad	.LVL222-1
 31310      00000000 
 31311 0887 00000000 		.quad	.LVL223
 31311      00000000 
 31312 088f 1C00     		.value	0x1c
 31313 0891 91       		.byte	0x91
 31314 0892 B8AF7F   		.sleb128 -10312
 31315 0895 93       		.byte	0x93
 31316 0896 08       		.uleb128 0x8
 31317 0897 91       		.byte	0x91
 31318 0898 B8AF7F   		.sleb128 -10312
 31319 089b 93       		.byte	0x93
 31320 089c 08       		.uleb128 0x8
 31321 089d 7C       		.byte	0x7c
 31322 089e 00       		.sleb128 0
 31323 089f 7C       		.byte	0x7c
 31324 08a0 00       		.sleb128 0
 31325 08a1 1E       		.byte	0x1e
 31326 08a2 32       		.byte	0x32
 31327 08a3 24       		.byte	0x24
 31328 08a4 91       		.byte	0x91
 31329 08a5 B8AF7F   		.sleb128 -10312
 31330 08a8 06       		.byte	0x6
 31331 08a9 22       		.byte	0x22
 31332 08aa 9F       		.byte	0x9f
 31333 08ab 93       		.byte	0x93
 31334 08ac 08       		.uleb128 0x8
 31335 08ad 00000000 		.quad	.LVL262
 31335      00000000 
 31336 08b5 00000000 		.quad	.LVL263
 31336      00000000 
 31337 08bd 0C00     		.value	0xc
 31338 08bf 30       		.byte	0x30
 31339 08c0 9F       		.byte	0x9f
 31340 08c1 93       		.byte	0x93
 31341 08c2 08       		.uleb128 0x8
 31342 08c3 30       		.byte	0x30
 31343 08c4 9F       		.byte	0x9f
 31344 08c5 93       		.byte	0x93
GAS LISTING /tmp/ccKUqHDa.s 			page 819


 31345 08c6 08       		.uleb128 0x8
 31346 08c7 30       		.byte	0x30
 31347 08c8 9F       		.byte	0x9f
 31348 08c9 93       		.byte	0x93
 31349 08ca 08       		.uleb128 0x8
 31350 08cb 00000000 		.quad	0
 31350      00000000 
 31351 08d3 00000000 		.quad	0
 31351      00000000 
 31352              	.LLST0:
 31353 08db 00000000 		.quad	.LVL0
 31353      00000000 
 31354 08e3 00000000 		.quad	.LVL1
 31354      00000000 
 31355 08eb 0100     		.value	0x1
 31356 08ed 61       		.byte	0x61
 31357 08ee 00000000 		.quad	0
 31357      00000000 
 31358 08f6 00000000 		.quad	0
 31358      00000000 
 31359              	.LLST2:
 31360 08fe 00000000 		.quad	.LVL8
 31360      00000000 
 31361 0906 00000000 		.quad	.LVL9
 31361      00000000 
 31362 090e 0100     		.value	0x1
 31363 0910 61       		.byte	0x61
 31364 0911 00000000 		.quad	.LVL10
 31364      00000000 
 31365 0919 00000000 		.quad	.LVL11-1
 31365      00000000 
 31366 0921 0100     		.value	0x1
 31367 0923 61       		.byte	0x61
 31368 0924 00000000 		.quad	0
 31368      00000000 
 31369 092c 00000000 		.quad	0
 31369      00000000 
 31370              	.LLST1:
 31371 0934 00000000 		.quad	.LVL2
 31371      00000000 
 31372 093c 00000000 		.quad	.LVL3
 31372      00000000 
 31373 0944 0100     		.value	0x1
 31374 0946 61       		.byte	0x61
 31375 0947 00000000 		.quad	.LVL4
 31375      00000000 
 31376 094f 00000000 		.quad	.LVL5-1
 31376      00000000 
 31377 0957 0100     		.value	0x1
 31378 0959 61       		.byte	0x61
 31379 095a 00000000 		.quad	0
 31379      00000000 
 31380 0962 00000000 		.quad	0
 31380      00000000 
 31381              	.LLST49:
 31382 096a 00000000 		.quad	.LVL91
 31382      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 820


 31383 0972 00000000 		.quad	.LVL218
 31383      00000000 
 31384 097a 0200     		.value	0x2
 31385 097c 35       		.byte	0x35
 31386 097d 9F       		.byte	0x9f
 31387 097e 00000000 		.quad	.LVL223
 31387      00000000 
 31388 0986 00000000 		.quad	.LVL236
 31388      00000000 
 31389 098e 0200     		.value	0x2
 31390 0990 35       		.byte	0x35
 31391 0991 9F       		.byte	0x9f
 31392 0992 00000000 		.quad	.LVL237
 31392      00000000 
 31393 099a 00000000 		.quad	.LVL262
 31393      00000000 
 31394 09a2 0200     		.value	0x2
 31395 09a4 35       		.byte	0x35
 31396 09a5 9F       		.byte	0x9f
 31397 09a6 00000000 		.quad	.LVL263
 31397      00000000 
 31398 09ae 00000000 		.quad	.LVL267
 31398      00000000 
 31399 09b6 0200     		.value	0x2
 31400 09b8 35       		.byte	0x35
 31401 09b9 9F       		.byte	0x9f
 31402 09ba 00000000 		.quad	.LVL270
 31402      00000000 
 31403 09c2 00000000 		.quad	.LVL275
 31403      00000000 
 31404 09ca 0200     		.value	0x2
 31405 09cc 35       		.byte	0x35
 31406 09cd 9F       		.byte	0x9f
 31407 09ce 00000000 		.quad	.LVL276
 31407      00000000 
 31408 09d6 00000000 		.quad	.LFE5505
 31408      00000000 
 31409 09de 0200     		.value	0x2
 31410 09e0 35       		.byte	0x35
 31411 09e1 9F       		.byte	0x9f
 31412 09e2 00000000 		.quad	0
 31412      00000000 
 31413 09ea 00000000 		.quad	0
 31413      00000000 
 31414              	.LLST50:
 31415 09f2 00000000 		.quad	.LVL49
 31415      00000000 
 31416 09fa 00000000 		.quad	.LVL50-1
 31416      00000000 
 31417 0a02 0100     		.value	0x1
 31418 0a04 50       		.byte	0x50
 31419 0a05 00000000 		.quad	0
 31419      00000000 
 31420 0a0d 00000000 		.quad	0
 31420      00000000 
 31421              	.LLST51:
 31422 0a15 00000000 		.quad	.LVL51
GAS LISTING /tmp/ccKUqHDa.s 			page 821


 31422      00000000 
 31423 0a1d 00000000 		.quad	.LVL52-1
 31423      00000000 
 31424 0a25 0100     		.value	0x1
 31425 0a27 50       		.byte	0x50
 31426 0a28 00000000 		.quad	0
 31426      00000000 
 31427 0a30 00000000 		.quad	0
 31427      00000000 
 31428              	.LLST52:
 31429 0a38 00000000 		.quad	.LVL56
 31429      00000000 
 31430 0a40 00000000 		.quad	.LVL57-1
 31430      00000000 
 31431 0a48 0100     		.value	0x1
 31432 0a4a 50       		.byte	0x50
 31433 0a4b 00000000 		.quad	0
 31433      00000000 
 31434 0a53 00000000 		.quad	0
 31434      00000000 
 31435              	.LLST53:
 31436 0a5b 00000000 		.quad	.LVL59
 31436      00000000 
 31437 0a63 00000000 		.quad	.LVL60-1
 31437      00000000 
 31438 0a6b 0100     		.value	0x1
 31439 0a6d 50       		.byte	0x50
 31440 0a6e 00000000 		.quad	0
 31440      00000000 
 31441 0a76 00000000 		.quad	0
 31441      00000000 
 31442              	.LLST54:
 31443 0a7e 00000000 		.quad	.LVL61
 31443      00000000 
 31444 0a86 00000000 		.quad	.LVL62-1
 31444      00000000 
 31445 0a8e 0100     		.value	0x1
 31446 0a90 50       		.byte	0x50
 31447 0a91 00000000 		.quad	0
 31447      00000000 
 31448 0a99 00000000 		.quad	0
 31448      00000000 
 31449              	.LLST55:
 31450 0aa1 00000000 		.quad	.LVL64
 31450      00000000 
 31451 0aa9 00000000 		.quad	.LVL66
 31451      00000000 
 31452 0ab1 0200     		.value	0x2
 31453 0ab3 74       		.byte	0x74
 31454 0ab4 08       		.sleb128 8
 31455 0ab5 00000000 		.quad	.LVL66
 31455      00000000 
 31456 0abd 00000000 		.quad	.LVL67-1
 31456      00000000 
 31457 0ac5 0100     		.value	0x1
 31458 0ac7 55       		.byte	0x55
 31459 0ac8 00000000 		.quad	0
GAS LISTING /tmp/ccKUqHDa.s 			page 822


 31459      00000000 
 31460 0ad0 00000000 		.quad	0
 31460      00000000 
 31461              	.LLST56:
 31462 0ad8 00000000 		.quad	.LVL70
 31462      00000000 
 31463 0ae0 00000000 		.quad	.LVL71
 31463      00000000 
 31464 0ae8 0100     		.value	0x1
 31465 0aea 50       		.byte	0x50
 31466 0aeb 00000000 		.quad	.LVL71
 31466      00000000 
 31467 0af3 00000000 		.quad	.LVL116
 31467      00000000 
 31468 0afb 0600     		.value	0x6
 31469 0afd 7C       		.byte	0x7c
 31470 0afe 00       		.sleb128 0
 31471 0aff 7C       		.byte	0x7c
 31472 0b00 00       		.sleb128 0
 31473 0b01 1E       		.byte	0x1e
 31474 0b02 9F       		.byte	0x9f
 31475 0b03 00000000 		.quad	.LVL218
 31475      00000000 
 31476 0b0b 00000000 		.quad	.LVL220-1
 31476      00000000 
 31477 0b13 0100     		.value	0x1
 31478 0b15 50       		.byte	0x50
 31479 0b16 00000000 		.quad	.LVL220-1
 31479      00000000 
 31480 0b1e 00000000 		.quad	.LVL223
 31480      00000000 
 31481 0b26 0600     		.value	0x6
 31482 0b28 7C       		.byte	0x7c
 31483 0b29 00       		.sleb128 0
 31484 0b2a 7C       		.byte	0x7c
 31485 0b2b 00       		.sleb128 0
 31486 0b2c 1E       		.byte	0x1e
 31487 0b2d 9F       		.byte	0x9f
 31488 0b2e 00000000 		.quad	.LVL225
 31488      00000000 
 31489 0b36 00000000 		.quad	.LVL235
 31489      00000000 
 31490 0b3e 0600     		.value	0x6
 31491 0b40 7C       		.byte	0x7c
 31492 0b41 00       		.sleb128 0
 31493 0b42 7C       		.byte	0x7c
 31494 0b43 00       		.sleb128 0
 31495 0b44 1E       		.byte	0x1e
 31496 0b45 9F       		.byte	0x9f
 31497 0b46 00000000 		.quad	.LVL236
 31497      00000000 
 31498 0b4e 00000000 		.quad	.LVL237
 31498      00000000 
 31499 0b56 0600     		.value	0x6
 31500 0b58 7C       		.byte	0x7c
 31501 0b59 00       		.sleb128 0
 31502 0b5a 7C       		.byte	0x7c
GAS LISTING /tmp/ccKUqHDa.s 			page 823


 31503 0b5b 00       		.sleb128 0
 31504 0b5c 1E       		.byte	0x1e
 31505 0b5d 9F       		.byte	0x9f
 31506 0b5e 00000000 		.quad	.LVL239
 31506      00000000 
 31507 0b66 00000000 		.quad	.LVL242
 31507      00000000 
 31508 0b6e 0600     		.value	0x6
 31509 0b70 7C       		.byte	0x7c
 31510 0b71 00       		.sleb128 0
 31511 0b72 7C       		.byte	0x7c
 31512 0b73 00       		.sleb128 0
 31513 0b74 1E       		.byte	0x1e
 31514 0b75 9F       		.byte	0x9f
 31515 0b76 00000000 		.quad	.LVL262
 31515      00000000 
 31516 0b7e 00000000 		.quad	.LVL263-1
 31516      00000000 
 31517 0b86 0100     		.value	0x1
 31518 0b88 50       		.byte	0x50
 31519 0b89 00000000 		.quad	.LVL263-1
 31519      00000000 
 31520 0b91 00000000 		.quad	.LVL267
 31520      00000000 
 31521 0b99 0600     		.value	0x6
 31522 0b9b 7C       		.byte	0x7c
 31523 0b9c 00       		.sleb128 0
 31524 0b9d 7C       		.byte	0x7c
 31525 0b9e 00       		.sleb128 0
 31526 0b9f 1E       		.byte	0x1e
 31527 0ba0 9F       		.byte	0x9f
 31528 0ba1 00000000 		.quad	.LVL270
 31528      00000000 
 31529 0ba9 00000000 		.quad	.LVL275
 31529      00000000 
 31530 0bb1 0600     		.value	0x6
 31531 0bb3 7C       		.byte	0x7c
 31532 0bb4 00       		.sleb128 0
 31533 0bb5 7C       		.byte	0x7c
 31534 0bb6 00       		.sleb128 0
 31535 0bb7 1E       		.byte	0x1e
 31536 0bb8 9F       		.byte	0x9f
 31537 0bb9 00000000 		.quad	0
 31537      00000000 
 31538 0bc1 00000000 		.quad	0
 31538      00000000 
 31539              	.LLST60:
 31540 0bc9 00000000 		.quad	.LVL218
 31540      00000000 
 31541 0bd1 00000000 		.quad	.LVL220-1
 31541      00000000 
 31542 0bd9 0100     		.value	0x1
 31543 0bdb 50       		.byte	0x50
 31544 0bdc 00000000 		.quad	.LVL220-1
 31544      00000000 
 31545 0be4 00000000 		.quad	.LVL223
 31545      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 824


 31546 0bec 0600     		.value	0x6
 31547 0bee 7C       		.byte	0x7c
 31548 0bef 00       		.sleb128 0
 31549 0bf0 7C       		.byte	0x7c
 31550 0bf1 00       		.sleb128 0
 31551 0bf2 1E       		.byte	0x1e
 31552 0bf3 9F       		.byte	0x9f
 31553 0bf4 00000000 		.quad	.LVL262
 31553      00000000 
 31554 0bfc 00000000 		.quad	.LVL263-1
 31554      00000000 
 31555 0c04 0100     		.value	0x1
 31556 0c06 50       		.byte	0x50
 31557 0c07 00000000 		.quad	.LVL263-1
 31557      00000000 
 31558 0c0f 00000000 		.quad	.LVL263
 31558      00000000 
 31559 0c17 0600     		.value	0x6
 31560 0c19 7C       		.byte	0x7c
 31561 0c1a 00       		.sleb128 0
 31562 0c1b 7C       		.byte	0x7c
 31563 0c1c 00       		.sleb128 0
 31564 0c1d 1E       		.byte	0x1e
 31565 0c1e 9F       		.byte	0x9f
 31566 0c1f 00000000 		.quad	0
 31566      00000000 
 31567 0c27 00000000 		.quad	0
 31567      00000000 
 31568              	.LLST61:
 31569 0c2f 00000000 		.quad	.LVL218
 31569      00000000 
 31570 0c37 00000000 		.quad	.LVL223
 31570      00000000 
 31571 0c3f 0200     		.value	0x2
 31572 0c41 30       		.byte	0x30
 31573 0c42 9F       		.byte	0x9f
 31574 0c43 00000000 		.quad	.LVL262
 31574      00000000 
 31575 0c4b 00000000 		.quad	.LVL263
 31575      00000000 
 31576 0c53 0200     		.value	0x2
 31577 0c55 30       		.byte	0x30
 31578 0c56 9F       		.byte	0x9f
 31579 0c57 00000000 		.quad	0
 31579      00000000 
 31580 0c5f 00000000 		.quad	0
 31580      00000000 
 31581              	.LLST63:
 31582 0c67 00000000 		.quad	.LVL71
 31582      00000000 
 31583 0c6f 00000000 		.quad	.LVL72
 31583      00000000 
 31584 0c77 0200     		.value	0x2
 31585 0c79 30       		.byte	0x30
 31586 0c7a 9F       		.byte	0x9f
 31587 0c7b 00000000 		.quad	.LVL236
 31587      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 825


 31588 0c83 00000000 		.quad	.LVL237
 31588      00000000 
 31589 0c8b 0200     		.value	0x2
 31590 0c8d 30       		.byte	0x30
 31591 0c8e 9F       		.byte	0x9f
 31592 0c8f 00000000 		.quad	0
 31592      00000000 
 31593 0c97 00000000 		.quad	0
 31593      00000000 
 31594              	.LLST64:
 31595 0c9f 00000000 		.quad	.LVL72
 31595      00000000 
 31596 0ca7 00000000 		.quad	.LVL73
 31596      00000000 
 31597 0caf 0200     		.value	0x2
 31598 0cb1 30       		.byte	0x30
 31599 0cb2 9F       		.byte	0x9f
 31600 0cb3 00000000 		.quad	.LVL73
 31600      00000000 
 31601 0cbb 00000000 		.quad	.LVL81
 31601      00000000 
 31602 0cc3 0100     		.value	0x1
 31603 0cc5 51       		.byte	0x51
 31604 0cc6 00000000 		.quad	0
 31604      00000000 
 31605 0cce 00000000 		.quad	0
 31605      00000000 
 31606              	.LLST67:
 31607 0cd6 00000000 		.quad	.LVL73
 31607      00000000 
 31608 0cde 00000000 		.quad	.LVL74
 31608      00000000 
 31609 0ce6 0600     		.value	0x6
 31610 0ce8 71       		.byte	0x71
 31611 0ce9 00       		.sleb128 0
 31612 0cea 73       		.byte	0x73
 31613 0ceb 00       		.sleb128 0
 31614 0cec 1C       		.byte	0x1c
 31615 0ced 9F       		.byte	0x9f
 31616 0cee 00000000 		.quad	.LVL74
 31616      00000000 
 31617 0cf6 00000000 		.quad	.LVL75
 31617      00000000 
 31618 0cfe 0700     		.value	0x7
 31619 0d00 73       		.byte	0x73
 31620 0d01 00       		.sleb128 0
 31621 0d02 20       		.byte	0x20
 31622 0d03 71       		.byte	0x71
 31623 0d04 00       		.sleb128 0
 31624 0d05 22       		.byte	0x22
 31625 0d06 9F       		.byte	0x9f
 31626 0d07 00000000 		.quad	.LVL75
 31626      00000000 
 31627 0d0f 00000000 		.quad	.LVL76
 31627      00000000 
 31628 0d17 0600     		.value	0x6
 31629 0d19 71       		.byte	0x71
GAS LISTING /tmp/ccKUqHDa.s 			page 826


 31630 0d1a 00       		.sleb128 0
 31631 0d1b 73       		.byte	0x73
 31632 0d1c 00       		.sleb128 0
 31633 0d1d 1C       		.byte	0x1c
 31634 0d1e 9F       		.byte	0x9f
 31635 0d1f 00000000 		.quad	.LVL76
 31635      00000000 
 31636 0d27 00000000 		.quad	.LVL77
 31636      00000000 
 31637 0d2f 0100     		.value	0x1
 31638 0d31 50       		.byte	0x50
 31639 0d32 00000000 		.quad	.LVL77
 31639      00000000 
 31640 0d3a 00000000 		.quad	.LVL79
 31640      00000000 
 31641 0d42 0600     		.value	0x6
 31642 0d44 71       		.byte	0x71
 31643 0d45 00       		.sleb128 0
 31644 0d46 73       		.byte	0x73
 31645 0d47 00       		.sleb128 0
 31646 0d48 1C       		.byte	0x1c
 31647 0d49 9F       		.byte	0x9f
 31648 0d4a 00000000 		.quad	.LVL79
 31648      00000000 
 31649 0d52 00000000 		.quad	.LVL80
 31649      00000000 
 31650 0d5a 0700     		.value	0x7
 31651 0d5c 73       		.byte	0x73
 31652 0d5d 00       		.sleb128 0
 31653 0d5e 20       		.byte	0x20
 31654 0d5f 71       		.byte	0x71
 31655 0d60 00       		.sleb128 0
 31656 0d61 22       		.byte	0x22
 31657 0d62 9F       		.byte	0x9f
 31658 0d63 00000000 		.quad	0
 31658      00000000 
 31659 0d6b 00000000 		.quad	0
 31659      00000000 
 31660              	.LLST68:
 31661 0d73 00000000 		.quad	.LVL92
 31661      00000000 
 31662 0d7b 00000000 		.quad	.LVL93-1
 31662      00000000 
 31663 0d83 0100     		.value	0x1
 31664 0d85 50       		.byte	0x50
 31665 0d86 00000000 		.quad	.LVL93-1
 31665      00000000 
 31666 0d8e 00000000 		.quad	.LVL136
 31666      00000000 
 31667 0d96 0400     		.value	0x4
 31668 0d98 91       		.byte	0x91
 31669 0d99 F0AE7F   		.sleb128 -10384
 31670 0d9c 00000000 		.quad	.LVL225
 31670      00000000 
 31671 0da4 00000000 		.quad	.LVL235
 31671      00000000 
 31672 0dac 0400     		.value	0x4
GAS LISTING /tmp/ccKUqHDa.s 			page 827


 31673 0dae 91       		.byte	0x91
 31674 0daf F0AE7F   		.sleb128 -10384
 31675 0db2 00000000 		.quad	.LVL237
 31675      00000000 
 31676 0dba 00000000 		.quad	.LVL244
 31676      00000000 
 31677 0dc2 0400     		.value	0x4
 31678 0dc4 91       		.byte	0x91
 31679 0dc5 F0AE7F   		.sleb128 -10384
 31680 0dc8 00000000 		.quad	.LVL263
 31680      00000000 
 31681 0dd0 00000000 		.quad	.LVL267
 31681      00000000 
 31682 0dd8 0400     		.value	0x4
 31683 0dda 91       		.byte	0x91
 31684 0ddb F0AE7F   		.sleb128 -10384
 31685 0dde 00000000 		.quad	.LVL270
 31685      00000000 
 31686 0de6 00000000 		.quad	.LVL275
 31686      00000000 
 31687 0dee 0400     		.value	0x4
 31688 0df0 91       		.byte	0x91
 31689 0df1 F0AE7F   		.sleb128 -10384
 31690 0df4 00000000 		.quad	.LVL287
 31690      00000000 
 31691 0dfc 00000000 		.quad	.LVL291
 31691      00000000 
 31692 0e04 0400     		.value	0x4
 31693 0e06 91       		.byte	0x91
 31694 0e07 F0AE7F   		.sleb128 -10384
 31695 0e0a 00000000 		.quad	0
 31695      00000000 
 31696 0e12 00000000 		.quad	0
 31696      00000000 
 31697              	.LLST69:
 31698 0e1a 00000000 		.quad	.LVL92
 31698      00000000 
 31699 0e22 00000000 		.quad	.LVL116
 31699      00000000 
 31700 0e2a 0100     		.value	0x1
 31701 0e2c 5C       		.byte	0x5c
 31702 0e2d 00000000 		.quad	.LVL225
 31702      00000000 
 31703 0e35 00000000 		.quad	.LVL235
 31703      00000000 
 31704 0e3d 0100     		.value	0x1
 31705 0e3f 5C       		.byte	0x5c
 31706 0e40 00000000 		.quad	.LVL239
 31706      00000000 
 31707 0e48 00000000 		.quad	.LVL242
 31707      00000000 
 31708 0e50 0100     		.value	0x1
 31709 0e52 5C       		.byte	0x5c
 31710 0e53 00000000 		.quad	.LVL263
 31710      00000000 
 31711 0e5b 00000000 		.quad	.LVL267
 31711      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 828


 31712 0e63 0100     		.value	0x1
 31713 0e65 5C       		.byte	0x5c
 31714 0e66 00000000 		.quad	.LVL270
 31714      00000000 
 31715 0e6e 00000000 		.quad	.LVL275
 31715      00000000 
 31716 0e76 0100     		.value	0x1
 31717 0e78 5C       		.byte	0x5c
 31718 0e79 00000000 		.quad	0
 31718      00000000 
 31719 0e81 00000000 		.quad	0
 31719      00000000 
 31720              	.LLST70:
 31721 0e89 00000000 		.quad	.LVL94
 31721      00000000 
 31722 0e91 00000000 		.quad	.LVL98
 31722      00000000 
 31723 0e99 0100     		.value	0x1
 31724 0e9b 56       		.byte	0x56
 31725 0e9c 00000000 		.quad	0
 31725      00000000 
 31726 0ea4 00000000 		.quad	0
 31726      00000000 
 31727              	.LLST71:
 31728 0eac 00000000 		.quad	.LVL106
 31728      00000000 
 31729 0eb4 00000000 		.quad	.LVL107
 31729      00000000 
 31730 0ebc 0100     		.value	0x1
 31731 0ebe 50       		.byte	0x50
 31732 0ebf 00000000 		.quad	.LVL107
 31732      00000000 
 31733 0ec7 00000000 		.quad	.LVL117
 31733      00000000 
 31734 0ecf 0100     		.value	0x1
 31735 0ed1 56       		.byte	0x56
 31736 0ed2 00000000 		.quad	.LVL225
 31736      00000000 
 31737 0eda 00000000 		.quad	.LVL235
 31737      00000000 
 31738 0ee2 0100     		.value	0x1
 31739 0ee4 56       		.byte	0x56
 31740 0ee5 00000000 		.quad	.LVL239
 31740      00000000 
 31741 0eed 00000000 		.quad	.LVL242
 31741      00000000 
 31742 0ef5 0100     		.value	0x1
 31743 0ef7 56       		.byte	0x56
 31744 0ef8 00000000 		.quad	0
 31744      00000000 
 31745 0f00 00000000 		.quad	0
 31745      00000000 
 31746              	.LLST72:
 31747 0f08 00000000 		.quad	.LVL106
 31747      00000000 
 31748 0f10 00000000 		.quad	.LVL144
 31748      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 829


 31749 0f18 0100     		.value	0x1
 31750 0f1a 5E       		.byte	0x5e
 31751 0f1b 00000000 		.quad	.LVL144
 31751      00000000 
 31752 0f23 00000000 		.quad	.LVL218
 31752      00000000 
 31753 0f2b 0400     		.value	0x4
 31754 0f2d 91       		.byte	0x91
 31755 0f2e D0AF7F   		.sleb128 -10288
 31756 0f31 00000000 		.quad	.LVL223
 31756      00000000 
 31757 0f39 00000000 		.quad	.LVL225
 31757      00000000 
 31758 0f41 0400     		.value	0x4
 31759 0f43 91       		.byte	0x91
 31760 0f44 D0AF7F   		.sleb128 -10288
 31761 0f47 00000000 		.quad	.LVL225
 31761      00000000 
 31762 0f4f 00000000 		.quad	.LVL235
 31762      00000000 
 31763 0f57 0100     		.value	0x1
 31764 0f59 5E       		.byte	0x5e
 31765 0f5a 00000000 		.quad	.LVL235
 31765      00000000 
 31766 0f62 00000000 		.quad	.LVL236
 31766      00000000 
 31767 0f6a 0400     		.value	0x4
 31768 0f6c 91       		.byte	0x91
 31769 0f6d D0AF7F   		.sleb128 -10288
 31770 0f70 00000000 		.quad	.LVL237
 31770      00000000 
 31771 0f78 00000000 		.quad	.LVL244
 31771      00000000 
 31772 0f80 0100     		.value	0x1
 31773 0f82 5E       		.byte	0x5e
 31774 0f83 00000000 		.quad	.LVL244
 31774      00000000 
 31775 0f8b 00000000 		.quad	.LVL262
 31775      00000000 
 31776 0f93 0400     		.value	0x4
 31777 0f95 91       		.byte	0x91
 31778 0f96 D0AF7F   		.sleb128 -10288
 31779 0f99 00000000 		.quad	.LVL276
 31779      00000000 
 31780 0fa1 00000000 		.quad	.LVL277
 31780      00000000 
 31781 0fa9 0100     		.value	0x1
 31782 0fab 5E       		.byte	0x5e
 31783 0fac 00000000 		.quad	.LVL277
 31783      00000000 
 31784 0fb4 00000000 		.quad	.LVL287
 31784      00000000 
 31785 0fbc 0400     		.value	0x4
 31786 0fbe 91       		.byte	0x91
 31787 0fbf D0AF7F   		.sleb128 -10288
 31788 0fc2 00000000 		.quad	.LVL287
 31788      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 830


 31789 0fca 00000000 		.quad	.LVL291
 31789      00000000 
 31790 0fd2 0100     		.value	0x1
 31791 0fd4 5E       		.byte	0x5e
 31792 0fd5 00000000 		.quad	.LVL291
 31792      00000000 
 31793 0fdd 00000000 		.quad	.LFE5505
 31793      00000000 
 31794 0fe5 0400     		.value	0x4
 31795 0fe7 91       		.byte	0x91
 31796 0fe8 D0AF7F   		.sleb128 -10288
 31797 0feb 00000000 		.quad	0
 31797      00000000 
 31798 0ff3 00000000 		.quad	0
 31798      00000000 
 31799              	.LLST74:
 31800 0ffb 00000000 		.quad	.LVL108
 31800      00000000 
 31801 1003 00000000 		.quad	.LVL115
 31801      00000000 
 31802 100b 0500     		.value	0x5
 31803 100d 91       		.byte	0x91
 31804 100e F0B07F   		.sleb128 -10128
 31805 1011 9F       		.byte	0x9f
 31806 1012 00000000 		.quad	.LVL115
 31806      00000000 
 31807 101a 00000000 		.quad	.LVL117
 31807      00000000 
 31808 1022 0100     		.value	0x1
 31809 1024 50       		.byte	0x50
 31810 1025 00000000 		.quad	.LVL117
 31810      00000000 
 31811 102d 00000000 		.quad	.LVL211
 31811      00000000 
 31812 1035 0400     		.value	0x4
 31813 1037 91       		.byte	0x91
 31814 1038 C8AF7F   		.sleb128 -10296
 31815 103b 00000000 		.quad	.LVL211
 31815      00000000 
 31816 1043 00000000 		.quad	.LVL214
 31816      00000000 
 31817 104b 0500     		.value	0x5
 31818 104d 91       		.byte	0x91
 31819 104e F0B07F   		.sleb128 -10128
 31820 1051 9F       		.byte	0x9f
 31821 1052 00000000 		.quad	.LVL214
 31821      00000000 
 31822 105a 00000000 		.quad	.LVL218
 31822      00000000 
 31823 1062 0400     		.value	0x4
 31824 1064 91       		.byte	0x91
 31825 1065 C8AF7F   		.sleb128 -10296
 31826 1068 00000000 		.quad	.LVL223
 31826      00000000 
 31827 1070 00000000 		.quad	.LVL225
 31827      00000000 
 31828 1078 0400     		.value	0x4
GAS LISTING /tmp/ccKUqHDa.s 			page 831


 31829 107a 91       		.byte	0x91
 31830 107b C8AF7F   		.sleb128 -10296
 31831 107e 00000000 		.quad	.LVL225
 31831      00000000 
 31832 1086 00000000 		.quad	.LVL236
 31832      00000000 
 31833 108e 0500     		.value	0x5
 31834 1090 91       		.byte	0x91
 31835 1091 F0B07F   		.sleb128 -10128
 31836 1094 9F       		.byte	0x9f
 31837 1095 00000000 		.quad	.LVL237
 31837      00000000 
 31838 109d 00000000 		.quad	.LVL239
 31838      00000000 
 31839 10a5 0400     		.value	0x4
 31840 10a7 91       		.byte	0x91
 31841 10a8 C8AF7F   		.sleb128 -10296
 31842 10ab 00000000 		.quad	.LVL239
 31842      00000000 
 31843 10b3 00000000 		.quad	.LVL240
 31843      00000000 
 31844 10bb 0500     		.value	0x5
 31845 10bd 91       		.byte	0x91
 31846 10be F0B07F   		.sleb128 -10128
 31847 10c1 9F       		.byte	0x9f
 31848 10c2 00000000 		.quad	.LVL240
 31848      00000000 
 31849 10ca 00000000 		.quad	.LVL241-1
 31849      00000000 
 31850 10d2 0100     		.value	0x1
 31851 10d4 54       		.byte	0x54
 31852 10d5 00000000 		.quad	.LVL241-1
 31852      00000000 
 31853 10dd 00000000 		.quad	.LVL242
 31853      00000000 
 31854 10e5 0500     		.value	0x5
 31855 10e7 91       		.byte	0x91
 31856 10e8 F0B07F   		.sleb128 -10128
 31857 10eb 9F       		.byte	0x9f
 31858 10ec 00000000 		.quad	.LVL242
 31858      00000000 
 31859 10f4 00000000 		.quad	.LVL262
 31859      00000000 
 31860 10fc 0400     		.value	0x4
 31861 10fe 91       		.byte	0x91
 31862 10ff C8AF7F   		.sleb128 -10296
 31863 1102 00000000 		.quad	.LVL276
 31863      00000000 
 31864 110a 00000000 		.quad	.LFE5505
 31864      00000000 
 31865 1112 0400     		.value	0x4
 31866 1114 91       		.byte	0x91
 31867 1115 C8AF7F   		.sleb128 -10296
 31868 1118 00000000 		.quad	0
 31868      00000000 
 31869 1120 00000000 		.quad	0
 31869      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 832


 31870              	.LLST75:
 31871 1128 00000000 		.quad	.LVL108
 31871      00000000 
 31872 1130 00000000 		.quad	.LVL109
 31872      00000000 
 31873 1138 0100     		.value	0x1
 31874 113a 55       		.byte	0x55
 31875 113b 00000000 		.quad	.LVL239
 31875      00000000 
 31876 1143 00000000 		.quad	.LVL241-1
 31876      00000000 
 31877 114b 0100     		.value	0x1
 31878 114d 55       		.byte	0x55
 31879 114e 00000000 		.quad	0
 31879      00000000 
 31880 1156 00000000 		.quad	0
 31880      00000000 
 31881              	.LLST76:
 31882 115e 00000000 		.quad	.LVL228
 31882      00000000 
 31883 1166 00000000 		.quad	.LVL235
 31883      00000000 
 31884 116e 0100     		.value	0x1
 31885 1170 56       		.byte	0x56
 31886 1171 00000000 		.quad	0
 31886      00000000 
 31887 1179 00000000 		.quad	0
 31887      00000000 
 31888              	.LLST77:
 31889 1181 00000000 		.quad	.LVL228
 31889      00000000 
 31890 1189 00000000 		.quad	.LVL229-1
 31890      00000000 
 31891 1191 0100     		.value	0x1
 31892 1193 50       		.byte	0x50
 31893 1194 00000000 		.quad	0
 31893      00000000 
 31894 119c 00000000 		.quad	0
 31894      00000000 
 31895              	.LLST78:
 31896 11a4 00000000 		.quad	.LVL231
 31896      00000000 
 31897 11ac 00000000 		.quad	.LVL232-1
 31897      00000000 
 31898 11b4 0100     		.value	0x1
 31899 11b6 50       		.byte	0x50
 31900 11b7 00000000 		.quad	0
 31900      00000000 
 31901 11bf 00000000 		.quad	0
 31901      00000000 
 31902              	.LLST79:
 31903 11c7 00000000 		.quad	.LVL271
 31903      00000000 
 31904 11cf 00000000 		.quad	.LVL275
 31904      00000000 
 31905 11d7 0100     		.value	0x1
 31906 11d9 5E       		.byte	0x5e
GAS LISTING /tmp/ccKUqHDa.s 			page 833


 31907 11da 00000000 		.quad	0
 31907      00000000 
 31908 11e2 00000000 		.quad	0
 31908      00000000 
 31909              	.LLST81:
 31910 11ea 00000000 		.quad	.LVL272
 31910      00000000 
 31911 11f2 00000000 		.quad	.LVL273
 31911      00000000 
 31912 11fa 0500     		.value	0x5
 31913 11fc 91       		.byte	0x91
 31914 11fd F0B07F   		.sleb128 -10128
 31915 1200 9F       		.byte	0x9f
 31916 1201 00000000 		.quad	.LVL273
 31916      00000000 
 31917 1209 00000000 		.quad	.LVL274-1
 31917      00000000 
 31918 1211 0100     		.value	0x1
 31919 1213 54       		.byte	0x54
 31920 1214 00000000 		.quad	.LVL274-1
 31920      00000000 
 31921 121c 00000000 		.quad	.LVL275
 31921      00000000 
 31922 1224 0500     		.value	0x5
 31923 1226 91       		.byte	0x91
 31924 1227 F0B07F   		.sleb128 -10128
 31925 122a 9F       		.byte	0x9f
 31926 122b 00000000 		.quad	0
 31926      00000000 
 31927 1233 00000000 		.quad	0
 31927      00000000 
 31928              	.LLST82:
 31929 123b 00000000 		.quad	.LVL272
 31929      00000000 
 31930 1243 00000000 		.quad	.LVL274-1
 31930      00000000 
 31931 124b 0100     		.value	0x1
 31932 124d 55       		.byte	0x55
 31933 124e 00000000 		.quad	0
 31933      00000000 
 31934 1256 00000000 		.quad	0
 31934      00000000 
 31935              	.LLST83:
 31936 125e 00000000 		.quad	.LVL110
 31936      00000000 
 31937 1266 00000000 		.quad	.LVL184
 31937      00000000 
 31938 126e 0100     		.value	0x1
 31939 1270 53       		.byte	0x53
 31940 1271 00000000 		.quad	.LVL184
 31940      00000000 
 31941 1279 00000000 		.quad	.LVL211
 31941      00000000 
 31942 1281 0400     		.value	0x4
 31943 1283 91       		.byte	0x91
 31944 1284 B058     		.sleb128 -5072
 31945 1286 9F       		.byte	0x9f
GAS LISTING /tmp/ccKUqHDa.s 			page 834


 31946 1287 00000000 		.quad	.LVL214
 31946      00000000 
 31947 128f 00000000 		.quad	.LVL218
 31947      00000000 
 31948 1297 0100     		.value	0x1
 31949 1299 53       		.byte	0x53
 31950 129a 00000000 		.quad	.LVL223
 31950      00000000 
 31951 12a2 00000000 		.quad	.LVL225
 31951      00000000 
 31952 12aa 0400     		.value	0x4
 31953 12ac 91       		.byte	0x91
 31954 12ad B058     		.sleb128 -5072
 31955 12af 9F       		.byte	0x9f
 31956 12b0 00000000 		.quad	.LVL237
 31956      00000000 
 31957 12b8 00000000 		.quad	.LVL239
 31957      00000000 
 31958 12c0 0100     		.value	0x1
 31959 12c2 53       		.byte	0x53
 31960 12c3 00000000 		.quad	.LVL242
 31960      00000000 
 31961 12cb 00000000 		.quad	.LVL244
 31961      00000000 
 31962 12d3 0100     		.value	0x1
 31963 12d5 53       		.byte	0x53
 31964 12d6 00000000 		.quad	.LVL244
 31964      00000000 
 31965 12de 00000000 		.quad	.LVL256
 31965      00000000 
 31966 12e6 0400     		.value	0x4
 31967 12e8 91       		.byte	0x91
 31968 12e9 B058     		.sleb128 -5072
 31969 12eb 9F       		.byte	0x9f
 31970 12ec 00000000 		.quad	.LVL256
 31970      00000000 
 31971 12f4 00000000 		.quad	.LVL262
 31971      00000000 
 31972 12fc 0100     		.value	0x1
 31973 12fe 53       		.byte	0x53
 31974 12ff 00000000 		.quad	.LVL276
 31974      00000000 
 31975 1307 00000000 		.quad	.LVL277
 31975      00000000 
 31976 130f 0100     		.value	0x1
 31977 1311 53       		.byte	0x53
 31978 1312 00000000 		.quad	.LVL277
 31978      00000000 
 31979 131a 00000000 		.quad	.LVL287
 31979      00000000 
 31980 1322 0400     		.value	0x4
 31981 1324 91       		.byte	0x91
 31982 1325 B058     		.sleb128 -5072
 31983 1327 9F       		.byte	0x9f
 31984 1328 00000000 		.quad	.LVL287
 31984      00000000 
 31985 1330 00000000 		.quad	.LVL288
GAS LISTING /tmp/ccKUqHDa.s 			page 835


 31985      00000000 
 31986 1338 0100     		.value	0x1
 31987 133a 53       		.byte	0x53
 31988 133b 00000000 		.quad	.LVL288
 31988      00000000 
 31989 1343 00000000 		.quad	.LFE5505
 31989      00000000 
 31990 134b 0400     		.value	0x4
 31991 134d 91       		.byte	0x91
 31992 134e B058     		.sleb128 -5072
 31993 1350 9F       		.byte	0x9f
 31994 1351 00000000 		.quad	0
 31994      00000000 
 31995 1359 00000000 		.quad	0
 31995      00000000 
 31996              	.LLST84:
 31997 1361 00000000 		.quad	.LVL110
 31997      00000000 
 31998 1369 00000000 		.quad	.LVL184
 31998      00000000 
 31999 1371 0100     		.value	0x1
 32000 1373 53       		.byte	0x53
 32001 1374 00000000 		.quad	.LVL200
 32001      00000000 
 32002 137c 00000000 		.quad	.LVL211
 32002      00000000 
 32003 1384 0400     		.value	0x4
 32004 1386 91       		.byte	0x91
 32005 1387 B0AF7F   		.sleb128 -10320
 32006 138a 00000000 		.quad	.LVL214
 32006      00000000 
 32007 1392 00000000 		.quad	.LVL218
 32007      00000000 
 32008 139a 0100     		.value	0x1
 32009 139c 53       		.byte	0x53
 32010 139d 00000000 		.quad	.LVL237
 32010      00000000 
 32011 13a5 00000000 		.quad	.LVL239
 32011      00000000 
 32012 13ad 0100     		.value	0x1
 32013 13af 53       		.byte	0x53
 32014 13b0 00000000 		.quad	.LVL242
 32014      00000000 
 32015 13b8 00000000 		.quad	.LVL244
 32015      00000000 
 32016 13c0 0100     		.value	0x1
 32017 13c2 53       		.byte	0x53
 32018 13c3 00000000 		.quad	.LVL250
 32018      00000000 
 32019 13cb 00000000 		.quad	.LVL256
 32019      00000000 
 32020 13d3 0400     		.value	0x4
 32021 13d5 91       		.byte	0x91
 32022 13d6 B0AF7F   		.sleb128 -10320
 32023 13d9 00000000 		.quad	.LVL256
 32023      00000000 
 32024 13e1 00000000 		.quad	.LVL262
GAS LISTING /tmp/ccKUqHDa.s 			page 836


 32024      00000000 
 32025 13e9 0100     		.value	0x1
 32026 13eb 53       		.byte	0x53
 32027 13ec 00000000 		.quad	.LVL276
 32027      00000000 
 32028 13f4 00000000 		.quad	.LVL277
 32028      00000000 
 32029 13fc 0100     		.value	0x1
 32030 13fe 53       		.byte	0x53
 32031 13ff 00000000 		.quad	.LVL283
 32031      00000000 
 32032 1407 00000000 		.quad	.LVL287
 32032      00000000 
 32033 140f 0400     		.value	0x4
 32034 1411 91       		.byte	0x91
 32035 1412 B0AF7F   		.sleb128 -10320
 32036 1415 00000000 		.quad	.LVL287
 32036      00000000 
 32037 141d 00000000 		.quad	.LVL288
 32037      00000000 
 32038 1425 0100     		.value	0x1
 32039 1427 53       		.byte	0x53
 32040 1428 00000000 		.quad	.LVL288
 32040      00000000 
 32041 1430 00000000 		.quad	.LVL291
 32041      00000000 
 32042 1438 0400     		.value	0x4
 32043 143a 91       		.byte	0x91
 32044 143b B058     		.sleb128 -5072
 32045 143d 9F       		.byte	0x9f
 32046 143e 00000000 		.quad	0
 32046      00000000 
 32047 1446 00000000 		.quad	0
 32047      00000000 
 32048              	.LLST85:
 32049 144e 00000000 		.quad	.LVL111
 32049      00000000 
 32050 1456 00000000 		.quad	.LVL113-1
 32050      00000000 
 32051 145e 0800     		.value	0x8
 32052 1460 73       		.byte	0x73
 32053 1461 10       		.sleb128 16
 32054 1462 06       		.byte	0x6
 32055 1463 73       		.byte	0x73
 32056 1464 00       		.sleb128 0
 32057 1465 06       		.byte	0x6
 32058 1466 1C       		.byte	0x1c
 32059 1467 9F       		.byte	0x9f
 32060 1468 00000000 		.quad	.LVL200
 32060      00000000 
 32061 1470 00000000 		.quad	.LVL202-1
 32061      00000000 
 32062 1478 1000     		.value	0x10
 32063 147a 91       		.byte	0x91
 32064 147b B0AF7F   		.sleb128 -10320
 32065 147e 06       		.byte	0x6
 32066 147f 23       		.byte	0x23
GAS LISTING /tmp/ccKUqHDa.s 			page 837


 32067 1480 10       		.uleb128 0x10
 32068 1481 06       		.byte	0x6
 32069 1482 91       		.byte	0x91
 32070 1483 B0AF7F   		.sleb128 -10320
 32071 1486 06       		.byte	0x6
 32072 1487 06       		.byte	0x6
 32073 1488 1C       		.byte	0x1c
 32074 1489 9F       		.byte	0x9f
 32075 148a 00000000 		.quad	.LVL250
 32075      00000000 
 32076 1492 00000000 		.quad	.LVL253-1
 32076      00000000 
 32077 149a 1000     		.value	0x10
 32078 149c 91       		.byte	0x91
 32079 149d B0AF7F   		.sleb128 -10320
 32080 14a0 06       		.byte	0x6
 32081 14a1 23       		.byte	0x23
 32082 14a2 10       		.uleb128 0x10
 32083 14a3 06       		.byte	0x6
 32084 14a4 91       		.byte	0x91
 32085 14a5 B0AF7F   		.sleb128 -10320
 32086 14a8 06       		.byte	0x6
 32087 14a9 06       		.byte	0x6
 32088 14aa 1C       		.byte	0x1c
 32089 14ab 9F       		.byte	0x9f
 32090 14ac 00000000 		.quad	.LVL283
 32090      00000000 
 32091 14b4 00000000 		.quad	.LVL286-1
 32091      00000000 
 32092 14bc 1000     		.value	0x10
 32093 14be 91       		.byte	0x91
 32094 14bf B0AF7F   		.sleb128 -10320
 32095 14c2 06       		.byte	0x6
 32096 14c3 23       		.byte	0x23
 32097 14c4 10       		.uleb128 0x10
 32098 14c5 06       		.byte	0x6
 32099 14c6 91       		.byte	0x91
 32100 14c7 B0AF7F   		.sleb128 -10320
 32101 14ca 06       		.byte	0x6
 32102 14cb 06       		.byte	0x6
 32103 14cc 1C       		.byte	0x1c
 32104 14cd 9F       		.byte	0x9f
 32105 14ce 00000000 		.quad	0
 32105      00000000 
 32106 14d6 00000000 		.quad	0
 32106      00000000 
 32107              	.LLST86:
 32108 14de 00000000 		.quad	.LVL111
 32108      00000000 
 32109 14e6 00000000 		.quad	.LVL113-1
 32109      00000000 
 32110 14ee 0200     		.value	0x2
 32111 14f0 73       		.byte	0x73
 32112 14f1 00       		.sleb128 0
 32113 14f2 00000000 		.quad	0
 32113      00000000 
 32114 14fa 00000000 		.quad	0
GAS LISTING /tmp/ccKUqHDa.s 			page 838


 32114      00000000 
 32115              	.LLST87:
 32116 1502 00000000 		.quad	.LVL112
 32116      00000000 
 32117 150a 00000000 		.quad	.LVL113-1
 32117      00000000 
 32118 1512 0800     		.value	0x8
 32119 1514 73       		.byte	0x73
 32120 1515 10       		.sleb128 16
 32121 1516 06       		.byte	0x6
 32122 1517 73       		.byte	0x73
 32123 1518 00       		.sleb128 0
 32124 1519 06       		.byte	0x6
 32125 151a 1C       		.byte	0x1c
 32126 151b 9F       		.byte	0x9f
 32127 151c 00000000 		.quad	0
 32127      00000000 
 32128 1524 00000000 		.quad	0
 32128      00000000 
 32129              	.LLST88:
 32130 152c 00000000 		.quad	.LVL112
 32130      00000000 
 32131 1534 00000000 		.quad	.LVL113-1
 32131      00000000 
 32132 153c 0200     		.value	0x2
 32133 153e 73       		.byte	0x73
 32134 153f 00       		.sleb128 0
 32135 1540 00000000 		.quad	0
 32135      00000000 
 32136 1548 00000000 		.quad	0
 32136      00000000 
 32137              	.LLST91:
 32138 1550 00000000 		.quad	.LVL232
 32138      00000000 
 32139 1558 00000000 		.quad	.LVL235
 32139      00000000 
 32140 1560 0400     		.value	0x4
 32141 1562 91       		.byte	0x91
 32142 1563 B058     		.sleb128 -5072
 32143 1565 9F       		.byte	0x9f
 32144 1566 00000000 		.quad	0
 32144      00000000 
 32145 156e 00000000 		.quad	0
 32145      00000000 
 32146              	.LLST93:
 32147 1576 00000000 		.quad	.LVL233
 32147      00000000 
 32148 157e 00000000 		.quad	.LVL235-1
 32148      00000000 
 32149 1586 0A00     		.value	0xa
 32150 1588 91       		.byte	0x91
 32151 1589 C058     		.sleb128 -5056
 32152 158b 06       		.byte	0x6
 32153 158c 91       		.byte	0x91
 32154 158d B058     		.sleb128 -5072
 32155 158f 06       		.byte	0x6
 32156 1590 1C       		.byte	0x1c
GAS LISTING /tmp/ccKUqHDa.s 			page 839


 32157 1591 9F       		.byte	0x9f
 32158 1592 00000000 		.quad	0
 32158      00000000 
 32159 159a 00000000 		.quad	0
 32159      00000000 
 32160              	.LLST94:
 32161 15a2 00000000 		.quad	.LVL233
 32161      00000000 
 32162 15aa 00000000 		.quad	.LVL235-1
 32162      00000000 
 32163 15b2 0300     		.value	0x3
 32164 15b4 91       		.byte	0x91
 32165 15b5 B058     		.sleb128 -5072
 32166 15b7 00000000 		.quad	0
 32166      00000000 
 32167 15bf 00000000 		.quad	0
 32167      00000000 
 32168              	.LLST95:
 32169 15c7 00000000 		.quad	.LVL234
 32169      00000000 
 32170 15cf 00000000 		.quad	.LVL235-1
 32170      00000000 
 32171 15d7 0A00     		.value	0xa
 32172 15d9 91       		.byte	0x91
 32173 15da C058     		.sleb128 -5056
 32174 15dc 06       		.byte	0x6
 32175 15dd 91       		.byte	0x91
 32176 15de B058     		.sleb128 -5072
 32177 15e0 06       		.byte	0x6
 32178 15e1 1C       		.byte	0x1c
 32179 15e2 9F       		.byte	0x9f
 32180 15e3 00000000 		.quad	0
 32180      00000000 
 32181 15eb 00000000 		.quad	0
 32181      00000000 
 32182              	.LLST96:
 32183 15f3 00000000 		.quad	.LVL234
 32183      00000000 
 32184 15fb 00000000 		.quad	.LVL235-1
 32184      00000000 
 32185 1603 0300     		.value	0x3
 32186 1605 91       		.byte	0x91
 32187 1606 B058     		.sleb128 -5072
 32188 1608 00000000 		.quad	0
 32188      00000000 
 32189 1610 00000000 		.quad	0
 32189      00000000 
 32190              	.LLST99:
 32191 1618 00000000 		.quad	.LVL264
 32191      00000000 
 32192 1620 00000000 		.quad	.LVL267
 32192      00000000 
 32193 1628 0400     		.value	0x4
 32194 162a 91       		.byte	0x91
 32195 162b B058     		.sleb128 -5072
 32196 162d 9F       		.byte	0x9f
 32197 162e 00000000 		.quad	0
GAS LISTING /tmp/ccKUqHDa.s 			page 840


 32197      00000000 
 32198 1636 00000000 		.quad	0
 32198      00000000 
 32199              	.LLST101:
 32200 163e 00000000 		.quad	.LVL265
 32200      00000000 
 32201 1646 00000000 		.quad	.LVL267-1
 32201      00000000 
 32202 164e 0A00     		.value	0xa
 32203 1650 91       		.byte	0x91
 32204 1651 C058     		.sleb128 -5056
 32205 1653 06       		.byte	0x6
 32206 1654 91       		.byte	0x91
 32207 1655 B058     		.sleb128 -5072
 32208 1657 06       		.byte	0x6
 32209 1658 1C       		.byte	0x1c
 32210 1659 9F       		.byte	0x9f
 32211 165a 00000000 		.quad	0
 32211      00000000 
 32212 1662 00000000 		.quad	0
 32212      00000000 
 32213              	.LLST102:
 32214 166a 00000000 		.quad	.LVL265
 32214      00000000 
 32215 1672 00000000 		.quad	.LVL267-1
 32215      00000000 
 32216 167a 0300     		.value	0x3
 32217 167c 91       		.byte	0x91
 32218 167d B058     		.sleb128 -5072
 32219 167f 00000000 		.quad	0
 32219      00000000 
 32220 1687 00000000 		.quad	0
 32220      00000000 
 32221              	.LLST103:
 32222 168f 00000000 		.quad	.LVL266
 32222      00000000 
 32223 1697 00000000 		.quad	.LVL267-1
 32223      00000000 
 32224 169f 0A00     		.value	0xa
 32225 16a1 91       		.byte	0x91
 32226 16a2 C058     		.sleb128 -5056
 32227 16a4 06       		.byte	0x6
 32228 16a5 91       		.byte	0x91
 32229 16a6 B058     		.sleb128 -5072
 32230 16a8 06       		.byte	0x6
 32231 16a9 1C       		.byte	0x1c
 32232 16aa 9F       		.byte	0x9f
 32233 16ab 00000000 		.quad	0
 32233      00000000 
 32234 16b3 00000000 		.quad	0
 32234      00000000 
 32235              	.LLST104:
 32236 16bb 00000000 		.quad	.LVL266
 32236      00000000 
 32237 16c3 00000000 		.quad	.LVL267-1
 32237      00000000 
 32238 16cb 0300     		.value	0x3
GAS LISTING /tmp/ccKUqHDa.s 			page 841


 32239 16cd 91       		.byte	0x91
 32240 16ce B058     		.sleb128 -5072
 32241 16d0 00000000 		.quad	0
 32241      00000000 
 32242 16d8 00000000 		.quad	0
 32242      00000000 
 32243              	.LLST107:
 32244 16e0 00000000 		.quad	.LVL114
 32244      00000000 
 32245 16e8 00000000 		.quad	.LVL115
 32245      00000000 
 32246 16f0 0100     		.value	0x1
 32247 16f2 50       		.byte	0x50
 32248 16f3 00000000 		.quad	.LVL115
 32248      00000000 
 32249 16fb 00000000 		.quad	.LVL211
 32249      00000000 
 32250 1703 0400     		.value	0x4
 32251 1705 91       		.byte	0x91
 32252 1706 D8AF7F   		.sleb128 -10280
 32253 1709 00000000 		.quad	.LVL214
 32253      00000000 
 32254 1711 00000000 		.quad	.LVL218
 32254      00000000 
 32255 1719 0400     		.value	0x4
 32256 171b 91       		.byte	0x91
 32257 171c D8AF7F   		.sleb128 -10280
 32258 171f 00000000 		.quad	.LVL223
 32258      00000000 
 32259 1727 00000000 		.quad	.LVL225
 32259      00000000 
 32260 172f 0400     		.value	0x4
 32261 1731 91       		.byte	0x91
 32262 1732 D8AF7F   		.sleb128 -10280
 32263 1735 00000000 		.quad	.LVL237
 32263      00000000 
 32264 173d 00000000 		.quad	.LVL239
 32264      00000000 
 32265 1745 0400     		.value	0x4
 32266 1747 91       		.byte	0x91
 32267 1748 D8AF7F   		.sleb128 -10280
 32268 174b 00000000 		.quad	.LVL242
 32268      00000000 
 32269 1753 00000000 		.quad	.LVL262
 32269      00000000 
 32270 175b 0400     		.value	0x4
 32271 175d 91       		.byte	0x91
 32272 175e D8AF7F   		.sleb128 -10280
 32273 1761 00000000 		.quad	.LVL276
 32273      00000000 
 32274 1769 00000000 		.quad	.LFE5505
 32274      00000000 
 32275 1771 0400     		.value	0x4
 32276 1773 91       		.byte	0x91
 32277 1774 D8AF7F   		.sleb128 -10280
 32278 1777 00000000 		.quad	0
 32278      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 842


 32279 177f 00000000 		.quad	0
 32279      00000000 
 32280              	.LLST109:
 32281 1787 00000000 		.quad	.LVL114
 32281      00000000 
 32282 178f 00000000 		.quad	.LVL211
 32282      00000000 
 32283 1797 0400     		.value	0x4
 32284 1799 0A       		.byte	0xa
 32285 179a E803     		.value	0x3e8
 32286 179c 9F       		.byte	0x9f
 32287 179d 00000000 		.quad	.LVL214
 32287      00000000 
 32288 17a5 00000000 		.quad	.LVL218
 32288      00000000 
 32289 17ad 0400     		.value	0x4
 32290 17af 0A       		.byte	0xa
 32291 17b0 E803     		.value	0x3e8
 32292 17b2 9F       		.byte	0x9f
 32293 17b3 00000000 		.quad	.LVL223
 32293      00000000 
 32294 17bb 00000000 		.quad	.LVL225
 32294      00000000 
 32295 17c3 0400     		.value	0x4
 32296 17c5 0A       		.byte	0xa
 32297 17c6 E803     		.value	0x3e8
 32298 17c8 9F       		.byte	0x9f
 32299 17c9 00000000 		.quad	.LVL237
 32299      00000000 
 32300 17d1 00000000 		.quad	.LVL239
 32300      00000000 
 32301 17d9 0400     		.value	0x4
 32302 17db 0A       		.byte	0xa
 32303 17dc E803     		.value	0x3e8
 32304 17de 9F       		.byte	0x9f
 32305 17df 00000000 		.quad	.LVL242
 32305      00000000 
 32306 17e7 00000000 		.quad	.LVL262
 32306      00000000 
 32307 17ef 0400     		.value	0x4
 32308 17f1 0A       		.byte	0xa
 32309 17f2 E803     		.value	0x3e8
 32310 17f4 9F       		.byte	0x9f
 32311 17f5 00000000 		.quad	.LVL276
 32311      00000000 
 32312 17fd 00000000 		.quad	.LFE5505
 32312      00000000 
 32313 1805 0400     		.value	0x4
 32314 1807 0A       		.byte	0xa
 32315 1808 E803     		.value	0x3e8
 32316 180a 9F       		.byte	0x9f
 32317 180b 00000000 		.quad	0
 32317      00000000 
 32318 1813 00000000 		.quad	0
 32318      00000000 
 32319              	.LLST110:
 32320 181b 00000000 		.quad	.LVL137
GAS LISTING /tmp/ccKUqHDa.s 			page 843


 32320      00000000 
 32321 1823 00000000 		.quad	.LVL140
 32321      00000000 
 32322 182b 0C00     		.value	0xc
 32323 182d 30       		.byte	0x30
 32324 182e 9F       		.byte	0x9f
 32325 182f 93       		.byte	0x93
 32326 1830 08       		.uleb128 0x8
 32327 1831 30       		.byte	0x30
 32328 1832 9F       		.byte	0x9f
 32329 1833 93       		.byte	0x93
 32330 1834 08       		.uleb128 0x8
 32331 1835 30       		.byte	0x30
 32332 1836 9F       		.byte	0x9f
 32333 1837 93       		.byte	0x93
 32334 1838 08       		.uleb128 0x8
 32335 1839 00000000 		.quad	.LVL140
 32335      00000000 
 32336 1841 00000000 		.quad	.LVL145
 32336      00000000 
 32337 1849 0F00     		.value	0xf
 32338 184b 91       		.byte	0x91
 32339 184c A8AF7F   		.sleb128 -10328
 32340 184f 93       		.byte	0x93
 32341 1850 08       		.uleb128 0x8
 32342 1851 91       		.byte	0x91
 32343 1852 A8AF7F   		.sleb128 -10328
 32344 1855 93       		.byte	0x93
 32345 1856 08       		.uleb128 0x8
 32346 1857 56       		.byte	0x56
 32347 1858 93       		.byte	0x93
 32348 1859 08       		.uleb128 0x8
 32349 185a 00000000 		.quad	.LVL145
 32349      00000000 
 32350 1862 00000000 		.quad	.LVL211
 32350      00000000 
 32351 186a 1200     		.value	0x12
 32352 186c 91       		.byte	0x91
 32353 186d A8AF7F   		.sleb128 -10328
 32354 1870 93       		.byte	0x93
 32355 1871 08       		.uleb128 0x8
 32356 1872 91       		.byte	0x91
 32357 1873 A8AF7F   		.sleb128 -10328
 32358 1876 93       		.byte	0x93
 32359 1877 08       		.uleb128 0x8
 32360 1878 91       		.byte	0x91
 32361 1879 90AF7F   		.sleb128 -10352
 32362 187c 93       		.byte	0x93
 32363 187d 08       		.uleb128 0x8
 32364 187e 00000000 		.quad	.LVL214
 32364      00000000 
 32365 1886 00000000 		.quad	.LVL218
 32365      00000000 
 32366 188e 1200     		.value	0x12
 32367 1890 91       		.byte	0x91
 32368 1891 A8AF7F   		.sleb128 -10328
 32369 1894 93       		.byte	0x93
GAS LISTING /tmp/ccKUqHDa.s 			page 844


 32370 1895 08       		.uleb128 0x8
 32371 1896 91       		.byte	0x91
 32372 1897 A8AF7F   		.sleb128 -10328
 32373 189a 93       		.byte	0x93
 32374 189b 08       		.uleb128 0x8
 32375 189c 91       		.byte	0x91
 32376 189d 90AF7F   		.sleb128 -10352
 32377 18a0 93       		.byte	0x93
 32378 18a1 08       		.uleb128 0x8
 32379 18a2 00000000 		.quad	.LVL223
 32379      00000000 
 32380 18aa 00000000 		.quad	.LVL225
 32380      00000000 
 32381 18b2 1200     		.value	0x12
 32382 18b4 91       		.byte	0x91
 32383 18b5 A8AF7F   		.sleb128 -10328
 32384 18b8 93       		.byte	0x93
 32385 18b9 08       		.uleb128 0x8
 32386 18ba 91       		.byte	0x91
 32387 18bb A8AF7F   		.sleb128 -10328
 32388 18be 93       		.byte	0x93
 32389 18bf 08       		.uleb128 0x8
 32390 18c0 91       		.byte	0x91
 32391 18c1 90AF7F   		.sleb128 -10352
 32392 18c4 93       		.byte	0x93
 32393 18c5 08       		.uleb128 0x8
 32394 18c6 00000000 		.quad	.LVL244
 32394      00000000 
 32395 18ce 00000000 		.quad	.LVL262
 32395      00000000 
 32396 18d6 1200     		.value	0x12
 32397 18d8 91       		.byte	0x91
 32398 18d9 A8AF7F   		.sleb128 -10328
 32399 18dc 93       		.byte	0x93
 32400 18dd 08       		.uleb128 0x8
 32401 18de 91       		.byte	0x91
 32402 18df A8AF7F   		.sleb128 -10328
 32403 18e2 93       		.byte	0x93
 32404 18e3 08       		.uleb128 0x8
 32405 18e4 91       		.byte	0x91
 32406 18e5 90AF7F   		.sleb128 -10352
 32407 18e8 93       		.byte	0x93
 32408 18e9 08       		.uleb128 0x8
 32409 18ea 00000000 		.quad	.LVL279
 32409      00000000 
 32410 18f2 00000000 		.quad	.LVL287
 32410      00000000 
 32411 18fa 1200     		.value	0x12
 32412 18fc 91       		.byte	0x91
 32413 18fd A8AF7F   		.sleb128 -10328
 32414 1900 93       		.byte	0x93
 32415 1901 08       		.uleb128 0x8
 32416 1902 91       		.byte	0x91
 32417 1903 A8AF7F   		.sleb128 -10328
 32418 1906 93       		.byte	0x93
 32419 1907 08       		.uleb128 0x8
 32420 1908 91       		.byte	0x91
GAS LISTING /tmp/ccKUqHDa.s 			page 845


 32421 1909 90AF7F   		.sleb128 -10352
 32422 190c 93       		.byte	0x93
 32423 190d 08       		.uleb128 0x8
 32424 190e 00000000 		.quad	.LVL291
 32424      00000000 
 32425 1916 00000000 		.quad	.LFE5505
 32425      00000000 
 32426 191e 1200     		.value	0x12
 32427 1920 91       		.byte	0x91
 32428 1921 A8AF7F   		.sleb128 -10328
 32429 1924 93       		.byte	0x93
 32430 1925 08       		.uleb128 0x8
 32431 1926 91       		.byte	0x91
 32432 1927 A8AF7F   		.sleb128 -10328
 32433 192a 93       		.byte	0x93
 32434 192b 08       		.uleb128 0x8
 32435 192c 91       		.byte	0x91
 32436 192d 90AF7F   		.sleb128 -10352
 32437 1930 93       		.byte	0x93
 32438 1931 08       		.uleb128 0x8
 32439 1932 00000000 		.quad	0
 32439      00000000 
 32440 193a 00000000 		.quad	0
 32440      00000000 
 32441              	.LLST111:
 32442 1942 00000000 		.quad	.LVL117
 32442      00000000 
 32443 194a 00000000 		.quad	.LVL120
 32443      00000000 
 32444 1952 0100     		.value	0x1
 32445 1954 56       		.byte	0x56
 32446 1955 00000000 		.quad	.LVL120
 32446      00000000 
 32447 195d 00000000 		.quad	.LVL139
 32447      00000000 
 32448 1965 0300     		.value	0x3
 32449 1967 76       		.byte	0x76
 32450 1968 78       		.sleb128 -8
 32451 1969 9F       		.byte	0x9f
 32452 196a 00000000 		.quad	.LVL237
 32452      00000000 
 32453 1972 00000000 		.quad	.LVL239
 32453      00000000 
 32454 197a 0300     		.value	0x3
 32455 197c 76       		.byte	0x76
 32456 197d 78       		.sleb128 -8
 32457 197e 9F       		.byte	0x9f
 32458 197f 00000000 		.quad	.LVL242
 32458      00000000 
 32459 1987 00000000 		.quad	.LVL244
 32459      00000000 
 32460 198f 0300     		.value	0x3
 32461 1991 76       		.byte	0x76
 32462 1992 78       		.sleb128 -8
 32463 1993 9F       		.byte	0x9f
 32464 1994 00000000 		.quad	.LVL276
 32464      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 846


 32465 199c 00000000 		.quad	.LVL277
 32465      00000000 
 32466 19a4 0300     		.value	0x3
 32467 19a6 76       		.byte	0x76
 32468 19a7 78       		.sleb128 -8
 32469 19a8 9F       		.byte	0x9f
 32470 19a9 00000000 		.quad	.LVL287
 32470      00000000 
 32471 19b1 00000000 		.quad	.LVL291
 32471      00000000 
 32472 19b9 0300     		.value	0x3
 32473 19bb 76       		.byte	0x76
 32474 19bc 78       		.sleb128 -8
 32475 19bd 9F       		.byte	0x9f
 32476 19be 00000000 		.quad	0
 32476      00000000 
 32477 19c6 00000000 		.quad	0
 32477      00000000 
 32478              	.LLST112:
 32479 19ce 00000000 		.quad	.LVL114
 32479      00000000 
 32480 19d6 00000000 		.quad	.LVL115
 32480      00000000 
 32481 19de 0500     		.value	0x5
 32482 19e0 91       		.byte	0x91
 32483 19e1 F0B07F   		.sleb128 -10128
 32484 19e4 9F       		.byte	0x9f
 32485 19e5 00000000 		.quad	.LVL115
 32485      00000000 
 32486 19ed 00000000 		.quad	.LVL117
 32486      00000000 
 32487 19f5 0100     		.value	0x1
 32488 19f7 50       		.byte	0x50
 32489 19f8 00000000 		.quad	.LVL117
 32489      00000000 
 32490 1a00 00000000 		.quad	.LVL211
 32490      00000000 
 32491 1a08 0400     		.value	0x4
 32492 1a0a 91       		.byte	0x91
 32493 1a0b C8AF7F   		.sleb128 -10296
 32494 1a0e 00000000 		.quad	.LVL214
 32494      00000000 
 32495 1a16 00000000 		.quad	.LVL218
 32495      00000000 
 32496 1a1e 0400     		.value	0x4
 32497 1a20 91       		.byte	0x91
 32498 1a21 C8AF7F   		.sleb128 -10296
 32499 1a24 00000000 		.quad	.LVL223
 32499      00000000 
 32500 1a2c 00000000 		.quad	.LVL225
 32500      00000000 
 32501 1a34 0400     		.value	0x4
 32502 1a36 91       		.byte	0x91
 32503 1a37 C8AF7F   		.sleb128 -10296
 32504 1a3a 00000000 		.quad	.LVL237
 32504      00000000 
 32505 1a42 00000000 		.quad	.LVL239
GAS LISTING /tmp/ccKUqHDa.s 			page 847


 32505      00000000 
 32506 1a4a 0400     		.value	0x4
 32507 1a4c 91       		.byte	0x91
 32508 1a4d C8AF7F   		.sleb128 -10296
 32509 1a50 00000000 		.quad	.LVL242
 32509      00000000 
 32510 1a58 00000000 		.quad	.LVL262
 32510      00000000 
 32511 1a60 0400     		.value	0x4
 32512 1a62 91       		.byte	0x91
 32513 1a63 C8AF7F   		.sleb128 -10296
 32514 1a66 00000000 		.quad	.LVL276
 32514      00000000 
 32515 1a6e 00000000 		.quad	.LFE5505
 32515      00000000 
 32516 1a76 0400     		.value	0x4
 32517 1a78 91       		.byte	0x91
 32518 1a79 C8AF7F   		.sleb128 -10296
 32519 1a7c 00000000 		.quad	0
 32519      00000000 
 32520 1a84 00000000 		.quad	0
 32520      00000000 
 32521              	.LLST113:
 32522 1a8c 00000000 		.quad	.LVL114
 32522      00000000 
 32523 1a94 00000000 		.quad	.LVL115
 32523      00000000 
 32524 1a9c 0500     		.value	0x5
 32525 1a9e 91       		.byte	0x91
 32526 1a9f F0B07F   		.sleb128 -10128
 32527 1aa2 9F       		.byte	0x9f
 32528 1aa3 00000000 		.quad	.LVL115
 32528      00000000 
 32529 1aab 00000000 		.quad	.LVL117
 32529      00000000 
 32530 1ab3 0100     		.value	0x1
 32531 1ab5 50       		.byte	0x50
 32532 1ab6 00000000 		.quad	.LVL117
 32532      00000000 
 32533 1abe 00000000 		.quad	.LVL119
 32533      00000000 
 32534 1ac6 0100     		.value	0x1
 32535 1ac8 56       		.byte	0x56
 32536 1ac9 00000000 		.quad	.LVL119
 32536      00000000 
 32537 1ad1 00000000 		.quad	.LVL120
 32537      00000000 
 32538 1ad9 0300     		.value	0x3
 32539 1adb 76       		.byte	0x76
 32540 1adc 08       		.sleb128 8
 32541 1add 9F       		.byte	0x9f
 32542 1ade 00000000 		.quad	.LVL120
 32542      00000000 
 32543 1ae6 00000000 		.quad	.LVL139
 32543      00000000 
 32544 1aee 0100     		.value	0x1
 32545 1af0 56       		.byte	0x56
GAS LISTING /tmp/ccKUqHDa.s 			page 848


 32546 1af1 00000000 		.quad	.LVL237
 32546      00000000 
 32547 1af9 00000000 		.quad	.LVL239
 32547      00000000 
 32548 1b01 0100     		.value	0x1
 32549 1b03 56       		.byte	0x56
 32550 1b04 00000000 		.quad	.LVL242
 32550      00000000 
 32551 1b0c 00000000 		.quad	.LVL244
 32551      00000000 
 32552 1b14 0100     		.value	0x1
 32553 1b16 56       		.byte	0x56
 32554 1b17 00000000 		.quad	.LVL276
 32554      00000000 
 32555 1b1f 00000000 		.quad	.LVL277
 32555      00000000 
 32556 1b27 0100     		.value	0x1
 32557 1b29 56       		.byte	0x56
 32558 1b2a 00000000 		.quad	.LVL287
 32558      00000000 
 32559 1b32 00000000 		.quad	.LVL291
 32559      00000000 
 32560 1b3a 0100     		.value	0x1
 32561 1b3c 56       		.byte	0x56
 32562 1b3d 00000000 		.quad	0
 32562      00000000 
 32563 1b45 00000000 		.quad	0
 32563      00000000 
 32564              	.LLST114:
 32565 1b4d 00000000 		.quad	.LVL123
 32565      00000000 
 32566 1b55 00000000 		.quad	.LVL184
 32566      00000000 
 32567 1b5d 0100     		.value	0x1
 32568 1b5f 53       		.byte	0x53
 32569 1b60 00000000 		.quad	.LVL184
 32569      00000000 
 32570 1b68 00000000 		.quad	.LVL211
 32570      00000000 
 32571 1b70 0400     		.value	0x4
 32572 1b72 91       		.byte	0x91
 32573 1b73 B058     		.sleb128 -5072
 32574 1b75 9F       		.byte	0x9f
 32575 1b76 00000000 		.quad	.LVL214
 32575      00000000 
 32576 1b7e 00000000 		.quad	.LVL218
 32576      00000000 
 32577 1b86 0100     		.value	0x1
 32578 1b88 53       		.byte	0x53
 32579 1b89 00000000 		.quad	.LVL223
 32579      00000000 
 32580 1b91 00000000 		.quad	.LVL225
 32580      00000000 
 32581 1b99 0400     		.value	0x4
 32582 1b9b 91       		.byte	0x91
 32583 1b9c B058     		.sleb128 -5072
 32584 1b9e 9F       		.byte	0x9f
GAS LISTING /tmp/ccKUqHDa.s 			page 849


 32585 1b9f 00000000 		.quad	.LVL237
 32585      00000000 
 32586 1ba7 00000000 		.quad	.LVL239
 32586      00000000 
 32587 1baf 0100     		.value	0x1
 32588 1bb1 53       		.byte	0x53
 32589 1bb2 00000000 		.quad	.LVL242
 32589      00000000 
 32590 1bba 00000000 		.quad	.LVL244
 32590      00000000 
 32591 1bc2 0100     		.value	0x1
 32592 1bc4 53       		.byte	0x53
 32593 1bc5 00000000 		.quad	.LVL244
 32593      00000000 
 32594 1bcd 00000000 		.quad	.LVL256
 32594      00000000 
 32595 1bd5 0400     		.value	0x4
 32596 1bd7 91       		.byte	0x91
 32597 1bd8 B058     		.sleb128 -5072
 32598 1bda 9F       		.byte	0x9f
 32599 1bdb 00000000 		.quad	.LVL256
 32599      00000000 
 32600 1be3 00000000 		.quad	.LVL262
 32600      00000000 
 32601 1beb 0100     		.value	0x1
 32602 1bed 53       		.byte	0x53
 32603 1bee 00000000 		.quad	.LVL276
 32603      00000000 
 32604 1bf6 00000000 		.quad	.LVL277
 32604      00000000 
 32605 1bfe 0100     		.value	0x1
 32606 1c00 53       		.byte	0x53
 32607 1c01 00000000 		.quad	.LVL277
 32607      00000000 
 32608 1c09 00000000 		.quad	.LVL287
 32608      00000000 
 32609 1c11 0400     		.value	0x4
 32610 1c13 91       		.byte	0x91
 32611 1c14 B058     		.sleb128 -5072
 32612 1c16 9F       		.byte	0x9f
 32613 1c17 00000000 		.quad	.LVL287
 32613      00000000 
 32614 1c1f 00000000 		.quad	.LVL288
 32614      00000000 
 32615 1c27 0100     		.value	0x1
 32616 1c29 53       		.byte	0x53
 32617 1c2a 00000000 		.quad	.LVL288
 32617      00000000 
 32618 1c32 00000000 		.quad	.LFE5505
 32618      00000000 
 32619 1c3a 0400     		.value	0x4
 32620 1c3c 91       		.byte	0x91
 32621 1c3d B058     		.sleb128 -5072
 32622 1c3f 9F       		.byte	0x9f
 32623 1c40 00000000 		.quad	0
 32623      00000000 
 32624 1c48 00000000 		.quad	0
GAS LISTING /tmp/ccKUqHDa.s 			page 850


 32624      00000000 
 32625              	.LLST115:
 32626 1c50 00000000 		.quad	.LVL123
 32626      00000000 
 32627 1c58 00000000 		.quad	.LVL144
 32627      00000000 
 32628 1c60 0100     		.value	0x1
 32629 1c62 5E       		.byte	0x5e
 32630 1c63 00000000 		.quad	.LVL144
 32630      00000000 
 32631 1c6b 00000000 		.quad	.LVL211
 32631      00000000 
 32632 1c73 0400     		.value	0x4
 32633 1c75 91       		.byte	0x91
 32634 1c76 D0AF7F   		.sleb128 -10288
 32635 1c79 00000000 		.quad	.LVL214
 32635      00000000 
 32636 1c81 00000000 		.quad	.LVL218
 32636      00000000 
 32637 1c89 0400     		.value	0x4
 32638 1c8b 91       		.byte	0x91
 32639 1c8c D0AF7F   		.sleb128 -10288
 32640 1c8f 00000000 		.quad	.LVL223
 32640      00000000 
 32641 1c97 00000000 		.quad	.LVL225
 32641      00000000 
 32642 1c9f 0400     		.value	0x4
 32643 1ca1 91       		.byte	0x91
 32644 1ca2 D0AF7F   		.sleb128 -10288
 32645 1ca5 00000000 		.quad	.LVL237
 32645      00000000 
 32646 1cad 00000000 		.quad	.LVL239
 32646      00000000 
 32647 1cb5 0100     		.value	0x1
 32648 1cb7 5E       		.byte	0x5e
 32649 1cb8 00000000 		.quad	.LVL242
 32649      00000000 
 32650 1cc0 00000000 		.quad	.LVL244
 32650      00000000 
 32651 1cc8 0100     		.value	0x1
 32652 1cca 5E       		.byte	0x5e
 32653 1ccb 00000000 		.quad	.LVL244
 32653      00000000 
 32654 1cd3 00000000 		.quad	.LVL262
 32654      00000000 
 32655 1cdb 0400     		.value	0x4
 32656 1cdd 91       		.byte	0x91
 32657 1cde D0AF7F   		.sleb128 -10288
 32658 1ce1 00000000 		.quad	.LVL276
 32658      00000000 
 32659 1ce9 00000000 		.quad	.LVL277
 32659      00000000 
 32660 1cf1 0100     		.value	0x1
 32661 1cf3 5E       		.byte	0x5e
 32662 1cf4 00000000 		.quad	.LVL277
 32662      00000000 
 32663 1cfc 00000000 		.quad	.LVL287
GAS LISTING /tmp/ccKUqHDa.s 			page 851


 32663      00000000 
 32664 1d04 0400     		.value	0x4
 32665 1d06 91       		.byte	0x91
 32666 1d07 D0AF7F   		.sleb128 -10288
 32667 1d0a 00000000 		.quad	.LVL287
 32667      00000000 
 32668 1d12 00000000 		.quad	.LVL291
 32668      00000000 
 32669 1d1a 0100     		.value	0x1
 32670 1d1c 5E       		.byte	0x5e
 32671 1d1d 00000000 		.quad	.LVL291
 32671      00000000 
 32672 1d25 00000000 		.quad	.LFE5505
 32672      00000000 
 32673 1d2d 0400     		.value	0x4
 32674 1d2f 91       		.byte	0x91
 32675 1d30 D0AF7F   		.sleb128 -10288
 32676 1d33 00000000 		.quad	0
 32676      00000000 
 32677 1d3b 00000000 		.quad	0
 32677      00000000 
 32678              	.LLST116:
 32679 1d43 00000000 		.quad	.LVL124
 32679      00000000 
 32680 1d4b 00000000 		.quad	.LVL184
 32680      00000000 
 32681 1d53 0100     		.value	0x1
 32682 1d55 53       		.byte	0x53
 32683 1d56 00000000 		.quad	.LVL184
 32683      00000000 
 32684 1d5e 00000000 		.quad	.LVL211
 32684      00000000 
 32685 1d66 0400     		.value	0x4
 32686 1d68 91       		.byte	0x91
 32687 1d69 B058     		.sleb128 -5072
 32688 1d6b 9F       		.byte	0x9f
 32689 1d6c 00000000 		.quad	.LVL214
 32689      00000000 
 32690 1d74 00000000 		.quad	.LVL218
 32690      00000000 
 32691 1d7c 0100     		.value	0x1
 32692 1d7e 53       		.byte	0x53
 32693 1d7f 00000000 		.quad	.LVL223
 32693      00000000 
 32694 1d87 00000000 		.quad	.LVL225
 32694      00000000 
 32695 1d8f 0400     		.value	0x4
 32696 1d91 91       		.byte	0x91
 32697 1d92 B058     		.sleb128 -5072
 32698 1d94 9F       		.byte	0x9f
 32699 1d95 00000000 		.quad	.LVL237
 32699      00000000 
 32700 1d9d 00000000 		.quad	.LVL239
 32700      00000000 
 32701 1da5 0100     		.value	0x1
 32702 1da7 53       		.byte	0x53
 32703 1da8 00000000 		.quad	.LVL242
GAS LISTING /tmp/ccKUqHDa.s 			page 852


 32703      00000000 
 32704 1db0 00000000 		.quad	.LVL244
 32704      00000000 
 32705 1db8 0100     		.value	0x1
 32706 1dba 53       		.byte	0x53
 32707 1dbb 00000000 		.quad	.LVL244
 32707      00000000 
 32708 1dc3 00000000 		.quad	.LVL256
 32708      00000000 
 32709 1dcb 0400     		.value	0x4
 32710 1dcd 91       		.byte	0x91
 32711 1dce B058     		.sleb128 -5072
 32712 1dd0 9F       		.byte	0x9f
 32713 1dd1 00000000 		.quad	.LVL256
 32713      00000000 
 32714 1dd9 00000000 		.quad	.LVL262
 32714      00000000 
 32715 1de1 0100     		.value	0x1
 32716 1de3 53       		.byte	0x53
 32717 1de4 00000000 		.quad	.LVL276
 32717      00000000 
 32718 1dec 00000000 		.quad	.LVL277
 32718      00000000 
 32719 1df4 0100     		.value	0x1
 32720 1df6 53       		.byte	0x53
 32721 1df7 00000000 		.quad	.LVL277
 32721      00000000 
 32722 1dff 00000000 		.quad	.LVL287
 32722      00000000 
 32723 1e07 0400     		.value	0x4
 32724 1e09 91       		.byte	0x91
 32725 1e0a B058     		.sleb128 -5072
 32726 1e0c 9F       		.byte	0x9f
 32727 1e0d 00000000 		.quad	.LVL291
 32727      00000000 
 32728 1e15 00000000 		.quad	.LFE5505
 32728      00000000 
 32729 1e1d 0400     		.value	0x4
 32730 1e1f 91       		.byte	0x91
 32731 1e20 B058     		.sleb128 -5072
 32732 1e22 9F       		.byte	0x9f
 32733 1e23 00000000 		.quad	0
 32733      00000000 
 32734 1e2b 00000000 		.quad	0
 32734      00000000 
 32735              	.LLST118:
 32736 1e33 00000000 		.quad	.LVL125
 32736      00000000 
 32737 1e3b 00000000 		.quad	.LVL211
 32737      00000000 
 32738 1e43 0400     		.value	0x4
 32739 1e45 91       		.byte	0x91
 32740 1e46 B0AF7F   		.sleb128 -10320
 32741 1e49 00000000 		.quad	.LVL214
 32741      00000000 
 32742 1e51 00000000 		.quad	.LVL218
 32742      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 853


 32743 1e59 0400     		.value	0x4
 32744 1e5b 91       		.byte	0x91
 32745 1e5c B0AF7F   		.sleb128 -10320
 32746 1e5f 00000000 		.quad	.LVL223
 32746      00000000 
 32747 1e67 00000000 		.quad	.LVL225
 32747      00000000 
 32748 1e6f 0400     		.value	0x4
 32749 1e71 91       		.byte	0x91
 32750 1e72 B0AF7F   		.sleb128 -10320
 32751 1e75 00000000 		.quad	.LVL237
 32751      00000000 
 32752 1e7d 00000000 		.quad	.LVL239
 32752      00000000 
 32753 1e85 0400     		.value	0x4
 32754 1e87 91       		.byte	0x91
 32755 1e88 B0AF7F   		.sleb128 -10320
 32756 1e8b 00000000 		.quad	.LVL242
 32756      00000000 
 32757 1e93 00000000 		.quad	.LVL262
 32757      00000000 
 32758 1e9b 0400     		.value	0x4
 32759 1e9d 91       		.byte	0x91
 32760 1e9e B0AF7F   		.sleb128 -10320
 32761 1ea1 00000000 		.quad	.LVL276
 32761      00000000 
 32762 1ea9 00000000 		.quad	.LVL287
 32762      00000000 
 32763 1eb1 0400     		.value	0x4
 32764 1eb3 91       		.byte	0x91
 32765 1eb4 B0AF7F   		.sleb128 -10320
 32766 1eb7 00000000 		.quad	.LVL291
 32766      00000000 
 32767 1ebf 00000000 		.quad	.LFE5505
 32767      00000000 
 32768 1ec7 0400     		.value	0x4
 32769 1ec9 91       		.byte	0x91
 32770 1eca B0AF7F   		.sleb128 -10320
 32771 1ecd 00000000 		.quad	0
 32771      00000000 
 32772 1ed5 00000000 		.quad	0
 32772      00000000 
 32773              	.LLST119:
 32774 1edd 00000000 		.quad	.LVL125
 32774      00000000 
 32775 1ee5 00000000 		.quad	.LVL126
 32775      00000000 
 32776 1eed 0100     		.value	0x1
 32777 1eef 55       		.byte	0x55
 32778 1ef0 00000000 		.quad	.LVL242
 32778      00000000 
 32779 1ef8 00000000 		.quad	.LVL243-1
 32779      00000000 
 32780 1f00 0100     		.value	0x1
 32781 1f02 55       		.byte	0x55
 32782 1f03 00000000 		.quad	0
 32782      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 854


 32783 1f0b 00000000 		.quad	0
 32783      00000000 
 32784              	.LLST120:
 32785 1f13 00000000 		.quad	.LVL126
 32785      00000000 
 32786 1f1b 00000000 		.quad	.LVL144
 32786      00000000 
 32787 1f23 0100     		.value	0x1
 32788 1f25 5E       		.byte	0x5e
 32789 1f26 00000000 		.quad	.LVL144
 32789      00000000 
 32790 1f2e 00000000 		.quad	.LVL211
 32790      00000000 
 32791 1f36 0400     		.value	0x4
 32792 1f38 91       		.byte	0x91
 32793 1f39 D0AF7F   		.sleb128 -10288
 32794 1f3c 00000000 		.quad	.LVL214
 32794      00000000 
 32795 1f44 00000000 		.quad	.LVL218
 32795      00000000 
 32796 1f4c 0400     		.value	0x4
 32797 1f4e 91       		.byte	0x91
 32798 1f4f D0AF7F   		.sleb128 -10288
 32799 1f52 00000000 		.quad	.LVL223
 32799      00000000 
 32800 1f5a 00000000 		.quad	.LVL225
 32800      00000000 
 32801 1f62 0400     		.value	0x4
 32802 1f64 91       		.byte	0x91
 32803 1f65 D0AF7F   		.sleb128 -10288
 32804 1f68 00000000 		.quad	.LVL237
 32804      00000000 
 32805 1f70 00000000 		.quad	.LVL239
 32805      00000000 
 32806 1f78 0100     		.value	0x1
 32807 1f7a 5E       		.byte	0x5e
 32808 1f7b 00000000 		.quad	.LVL244
 32808      00000000 
 32809 1f83 00000000 		.quad	.LVL262
 32809      00000000 
 32810 1f8b 0400     		.value	0x4
 32811 1f8d 91       		.byte	0x91
 32812 1f8e D0AF7F   		.sleb128 -10288
 32813 1f91 00000000 		.quad	.LVL276
 32813      00000000 
 32814 1f99 00000000 		.quad	.LVL277
 32814      00000000 
 32815 1fa1 0100     		.value	0x1
 32816 1fa3 5E       		.byte	0x5e
 32817 1fa4 00000000 		.quad	.LVL277
 32817      00000000 
 32818 1fac 00000000 		.quad	.LVL287
 32818      00000000 
 32819 1fb4 0400     		.value	0x4
 32820 1fb6 91       		.byte	0x91
 32821 1fb7 D0AF7F   		.sleb128 -10288
 32822 1fba 00000000 		.quad	.LVL291
GAS LISTING /tmp/ccKUqHDa.s 			page 855


 32822      00000000 
 32823 1fc2 00000000 		.quad	.LFE5505
 32823      00000000 
 32824 1fca 0400     		.value	0x4
 32825 1fcc 91       		.byte	0x91
 32826 1fcd D0AF7F   		.sleb128 -10288
 32827 1fd0 00000000 		.quad	0
 32827      00000000 
 32828 1fd8 00000000 		.quad	0
 32828      00000000 
 32829              	.LLST121:
 32830 1fe0 00000000 		.quad	.LVL127
 32830      00000000 
 32831 1fe8 00000000 		.quad	.LVL128
 32831      00000000 
 32832 1ff0 0900     		.value	0x9
 32833 1ff2 70       		.byte	0x70
 32834 1ff3 00       		.sleb128 0
 32835 1ff4 0C       		.byte	0xc
 32836 1ff5 FFFFFFFF 		.long	0xffffffff
 32837 1ff9 1A       		.byte	0x1a
 32838 1ffa 9F       		.byte	0x9f
 32839 1ffb 00000000 		.quad	.LVL128
 32839      00000000 
 32840 2003 00000000 		.quad	.LVL130
 32840      00000000 
 32841 200b 0100     		.value	0x1
 32842 200d 54       		.byte	0x54
 32843 200e 00000000 		.quad	0
 32843      00000000 
 32844 2016 00000000 		.quad	0
 32844      00000000 
 32845              	.LLST122:
 32846 201e 00000000 		.quad	.LVL127
 32846      00000000 
 32847 2026 00000000 		.quad	.LVL184
 32847      00000000 
 32848 202e 0100     		.value	0x1
 32849 2030 53       		.byte	0x53
 32850 2031 00000000 		.quad	.LVL184
 32850      00000000 
 32851 2039 00000000 		.quad	.LVL211
 32851      00000000 
 32852 2041 0400     		.value	0x4
 32853 2043 91       		.byte	0x91
 32854 2044 B058     		.sleb128 -5072
 32855 2046 9F       		.byte	0x9f
 32856 2047 00000000 		.quad	.LVL214
 32856      00000000 
 32857 204f 00000000 		.quad	.LVL218
 32857      00000000 
 32858 2057 0100     		.value	0x1
 32859 2059 53       		.byte	0x53
 32860 205a 00000000 		.quad	.LVL223
 32860      00000000 
 32861 2062 00000000 		.quad	.LVL225
 32861      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 856


 32862 206a 0400     		.value	0x4
 32863 206c 91       		.byte	0x91
 32864 206d B058     		.sleb128 -5072
 32865 206f 9F       		.byte	0x9f
 32866 2070 00000000 		.quad	.LVL237
 32866      00000000 
 32867 2078 00000000 		.quad	.LVL239
 32867      00000000 
 32868 2080 0100     		.value	0x1
 32869 2082 53       		.byte	0x53
 32870 2083 00000000 		.quad	.LVL244
 32870      00000000 
 32871 208b 00000000 		.quad	.LVL256
 32871      00000000 
 32872 2093 0400     		.value	0x4
 32873 2095 91       		.byte	0x91
 32874 2096 B058     		.sleb128 -5072
 32875 2098 9F       		.byte	0x9f
 32876 2099 00000000 		.quad	.LVL256
 32876      00000000 
 32877 20a1 00000000 		.quad	.LVL262
 32877      00000000 
 32878 20a9 0100     		.value	0x1
 32879 20ab 53       		.byte	0x53
 32880 20ac 00000000 		.quad	.LVL279
 32880      00000000 
 32881 20b4 00000000 		.quad	.LVL287
 32881      00000000 
 32882 20bc 0400     		.value	0x4
 32883 20be 91       		.byte	0x91
 32884 20bf B058     		.sleb128 -5072
 32885 20c1 9F       		.byte	0x9f
 32886 20c2 00000000 		.quad	.LVL291
 32886      00000000 
 32887 20ca 00000000 		.quad	.LFE5505
 32887      00000000 
 32888 20d2 0400     		.value	0x4
 32889 20d4 91       		.byte	0x91
 32890 20d5 B058     		.sleb128 -5072
 32891 20d7 9F       		.byte	0x9f
 32892 20d8 00000000 		.quad	0
 32892      00000000 
 32893 20e0 00000000 		.quad	0
 32893      00000000 
 32894              	.LLST128:
 32895 20e8 00000000 		.quad	.LVL129
 32895      00000000 
 32896 20f0 00000000 		.quad	.LVL130
 32896      00000000 
 32897 20f8 0200     		.value	0x2
 32898 20fa 31       		.byte	0x31
 32899 20fb 9F       		.byte	0x9f
 32900 20fc 00000000 		.quad	.LVL130
 32900      00000000 
 32901 2104 00000000 		.quad	.LVL138-1
 32901      00000000 
 32902 210c 0100     		.value	0x1
GAS LISTING /tmp/ccKUqHDa.s 			page 857


 32903 210e 54       		.byte	0x54
 32904 210f 00000000 		.quad	.LVL237
 32904      00000000 
 32905 2117 00000000 		.quad	.LVL239
 32905      00000000 
 32906 211f 0100     		.value	0x1
 32907 2121 54       		.byte	0x54
 32908 2122 00000000 		.quad	0
 32908      00000000 
 32909 212a 00000000 		.quad	0
 32909      00000000 
 32910              	.LLST129:
 32911 2132 00000000 		.quad	.LVL130
 32911      00000000 
 32912 213a 00000000 		.quad	.LVL132
 32912      00000000 
 32913 2142 0100     		.value	0x1
 32914 2144 50       		.byte	0x50
 32915 2145 00000000 		.quad	.LVL132
 32915      00000000 
 32916 214d 00000000 		.quad	.LVL134
 32916      00000000 
 32917 2155 0A00     		.value	0xa
 32918 2157 74       		.byte	0x74
 32919 2158 00       		.sleb128 0
 32920 2159 0A       		.byte	0xa
 32921 215a 7002     		.value	0x270
 32922 215c 1D       		.byte	0x1d
 32923 215d 72       		.byte	0x72
 32924 215e 00       		.sleb128 0
 32925 215f 22       		.byte	0x22
 32926 2160 9F       		.byte	0x9f
 32927 2161 00000000 		.quad	.LVL134
 32927      00000000 
 32928 2169 00000000 		.quad	.LVL138-1
 32928      00000000 
 32929 2171 0A00     		.value	0xa
 32930 2173 74       		.byte	0x74
 32931 2174 7F       		.sleb128 -1
 32932 2175 0A       		.byte	0xa
 32933 2176 7002     		.value	0x270
 32934 2178 1D       		.byte	0x1d
 32935 2179 72       		.byte	0x72
 32936 217a 00       		.sleb128 0
 32937 217b 22       		.byte	0x22
 32938 217c 9F       		.byte	0x9f
 32939 217d 00000000 		.quad	.LVL237
 32939      00000000 
 32940 2185 00000000 		.quad	.LVL239
 32940      00000000 
 32941 218d 0A00     		.value	0xa
 32942 218f 74       		.byte	0x74
 32943 2190 7F       		.sleb128 -1
 32944 2191 0A       		.byte	0xa
 32945 2192 7002     		.value	0x270
 32946 2194 1D       		.byte	0x1d
 32947 2195 72       		.byte	0x72
GAS LISTING /tmp/ccKUqHDa.s 			page 858


 32948 2196 00       		.sleb128 0
 32949 2197 22       		.byte	0x22
 32950 2198 9F       		.byte	0x9f
 32951 2199 00000000 		.quad	0
 32951      00000000 
 32952 21a1 00000000 		.quad	0
 32952      00000000 
 32953              	.LLST130:
 32954 21a9 00000000 		.quad	.LVL132
 32954      00000000 
 32955 21b1 00000000 		.quad	.LVL134
 32955      00000000 
 32956 21b9 0100     		.value	0x1
 32957 21bb 54       		.byte	0x54
 32958 21bc 00000000 		.quad	.LVL134
 32958      00000000 
 32959 21c4 00000000 		.quad	.LVL138-1
 32959      00000000 
 32960 21cc 0300     		.value	0x3
 32961 21ce 74       		.byte	0x74
 32962 21cf 7F       		.sleb128 -1
 32963 21d0 9F       		.byte	0x9f
 32964 21d1 00000000 		.quad	.LVL237
 32964      00000000 
 32965 21d9 00000000 		.quad	.LVL239
 32965      00000000 
 32966 21e1 0300     		.value	0x3
 32967 21e3 74       		.byte	0x74
 32968 21e4 7F       		.sleb128 -1
 32969 21e5 9F       		.byte	0x9f
 32970 21e6 00000000 		.quad	0
 32970      00000000 
 32971 21ee 00000000 		.quad	0
 32971      00000000 
 32972              	.LLST132:
 32973 21f6 00000000 		.quad	.LVL132
 32973      00000000 
 32974 21fe 00000000 		.quad	.LVL134
 32974      00000000 
 32975 2206 0700     		.value	0x7
 32976 2208 74       		.byte	0x74
 32977 2209 00       		.sleb128 0
 32978 220a 0A       		.byte	0xa
 32979 220b 7002     		.value	0x270
 32980 220d 1D       		.byte	0x1d
 32981 220e 9F       		.byte	0x9f
 32982 220f 00000000 		.quad	.LVL134
 32982      00000000 
 32983 2217 00000000 		.quad	.LVL138-1
 32983      00000000 
 32984 221f 0700     		.value	0x7
 32985 2221 74       		.byte	0x74
 32986 2222 7F       		.sleb128 -1
 32987 2223 0A       		.byte	0xa
 32988 2224 7002     		.value	0x270
 32989 2226 1D       		.byte	0x1d
 32990 2227 9F       		.byte	0x9f
GAS LISTING /tmp/ccKUqHDa.s 			page 859


 32991 2228 00000000 		.quad	.LVL237
 32991      00000000 
 32992 2230 00000000 		.quad	.LVL239
 32992      00000000 
 32993 2238 0700     		.value	0x7
 32994 223a 74       		.byte	0x74
 32995 223b 7F       		.sleb128 -1
 32996 223c 0A       		.byte	0xa
 32997 223d 7002     		.value	0x270
 32998 223f 1D       		.byte	0x1d
 32999 2240 9F       		.byte	0x9f
 33000 2241 00000000 		.quad	0
 33000      00000000 
 33001 2249 00000000 		.quad	0
 33001      00000000 
 33002              	.LLST133:
 33003 2251 00000000 		.quad	.LVL132
 33003      00000000 
 33004 2259 00000000 		.quad	.LVL134
 33004      00000000 
 33005 2261 0A00     		.value	0xa
 33006 2263 74       		.byte	0x74
 33007 2264 00       		.sleb128 0
 33008 2265 0A       		.byte	0xa
 33009 2266 7002     		.value	0x270
 33010 2268 1D       		.byte	0x1d
 33011 2269 72       		.byte	0x72
 33012 226a 00       		.sleb128 0
 33013 226b 22       		.byte	0x22
 33014 226c 9F       		.byte	0x9f
 33015 226d 00000000 		.quad	.LVL134
 33015      00000000 
 33016 2275 00000000 		.quad	.LVL138-1
 33016      00000000 
 33017 227d 0A00     		.value	0xa
 33018 227f 74       		.byte	0x74
 33019 2280 7F       		.sleb128 -1
 33020 2281 0A       		.byte	0xa
 33021 2282 7002     		.value	0x270
 33022 2284 1D       		.byte	0x1d
 33023 2285 72       		.byte	0x72
 33024 2286 00       		.sleb128 0
 33025 2287 22       		.byte	0x22
 33026 2288 9F       		.byte	0x9f
 33027 2289 00000000 		.quad	.LVL237
 33027      00000000 
 33028 2291 00000000 		.quad	.LVL239
 33028      00000000 
 33029 2299 0A00     		.value	0xa
 33030 229b 74       		.byte	0x74
 33031 229c 7F       		.sleb128 -1
 33032 229d 0A       		.byte	0xa
 33033 229e 7002     		.value	0x270
 33034 22a0 1D       		.byte	0x1d
 33035 22a1 72       		.byte	0x72
 33036 22a2 00       		.sleb128 0
 33037 22a3 22       		.byte	0x22
GAS LISTING /tmp/ccKUqHDa.s 			page 860


 33038 22a4 9F       		.byte	0x9f
 33039 22a5 00000000 		.quad	0
 33039      00000000 
 33040 22ad 00000000 		.quad	0
 33040      00000000 
 33041              	.LLST135:
 33042 22b5 00000000 		.quad	.LVL132
 33042      00000000 
 33043 22bd 00000000 		.quad	.LVL133
 33043      00000000 
 33044 22c5 0A00     		.value	0xa
 33045 22c7 74       		.byte	0x74
 33046 22c8 00       		.sleb128 0
 33047 22c9 0A       		.byte	0xa
 33048 22ca 7002     		.value	0x270
 33049 22cc 1D       		.byte	0x1d
 33050 22cd 72       		.byte	0x72
 33051 22ce 00       		.sleb128 0
 33052 22cf 22       		.byte	0x22
 33053 22d0 9F       		.byte	0x9f
 33054 22d1 00000000 		.quad	.LVL133
 33054      00000000 
 33055 22d9 00000000 		.quad	.LVL135
 33055      00000000 
 33056 22e1 0100     		.value	0x1
 33057 22e3 50       		.byte	0x50
 33058 22e4 00000000 		.quad	.LVL135
 33058      00000000 
 33059 22ec 00000000 		.quad	.LVL138-1
 33059      00000000 
 33060 22f4 1000     		.value	0x10
 33061 22f6 71       		.byte	0x71
 33062 22f7 00       		.sleb128 0
 33063 22f8 20       		.byte	0x20
 33064 22f9 74       		.byte	0x74
 33065 22fa 00       		.sleb128 0
 33066 22fb 22       		.byte	0x22
 33067 22fc 72       		.byte	0x72
 33068 22fd 00       		.sleb128 0
 33069 22fe 22       		.byte	0x22
 33070 22ff 0C       		.byte	0xc
 33071 2300 FFFFFFFF 		.long	0xffffffff
 33072 2304 1A       		.byte	0x1a
 33073 2305 9F       		.byte	0x9f
 33074 2306 00000000 		.quad	.LVL237
 33074      00000000 
 33075 230e 00000000 		.quad	.LVL238
 33075      00000000 
 33076 2316 0100     		.value	0x1
 33077 2318 50       		.byte	0x50
 33078 2319 00000000 		.quad	.LVL238
 33078      00000000 
 33079 2321 00000000 		.quad	.LVL239
 33079      00000000 
 33080 2329 1000     		.value	0x10
 33081 232b 71       		.byte	0x71
 33082 232c 00       		.sleb128 0
GAS LISTING /tmp/ccKUqHDa.s 			page 861


 33083 232d 20       		.byte	0x20
 33084 232e 74       		.byte	0x74
 33085 232f 00       		.sleb128 0
 33086 2330 22       		.byte	0x22
 33087 2331 72       		.byte	0x72
 33088 2332 00       		.sleb128 0
 33089 2333 22       		.byte	0x22
 33090 2334 0C       		.byte	0xc
 33091 2335 FFFFFFFF 		.long	0xffffffff
 33092 2339 1A       		.byte	0x1a
 33093 233a 9F       		.byte	0x9f
 33094 233b 00000000 		.quad	0
 33094      00000000 
 33095 2343 00000000 		.quad	0
 33095      00000000 
 33096              	.LLST137:
 33097 234b 00000000 		.quad	.LVL137
 33097      00000000 
 33098 2353 00000000 		.quad	.LVL211
 33098      00000000 
 33099 235b 0400     		.value	0x4
 33100 235d 0A       		.byte	0xa
 33101 235e E803     		.value	0x3e8
 33102 2360 9F       		.byte	0x9f
 33103 2361 00000000 		.quad	.LVL214
 33103      00000000 
 33104 2369 00000000 		.quad	.LVL218
 33104      00000000 
 33105 2371 0400     		.value	0x4
 33106 2373 0A       		.byte	0xa
 33107 2374 E803     		.value	0x3e8
 33108 2376 9F       		.byte	0x9f
 33109 2377 00000000 		.quad	.LVL223
 33109      00000000 
 33110 237f 00000000 		.quad	.LVL225
 33110      00000000 
 33111 2387 0400     		.value	0x4
 33112 2389 0A       		.byte	0xa
 33113 238a E803     		.value	0x3e8
 33114 238c 9F       		.byte	0x9f
 33115 238d 00000000 		.quad	.LVL244
 33115      00000000 
 33116 2395 00000000 		.quad	.LVL262
 33116      00000000 
 33117 239d 0400     		.value	0x4
 33118 239f 0A       		.byte	0xa
 33119 23a0 E803     		.value	0x3e8
 33120 23a2 9F       		.byte	0x9f
 33121 23a3 00000000 		.quad	.LVL279
 33121      00000000 
 33122 23ab 00000000 		.quad	.LVL287
 33122      00000000 
 33123 23b3 0400     		.value	0x4
 33124 23b5 0A       		.byte	0xa
 33125 23b6 E803     		.value	0x3e8
 33126 23b8 9F       		.byte	0x9f
 33127 23b9 00000000 		.quad	.LVL291
GAS LISTING /tmp/ccKUqHDa.s 			page 862


 33127      00000000 
 33128 23c1 00000000 		.quad	.LFE5505
 33128      00000000 
 33129 23c9 0400     		.value	0x4
 33130 23cb 0A       		.byte	0xa
 33131 23cc E803     		.value	0x3e8
 33132 23ce 9F       		.byte	0x9f
 33133 23cf 00000000 		.quad	0
 33133      00000000 
 33134 23d7 00000000 		.quad	0
 33134      00000000 
 33135              	.LLST138:
 33136 23df 00000000 		.quad	.LVL137
 33136      00000000 
 33137 23e7 00000000 		.quad	.LVL211
 33137      00000000 
 33138 23ef 0600     		.value	0x6
 33139 23f1 F2       		.byte	0xf2
 33140 23f2 00000000 		.long	.Ldebug_info0+53840
 33141 23f6 00       		.sleb128 0
 33142 23f7 00000000 		.quad	.LVL214
 33142      00000000 
 33143 23ff 00000000 		.quad	.LVL218
 33143      00000000 
 33144 2407 0600     		.value	0x6
 33145 2409 F2       		.byte	0xf2
 33146 240a 00000000 		.long	.Ldebug_info0+53840
 33147 240e 00       		.sleb128 0
 33148 240f 00000000 		.quad	.LVL223
 33148      00000000 
 33149 2417 00000000 		.quad	.LVL225
 33149      00000000 
 33150 241f 0600     		.value	0x6
 33151 2421 F2       		.byte	0xf2
 33152 2422 00000000 		.long	.Ldebug_info0+53840
 33153 2426 00       		.sleb128 0
 33154 2427 00000000 		.quad	.LVL244
 33154      00000000 
 33155 242f 00000000 		.quad	.LVL262
 33155      00000000 
 33156 2437 0600     		.value	0x6
 33157 2439 F2       		.byte	0xf2
 33158 243a 00000000 		.long	.Ldebug_info0+53840
 33159 243e 00       		.sleb128 0
 33160 243f 00000000 		.quad	.LVL279
 33160      00000000 
 33161 2447 00000000 		.quad	.LVL287
 33161      00000000 
 33162 244f 0600     		.value	0x6
 33163 2451 F2       		.byte	0xf2
 33164 2452 00000000 		.long	.Ldebug_info0+53840
 33165 2456 00       		.sleb128 0
 33166 2457 00000000 		.quad	.LVL291
 33166      00000000 
 33167 245f 00000000 		.quad	.LFE5505
 33167      00000000 
 33168 2467 0600     		.value	0x6
GAS LISTING /tmp/ccKUqHDa.s 			page 863


 33169 2469 F2       		.byte	0xf2
 33170 246a 00000000 		.long	.Ldebug_info0+53840
 33171 246e 00       		.sleb128 0
 33172 246f 00000000 		.quad	0
 33172      00000000 
 33173 2477 00000000 		.quad	0
 33173      00000000 
 33174              	.LLST146:
 33175 247f 00000000 		.quad	.LVL137
 33175      00000000 
 33176 2487 00000000 		.quad	.LVL211
 33176      00000000 
 33177 248f 0200     		.value	0x2
 33178 2491 30       		.byte	0x30
 33179 2492 9F       		.byte	0x9f
 33180 2493 00000000 		.quad	.LVL214
 33180      00000000 
 33181 249b 00000000 		.quad	.LVL218
 33181      00000000 
 33182 24a3 0200     		.value	0x2
 33183 24a5 30       		.byte	0x30
 33184 24a6 9F       		.byte	0x9f
 33185 24a7 00000000 		.quad	.LVL223
 33185      00000000 
 33186 24af 00000000 		.quad	.LVL225
 33186      00000000 
 33187 24b7 0200     		.value	0x2
 33188 24b9 30       		.byte	0x30
 33189 24ba 9F       		.byte	0x9f
 33190 24bb 00000000 		.quad	.LVL244
 33190      00000000 
 33191 24c3 00000000 		.quad	.LVL262
 33191      00000000 
 33192 24cb 0200     		.value	0x2
 33193 24cd 30       		.byte	0x30
 33194 24ce 9F       		.byte	0x9f
 33195 24cf 00000000 		.quad	.LVL279
 33195      00000000 
 33196 24d7 00000000 		.quad	.LVL287
 33196      00000000 
 33197 24df 0200     		.value	0x2
 33198 24e1 30       		.byte	0x30
 33199 24e2 9F       		.byte	0x9f
 33200 24e3 00000000 		.quad	.LVL291
 33200      00000000 
 33201 24eb 00000000 		.quad	.LFE5505
 33201      00000000 
 33202 24f3 0200     		.value	0x2
 33203 24f5 30       		.byte	0x30
 33204 24f6 9F       		.byte	0x9f
 33205 24f7 00000000 		.quad	0
 33205      00000000 
 33206 24ff 00000000 		.quad	0
 33206      00000000 
 33207              	.LLST148:
 33208 2507 00000000 		.quad	.LVL140
 33208      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 864


 33209 250f 00000000 		.quad	.LVL211
 33209      00000000 
 33210 2517 0400     		.value	0x4
 33211 2519 0A       		.byte	0xa
 33212 251a E803     		.value	0x3e8
 33213 251c 9F       		.byte	0x9f
 33214 251d 00000000 		.quad	.LVL214
 33214      00000000 
 33215 2525 00000000 		.quad	.LVL218
 33215      00000000 
 33216 252d 0400     		.value	0x4
 33217 252f 0A       		.byte	0xa
 33218 2530 E803     		.value	0x3e8
 33219 2532 9F       		.byte	0x9f
 33220 2533 00000000 		.quad	.LVL223
 33220      00000000 
 33221 253b 00000000 		.quad	.LVL225
 33221      00000000 
 33222 2543 0400     		.value	0x4
 33223 2545 0A       		.byte	0xa
 33224 2546 E803     		.value	0x3e8
 33225 2548 9F       		.byte	0x9f
 33226 2549 00000000 		.quad	.LVL244
 33226      00000000 
 33227 2551 00000000 		.quad	.LVL262
 33227      00000000 
 33228 2559 0400     		.value	0x4
 33229 255b 0A       		.byte	0xa
 33230 255c E803     		.value	0x3e8
 33231 255e 9F       		.byte	0x9f
 33232 255f 00000000 		.quad	.LVL279
 33232      00000000 
 33233 2567 00000000 		.quad	.LVL287
 33233      00000000 
 33234 256f 0400     		.value	0x4
 33235 2571 0A       		.byte	0xa
 33236 2572 E803     		.value	0x3e8
 33237 2574 9F       		.byte	0x9f
 33238 2575 00000000 		.quad	.LVL291
 33238      00000000 
 33239 257d 00000000 		.quad	.LFE5505
 33239      00000000 
 33240 2585 0400     		.value	0x4
 33241 2587 0A       		.byte	0xa
 33242 2588 E803     		.value	0x3e8
 33243 258a 9F       		.byte	0x9f
 33244 258b 00000000 		.quad	0
 33244      00000000 
 33245 2593 00000000 		.quad	0
 33245      00000000 
 33246              	.LLST149:
 33247 259b 00000000 		.quad	.LVL140
 33247      00000000 
 33248 25a3 00000000 		.quad	.LVL211
 33248      00000000 
 33249 25ab 0600     		.value	0x6
 33250 25ad F2       		.byte	0xf2
GAS LISTING /tmp/ccKUqHDa.s 			page 865


 33251 25ae 00000000 		.long	.Ldebug_info0+53840
 33252 25b2 00       		.sleb128 0
 33253 25b3 00000000 		.quad	.LVL214
 33253      00000000 
 33254 25bb 00000000 		.quad	.LVL218
 33254      00000000 
 33255 25c3 0600     		.value	0x6
 33256 25c5 F2       		.byte	0xf2
 33257 25c6 00000000 		.long	.Ldebug_info0+53840
 33258 25ca 00       		.sleb128 0
 33259 25cb 00000000 		.quad	.LVL223
 33259      00000000 
 33260 25d3 00000000 		.quad	.LVL225
 33260      00000000 
 33261 25db 0600     		.value	0x6
 33262 25dd F2       		.byte	0xf2
 33263 25de 00000000 		.long	.Ldebug_info0+53840
 33264 25e2 00       		.sleb128 0
 33265 25e3 00000000 		.quad	.LVL244
 33265      00000000 
 33266 25eb 00000000 		.quad	.LVL262
 33266      00000000 
 33267 25f3 0600     		.value	0x6
 33268 25f5 F2       		.byte	0xf2
 33269 25f6 00000000 		.long	.Ldebug_info0+53840
 33270 25fa 00       		.sleb128 0
 33271 25fb 00000000 		.quad	.LVL279
 33271      00000000 
 33272 2603 00000000 		.quad	.LVL287
 33272      00000000 
 33273 260b 0600     		.value	0x6
 33274 260d F2       		.byte	0xf2
 33275 260e 00000000 		.long	.Ldebug_info0+53840
 33276 2612 00       		.sleb128 0
 33277 2613 00000000 		.quad	.LVL291
 33277      00000000 
 33278 261b 00000000 		.quad	.LFE5505
 33278      00000000 
 33279 2623 0600     		.value	0x6
 33280 2625 F2       		.byte	0xf2
 33281 2626 00000000 		.long	.Ldebug_info0+53840
 33282 262a 00       		.sleb128 0
 33283 262b 00000000 		.quad	0
 33283      00000000 
 33284 2633 00000000 		.quad	0
 33284      00000000 
 33285              	.LLST151:
 33286 263b 00000000 		.quad	.LVL140
 33286      00000000 
 33287 2643 00000000 		.quad	.LVL211
 33287      00000000 
 33288 264b 0400     		.value	0x4
 33289 264d 91       		.byte	0x91
 33290 264e A8AF7F   		.sleb128 -10328
 33291 2651 00000000 		.quad	.LVL214
 33291      00000000 
 33292 2659 00000000 		.quad	.LVL218
GAS LISTING /tmp/ccKUqHDa.s 			page 866


 33292      00000000 
 33293 2661 0400     		.value	0x4
 33294 2663 91       		.byte	0x91
 33295 2664 A8AF7F   		.sleb128 -10328
 33296 2667 00000000 		.quad	.LVL223
 33296      00000000 
 33297 266f 00000000 		.quad	.LVL225
 33297      00000000 
 33298 2677 0400     		.value	0x4
 33299 2679 91       		.byte	0x91
 33300 267a A8AF7F   		.sleb128 -10328
 33301 267d 00000000 		.quad	.LVL244
 33301      00000000 
 33302 2685 00000000 		.quad	.LVL262
 33302      00000000 
 33303 268d 0400     		.value	0x4
 33304 268f 91       		.byte	0x91
 33305 2690 A8AF7F   		.sleb128 -10328
 33306 2693 00000000 		.quad	.LVL279
 33306      00000000 
 33307 269b 00000000 		.quad	.LVL287
 33307      00000000 
 33308 26a3 0400     		.value	0x4
 33309 26a5 91       		.byte	0x91
 33310 26a6 A8AF7F   		.sleb128 -10328
 33311 26a9 00000000 		.quad	.LVL291
 33311      00000000 
 33312 26b1 00000000 		.quad	.LFE5505
 33312      00000000 
 33313 26b9 0400     		.value	0x4
 33314 26bb 91       		.byte	0x91
 33315 26bc A8AF7F   		.sleb128 -10328
 33316 26bf 00000000 		.quad	0
 33316      00000000 
 33317 26c7 00000000 		.quad	0
 33317      00000000 
 33318              	.LLST152:
 33319 26cf 00000000 		.quad	.LVL140
 33319      00000000 
 33320 26d7 00000000 		.quad	.LVL142
 33320      00000000 
 33321 26df 0100     		.value	0x1
 33322 26e1 50       		.byte	0x50
 33323 26e2 00000000 		.quad	.LVL142
 33323      00000000 
 33324 26ea 00000000 		.quad	.LVL143
 33324      00000000 
 33325 26f2 0300     		.value	0x3
 33326 26f4 70       		.byte	0x70
 33327 26f5 08       		.sleb128 8
 33328 26f6 9F       		.byte	0x9f
 33329 26f7 00000000 		.quad	.LVL143
 33329      00000000 
 33330 26ff 00000000 		.quad	.LVL146
 33330      00000000 
 33331 2707 0100     		.value	0x1
 33332 2709 50       		.byte	0x50
GAS LISTING /tmp/ccKUqHDa.s 			page 867


 33333 270a 00000000 		.quad	0
 33333      00000000 
 33334 2712 00000000 		.quad	0
 33334      00000000 
 33335              	.LLST153:
 33336 271a 00000000 		.quad	.LVL140
 33336      00000000 
 33337 2722 00000000 		.quad	.LVL143
 33337      00000000 
 33338 272a 0100     		.value	0x1
 33339 272c 50       		.byte	0x50
 33340 272d 00000000 		.quad	.LVL143
 33340      00000000 
 33341 2735 00000000 		.quad	.LVL146
 33341      00000000 
 33342 273d 0300     		.value	0x3
 33343 273f 70       		.byte	0x70
 33344 2740 78       		.sleb128 -8
 33345 2741 9F       		.byte	0x9f
 33346 2742 00000000 		.quad	0
 33346      00000000 
 33347 274a 00000000 		.quad	0
 33347      00000000 
 33348              	.LLST154:
 33349 2752 00000000 		.quad	.LVL141
 33349      00000000 
 33350 275a 00000000 		.quad	.LVL142
 33350      00000000 
 33351 2762 0100     		.value	0x1
 33352 2764 50       		.byte	0x50
 33353 2765 00000000 		.quad	0
 33353      00000000 
 33354 276d 00000000 		.quad	0
 33354      00000000 
 33355              	.LLST155:
 33356 2775 00000000 		.quad	.LVL146
 33356      00000000 
 33357 277d 00000000 		.quad	.LVL178
 33357      00000000 
 33358 2785 0300     		.value	0x3
 33359 2787 5C       		.byte	0x5c
 33360 2788 93       		.byte	0x93
 33361 2789 08       		.uleb128 0x8
 33362 278a 00000000 		.quad	.LVL178
 33362      00000000 
 33363 2792 00000000 		.quad	.LVL180
 33363      00000000 
 33364 279a 0500     		.value	0x5
 33365 279c 7C       		.byte	0x7c
 33366 279d 78       		.sleb128 -8
 33367 279e 9F       		.byte	0x9f
 33368 279f 93       		.byte	0x93
 33369 27a0 08       		.uleb128 0x8
 33370 27a1 00000000 		.quad	.LVL214
 33370      00000000 
 33371 27a9 00000000 		.quad	.LVL218
 33371      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 868


 33372 27b1 0300     		.value	0x3
 33373 27b3 5C       		.byte	0x5c
 33374 27b4 93       		.byte	0x93
 33375 27b5 08       		.uleb128 0x8
 33376 27b6 00000000 		.quad	.LVL256
 33376      00000000 
 33377 27be 00000000 		.quad	.LVL262
 33377      00000000 
 33378 27c6 0300     		.value	0x3
 33379 27c8 5C       		.byte	0x5c
 33380 27c9 93       		.byte	0x93
 33381 27ca 08       		.uleb128 0x8
 33382 27cb 00000000 		.quad	0
 33382      00000000 
 33383 27d3 00000000 		.quad	0
 33383      00000000 
 33384              	.LLST156:
 33385 27db 00000000 		.quad	.LVL146
 33385      00000000 
 33386 27e3 00000000 		.quad	.LVL211
 33386      00000000 
 33387 27eb 0600     		.value	0x6
 33388 27ed F2       		.byte	0xf2
 33389 27ee 00000000 		.long	.Ldebug_info0+55498
 33390 27f2 00       		.sleb128 0
 33391 27f3 00000000 		.quad	.LVL214
 33391      00000000 
 33392 27fb 00000000 		.quad	.LVL218
 33392      00000000 
 33393 2803 0600     		.value	0x6
 33394 2805 F2       		.byte	0xf2
 33395 2806 00000000 		.long	.Ldebug_info0+55498
 33396 280a 00       		.sleb128 0
 33397 280b 00000000 		.quad	.LVL223
 33397      00000000 
 33398 2813 00000000 		.quad	.LVL225
 33398      00000000 
 33399 281b 0600     		.value	0x6
 33400 281d F2       		.byte	0xf2
 33401 281e 00000000 		.long	.Ldebug_info0+55498
 33402 2822 00       		.sleb128 0
 33403 2823 00000000 		.quad	.LVL244
 33403      00000000 
 33404 282b 00000000 		.quad	.LVL262
 33404      00000000 
 33405 2833 0600     		.value	0x6
 33406 2835 F2       		.byte	0xf2
 33407 2836 00000000 		.long	.Ldebug_info0+55498
 33408 283a 00       		.sleb128 0
 33409 283b 00000000 		.quad	.LVL279
 33409      00000000 
 33410 2843 00000000 		.quad	.LVL287
 33410      00000000 
 33411 284b 0600     		.value	0x6
 33412 284d F2       		.byte	0xf2
 33413 284e 00000000 		.long	.Ldebug_info0+55498
 33414 2852 00       		.sleb128 0
GAS LISTING /tmp/ccKUqHDa.s 			page 869


 33415 2853 00000000 		.quad	.LVL291
 33415      00000000 
 33416 285b 00000000 		.quad	.LFE5505
 33416      00000000 
 33417 2863 0600     		.value	0x6
 33418 2865 F2       		.byte	0xf2
 33419 2866 00000000 		.long	.Ldebug_info0+55498
 33420 286a 00       		.sleb128 0
 33421 286b 00000000 		.quad	0
 33421      00000000 
 33422 2873 00000000 		.quad	0
 33422      00000000 
 33423              	.LLST157:
 33424 287b 00000000 		.quad	.LVL146
 33424      00000000 
 33425 2883 00000000 		.quad	.LVL184
 33425      00000000 
 33426 288b 0100     		.value	0x1
 33427 288d 53       		.byte	0x53
 33428 288e 00000000 		.quad	.LVL184
 33428      00000000 
 33429 2896 00000000 		.quad	.LVL211
 33429      00000000 
 33430 289e 0400     		.value	0x4
 33431 28a0 91       		.byte	0x91
 33432 28a1 B058     		.sleb128 -5072
 33433 28a3 9F       		.byte	0x9f
 33434 28a4 00000000 		.quad	.LVL214
 33434      00000000 
 33435 28ac 00000000 		.quad	.LVL218
 33435      00000000 
 33436 28b4 0100     		.value	0x1
 33437 28b6 53       		.byte	0x53
 33438 28b7 00000000 		.quad	.LVL223
 33438      00000000 
 33439 28bf 00000000 		.quad	.LVL225
 33439      00000000 
 33440 28c7 0400     		.value	0x4
 33441 28c9 91       		.byte	0x91
 33442 28ca B058     		.sleb128 -5072
 33443 28cc 9F       		.byte	0x9f
 33444 28cd 00000000 		.quad	.LVL244
 33444      00000000 
 33445 28d5 00000000 		.quad	.LVL256
 33445      00000000 
 33446 28dd 0400     		.value	0x4
 33447 28df 91       		.byte	0x91
 33448 28e0 B058     		.sleb128 -5072
 33449 28e2 9F       		.byte	0x9f
 33450 28e3 00000000 		.quad	.LVL256
 33450      00000000 
 33451 28eb 00000000 		.quad	.LVL262
 33451      00000000 
 33452 28f3 0100     		.value	0x1
 33453 28f5 53       		.byte	0x53
 33454 28f6 00000000 		.quad	.LVL279
 33454      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 870


 33455 28fe 00000000 		.quad	.LVL287
 33455      00000000 
 33456 2906 0400     		.value	0x4
 33457 2908 91       		.byte	0x91
 33458 2909 B058     		.sleb128 -5072
 33459 290b 9F       		.byte	0x9f
 33460 290c 00000000 		.quad	.LVL291
 33460      00000000 
 33461 2914 00000000 		.quad	.LFE5505
 33461      00000000 
 33462 291c 0400     		.value	0x4
 33463 291e 91       		.byte	0x91
 33464 291f B058     		.sleb128 -5072
 33465 2921 9F       		.byte	0x9f
 33466 2922 00000000 		.quad	0
 33466      00000000 
 33467 292a 00000000 		.quad	0
 33467      00000000 
 33468              	.LLST158:
 33469 2932 00000000 		.quad	.LVL146
 33469      00000000 
 33470 293a 00000000 		.quad	.LVL211
 33470      00000000 
 33471 2942 0600     		.value	0x6
 33472 2944 F2       		.byte	0xf2
 33473 2945 00000000 		.long	.Ldebug_info0+53828
 33474 2949 00       		.sleb128 0
 33475 294a 00000000 		.quad	.LVL214
 33475      00000000 
 33476 2952 00000000 		.quad	.LVL218
 33476      00000000 
 33477 295a 0600     		.value	0x6
 33478 295c F2       		.byte	0xf2
 33479 295d 00000000 		.long	.Ldebug_info0+53828
 33480 2961 00       		.sleb128 0
 33481 2962 00000000 		.quad	.LVL223
 33481      00000000 
 33482 296a 00000000 		.quad	.LVL225
 33482      00000000 
 33483 2972 0600     		.value	0x6
 33484 2974 F2       		.byte	0xf2
 33485 2975 00000000 		.long	.Ldebug_info0+53828
 33486 2979 00       		.sleb128 0
 33487 297a 00000000 		.quad	.LVL244
 33487      00000000 
 33488 2982 00000000 		.quad	.LVL262
 33488      00000000 
 33489 298a 0600     		.value	0x6
 33490 298c F2       		.byte	0xf2
 33491 298d 00000000 		.long	.Ldebug_info0+53828
 33492 2991 00       		.sleb128 0
 33493 2992 00000000 		.quad	.LVL279
 33493      00000000 
 33494 299a 00000000 		.quad	.LVL287
 33494      00000000 
 33495 29a2 0600     		.value	0x6
 33496 29a4 F2       		.byte	0xf2
GAS LISTING /tmp/ccKUqHDa.s 			page 871


 33497 29a5 00000000 		.long	.Ldebug_info0+53828
 33498 29a9 00       		.sleb128 0
 33499 29aa 00000000 		.quad	.LVL291
 33499      00000000 
 33500 29b2 00000000 		.quad	.LFE5505
 33500      00000000 
 33501 29ba 0600     		.value	0x6
 33502 29bc F2       		.byte	0xf2
 33503 29bd 00000000 		.long	.Ldebug_info0+53828
 33504 29c1 00       		.sleb128 0
 33505 29c2 00000000 		.quad	0
 33505      00000000 
 33506 29ca 00000000 		.quad	0
 33506      00000000 
 33507              	.LLST162:
 33508 29d2 00000000 		.quad	.LVL159
 33508      00000000 
 33509 29da 00000000 		.quad	.LVL161
 33509      00000000 
 33510 29e2 0100     		.value	0x1
 33511 29e4 62       		.byte	0x62
 33512 29e5 00000000 		.quad	.LVL162
 33512      00000000 
 33513 29ed 00000000 		.quad	.LVL163
 33513      00000000 
 33514 29f5 0100     		.value	0x1
 33515 29f7 62       		.byte	0x62
 33516 29f8 00000000 		.quad	.LVL163
 33516      00000000 
 33517 2a00 00000000 		.quad	.LVL184
 33517      00000000 
 33518 2a08 0400     		.value	0x4
 33519 2a0a 91       		.byte	0x91
 33520 2a0b F8AE7F   		.sleb128 -10376
 33521 2a0e 00000000 		.quad	.LVL214
 33521      00000000 
 33522 2a16 00000000 		.quad	.LVL215
 33522      00000000 
 33523 2a1e 0100     		.value	0x1
 33524 2a20 62       		.byte	0x62
 33525 2a21 00000000 		.quad	.LVL215
 33525      00000000 
 33526 2a29 00000000 		.quad	.LVL216
 33526      00000000 
 33527 2a31 0400     		.value	0x4
 33528 2a33 91       		.byte	0x91
 33529 2a34 F8AE7F   		.sleb128 -10376
 33530 2a37 00000000 		.quad	.LVL217
 33530      00000000 
 33531 2a3f 00000000 		.quad	.LVL218
 33531      00000000 
 33532 2a47 0100     		.value	0x1
 33533 2a49 56       		.byte	0x56
 33534 2a4a 00000000 		.quad	.LVL259
 33534      00000000 
 33535 2a52 00000000 		.quad	.LVL262
 33535      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 872


 33536 2a5a 0400     		.value	0x4
 33537 2a5c 91       		.byte	0x91
 33538 2a5d F8AE7F   		.sleb128 -10376
 33539 2a60 00000000 		.quad	0
 33539      00000000 
 33540 2a68 00000000 		.quad	0
 33540      00000000 
 33541              	.LLST163:
 33542 2a70 00000000 		.quad	.LVL149
 33542      00000000 
 33543 2a78 00000000 		.quad	.LVL150-1
 33543      00000000 
 33544 2a80 0100     		.value	0x1
 33545 2a82 64       		.byte	0x64
 33546 2a83 00000000 		.quad	.LVL150-1
 33546      00000000 
 33547 2a8b 00000000 		.quad	.LVL154
 33547      00000000 
 33548 2a93 0400     		.value	0x4
 33549 2a95 91       		.byte	0x91
 33550 2a96 E8AE7F   		.sleb128 -10392
 33551 2a99 00000000 		.quad	0
 33551      00000000 
 33552 2aa1 00000000 		.quad	0
 33552      00000000 
 33553              	.LLST164:
 33554 2aa9 00000000 		.quad	.LVL151
 33554      00000000 
 33555 2ab1 00000000 		.quad	.LVL155-1
 33555      00000000 
 33556 2ab9 0100     		.value	0x1
 33557 2abb 62       		.byte	0x62
 33558 2abc 00000000 		.quad	.LVL155-1
 33558      00000000 
 33559 2ac4 00000000 		.quad	.LVL160
 33559      00000000 
 33560 2acc 0400     		.value	0x4
 33561 2ace 91       		.byte	0x91
 33562 2acf 8CAF7F   		.sleb128 -10356
 33563 2ad2 00000000 		.quad	.LVL256
 33563      00000000 
 33564 2ada 00000000 		.quad	.LVL259
 33564      00000000 
 33565 2ae2 0400     		.value	0x4
 33566 2ae4 91       		.byte	0x91
 33567 2ae5 8CAF7F   		.sleb128 -10356
 33568 2ae8 00000000 		.quad	0
 33568      00000000 
 33569 2af0 00000000 		.quad	0
 33569      00000000 
 33570              	.LLST165:
 33571 2af8 00000000 		.quad	.LVL152
 33571      00000000 
 33572 2b00 00000000 		.quad	.LVL155-1
 33572      00000000 
 33573 2b08 0100     		.value	0x1
 33574 2b0a 63       		.byte	0x63
GAS LISTING /tmp/ccKUqHDa.s 			page 873


 33575 2b0b 00000000 		.quad	.LVL155-1
 33575      00000000 
 33576 2b13 00000000 		.quad	.LVL158
 33576      00000000 
 33577 2b1b 0400     		.value	0x4
 33578 2b1d 91       		.byte	0x91
 33579 2b1e E8AE7F   		.sleb128 -10392
 33580 2b21 00000000 		.quad	.LVL256
 33580      00000000 
 33581 2b29 00000000 		.quad	.LVL257
 33581      00000000 
 33582 2b31 0400     		.value	0x4
 33583 2b33 91       		.byte	0x91
 33584 2b34 E8AE7F   		.sleb128 -10392
 33585 2b37 00000000 		.quad	0
 33585      00000000 
 33586 2b3f 00000000 		.quad	0
 33586      00000000 
 33587              	.LLST166:
 33588 2b47 00000000 		.quad	.LVL158
 33588      00000000 
 33589 2b4f 00000000 		.quad	.LVL160
 33589      00000000 
 33590 2b57 0100     		.value	0x1
 33591 2b59 63       		.byte	0x63
 33592 2b5a 00000000 		.quad	0
 33592      00000000 
 33593 2b62 00000000 		.quad	0
 33593      00000000 
 33594              	.LLST167:
 33595 2b6a 00000000 		.quad	.LVL147
 33595      00000000 
 33596 2b72 00000000 		.quad	.LVL160
 33596      00000000 
 33597 2b7a 0600     		.value	0x6
 33598 2b7c F2       		.byte	0xf2
 33599 2b7d 00000000 		.long	.Ldebug_info0+55690
 33600 2b81 00       		.sleb128 0
 33601 2b82 00000000 		.quad	.LVL256
 33601      00000000 
 33602 2b8a 00000000 		.quad	.LVL259
 33602      00000000 
 33603 2b92 0600     		.value	0x6
 33604 2b94 F2       		.byte	0xf2
 33605 2b95 00000000 		.long	.Ldebug_info0+55690
 33606 2b99 00       		.sleb128 0
 33607 2b9a 00000000 		.quad	0
 33607      00000000 
 33608 2ba2 00000000 		.quad	0
 33608      00000000 
 33609              	.LLST168:
 33610 2baa 00000000 		.quad	.LVL149
 33610      00000000 
 33611 2bb2 00000000 		.quad	.LVL160
 33611      00000000 
 33612 2bba 0600     		.value	0x6
 33613 2bbc F2       		.byte	0xf2
GAS LISTING /tmp/ccKUqHDa.s 			page 874


 33614 2bbd 00000000 		.long	.Ldebug_info0+55690
 33615 2bc1 00       		.sleb128 0
 33616 2bc2 00000000 		.quad	.LVL256
 33616      00000000 
 33617 2bca 00000000 		.quad	.LVL259
 33617      00000000 
 33618 2bd2 0600     		.value	0x6
 33619 2bd4 F2       		.byte	0xf2
 33620 2bd5 00000000 		.long	.Ldebug_info0+55690
 33621 2bd9 00       		.sleb128 0
 33622 2bda 00000000 		.quad	0
 33622      00000000 
 33623 2be2 00000000 		.quad	0
 33623      00000000 
 33624              	.LLST169:
 33625 2bea 00000000 		.quad	.LVL153
 33625      00000000 
 33626 2bf2 00000000 		.quad	.LVL155-1
 33626      00000000 
 33627 2bfa 0100     		.value	0x1
 33628 2bfc 61       		.byte	0x61
 33629 2bfd 00000000 		.quad	.LVL155-1
 33629      00000000 
 33630 2c05 00000000 		.quad	.LVL158
 33630      00000000 
 33631 2c0d 0400     		.value	0x4
 33632 2c0f 91       		.byte	0x91
 33633 2c10 E8AE7F   		.sleb128 -10392
 33634 2c13 00000000 		.quad	.LVL256
 33634      00000000 
 33635 2c1b 00000000 		.quad	.LVL257
 33635      00000000 
 33636 2c23 0400     		.value	0x4
 33637 2c25 91       		.byte	0x91
 33638 2c26 E8AE7F   		.sleb128 -10392
 33639 2c29 00000000 		.quad	0
 33639      00000000 
 33640 2c31 00000000 		.quad	0
 33640      00000000 
 33641              	.LLST170:
 33642 2c39 00000000 		.quad	.LVL155
 33642      00000000 
 33643 2c41 00000000 		.quad	.LVL156
 33643      00000000 
 33644 2c49 1400     		.value	0x14
 33645 2c4b F5       		.byte	0xf5
 33646 2c4c 11       		.uleb128 0x11
 33647 2c4d 29       		.uleb128 0x29
 33648 2c4e F4       		.byte	0xf4
 33649 2c4f 29       		.uleb128 0x29
 33650 2c50 04       		.byte	0x4
 33651 2c51 000000C0 		.long	0xc0000000
 33652 2c55 1E       		.byte	0x1e
 33653 2c56 91       		.byte	0x91
 33654 2c57 E8AE7F   		.sleb128 -10392
 33655 2c5a F6       		.byte	0xf6
 33656 2c5b 04       		.byte	0x4
GAS LISTING /tmp/ccKUqHDa.s 			page 875


 33657 2c5c 29       		.uleb128 0x29
 33658 2c5d 1B       		.byte	0x1b
 33659 2c5e 9F       		.byte	0x9f
 33660 2c5f 00000000 		.quad	.LVL157
 33660      00000000 
 33661 2c67 00000000 		.quad	.LVL158
 33661      00000000 
 33662 2c6f 0100     		.value	0x1
 33663 2c71 61       		.byte	0x61
 33664 2c72 00000000 		.quad	.LVL256
 33664      00000000 
 33665 2c7a 00000000 		.quad	.LVL258-1
 33665      00000000 
 33666 2c82 0100     		.value	0x1
 33667 2c84 61       		.byte	0x61
 33668 2c85 00000000 		.quad	0
 33668      00000000 
 33669 2c8d 00000000 		.quad	0
 33669      00000000 
 33670              	.LLST171:
 33671 2c95 00000000 		.quad	.LVL162
 33671      00000000 
 33672 2c9d 00000000 		.quad	.LVL184
 33672      00000000 
 33673 2ca5 0100     		.value	0x1
 33674 2ca7 53       		.byte	0x53
 33675 2ca8 00000000 		.quad	.LVL184
 33675      00000000 
 33676 2cb0 00000000 		.quad	.LVL211
 33676      00000000 
 33677 2cb8 0400     		.value	0x4
 33678 2cba 91       		.byte	0x91
 33679 2cbb B058     		.sleb128 -5072
 33680 2cbd 9F       		.byte	0x9f
 33681 2cbe 00000000 		.quad	.LVL214
 33681      00000000 
 33682 2cc6 00000000 		.quad	.LVL216
 33682      00000000 
 33683 2cce 0100     		.value	0x1
 33684 2cd0 53       		.byte	0x53
 33685 2cd1 00000000 		.quad	.LVL223
 33685      00000000 
 33686 2cd9 00000000 		.quad	.LVL225
 33686      00000000 
 33687 2ce1 0400     		.value	0x4
 33688 2ce3 91       		.byte	0x91
 33689 2ce4 B058     		.sleb128 -5072
 33690 2ce6 9F       		.byte	0x9f
 33691 2ce7 00000000 		.quad	.LVL244
 33691      00000000 
 33692 2cef 00000000 		.quad	.LVL256
 33692      00000000 
 33693 2cf7 0400     		.value	0x4
 33694 2cf9 91       		.byte	0x91
 33695 2cfa B058     		.sleb128 -5072
 33696 2cfc 9F       		.byte	0x9f
 33697 2cfd 00000000 		.quad	.LVL259
GAS LISTING /tmp/ccKUqHDa.s 			page 876


 33697      00000000 
 33698 2d05 00000000 		.quad	.LVL262
 33698      00000000 
 33699 2d0d 0100     		.value	0x1
 33700 2d0f 53       		.byte	0x53
 33701 2d10 00000000 		.quad	.LVL279
 33701      00000000 
 33702 2d18 00000000 		.quad	.LVL287
 33702      00000000 
 33703 2d20 0400     		.value	0x4
 33704 2d22 91       		.byte	0x91
 33705 2d23 B058     		.sleb128 -5072
 33706 2d25 9F       		.byte	0x9f
 33707 2d26 00000000 		.quad	.LVL291
 33707      00000000 
 33708 2d2e 00000000 		.quad	.LFE5505
 33708      00000000 
 33709 2d36 0400     		.value	0x4
 33710 2d38 91       		.byte	0x91
 33711 2d39 B058     		.sleb128 -5072
 33712 2d3b 9F       		.byte	0x9f
 33713 2d3c 00000000 		.quad	0
 33713      00000000 
 33714 2d44 00000000 		.quad	0
 33714      00000000 
 33715              	.LLST172:
 33716 2d4c 00000000 		.quad	.LVL162
 33716      00000000 
 33717 2d54 00000000 		.quad	.LVL211
 33717      00000000 
 33718 2d5c 0600     		.value	0x6
 33719 2d5e F2       		.byte	0xf2
 33720 2d5f 00000000 		.long	.Ldebug_info0+53816
 33721 2d63 00       		.sleb128 0
 33722 2d64 00000000 		.quad	.LVL214
 33722      00000000 
 33723 2d6c 00000000 		.quad	.LVL216
 33723      00000000 
 33724 2d74 0600     		.value	0x6
 33725 2d76 F2       		.byte	0xf2
 33726 2d77 00000000 		.long	.Ldebug_info0+53816
 33727 2d7b 00       		.sleb128 0
 33728 2d7c 00000000 		.quad	.LVL223
 33728      00000000 
 33729 2d84 00000000 		.quad	.LVL225
 33729      00000000 
 33730 2d8c 0600     		.value	0x6
 33731 2d8e F2       		.byte	0xf2
 33732 2d8f 00000000 		.long	.Ldebug_info0+53816
 33733 2d93 00       		.sleb128 0
 33734 2d94 00000000 		.quad	.LVL244
 33734      00000000 
 33735 2d9c 00000000 		.quad	.LVL256
 33735      00000000 
 33736 2da4 0600     		.value	0x6
 33737 2da6 F2       		.byte	0xf2
 33738 2da7 00000000 		.long	.Ldebug_info0+53816
GAS LISTING /tmp/ccKUqHDa.s 			page 877


 33739 2dab 00       		.sleb128 0
 33740 2dac 00000000 		.quad	.LVL259
 33740      00000000 
 33741 2db4 00000000 		.quad	.LVL262
 33741      00000000 
 33742 2dbc 0600     		.value	0x6
 33743 2dbe F2       		.byte	0xf2
 33744 2dbf 00000000 		.long	.Ldebug_info0+53816
 33745 2dc3 00       		.sleb128 0
 33746 2dc4 00000000 		.quad	.LVL279
 33746      00000000 
 33747 2dcc 00000000 		.quad	.LVL287
 33747      00000000 
 33748 2dd4 0600     		.value	0x6
 33749 2dd6 F2       		.byte	0xf2
 33750 2dd7 00000000 		.long	.Ldebug_info0+53816
 33751 2ddb 00       		.sleb128 0
 33752 2ddc 00000000 		.quad	.LVL291
 33752      00000000 
 33753 2de4 00000000 		.quad	.LFE5505
 33753      00000000 
 33754 2dec 0600     		.value	0x6
 33755 2dee F2       		.byte	0xf2
 33756 2def 00000000 		.long	.Ldebug_info0+53816
 33757 2df3 00       		.sleb128 0
 33758 2df4 00000000 		.quad	0
 33758      00000000 
 33759 2dfc 00000000 		.quad	0
 33759      00000000 
 33760              	.LLST176:
 33761 2e04 00000000 		.quad	.LVL175
 33761      00000000 
 33762 2e0c 00000000 		.quad	.LVL177
 33762      00000000 
 33763 2e14 0100     		.value	0x1
 33764 2e16 62       		.byte	0x62
 33765 2e17 00000000 		.quad	.LVL177
 33765      00000000 
 33766 2e1f 00000000 		.quad	.LVL179
 33766      00000000 
 33767 2e27 0C00     		.value	0xc
 33768 2e29 91       		.byte	0x91
 33769 2e2a F0AE7F   		.sleb128 -10384
 33770 2e2d F6       		.byte	0xf6
 33771 2e2e 04       		.byte	0x4
 33772 2e2f 29       		.uleb128 0x29
 33773 2e30 F5       		.byte	0xf5
 33774 2e31 12       		.uleb128 0x12
 33775 2e32 29       		.uleb128 0x29
 33776 2e33 22       		.byte	0x22
 33777 2e34 9F       		.byte	0x9f
 33778 2e35 00000000 		.quad	.LVL179
 33778      00000000 
 33779 2e3d 00000000 		.quad	.LVL184
 33779      00000000 
 33780 2e45 0100     		.value	0x1
 33781 2e47 62       		.byte	0x62
GAS LISTING /tmp/ccKUqHDa.s 			page 878


 33782 2e48 00000000 		.quad	.LVL215
 33782      00000000 
 33783 2e50 00000000 		.quad	.LVL216
 33783      00000000 
 33784 2e58 0100     		.value	0x1
 33785 2e5a 5F       		.byte	0x5f
 33786 2e5b 00000000 		.quad	0
 33786      00000000 
 33787 2e63 00000000 		.quad	0
 33787      00000000 
 33788              	.LLST177:
 33789 2e6b 00000000 		.quad	.LVL165
 33789      00000000 
 33790 2e73 00000000 		.quad	.LVL166-1
 33790      00000000 
 33791 2e7b 0100     		.value	0x1
 33792 2e7d 64       		.byte	0x64
 33793 2e7e 00000000 		.quad	.LVL166-1
 33793      00000000 
 33794 2e86 00000000 		.quad	.LVL170
 33794      00000000 
 33795 2e8e 0400     		.value	0x4
 33796 2e90 91       		.byte	0x91
 33797 2e91 E8AE7F   		.sleb128 -10392
 33798 2e94 00000000 		.quad	0
 33798      00000000 
 33799 2e9c 00000000 		.quad	0
 33799      00000000 
 33800              	.LLST178:
 33801 2ea4 00000000 		.quad	.LVL167
 33801      00000000 
 33802 2eac 00000000 		.quad	.LVL171-1
 33802      00000000 
 33803 2eb4 0100     		.value	0x1
 33804 2eb6 62       		.byte	0x62
 33805 2eb7 00000000 		.quad	.LVL171-1
 33805      00000000 
 33806 2ebf 00000000 		.quad	.LVL176
 33806      00000000 
 33807 2ec7 0400     		.value	0x4
 33808 2ec9 91       		.byte	0x91
 33809 2eca 98AF7F   		.sleb128 -10344
 33810 2ecd 00000000 		.quad	.LVL259
 33810      00000000 
 33811 2ed5 00000000 		.quad	.LVL262
 33811      00000000 
 33812 2edd 0400     		.value	0x4
 33813 2edf 91       		.byte	0x91
 33814 2ee0 98AF7F   		.sleb128 -10344
 33815 2ee3 00000000 		.quad	0
 33815      00000000 
 33816 2eeb 00000000 		.quad	0
 33816      00000000 
 33817              	.LLST179:
 33818 2ef3 00000000 		.quad	.LVL168
 33818      00000000 
 33819 2efb 00000000 		.quad	.LVL171-1
GAS LISTING /tmp/ccKUqHDa.s 			page 879


 33819      00000000 
 33820 2f03 0100     		.value	0x1
 33821 2f05 63       		.byte	0x63
 33822 2f06 00000000 		.quad	.LVL171-1
 33822      00000000 
 33823 2f0e 00000000 		.quad	.LVL174
 33823      00000000 
 33824 2f16 0400     		.value	0x4
 33825 2f18 91       		.byte	0x91
 33826 2f19 E8AE7F   		.sleb128 -10392
 33827 2f1c 00000000 		.quad	.LVL259
 33827      00000000 
 33828 2f24 00000000 		.quad	.LVL260
 33828      00000000 
 33829 2f2c 0400     		.value	0x4
 33830 2f2e 91       		.byte	0x91
 33831 2f2f E8AE7F   		.sleb128 -10392
 33832 2f32 00000000 		.quad	0
 33832      00000000 
 33833 2f3a 00000000 		.quad	0
 33833      00000000 
 33834              	.LLST180:
 33835 2f42 00000000 		.quad	.LVL174
 33835      00000000 
 33836 2f4a 00000000 		.quad	.LVL176
 33836      00000000 
 33837 2f52 0100     		.value	0x1
 33838 2f54 63       		.byte	0x63
 33839 2f55 00000000 		.quad	0
 33839      00000000 
 33840 2f5d 00000000 		.quad	0
 33840      00000000 
 33841              	.LLST181:
 33842 2f65 00000000 		.quad	.LVL163
 33842      00000000 
 33843 2f6d 00000000 		.quad	.LVL176
 33843      00000000 
 33844 2f75 0600     		.value	0x6
 33845 2f77 F2       		.byte	0xf2
 33846 2f78 00000000 		.long	.Ldebug_info0+56086
 33847 2f7c 00       		.sleb128 0
 33848 2f7d 00000000 		.quad	.LVL259
 33848      00000000 
 33849 2f85 00000000 		.quad	.LVL262
 33849      00000000 
 33850 2f8d 0600     		.value	0x6
 33851 2f8f F2       		.byte	0xf2
 33852 2f90 00000000 		.long	.Ldebug_info0+56086
 33853 2f94 00       		.sleb128 0
 33854 2f95 00000000 		.quad	0
 33854      00000000 
 33855 2f9d 00000000 		.quad	0
 33855      00000000 
 33856              	.LLST182:
 33857 2fa5 00000000 		.quad	.LVL165
 33857      00000000 
 33858 2fad 00000000 		.quad	.LVL176
GAS LISTING /tmp/ccKUqHDa.s 			page 880


 33858      00000000 
 33859 2fb5 0600     		.value	0x6
 33860 2fb7 F2       		.byte	0xf2
 33861 2fb8 00000000 		.long	.Ldebug_info0+56086
 33862 2fbc 00       		.sleb128 0
 33863 2fbd 00000000 		.quad	.LVL259
 33863      00000000 
 33864 2fc5 00000000 		.quad	.LVL262
 33864      00000000 
 33865 2fcd 0600     		.value	0x6
 33866 2fcf F2       		.byte	0xf2
 33867 2fd0 00000000 		.long	.Ldebug_info0+56086
 33868 2fd4 00       		.sleb128 0
 33869 2fd5 00000000 		.quad	0
 33869      00000000 
 33870 2fdd 00000000 		.quad	0
 33870      00000000 
 33871              	.LLST183:
 33872 2fe5 00000000 		.quad	.LVL169
 33872      00000000 
 33873 2fed 00000000 		.quad	.LVL171-1
 33873      00000000 
 33874 2ff5 0100     		.value	0x1
 33875 2ff7 61       		.byte	0x61
 33876 2ff8 00000000 		.quad	.LVL171-1
 33876      00000000 
 33877 3000 00000000 		.quad	.LVL174
 33877      00000000 
 33878 3008 0400     		.value	0x4
 33879 300a 91       		.byte	0x91
 33880 300b E8AE7F   		.sleb128 -10392
 33881 300e 00000000 		.quad	.LVL259
 33881      00000000 
 33882 3016 00000000 		.quad	.LVL260
 33882      00000000 
 33883 301e 0400     		.value	0x4
 33884 3020 91       		.byte	0x91
 33885 3021 E8AE7F   		.sleb128 -10392
 33886 3024 00000000 		.quad	0
 33886      00000000 
 33887 302c 00000000 		.quad	0
 33887      00000000 
 33888              	.LLST184:
 33889 3034 00000000 		.quad	.LVL171
 33889      00000000 
 33890 303c 00000000 		.quad	.LVL172
 33890      00000000 
 33891 3044 1400     		.value	0x14
 33892 3046 F5       		.byte	0xf5
 33893 3047 11       		.uleb128 0x11
 33894 3048 29       		.uleb128 0x29
 33895 3049 F4       		.byte	0xf4
 33896 304a 29       		.uleb128 0x29
 33897 304b 04       		.byte	0x4
 33898 304c 000000C0 		.long	0xc0000000
 33899 3050 1E       		.byte	0x1e
 33900 3051 91       		.byte	0x91
GAS LISTING /tmp/ccKUqHDa.s 			page 881


 33901 3052 E8AE7F   		.sleb128 -10392
 33902 3055 F6       		.byte	0xf6
 33903 3056 04       		.byte	0x4
 33904 3057 29       		.uleb128 0x29
 33905 3058 1B       		.byte	0x1b
 33906 3059 9F       		.byte	0x9f
 33907 305a 00000000 		.quad	.LVL173
 33907      00000000 
 33908 3062 00000000 		.quad	.LVL174
 33908      00000000 
 33909 306a 0100     		.value	0x1
 33910 306c 61       		.byte	0x61
 33911 306d 00000000 		.quad	.LVL259
 33911      00000000 
 33912 3075 00000000 		.quad	.LVL261-1
 33912      00000000 
 33913 307d 0100     		.value	0x1
 33914 307f 61       		.byte	0x61
 33915 3080 00000000 		.quad	0
 33915      00000000 
 33916 3088 00000000 		.quad	0
 33916      00000000 
 33917              	.LLST186:
 33918 3090 00000000 		.quad	.LVL177
 33918      00000000 
 33919 3098 00000000 		.quad	.LVL178
 33919      00000000 
 33920 30a0 0100     		.value	0x1
 33921 30a2 5C       		.byte	0x5c
 33922 30a3 00000000 		.quad	.LVL178
 33922      00000000 
 33923 30ab 00000000 		.quad	.LVL182
 33923      00000000 
 33924 30b3 0300     		.value	0x3
 33925 30b5 7C       		.byte	0x7c
 33926 30b6 78       		.sleb128 -8
 33927 30b7 9F       		.byte	0x9f
 33928 30b8 00000000 		.quad	0
 33928      00000000 
 33929 30c0 00000000 		.quad	0
 33929      00000000 
 33930              	.LLST187:
 33931 30c8 00000000 		.quad	.LVL181
 33931      00000000 
 33932 30d0 00000000 		.quad	.LVL184
 33932      00000000 
 33933 30d8 0200     		.value	0x2
 33934 30da 30       		.byte	0x30
 33935 30db 9F       		.byte	0x9f
 33936 30dc 00000000 		.quad	.LVL184
 33936      00000000 
 33937 30e4 00000000 		.quad	.LVL211
 33937      00000000 
 33938 30ec 0100     		.value	0x1
 33939 30ee 5E       		.byte	0x5e
 33940 30ef 00000000 		.quad	.LVL223
 33940      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 882


 33941 30f7 00000000 		.quad	.LVL225
 33941      00000000 
 33942 30ff 0100     		.value	0x1
 33943 3101 5E       		.byte	0x5e
 33944 3102 00000000 		.quad	.LVL244
 33944      00000000 
 33945 310a 00000000 		.quad	.LVL256
 33945      00000000 
 33946 3112 0100     		.value	0x1
 33947 3114 5E       		.byte	0x5e
 33948 3115 00000000 		.quad	.LVL279
 33948      00000000 
 33949 311d 00000000 		.quad	.LVL287
 33949      00000000 
 33950 3125 0100     		.value	0x1
 33951 3127 5E       		.byte	0x5e
 33952 3128 00000000 		.quad	.LVL291
 33952      00000000 
 33953 3130 00000000 		.quad	.LFE5505
 33953      00000000 
 33954 3138 0100     		.value	0x1
 33955 313a 5E       		.byte	0x5e
 33956 313b 00000000 		.quad	0
 33956      00000000 
 33957 3143 00000000 		.quad	0
 33957      00000000 
 33958              	.LLST188:
 33959 314b 00000000 		.quad	.LVL185
 33959      00000000 
 33960 3153 00000000 		.quad	.LVL211
 33960      00000000 
 33961 315b 0100     		.value	0x1
 33962 315d 5C       		.byte	0x5c
 33963 315e 00000000 		.quad	.LVL223
 33963      00000000 
 33964 3166 00000000 		.quad	.LVL225
 33964      00000000 
 33965 316e 0100     		.value	0x1
 33966 3170 5C       		.byte	0x5c
 33967 3171 00000000 		.quad	.LVL244
 33967      00000000 
 33968 3179 00000000 		.quad	.LVL256
 33968      00000000 
 33969 3181 0100     		.value	0x1
 33970 3183 5C       		.byte	0x5c
 33971 3184 00000000 		.quad	.LVL279
 33971      00000000 
 33972 318c 00000000 		.quad	.LVL287
 33972      00000000 
 33973 3194 0100     		.value	0x1
 33974 3196 5C       		.byte	0x5c
 33975 3197 00000000 		.quad	.LVL291
 33975      00000000 
 33976 319f 00000000 		.quad	.LFE5505
 33976      00000000 
 33977 31a7 0100     		.value	0x1
 33978 31a9 5C       		.byte	0x5c
GAS LISTING /tmp/ccKUqHDa.s 			page 883


 33979 31aa 00000000 		.quad	0
 33979      00000000 
 33980 31b2 00000000 		.quad	0
 33980      00000000 
 33981              	.LLST189:
 33982 31ba 00000000 		.quad	.LVL196
 33982      00000000 
 33983 31c2 00000000 		.quad	.LVL197
 33983      00000000 
 33984 31ca 0100     		.value	0x1
 33985 31cc 50       		.byte	0x50
 33986 31cd 00000000 		.quad	.LVL197
 33986      00000000 
 33987 31d5 00000000 		.quad	.LVL207
 33987      00000000 
 33988 31dd 0100     		.value	0x1
 33989 31df 53       		.byte	0x53
 33990 31e0 00000000 		.quad	.LVL223
 33990      00000000 
 33991 31e8 00000000 		.quad	.LVL225
 33991      00000000 
 33992 31f0 0100     		.value	0x1
 33993 31f2 53       		.byte	0x53
 33994 31f3 00000000 		.quad	.LVL244
 33994      00000000 
 33995 31fb 00000000 		.quad	.LVL256
 33995      00000000 
 33996 3203 0100     		.value	0x1
 33997 3205 53       		.byte	0x53
 33998 3206 00000000 		.quad	0
 33998      00000000 
 33999 320e 00000000 		.quad	0
 33999      00000000 
 34000              	.LLST190:
 34001 3216 00000000 		.quad	.LVL196
 34001      00000000 
 34002 321e 00000000 		.quad	.LVL211
 34002      00000000 
 34003 3226 0100     		.value	0x1
 34004 3228 5F       		.byte	0x5f
 34005 3229 00000000 		.quad	.LVL223
 34005      00000000 
 34006 3231 00000000 		.quad	.LVL225
 34006      00000000 
 34007 3239 0100     		.value	0x1
 34008 323b 5F       		.byte	0x5f
 34009 323c 00000000 		.quad	.LVL244
 34009      00000000 
 34010 3244 00000000 		.quad	.LVL256
 34010      00000000 
 34011 324c 0100     		.value	0x1
 34012 324e 5F       		.byte	0x5f
 34013 324f 00000000 		.quad	0
 34013      00000000 
 34014 3257 00000000 		.quad	0
 34014      00000000 
 34015              	.LLST191:
GAS LISTING /tmp/ccKUqHDa.s 			page 884


 34016 325f 00000000 		.quad	.LVL198
 34016      00000000 
 34017 3267 00000000 		.quad	.LVL211
 34017      00000000 
 34018 326f 0400     		.value	0x4
 34019 3271 91       		.byte	0x91
 34020 3272 F8AE7F   		.sleb128 -10376
 34021 3275 00000000 		.quad	.LVL223
 34021      00000000 
 34022 327d 00000000 		.quad	.LVL225
 34022      00000000 
 34023 3285 0400     		.value	0x4
 34024 3287 91       		.byte	0x91
 34025 3288 F8AE7F   		.sleb128 -10376
 34026 328b 00000000 		.quad	.LVL244
 34026      00000000 
 34027 3293 00000000 		.quad	.LVL256
 34027      00000000 
 34028 329b 0400     		.value	0x4
 34029 329d 91       		.byte	0x91
 34030 329e F8AE7F   		.sleb128 -10376
 34031 32a1 00000000 		.quad	0
 34031      00000000 
 34032 32a9 00000000 		.quad	0
 34032      00000000 
 34033              	.LLST192:
 34034 32b1 00000000 		.quad	.LVL198
 34034      00000000 
 34035 32b9 00000000 		.quad	.LVL199
 34035      00000000 
 34036 32c1 0100     		.value	0x1
 34037 32c3 55       		.byte	0x55
 34038 32c4 00000000 		.quad	.LVL223
 34038      00000000 
 34039 32cc 00000000 		.quad	.LVL224-1
 34039      00000000 
 34040 32d4 0100     		.value	0x1
 34041 32d6 55       		.byte	0x55
 34042 32d7 00000000 		.quad	0
 34042      00000000 
 34043 32df 00000000 		.quad	0
 34043      00000000 
 34044              	.LLST194:
 34045 32e7 00000000 		.quad	.LVL246
 34045      00000000 
 34046 32ef 00000000 		.quad	.LVL256
 34046      00000000 
 34047 32f7 0100     		.value	0x1
 34048 32f9 53       		.byte	0x53
 34049 32fa 00000000 		.quad	0
 34049      00000000 
 34050 3302 00000000 		.quad	0
 34050      00000000 
 34051              	.LLST195:
 34052 330a 00000000 		.quad	.LVL246
 34052      00000000 
 34053 3312 00000000 		.quad	.LVL247-1
GAS LISTING /tmp/ccKUqHDa.s 			page 885


 34053      00000000 
 34054 331a 0100     		.value	0x1
 34055 331c 50       		.byte	0x50
 34056 331d 00000000 		.quad	0
 34056      00000000 
 34057 3325 00000000 		.quad	0
 34057      00000000 
 34058              	.LLST196:
 34059 332d 00000000 		.quad	.LVL249
 34059      00000000 
 34060 3335 00000000 		.quad	.LVL250-1
 34060      00000000 
 34061 333d 0100     		.value	0x1
 34062 333f 50       		.byte	0x50
 34063 3340 00000000 		.quad	0
 34063      00000000 
 34064 3348 00000000 		.quad	0
 34064      00000000 
 34065              	.LLST197:
 34066 3350 00000000 		.quad	.LVL293
 34066      00000000 
 34067 3358 00000000 		.quad	.LVL294-1
 34067      00000000 
 34068 3360 0100     		.value	0x1
 34069 3362 55       		.byte	0x55
 34070 3363 00000000 		.quad	0
 34070      00000000 
 34071 336b 00000000 		.quad	0
 34071      00000000 
 34072              	.LLST198:
 34073 3373 00000000 		.quad	.LVL186
 34073      00000000 
 34074 337b 00000000 		.quad	.LVL187-1
 34074      00000000 
 34075 3383 0800     		.value	0x8
 34076 3385 73       		.byte	0x73
 34077 3386 00       		.sleb128 0
 34078 3387 93       		.byte	0x93
 34079 3388 04       		.uleb128 0x4
 34080 3389 73       		.byte	0x73
 34081 338a 04       		.sleb128 4
 34082 338b 93       		.byte	0x93
 34083 338c 04       		.uleb128 0x4
 34084 338d 00000000 		.quad	0
 34084      00000000 
 34085 3395 00000000 		.quad	0
 34085      00000000 
 34086              	.LLST199:
 34087 339d 00000000 		.quad	.LVL185
 34087      00000000 
 34088 33a5 00000000 		.quad	.LVL211
 34088      00000000 
 34089 33ad 0600     		.value	0x6
 34090 33af F2       		.byte	0xf2
 34091 33b0 00000000 		.long	.Ldebug_info0+53840
 34092 33b4 00       		.sleb128 0
 34093 33b5 00000000 		.quad	.LVL223
GAS LISTING /tmp/ccKUqHDa.s 			page 886


 34093      00000000 
 34094 33bd 00000000 		.quad	.LVL225
 34094      00000000 
 34095 33c5 0600     		.value	0x6
 34096 33c7 F2       		.byte	0xf2
 34097 33c8 00000000 		.long	.Ldebug_info0+53840
 34098 33cc 00       		.sleb128 0
 34099 33cd 00000000 		.quad	.LVL244
 34099      00000000 
 34100 33d5 00000000 		.quad	.LVL256
 34100      00000000 
 34101 33dd 0600     		.value	0x6
 34102 33df F2       		.byte	0xf2
 34103 33e0 00000000 		.long	.Ldebug_info0+53840
 34104 33e4 00       		.sleb128 0
 34105 33e5 00000000 		.quad	.LVL279
 34105      00000000 
 34106 33ed 00000000 		.quad	.LVL287
 34106      00000000 
 34107 33f5 0600     		.value	0x6
 34108 33f7 F2       		.byte	0xf2
 34109 33f8 00000000 		.long	.Ldebug_info0+53840
 34110 33fc 00       		.sleb128 0
 34111 33fd 00000000 		.quad	.LVL291
 34111      00000000 
 34112 3405 00000000 		.quad	.LFE5505
 34112      00000000 
 34113 340d 0600     		.value	0x6
 34114 340f F2       		.byte	0xf2
 34115 3410 00000000 		.long	.Ldebug_info0+53840
 34116 3414 00       		.sleb128 0
 34117 3415 00000000 		.quad	0
 34117      00000000 
 34118 341d 00000000 		.quad	0
 34118      00000000 
 34119              	.LLST200:
 34120 3425 00000000 		.quad	.LVL200
 34120      00000000 
 34121 342d 00000000 		.quad	.LVL211
 34121      00000000 
 34122 3435 0400     		.value	0x4
 34123 3437 91       		.byte	0x91
 34124 3438 B0AF7F   		.sleb128 -10320
 34125 343b 00000000 		.quad	0
 34125      00000000 
 34126 3443 00000000 		.quad	0
 34126      00000000 
 34127              	.LLST202:
 34128 344b 00000000 		.quad	.LVL200
 34128      00000000 
 34129 3453 00000000 		.quad	.LVL202-1
 34129      00000000 
 34130 345b 1000     		.value	0x10
 34131 345d 91       		.byte	0x91
 34132 345e B0AF7F   		.sleb128 -10320
 34133 3461 06       		.byte	0x6
 34134 3462 23       		.byte	0x23
GAS LISTING /tmp/ccKUqHDa.s 			page 887


 34135 3463 10       		.uleb128 0x10
 34136 3464 06       		.byte	0x6
 34137 3465 91       		.byte	0x91
 34138 3466 B0AF7F   		.sleb128 -10320
 34139 3469 06       		.byte	0x6
 34140 346a 06       		.byte	0x6
 34141 346b 1C       		.byte	0x1c
 34142 346c 9F       		.byte	0x9f
 34143 346d 00000000 		.quad	0
 34143      00000000 
 34144 3475 00000000 		.quad	0
 34144      00000000 
 34145              	.LLST203:
 34146 347d 00000000 		.quad	.LVL200
 34146      00000000 
 34147 3485 00000000 		.quad	.LVL202-1
 34147      00000000 
 34148 348d 0100     		.value	0x1
 34149 348f 55       		.byte	0x55
 34150 3490 00000000 		.quad	0
 34150      00000000 
 34151 3498 00000000 		.quad	0
 34151      00000000 
 34152              	.LLST204:
 34153 34a0 00000000 		.quad	.LVL201
 34153      00000000 
 34154 34a8 00000000 		.quad	.LVL202-1
 34154      00000000 
 34155 34b0 1000     		.value	0x10
 34156 34b2 91       		.byte	0x91
 34157 34b3 B0AF7F   		.sleb128 -10320
 34158 34b6 06       		.byte	0x6
 34159 34b7 23       		.byte	0x23
 34160 34b8 10       		.uleb128 0x10
 34161 34b9 06       		.byte	0x6
 34162 34ba 91       		.byte	0x91
 34163 34bb B0AF7F   		.sleb128 -10320
 34164 34be 06       		.byte	0x6
 34165 34bf 06       		.byte	0x6
 34166 34c0 1C       		.byte	0x1c
 34167 34c1 9F       		.byte	0x9f
 34168 34c2 00000000 		.quad	0
 34168      00000000 
 34169 34ca 00000000 		.quad	0
 34169      00000000 
 34170              	.LLST205:
 34171 34d2 00000000 		.quad	.LVL201
 34171      00000000 
 34172 34da 00000000 		.quad	.LVL202-1
 34172      00000000 
 34173 34e2 0100     		.value	0x1
 34174 34e4 55       		.byte	0x55
 34175 34e5 00000000 		.quad	0
 34175      00000000 
 34176 34ed 00000000 		.quad	0
 34176      00000000 
 34177              	.LLST208:
GAS LISTING /tmp/ccKUqHDa.s 			page 888


 34178 34f5 00000000 		.quad	.LVL250
 34178      00000000 
 34179 34fd 00000000 		.quad	.LVL256
 34179      00000000 
 34180 3505 0400     		.value	0x4
 34181 3507 91       		.byte	0x91
 34182 3508 B0AF7F   		.sleb128 -10320
 34183 350b 00000000 		.quad	0
 34183      00000000 
 34184 3513 00000000 		.quad	0
 34184      00000000 
 34185              	.LLST210:
 34186 351b 00000000 		.quad	.LVL251
 34186      00000000 
 34187 3523 00000000 		.quad	.LVL253-1
 34187      00000000 
 34188 352b 1000     		.value	0x10
 34189 352d 91       		.byte	0x91
 34190 352e B0AF7F   		.sleb128 -10320
 34191 3531 06       		.byte	0x6
 34192 3532 23       		.byte	0x23
 34193 3533 10       		.uleb128 0x10
 34194 3534 06       		.byte	0x6
 34195 3535 91       		.byte	0x91
 34196 3536 B0AF7F   		.sleb128 -10320
 34197 3539 06       		.byte	0x6
 34198 353a 06       		.byte	0x6
 34199 353b 1C       		.byte	0x1c
 34200 353c 9F       		.byte	0x9f
 34201 353d 00000000 		.quad	0
 34201      00000000 
 34202 3545 00000000 		.quad	0
 34202      00000000 
 34203              	.LLST211:
 34204 354d 00000000 		.quad	.LVL251
 34204      00000000 
 34205 3555 00000000 		.quad	.LVL253-1
 34205      00000000 
 34206 355d 0500     		.value	0x5
 34207 355f 91       		.byte	0x91
 34208 3560 B0AF7F   		.sleb128 -10320
 34209 3563 06       		.byte	0x6
 34210 3564 00000000 		.quad	0
 34210      00000000 
 34211 356c 00000000 		.quad	0
 34211      00000000 
 34212              	.LLST212:
 34213 3574 00000000 		.quad	.LVL252
 34213      00000000 
 34214 357c 00000000 		.quad	.LVL253-1
 34214      00000000 
 34215 3584 1000     		.value	0x10
 34216 3586 91       		.byte	0x91
 34217 3587 B0AF7F   		.sleb128 -10320
 34218 358a 06       		.byte	0x6
 34219 358b 23       		.byte	0x23
 34220 358c 10       		.uleb128 0x10
GAS LISTING /tmp/ccKUqHDa.s 			page 889


 34221 358d 06       		.byte	0x6
 34222 358e 91       		.byte	0x91
 34223 358f B0AF7F   		.sleb128 -10320
 34224 3592 06       		.byte	0x6
 34225 3593 06       		.byte	0x6
 34226 3594 1C       		.byte	0x1c
 34227 3595 9F       		.byte	0x9f
 34228 3596 00000000 		.quad	0
 34228      00000000 
 34229 359e 00000000 		.quad	0
 34229      00000000 
 34230              	.LLST213:
 34231 35a6 00000000 		.quad	.LVL252
 34231      00000000 
 34232 35ae 00000000 		.quad	.LVL253-1
 34232      00000000 
 34233 35b6 0500     		.value	0x5
 34234 35b8 91       		.byte	0x91
 34235 35b9 B0AF7F   		.sleb128 -10320
 34236 35bc 06       		.byte	0x6
 34237 35bd 00000000 		.quad	0
 34237      00000000 
 34238 35c5 00000000 		.quad	0
 34238      00000000 
 34239              	.LLST216:
 34240 35cd 00000000 		.quad	.LVL283
 34240      00000000 
 34241 35d5 00000000 		.quad	.LVL287
 34241      00000000 
 34242 35dd 0400     		.value	0x4
 34243 35df 91       		.byte	0x91
 34244 35e0 B0AF7F   		.sleb128 -10320
 34245 35e3 00000000 		.quad	0
 34245      00000000 
 34246 35eb 00000000 		.quad	0
 34246      00000000 
 34247              	.LLST218:
 34248 35f3 00000000 		.quad	.LVL284
 34248      00000000 
 34249 35fb 00000000 		.quad	.LVL286-1
 34249      00000000 
 34250 3603 1000     		.value	0x10
 34251 3605 91       		.byte	0x91
 34252 3606 B0AF7F   		.sleb128 -10320
 34253 3609 06       		.byte	0x6
 34254 360a 23       		.byte	0x23
 34255 360b 10       		.uleb128 0x10
 34256 360c 06       		.byte	0x6
 34257 360d 91       		.byte	0x91
 34258 360e B0AF7F   		.sleb128 -10320
 34259 3611 06       		.byte	0x6
 34260 3612 06       		.byte	0x6
 34261 3613 1C       		.byte	0x1c
 34262 3614 9F       		.byte	0x9f
 34263 3615 00000000 		.quad	0
 34263      00000000 
 34264 361d 00000000 		.quad	0
GAS LISTING /tmp/ccKUqHDa.s 			page 890


 34264      00000000 
 34265              	.LLST219:
 34266 3625 00000000 		.quad	.LVL284
 34266      00000000 
 34267 362d 00000000 		.quad	.LVL286-1
 34267      00000000 
 34268 3635 0500     		.value	0x5
 34269 3637 91       		.byte	0x91
 34270 3638 B0AF7F   		.sleb128 -10320
 34271 363b 06       		.byte	0x6
 34272 363c 00000000 		.quad	0
 34272      00000000 
 34273 3644 00000000 		.quad	0
 34273      00000000 
 34274              	.LLST220:
 34275 364c 00000000 		.quad	.LVL285
 34275      00000000 
 34276 3654 00000000 		.quad	.LVL286-1
 34276      00000000 
 34277 365c 1000     		.value	0x10
 34278 365e 91       		.byte	0x91
 34279 365f B0AF7F   		.sleb128 -10320
 34280 3662 06       		.byte	0x6
 34281 3663 23       		.byte	0x23
 34282 3664 10       		.uleb128 0x10
 34283 3665 06       		.byte	0x6
 34284 3666 91       		.byte	0x91
 34285 3667 B0AF7F   		.sleb128 -10320
 34286 366a 06       		.byte	0x6
 34287 366b 06       		.byte	0x6
 34288 366c 1C       		.byte	0x1c
 34289 366d 9F       		.byte	0x9f
 34290 366e 00000000 		.quad	0
 34290      00000000 
 34291 3676 00000000 		.quad	0
 34291      00000000 
 34292              	.LLST221:
 34293 367e 00000000 		.quad	.LVL285
 34293      00000000 
 34294 3686 00000000 		.quad	.LVL286-1
 34294      00000000 
 34295 368e 0500     		.value	0x5
 34296 3690 91       		.byte	0x91
 34297 3691 B0AF7F   		.sleb128 -10320
 34298 3694 06       		.byte	0x6
 34299 3695 00000000 		.quad	0
 34299      00000000 
 34300 369d 00000000 		.quad	0
 34300      00000000 
 34301              	.LLST224:
 34302 36a5 00000000 		.quad	.LVL204
 34302      00000000 
 34303 36ad 00000000 		.quad	.LVL211
 34303      00000000 
 34304 36b5 0600     		.value	0x6
 34305 36b7 F2       		.byte	0xf2
 34306 36b8 00000000 		.long	.Ldebug_info0+53840
GAS LISTING /tmp/ccKUqHDa.s 			page 891


 34307 36bc 00       		.sleb128 0
 34308 36bd 00000000 		.quad	0
 34308      00000000 
 34309 36c5 00000000 		.quad	0
 34309      00000000 
 34310              	.LLST226:
 34311 36cd 00000000 		.quad	.LVL204
 34311      00000000 
 34312 36d5 00000000 		.quad	.LVL211
 34312      00000000 
 34313 36dd 0400     		.value	0x4
 34314 36df 91       		.byte	0x91
 34315 36e0 A8AF7F   		.sleb128 -10328
 34316 36e3 00000000 		.quad	0
 34316      00000000 
 34317 36eb 00000000 		.quad	0
 34317      00000000 
 34318              	.LLST229:
 34319 36f3 00000000 		.quad	.LVL205
 34319      00000000 
 34320 36fb 00000000 		.quad	.LVL211
 34320      00000000 
 34321 3703 0400     		.value	0x4
 34322 3705 91       		.byte	0x91
 34323 3706 D0AF7F   		.sleb128 -10288
 34324 3709 00000000 		.quad	0
 34324      00000000 
 34325 3711 00000000 		.quad	0
 34325      00000000 
 34326              	.LLST230:
 34327 3719 00000000 		.quad	.LVL253
 34327      00000000 
 34328 3721 00000000 		.quad	.LVL256
 34328      00000000 
 34329 3729 0600     		.value	0x6
 34330 372b F2       		.byte	0xf2
 34331 372c 00000000 		.long	.Ldebug_info0+53840
 34332 3730 00       		.sleb128 0
 34333 3731 00000000 		.quad	0
 34333      00000000 
 34334 3739 00000000 		.quad	0
 34334      00000000 
 34335              	.LLST232:
 34336 3741 00000000 		.quad	.LVL253
 34336      00000000 
 34337 3749 00000000 		.quad	.LVL256
 34337      00000000 
 34338 3751 0400     		.value	0x4
 34339 3753 91       		.byte	0x91
 34340 3754 A8AF7F   		.sleb128 -10328
 34341 3757 00000000 		.quad	0
 34341      00000000 
 34342 375f 00000000 		.quad	0
 34342      00000000 
 34343              	.LLST235:
 34344 3767 00000000 		.quad	.LVL254
 34344      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 892


 34345 376f 00000000 		.quad	.LVL256
 34345      00000000 
 34346 3777 0400     		.value	0x4
 34347 3779 91       		.byte	0x91
 34348 377a D0AF7F   		.sleb128 -10288
 34349 377d 00000000 		.quad	0
 34349      00000000 
 34350 3785 00000000 		.quad	0
 34350      00000000 
 34351              	.LLST236:
 34352 378d 00000000 		.quad	.LVL277
 34352      00000000 
 34353 3795 00000000 		.quad	.LVL279
 34353      00000000 
 34354 379d 0400     		.value	0x4
 34355 379f 91       		.byte	0x91
 34356 37a0 D0AF7F   		.sleb128 -10288
 34357 37a3 00000000 		.quad	0
 34357      00000000 
 34358 37ab 00000000 		.quad	0
 34358      00000000 
 34359              	.LLST237:
 34360 37b3 00000000 		.quad	.LVL280
 34360      00000000 
 34361 37bb 00000000 		.quad	.LVL282
 34361      00000000 
 34362 37c3 0600     		.value	0x6
 34363 37c5 F2       		.byte	0xf2
 34364 37c6 00000000 		.long	.Ldebug_info0+53840
 34365 37ca 00       		.sleb128 0
 34366 37cb 00000000 		.quad	0
 34366      00000000 
 34367 37d3 00000000 		.quad	0
 34367      00000000 
 34368              	.LLST239:
 34369 37db 00000000 		.quad	.LVL280
 34369      00000000 
 34370 37e3 00000000 		.quad	.LVL282
 34370      00000000 
 34371 37eb 0400     		.value	0x4
 34372 37ed 91       		.byte	0x91
 34373 37ee A8AF7F   		.sleb128 -10328
 34374 37f1 00000000 		.quad	0
 34374      00000000 
 34375 37f9 00000000 		.quad	0
 34375      00000000 
 34376              	.LLST242:
 34377 3801 00000000 		.quad	.LVL288
 34377      00000000 
 34378 3809 00000000 		.quad	.LVL291
 34378      00000000 
 34379 3811 0400     		.value	0x4
 34380 3813 91       		.byte	0x91
 34381 3814 B058     		.sleb128 -5072
 34382 3816 9F       		.byte	0x9f
 34383 3817 00000000 		.quad	0
 34383      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 893


 34384 381f 00000000 		.quad	0
 34384      00000000 
 34385              	.LLST244:
 34386 3827 00000000 		.quad	.LVL289
 34386      00000000 
 34387 382f 00000000 		.quad	.LVL291
 34387      00000000 
 34388 3837 0400     		.value	0x4
 34389 3839 91       		.byte	0x91
 34390 383a B0AF7F   		.sleb128 -10320
 34391 383d 00000000 		.quad	0
 34391      00000000 
 34392 3845 00000000 		.quad	0
 34392      00000000 
 34393              	.LLST245:
 34394 384d 00000000 		.quad	.LVL289
 34394      00000000 
 34395 3855 00000000 		.quad	.LVL290-1
 34395      00000000 
 34396 385d 0100     		.value	0x1
 34397 385f 55       		.byte	0x55
 34398 3860 00000000 		.quad	0
 34398      00000000 
 34399 3868 00000000 		.quad	0
 34399      00000000 
 34400              	.LLST246:
 34401 3870 00000000 		.quad	.LVL208
 34401      00000000 
 34402 3878 00000000 		.quad	.LVL209-1
 34402      00000000 
 34403 3880 0200     		.value	0x2
 34404 3882 73       		.byte	0x73
 34405 3883 00       		.sleb128 0
 34406 3884 00000000 		.quad	0
 34406      00000000 
 34407 388c 00000000 		.quad	0
 34407      00000000 
 34408              	.LLST247:
 34409 3894 00000000 		.quad	.LVL206
 34409      00000000 
 34410 389c 00000000 		.quad	.LVL211
 34410      00000000 
 34411 38a4 0400     		.value	0x4
 34412 38a6 91       		.byte	0x91
 34413 38a7 80AF7F   		.sleb128 -10368
 34414 38aa 00000000 		.quad	0
 34414      00000000 
 34415 38b2 00000000 		.quad	0
 34415      00000000 
 34416              	.LLST248:
 34417 38ba 00000000 		.quad	.LVL206
 34417      00000000 
 34418 38c2 00000000 		.quad	.LVL208
 34418      00000000 
 34419 38ca 0400     		.value	0x4
 34420 38cc 91       		.byte	0x91
 34421 38cd 80AF7F   		.sleb128 -10368
GAS LISTING /tmp/ccKUqHDa.s 			page 894


 34422 38d0 00000000 		.quad	.LVL208
 34422      00000000 
 34423 38d8 00000000 		.quad	.LVL209
 34423      00000000 
 34424 38e0 0100     		.value	0x1
 34425 38e2 53       		.byte	0x53
 34426 38e3 00000000 		.quad	.LVL209
 34426      00000000 
 34427 38eb 00000000 		.quad	.LVL210
 34427      00000000 
 34428 38f3 0300     		.value	0x3
 34429 38f5 73       		.byte	0x73
 34430 38f6 08       		.sleb128 8
 34431 38f7 9F       		.byte	0x9f
 34432 38f8 00000000 		.quad	.LVL210
 34432      00000000 
 34433 3900 00000000 		.quad	.LVL211
 34433      00000000 
 34434 3908 0100     		.value	0x1
 34435 390a 53       		.byte	0x53
 34436 390b 00000000 		.quad	0
 34436      00000000 
 34437 3913 00000000 		.quad	0
 34437      00000000 
 34438              	.LLST249:
 34439 391b 00000000 		.quad	.LVL206
 34439      00000000 
 34440 3923 00000000 		.quad	.LVL211
 34440      00000000 
 34441 392b 0500     		.value	0x5
 34442 392d 91       		.byte	0x91
 34443 392e E8B07F   		.sleb128 -10136
 34444 3931 9F       		.byte	0x9f
 34445 3932 00000000 		.quad	0
 34445      00000000 
 34446 393a 00000000 		.quad	0
 34446      00000000 
 34447              	.LLST250:
 34448 3942 00000000 		.quad	.LVL211
 34448      00000000 
 34449 394a 00000000 		.quad	.LVL214
 34449      00000000 
 34450 3952 0600     		.value	0x6
 34451 3954 F2       		.byte	0xf2
 34452 3955 00000000 		.long	.Ldebug_info0+50430
 34453 3959 00       		.sleb128 0
 34454 395a 00000000 		.quad	0
 34454      00000000 
 34455 3962 00000000 		.quad	0
 34455      00000000 
 34456              	.LLST252:
 34457 396a 00000000 		.quad	.LVL211
 34457      00000000 
 34458 3972 00000000 		.quad	.LVL214
 34458      00000000 
 34459 397a 0400     		.value	0x4
 34460 397c 91       		.byte	0x91
GAS LISTING /tmp/ccKUqHDa.s 			page 895


 34461 397d B8AF7F   		.sleb128 -10312
 34462 3980 00000000 		.quad	0
 34462      00000000 
 34463 3988 00000000 		.quad	0
 34463      00000000 
 34464              	.LLST253:
 34465 3990 00000000 		.quad	.LVL212
 34465      00000000 
 34466 3998 00000000 		.quad	.LVL214
 34466      00000000 
 34467 39a0 0400     		.value	0x4
 34468 39a2 91       		.byte	0x91
 34469 39a3 B8AF7F   		.sleb128 -10312
 34470 39a6 00000000 		.quad	0
 34470      00000000 
 34471 39ae 00000000 		.quad	0
 34471      00000000 
 34472              	.LLST255:
 34473 39b6 00000000 		.quad	.LVL267
 34473      00000000 
 34474 39be 00000000 		.quad	.LVL270
 34474      00000000 
 34475 39c6 0600     		.value	0x6
 34476 39c8 F2       		.byte	0xf2
 34477 39c9 00000000 		.long	.Ldebug_info0+50430
 34478 39cd 00       		.sleb128 0
 34479 39ce 00000000 		.quad	0
 34479      00000000 
 34480 39d6 00000000 		.quad	0
 34480      00000000 
 34481              	.LLST257:
 34482 39de 00000000 		.quad	.LVL267
 34482      00000000 
 34483 39e6 00000000 		.quad	.LVL270
 34483      00000000 
 34484 39ee 0400     		.value	0x4
 34485 39f0 91       		.byte	0x91
 34486 39f1 B8AF7F   		.sleb128 -10312
 34487 39f4 00000000 		.quad	0
 34487      00000000 
 34488 39fc 00000000 		.quad	0
 34488      00000000 
 34489              	.LLST258:
 34490 3a04 00000000 		.quad	.LVL268
 34490      00000000 
 34491 3a0c 00000000 		.quad	.LVL269
 34491      00000000 
 34492 3a14 0400     		.value	0x4
 34493 3a16 91       		.byte	0x91
 34494 3a17 B8AF7F   		.sleb128 -10312
 34495 3a1a 00000000 		.quad	0
 34495      00000000 
 34496 3a22 00000000 		.quad	0
 34496      00000000 
 34497              		.section	.debug_aranges,"",@progbits
 34498 0000 6C000000 		.long	0x6c
 34499 0004 0200     		.value	0x2
GAS LISTING /tmp/ccKUqHDa.s 			page 896


 34500 0006 00000000 		.long	.Ldebug_info0
 34501 000a 08       		.byte	0x8
 34502 000b 00       		.byte	0
 34503 000c 0000     		.value	0
 34504 000e 0000     		.value	0
 34505 0010 00000000 		.quad	.Ltext0
 34505      00000000 
 34506 0018 C2000000 		.quad	.Letext0-.Ltext0
 34506      00000000 
 34507 0020 00000000 		.quad	.LFB5607
 34507      00000000 
 34508 0028 5D000000 		.quad	.LFE5607-.LFB5607
 34508      00000000 
 34509 0030 00000000 		.quad	.LFB5868
 34509      00000000 
 34510 0038 8D010000 		.quad	.LFE5868-.LFB5868
 34510      00000000 
 34511 0040 00000000 		.quad	.LFB5505
 34511      00000000 
 34512 0048 360B0000 		.quad	.LFE5505-.LFB5505
 34512      00000000 
 34513 0050 00000000 		.quad	.LFB5938
 34513      00000000 
 34514 0058 2E000000 		.quad	.LFE5938-.LFB5938
 34514      00000000 
 34515 0060 00000000 		.quad	0
 34515      00000000 
 34516 0068 00000000 		.quad	0
 34516      00000000 
 34517              		.section	.debug_ranges,"",@progbits
 34518              	.Ldebug_ranges0:
 34519 0000 00000000 		.quad	.LBB1822
 34519      00000000 
 34520 0008 00000000 		.quad	.LBE1822
 34520      00000000 
 34521 0010 00000000 		.quad	.LBB1825
 34521      00000000 
 34522 0018 00000000 		.quad	.LBE1825
 34522      00000000 
 34523 0020 00000000 		.quad	0
 34523      00000000 
 34524 0028 00000000 		.quad	0
 34524      00000000 
 34525 0030 00000000 		.quad	.LBB1826
 34525      00000000 
 34526 0038 00000000 		.quad	.LBE1826
 34526      00000000 
 34527 0040 00000000 		.quad	.LBB1829
 34527      00000000 
 34528 0048 00000000 		.quad	.LBE1829
 34528      00000000 
 34529 0050 00000000 		.quad	0
 34529      00000000 
 34530 0058 00000000 		.quad	0
 34530      00000000 
 34531 0060 00000000 		.quad	.LBB1830
 34531      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 897


 34532 0068 00000000 		.quad	.LBE1830
 34532      00000000 
 34533 0070 00000000 		.quad	.LBB1840
 34533      00000000 
 34534 0078 00000000 		.quad	.LBE1840
 34534      00000000 
 34535 0080 00000000 		.quad	.LBB1841
 34535      00000000 
 34536 0088 00000000 		.quad	.LBE1841
 34536      00000000 
 34537 0090 00000000 		.quad	0
 34537      00000000 
 34538 0098 00000000 		.quad	0
 34538      00000000 
 34539 00a0 00000000 		.quad	.LBB1834
 34539      00000000 
 34540 00a8 00000000 		.quad	.LBE1834
 34540      00000000 
 34541 00b0 00000000 		.quad	.LBB1837
 34541      00000000 
 34542 00b8 00000000 		.quad	.LBE1837
 34542      00000000 
 34543 00c0 00000000 		.quad	0
 34543      00000000 
 34544 00c8 00000000 		.quad	0
 34544      00000000 
 34545 00d0 00000000 		.quad	.LBB1835
 34545      00000000 
 34546 00d8 00000000 		.quad	.LBE1835
 34546      00000000 
 34547 00e0 00000000 		.quad	.LBB1836
 34547      00000000 
 34548 00e8 00000000 		.quad	.LBE1836
 34548      00000000 
 34549 00f0 00000000 		.quad	0
 34549      00000000 
 34550 00f8 00000000 		.quad	0
 34550      00000000 
 34551 0100 00000000 		.quad	.LBB1842
 34551      00000000 
 34552 0108 00000000 		.quad	.LBE1842
 34552      00000000 
 34553 0110 00000000 		.quad	.LBB1875
 34553      00000000 
 34554 0118 00000000 		.quad	.LBE1875
 34554      00000000 
 34555 0120 00000000 		.quad	0
 34555      00000000 
 34556 0128 00000000 		.quad	0
 34556      00000000 
 34557 0130 00000000 		.quad	.LBB1845
 34557      00000000 
 34558 0138 00000000 		.quad	.LBE1845
 34558      00000000 
 34559 0140 00000000 		.quad	.LBB1853
 34559      00000000 
 34560 0148 00000000 		.quad	.LBE1853
GAS LISTING /tmp/ccKUqHDa.s 			page 898


 34560      00000000 
 34561 0150 00000000 		.quad	0
 34561      00000000 
 34562 0158 00000000 		.quad	0
 34562      00000000 
 34563 0160 00000000 		.quad	.LBB1854
 34563      00000000 
 34564 0168 00000000 		.quad	.LBE1854
 34564      00000000 
 34565 0170 00000000 		.quad	.LBB1876
 34565      00000000 
 34566 0178 00000000 		.quad	.LBE1876
 34566      00000000 
 34567 0180 00000000 		.quad	0
 34567      00000000 
 34568 0188 00000000 		.quad	0
 34568      00000000 
 34569 0190 00000000 		.quad	.LBB1856
 34569      00000000 
 34570 0198 00000000 		.quad	.LBE1856
 34570      00000000 
 34571 01a0 00000000 		.quad	.LBB1873
 34571      00000000 
 34572 01a8 00000000 		.quad	.LBE1873
 34572      00000000 
 34573 01b0 00000000 		.quad	0
 34573      00000000 
 34574 01b8 00000000 		.quad	0
 34574      00000000 
 34575 01c0 00000000 		.quad	.LBB1877
 34575      00000000 
 34576 01c8 00000000 		.quad	.LBE1877
 34576      00000000 
 34577 01d0 00000000 		.quad	.LBB1888
 34577      00000000 
 34578 01d8 00000000 		.quad	.LBE1888
 34578      00000000 
 34579 01e0 00000000 		.quad	0
 34579      00000000 
 34580 01e8 00000000 		.quad	0
 34580      00000000 
 34581 01f0 00000000 		.quad	.LBB1878
 34581      00000000 
 34582 01f8 00000000 		.quad	.LBE1878
 34582      00000000 
 34583 0200 00000000 		.quad	.LBB1887
 34583      00000000 
 34584 0208 00000000 		.quad	.LBE1887
 34584      00000000 
 34585 0210 00000000 		.quad	0
 34585      00000000 
 34586 0218 00000000 		.quad	0
 34586      00000000 
 34587 0220 00000000 		.quad	.LBB1889
 34587      00000000 
 34588 0228 00000000 		.quad	.LBE1889
 34588      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 899


 34589 0230 00000000 		.quad	.LBB2293
 34589      00000000 
 34590 0238 00000000 		.quad	.LBE2293
 34590      00000000 
 34591 0240 00000000 		.quad	0
 34591      00000000 
 34592 0248 00000000 		.quad	0
 34592      00000000 
 34593 0250 00000000 		.quad	.LBB1904
 34593      00000000 
 34594 0258 00000000 		.quad	.LBE1904
 34594      00000000 
 34595 0260 00000000 		.quad	.LBB1931
 34595      00000000 
 34596 0268 00000000 		.quad	.LBE1931
 34596      00000000 
 34597 0270 00000000 		.quad	.LBB1943
 34597      00000000 
 34598 0278 00000000 		.quad	.LBE1943
 34598      00000000 
 34599 0280 00000000 		.quad	.LBB2276
 34599      00000000 
 34600 0288 00000000 		.quad	.LBE2276
 34600      00000000 
 34601 0290 00000000 		.quad	.LBB2282
 34601      00000000 
 34602 0298 00000000 		.quad	.LBE2282
 34602      00000000 
 34603 02a0 00000000 		.quad	0
 34603      00000000 
 34604 02a8 00000000 		.quad	0
 34604      00000000 
 34605 02b0 00000000 		.quad	.LBB1932
 34605      00000000 
 34606 02b8 00000000 		.quad	.LBE1932
 34606      00000000 
 34607 02c0 00000000 		.quad	.LBB1944
 34607      00000000 
 34608 02c8 00000000 		.quad	.LBE1944
 34608      00000000 
 34609 02d0 00000000 		.quad	0
 34609      00000000 
 34610 02d8 00000000 		.quad	0
 34610      00000000 
 34611 02e0 00000000 		.quad	.LBB1933
 34611      00000000 
 34612 02e8 00000000 		.quad	.LBE1933
 34612      00000000 
 34613 02f0 00000000 		.quad	.LBB1942
 34613      00000000 
 34614 02f8 00000000 		.quad	.LBE1942
 34614      00000000 
 34615 0300 00000000 		.quad	0
 34615      00000000 
 34616 0308 00000000 		.quad	0
 34616      00000000 
 34617 0310 00000000 		.quad	.LBB1934
GAS LISTING /tmp/ccKUqHDa.s 			page 900


 34617      00000000 
 34618 0318 00000000 		.quad	.LBE1934
 34618      00000000 
 34619 0320 00000000 		.quad	.LBB1938
 34619      00000000 
 34620 0328 00000000 		.quad	.LBE1938
 34620      00000000 
 34621 0330 00000000 		.quad	.LBB1941
 34621      00000000 
 34622 0338 00000000 		.quad	.LBE1941
 34622      00000000 
 34623 0340 00000000 		.quad	0
 34623      00000000 
 34624 0348 00000000 		.quad	0
 34624      00000000 
 34625 0350 00000000 		.quad	.LBB1945
 34625      00000000 
 34626 0358 00000000 		.quad	.LBE1945
 34626      00000000 
 34627 0360 00000000 		.quad	.LBB2278
 34627      00000000 
 34628 0368 00000000 		.quad	.LBE2278
 34628      00000000 
 34629 0370 00000000 		.quad	.LBB2280
 34629      00000000 
 34630 0378 00000000 		.quad	.LBE2280
 34630      00000000 
 34631 0380 00000000 		.quad	.LBB2283
 34631      00000000 
 34632 0388 00000000 		.quad	.LBE2283
 34632      00000000 
 34633 0390 00000000 		.quad	.LBB2291
 34633      00000000 
 34634 0398 00000000 		.quad	.LBE2291
 34634      00000000 
 34635 03a0 00000000 		.quad	0
 34635      00000000 
 34636 03a8 00000000 		.quad	0
 34636      00000000 
 34637 03b0 00000000 		.quad	.LBB1947
 34637      00000000 
 34638 03b8 00000000 		.quad	.LBE1947
 34638      00000000 
 34639 03c0 00000000 		.quad	.LBB1977
 34639      00000000 
 34640 03c8 00000000 		.quad	.LBE1977
 34640      00000000 
 34641 03d0 00000000 		.quad	.LBB1987
 34641      00000000 
 34642 03d8 00000000 		.quad	.LBE1987
 34642      00000000 
 34643 03e0 00000000 		.quad	.LBB1997
 34643      00000000 
 34644 03e8 00000000 		.quad	.LBE1997
 34644      00000000 
 34645 03f0 00000000 		.quad	0
 34645      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 901


 34646 03f8 00000000 		.quad	0
 34646      00000000 
 34647 0400 00000000 		.quad	.LBB1948
 34647      00000000 
 34648 0408 00000000 		.quad	.LBE1948
 34648      00000000 
 34649 0410 00000000 		.quad	.LBB1961
 34649      00000000 
 34650 0418 00000000 		.quad	.LBE1961
 34650      00000000 
 34651 0420 00000000 		.quad	0
 34651      00000000 
 34652 0428 00000000 		.quad	0
 34652      00000000 
 34653 0430 00000000 		.quad	.LBB1952
 34653      00000000 
 34654 0438 00000000 		.quad	.LBE1952
 34654      00000000 
 34655 0440 00000000 		.quad	.LBB1955
 34655      00000000 
 34656 0448 00000000 		.quad	.LBE1955
 34656      00000000 
 34657 0450 00000000 		.quad	0
 34657      00000000 
 34658 0458 00000000 		.quad	0
 34658      00000000 
 34659 0460 00000000 		.quad	.LBB1998
 34659      00000000 
 34660 0468 00000000 		.quad	.LBE1998
 34660      00000000 
 34661 0470 00000000 		.quad	.LBB2275
 34661      00000000 
 34662 0478 00000000 		.quad	.LBE2275
 34662      00000000 
 34663 0480 00000000 		.quad	.LBB2277
 34663      00000000 
 34664 0488 00000000 		.quad	.LBE2277
 34664      00000000 
 34665 0490 00000000 		.quad	.LBB2279
 34665      00000000 
 34666 0498 00000000 		.quad	.LBE2279
 34666      00000000 
 34667 04a0 00000000 		.quad	.LBB2281
 34667      00000000 
 34668 04a8 00000000 		.quad	.LBE2281
 34668      00000000 
 34669 04b0 00000000 		.quad	.LBB2292
 34669      00000000 
 34670 04b8 00000000 		.quad	.LBE2292
 34670      00000000 
 34671 04c0 00000000 		.quad	0
 34671      00000000 
 34672 04c8 00000000 		.quad	0
 34672      00000000 
 34673 04d0 00000000 		.quad	.LBB2002
 34673      00000000 
 34674 04d8 00000000 		.quad	.LBE2002
GAS LISTING /tmp/ccKUqHDa.s 			page 902


 34674      00000000 
 34675 04e0 00000000 		.quad	.LBB2238
 34675      00000000 
 34676 04e8 00000000 		.quad	.LBE2238
 34676      00000000 
 34677 04f0 00000000 		.quad	0
 34677      00000000 
 34678 04f8 00000000 		.quad	0
 34678      00000000 
 34679 0500 00000000 		.quad	.LBB2006
 34679      00000000 
 34680 0508 00000000 		.quad	.LBE2006
 34680      00000000 
 34681 0510 00000000 		.quad	.LBB2009
 34681      00000000 
 34682 0518 00000000 		.quad	.LBE2009
 34682      00000000 
 34683 0520 00000000 		.quad	0
 34683      00000000 
 34684 0528 00000000 		.quad	0
 34684      00000000 
 34685 0530 00000000 		.quad	.LBB2013
 34685      00000000 
 34686 0538 00000000 		.quad	.LBE2013
 34686      00000000 
 34687 0540 00000000 		.quad	.LBB2043
 34687      00000000 
 34688 0548 00000000 		.quad	.LBE2043
 34688      00000000 
 34689 0550 00000000 		.quad	0
 34689      00000000 
 34690 0558 00000000 		.quad	0
 34690      00000000 
 34691 0560 00000000 		.quad	.LBB2016
 34691      00000000 
 34692 0568 00000000 		.quad	.LBE2016
 34692      00000000 
 34693 0570 00000000 		.quad	.LBB2039
 34693      00000000 
 34694 0578 00000000 		.quad	.LBE2039
 34694      00000000 
 34695 0580 00000000 		.quad	0
 34695      00000000 
 34696 0588 00000000 		.quad	0
 34696      00000000 
 34697 0590 00000000 		.quad	.LBB2021
 34697      00000000 
 34698 0598 00000000 		.quad	.LBE2021
 34698      00000000 
 34699 05a0 00000000 		.quad	.LBB2040
 34699      00000000 
 34700 05a8 00000000 		.quad	.LBE2040
 34700      00000000 
 34701 05b0 00000000 		.quad	0
 34701      00000000 
 34702 05b8 00000000 		.quad	0
 34702      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 903


 34703 05c0 00000000 		.quad	.LBB2022
 34703      00000000 
 34704 05c8 00000000 		.quad	.LBE2022
 34704      00000000 
 34705 05d0 00000000 		.quad	.LBB2038
 34705      00000000 
 34706 05d8 00000000 		.quad	.LBE2038
 34706      00000000 
 34707 05e0 00000000 		.quad	0
 34707      00000000 
 34708 05e8 00000000 		.quad	0
 34708      00000000 
 34709 05f0 00000000 		.quad	.LBB2023
 34709      00000000 
 34710 05f8 00000000 		.quad	.LBE2023
 34710      00000000 
 34711 0600 00000000 		.quad	.LBB2032
 34711      00000000 
 34712 0608 00000000 		.quad	.LBE2032
 34712      00000000 
 34713 0610 00000000 		.quad	.LBB2033
 34713      00000000 
 34714 0618 00000000 		.quad	.LBE2033
 34714      00000000 
 34715 0620 00000000 		.quad	.LBB2034
 34715      00000000 
 34716 0628 00000000 		.quad	.LBE2034
 34716      00000000 
 34717 0630 00000000 		.quad	0
 34717      00000000 
 34718 0638 00000000 		.quad	0
 34718      00000000 
 34719 0640 00000000 		.quad	.LBB2044
 34719      00000000 
 34720 0648 00000000 		.quad	.LBE2044
 34720      00000000 
 34721 0650 00000000 		.quad	.LBB2069
 34721      00000000 
 34722 0658 00000000 		.quad	.LBE2069
 34722      00000000 
 34723 0660 00000000 		.quad	0
 34723      00000000 
 34724 0668 00000000 		.quad	0
 34724      00000000 
 34725 0670 00000000 		.quad	.LBB2045
 34725      00000000 
 34726 0678 00000000 		.quad	.LBE2045
 34726      00000000 
 34727 0680 00000000 		.quad	.LBB2058
 34727      00000000 
 34728 0688 00000000 		.quad	.LBE2058
 34728      00000000 
 34729 0690 00000000 		.quad	0
 34729      00000000 
 34730 0698 00000000 		.quad	0
 34730      00000000 
 34731 06a0 00000000 		.quad	.LBB2070
GAS LISTING /tmp/ccKUqHDa.s 			page 904


 34731      00000000 
 34732 06a8 00000000 		.quad	.LBE2070
 34732      00000000 
 34733 06b0 00000000 		.quad	.LBB2235
 34733      00000000 
 34734 06b8 00000000 		.quad	.LBE2235
 34734      00000000 
 34735 06c0 00000000 		.quad	.LBB2249
 34735      00000000 
 34736 06c8 00000000 		.quad	.LBE2249
 34736      00000000 
 34737 06d0 00000000 		.quad	0
 34737      00000000 
 34738 06d8 00000000 		.quad	0
 34738      00000000 
 34739 06e0 00000000 		.quad	.LBB2072
 34739      00000000 
 34740 06e8 00000000 		.quad	.LBE2072
 34740      00000000 
 34741 06f0 00000000 		.quad	.LBB2146
 34741      00000000 
 34742 06f8 00000000 		.quad	.LBE2146
 34742      00000000 
 34743 0700 00000000 		.quad	.LBB2148
 34743      00000000 
 34744 0708 00000000 		.quad	.LBE2148
 34744      00000000 
 34745 0710 00000000 		.quad	.LBB2149
 34745      00000000 
 34746 0718 00000000 		.quad	.LBE2149
 34746      00000000 
 34747 0720 00000000 		.quad	0
 34747      00000000 
 34748 0728 00000000 		.quad	0
 34748      00000000 
 34749 0730 00000000 		.quad	.LBB2074
 34749      00000000 
 34750 0738 00000000 		.quad	.LBE2074
 34750      00000000 
 34751 0740 00000000 		.quad	.LBB2133
 34751      00000000 
 34752 0748 00000000 		.quad	.LBE2133
 34752      00000000 
 34753 0750 00000000 		.quad	.LBB2137
 34753      00000000 
 34754 0758 00000000 		.quad	.LBE2137
 34754      00000000 
 34755 0760 00000000 		.quad	.LBB2138
 34755      00000000 
 34756 0768 00000000 		.quad	.LBE2138
 34756      00000000 
 34757 0770 00000000 		.quad	0
 34757      00000000 
 34758 0778 00000000 		.quad	0
 34758      00000000 
 34759 0780 00000000 		.quad	.LBB2078
 34759      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 905


 34760 0788 00000000 		.quad	.LBE2078
 34760      00000000 
 34761 0790 00000000 		.quad	.LBB2093
 34761      00000000 
 34762 0798 00000000 		.quad	.LBE2093
 34762      00000000 
 34763 07a0 00000000 		.quad	0
 34763      00000000 
 34764 07a8 00000000 		.quad	0
 34764      00000000 
 34765 07b0 00000000 		.quad	.LBB2081
 34765      00000000 
 34766 07b8 00000000 		.quad	.LBE2081
 34766      00000000 
 34767 07c0 00000000 		.quad	.LBB2084
 34767      00000000 
 34768 07c8 00000000 		.quad	.LBE2084
 34768      00000000 
 34769 07d0 00000000 		.quad	0
 34769      00000000 
 34770 07d8 00000000 		.quad	0
 34770      00000000 
 34771 07e0 00000000 		.quad	.LBB2087
 34771      00000000 
 34772 07e8 00000000 		.quad	.LBE2087
 34772      00000000 
 34773 07f0 00000000 		.quad	.LBB2091
 34773      00000000 
 34774 07f8 00000000 		.quad	.LBE2091
 34774      00000000 
 34775 0800 00000000 		.quad	.LBB2092
 34775      00000000 
 34776 0808 00000000 		.quad	.LBE2092
 34776      00000000 
 34777 0810 00000000 		.quad	0
 34777      00000000 
 34778 0818 00000000 		.quad	0
 34778      00000000 
 34779 0820 00000000 		.quad	.LBB2102
 34779      00000000 
 34780 0828 00000000 		.quad	.LBE2102
 34780      00000000 
 34781 0830 00000000 		.quad	.LBB2134
 34781      00000000 
 34782 0838 00000000 		.quad	.LBE2134
 34782      00000000 
 34783 0840 00000000 		.quad	.LBB2135
 34783      00000000 
 34784 0848 00000000 		.quad	.LBE2135
 34784      00000000 
 34785 0850 00000000 		.quad	.LBB2136
 34785      00000000 
 34786 0858 00000000 		.quad	.LBE2136
 34786      00000000 
 34787 0860 00000000 		.quad	.LBB2139
 34787      00000000 
 34788 0868 00000000 		.quad	.LBE2139
GAS LISTING /tmp/ccKUqHDa.s 			page 906


 34788      00000000 
 34789 0870 00000000 		.quad	0
 34789      00000000 
 34790 0878 00000000 		.quad	0
 34790      00000000 
 34791 0880 00000000 		.quad	.LBB2106
 34791      00000000 
 34792 0888 00000000 		.quad	.LBE2106
 34792      00000000 
 34793 0890 00000000 		.quad	.LBB2121
 34793      00000000 
 34794 0898 00000000 		.quad	.LBE2121
 34794      00000000 
 34795 08a0 00000000 		.quad	0
 34795      00000000 
 34796 08a8 00000000 		.quad	0
 34796      00000000 
 34797 08b0 00000000 		.quad	.LBB2109
 34797      00000000 
 34798 08b8 00000000 		.quad	.LBE2109
 34798      00000000 
 34799 08c0 00000000 		.quad	.LBB2112
 34799      00000000 
 34800 08c8 00000000 		.quad	.LBE2112
 34800      00000000 
 34801 08d0 00000000 		.quad	0
 34801      00000000 
 34802 08d8 00000000 		.quad	0
 34802      00000000 
 34803 08e0 00000000 		.quad	.LBB2115
 34803      00000000 
 34804 08e8 00000000 		.quad	.LBE2115
 34804      00000000 
 34805 08f0 00000000 		.quad	.LBB2119
 34805      00000000 
 34806 08f8 00000000 		.quad	.LBE2119
 34806      00000000 
 34807 0900 00000000 		.quad	.LBB2120
 34807      00000000 
 34808 0908 00000000 		.quad	.LBE2120
 34808      00000000 
 34809 0910 00000000 		.quad	0
 34809      00000000 
 34810 0918 00000000 		.quad	0
 34810      00000000 
 34811 0920 00000000 		.quad	.LBB2143
 34811      00000000 
 34812 0928 00000000 		.quad	.LBE2143
 34812      00000000 
 34813 0930 00000000 		.quad	.LBB2147
 34813      00000000 
 34814 0938 00000000 		.quad	.LBE2147
 34814      00000000 
 34815 0940 00000000 		.quad	0
 34815      00000000 
 34816 0948 00000000 		.quad	0
 34816      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 907


 34817 0950 00000000 		.quad	.LBB2152
 34817      00000000 
 34818 0958 00000000 		.quad	.LBE2152
 34818      00000000 
 34819 0960 00000000 		.quad	.LBB2224
 34819      00000000 
 34820 0968 00000000 		.quad	.LBE2224
 34820      00000000 
 34821 0970 00000000 		.quad	.LBB2225
 34821      00000000 
 34822 0978 00000000 		.quad	.LBE2225
 34822      00000000 
 34823 0980 00000000 		.quad	.LBB2236
 34823      00000000 
 34824 0988 00000000 		.quad	.LBE2236
 34824      00000000 
 34825 0990 00000000 		.quad	.LBB2237
 34825      00000000 
 34826 0998 00000000 		.quad	.LBE2237
 34826      00000000 
 34827 09a0 00000000 		.quad	.LBB2239
 34827      00000000 
 34828 09a8 00000000 		.quad	.LBE2239
 34828      00000000 
 34829 09b0 00000000 		.quad	.LBB2259
 34829      00000000 
 34830 09b8 00000000 		.quad	.LBE2259
 34830      00000000 
 34831 09c0 00000000 		.quad	.LBB2266
 34831      00000000 
 34832 09c8 00000000 		.quad	.LBE2266
 34832      00000000 
 34833 09d0 00000000 		.quad	0
 34833      00000000 
 34834 09d8 00000000 		.quad	0
 34834      00000000 
 34835 09e0 00000000 		.quad	.LBB2153
 34835      00000000 
 34836 09e8 00000000 		.quad	.LBE2153
 34836      00000000 
 34837 09f0 00000000 		.quad	.LBB2216
 34837      00000000 
 34838 09f8 00000000 		.quad	.LBE2216
 34838      00000000 
 34839 0a00 00000000 		.quad	.LBB2217
 34839      00000000 
 34840 0a08 00000000 		.quad	.LBE2217
 34840      00000000 
 34841 0a10 00000000 		.quad	.LBB2218
 34841      00000000 
 34842 0a18 00000000 		.quad	.LBE2218
 34842      00000000 
 34843 0a20 00000000 		.quad	.LBB2219
 34843      00000000 
 34844 0a28 00000000 		.quad	.LBE2219
 34844      00000000 
 34845 0a30 00000000 		.quad	.LBB2220
GAS LISTING /tmp/ccKUqHDa.s 			page 908


 34845      00000000 
 34846 0a38 00000000 		.quad	.LBE2220
 34846      00000000 
 34847 0a40 00000000 		.quad	.LBB2221
 34847      00000000 
 34848 0a48 00000000 		.quad	.LBE2221
 34848      00000000 
 34849 0a50 00000000 		.quad	.LBB2222
 34849      00000000 
 34850 0a58 00000000 		.quad	.LBE2222
 34850      00000000 
 34851 0a60 00000000 		.quad	.LBB2223
 34851      00000000 
 34852 0a68 00000000 		.quad	.LBE2223
 34852      00000000 
 34853 0a70 00000000 		.quad	0
 34853      00000000 
 34854 0a78 00000000 		.quad	0
 34854      00000000 
 34855 0a80 00000000 		.quad	.LBB2154
 34855      00000000 
 34856 0a88 00000000 		.quad	.LBE2154
 34856      00000000 
 34857 0a90 00000000 		.quad	.LBB2180
 34857      00000000 
 34858 0a98 00000000 		.quad	.LBE2180
 34858      00000000 
 34859 0aa0 00000000 		.quad	.LBB2194
 34859      00000000 
 34860 0aa8 00000000 		.quad	.LBE2194
 34860      00000000 
 34861 0ab0 00000000 		.quad	.LBB2195
 34861      00000000 
 34862 0ab8 00000000 		.quad	.LBE2195
 34862      00000000 
 34863 0ac0 00000000 		.quad	.LBB2196
 34863      00000000 
 34864 0ac8 00000000 		.quad	.LBE2196
 34864      00000000 
 34865 0ad0 00000000 		.quad	.LBB2215
 34865      00000000 
 34866 0ad8 00000000 		.quad	.LBE2215
 34866      00000000 
 34867 0ae0 00000000 		.quad	0
 34867      00000000 
 34868 0ae8 00000000 		.quad	0
 34868      00000000 
 34869 0af0 00000000 		.quad	.LBB2155
 34869      00000000 
 34870 0af8 00000000 		.quad	.LBE2155
 34870      00000000 
 34871 0b00 00000000 		.quad	.LBB2167
 34871      00000000 
 34872 0b08 00000000 		.quad	.LBE2167
 34872      00000000 
 34873 0b10 00000000 		.quad	.LBB2168
 34873      00000000 
GAS LISTING /tmp/ccKUqHDa.s 			page 909


 34874 0b18 00000000 		.quad	.LBE2168
 34874      00000000 
 34875 0b20 00000000 		.quad	0
 34875      00000000 
 34876 0b28 00000000 		.quad	0
 34876      00000000 
 34877 0b30 00000000 		.quad	.LBB2157
 34877      00000000 
 34878 0b38 00000000 		.quad	.LBE2157
 34878      00000000 
 34879 0b40 00000000 		.quad	.LBB2163
 34879      00000000 
 34880 0b48 00000000 		.quad	.LBE2163
 34880      00000000 
 34881 0b50 00000000 		.quad	.LBB2164
 34881      00000000 
 34882 0b58 00000000 		.quad	.LBE2164
 34882      00000000 
 34883 0b60 00000000 		.quad	0
 34883      00000000 
 34884 0b68 00000000 		.quad	0
 34884      00000000 
 34885 0b70 00000000 		.quad	.LBB2181
 34885      00000000 
 34886 0b78 00000000 		.quad	.LBE2181
 34886      00000000 
 34887 0b80 00000000 		.quad	.LBB2193
 34887      00000000 
 34888 0b88 00000000 		.quad	.LBE2193
 34888      00000000 
 34889 0b90 00000000 		.quad	0
 34889      00000000 
 34890 0b98 00000000 		.quad	0
 34890      00000000 
 34891 0ba0 00000000 		.quad	.LBB2183
 34891      00000000 
 34892 0ba8 00000000 		.quad	.LBE2183
 34892      00000000 
 34893 0bb0 00000000 		.quad	.LBB2191
 34893      00000000 
 34894 0bb8 00000000 		.quad	.LBE2191
 34894      00000000 
 34895 0bc0 00000000 		.quad	0
 34895      00000000 
 34896 0bc8 00000000 		.quad	0
 34896      00000000 
 34897 0bd0 00000000 		.quad	.LBB2294
 34897      00000000 
 34898 0bd8 00000000 		.quad	.LBE2294
 34898      00000000 
 34899 0be0 00000000 		.quad	.LBB2298
 34899      00000000 
 34900 0be8 00000000 		.quad	.LBE2298
 34900      00000000 
 34901 0bf0 00000000 		.quad	.LBB2299
 34901      00000000 
 34902 0bf8 00000000 		.quad	.LBE2299
GAS LISTING /tmp/ccKUqHDa.s 			page 910


 34902      00000000 
 34903 0c00 00000000 		.quad	0
 34903      00000000 
 34904 0c08 00000000 		.quad	0
 34904      00000000 
 34905 0c10 00000000 		.quad	.Ltext0
 34905      00000000 
 34906 0c18 00000000 		.quad	.Letext0
 34906      00000000 
 34907 0c20 00000000 		.quad	.LFB5607
 34907      00000000 
 34908 0c28 00000000 		.quad	.LFE5607
 34908      00000000 
 34909 0c30 00000000 		.quad	.LFB5868
 34909      00000000 
 34910 0c38 00000000 		.quad	.LFE5868
 34910      00000000 
 34911 0c40 00000000 		.quad	.LFB5505
 34911      00000000 
 34912 0c48 00000000 		.quad	.LFE5505
 34912      00000000 
 34913 0c50 00000000 		.quad	.LFB5938
 34913      00000000 
 34914 0c58 00000000 		.quad	.LFE5938
 34914      00000000 
 34915 0c60 00000000 		.quad	0
 34915      00000000 
 34916 0c68 00000000 		.quad	0
 34916      00000000 
 34917              		.section	.debug_line,"",@progbits
 34918              	.Ldebug_line0:
 34919 0000 A60A0000 		.section	.debug_str,"MS",@progbits,1
 34919      02007605 
 34919      00000101 
 34919      FB0E0D00 
 34919      01010101 
 34920              	.LASF398:
 34921 0000 5F5F6D61 		.string	"__match_cv_qualifiers<long int, long unsigned int, false, false>"
 34921      7463685F 
 34921      63765F71 
 34921      75616C69 
 34921      66696572 
 34922              	.LASF335:
 34923 0041 5F4D6F64 		.string	"_Mod<long unsigned int, 4294967296ul, 1ul, 0ul, true, true>"
 34923      3C6C6F6E 
 34923      6720756E 
 34923      7369676E 
 34923      65642069 
 34924              	.LASF1040:
 34925 007d 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIfE7addressERKf"
 34925      395F5F67 
 34925      6E755F63 
 34925      78783133 
 34925      6E65775F 
 34926              	.LASF1322:
 34927 00aa 706F7369 		.string	"positive_sign"
 34927      74697665 
GAS LISTING /tmp/ccKUqHDa.s 			page 911


 34927      5F736967 
 34927      6E00
 34928              	.LASF750:
 34929 00b8 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE6cbeginEv"
 34929      53743561 
 34929      72726179 
 34929      49503968 
 34929      6561746D 
 34930              	.LASF1388:
 34931 00df 676D7469 		.string	"gmtime"
 34931      6D6500
 34932              	.LASF1150:
 34933 00e6 6D627374 		.string	"mbstowcs"
 34933      6F776373 
 34933      00
 34934              	.LASF141:
 34935 00ef 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcPKcS1_"
 34935      7331335F 
 34935      535F636F 
 34935      70795F63 
 34935      68617273 
 34936              	.LASF1488:
 34937 010d 706F696E 		.string	"point"
 34937      7400
 34938              	.LASF1399:
 34939 0113 63757374 		.string	"custom_zlib"
 34939      6F6D5F7A 
 34939      6C696200 
 34940              	.LASF1421:
 34941 011f 5F5F6D65 		.string	"__mem"
 34941      6D00
 34942              	.LASF1439:
 34943 0125 5F5F7572 		.string	"__urng"
 34943      6E6700
 34944              	.LASF501:
 34945 012c 5F507472 		.string	"_Ptr"
 34945      00
 34946              	.LASF694:
 34947 0131 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE14_M_range_checkEm"
 34947      53743676 
 34947      6563746F 
 34947      72496853 
 34947      61496845 
 34948              	.LASF1196:
 34949 0159 5F5F7061 		.string	"__pad1"
 34949      643100
 34950              	.LASF1197:
 34951 0160 5F5F7061 		.string	"__pad2"
 34951      643200
 34952              	.LASF1198:
 34953 0167 5F5F7061 		.string	"__pad3"
 34953      643300
 34954              	.LASF1199:
 34955 016e 5F5F7061 		.string	"__pad4"
 34955      643400
 34956              	.LASF653:
 34957 0175 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE8allocateERS0_mPKv"
GAS LISTING /tmp/ccKUqHDa.s 			page 912


 34957      74313661 
 34957      6C6C6F63 
 34957      61746F72 
 34957      5F747261 
 34958              	.LASF1160:
 34959 01a6 73747274 		.string	"strtoul"
 34959      6F756C00 
 34960              	.LASF872:
 34961 01ae 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EESt16init
 34961      74367665 
 34961      63746F72 
 34961      49537434 
 34961      70616972 
 34962              	.LASF88:
 34963 0219 5F5A4E4B 		.string	"_ZNKSs4_Rep12_M_is_leakedEv"
 34963      5373345F 
 34963      52657031 
 34963      325F4D5F 
 34963      69735F6C 
 34964              	.LASF556:
 34965 0235 5F5A4E53 		.string	"_ZNSt12_Vector_baseIfSaIfEE17_M_create_storageEm"
 34965      7431325F 
 34965      56656374 
 34965      6F725F62 
 34965      61736549 
 34966              	.LASF210:
 34967 0266 5F5A4E53 		.string	"_ZNSs6appendERKSsmm"
 34967      73366170 
 34967      70656E64 
 34967      45524B53 
 34967      736D6D00 
 34968              	.LASF1:
 34969 027a 6C6F6E67 		.string	"long unsigned int"
 34969      20756E73 
 34969      69676E65 
 34969      6420696E 
 34969      7400
 34970              	.LASF928:
 34971 028c 5F5F6164 		.string	"__addressof<std::pair<float, float> >"
 34971      64726573 
 34971      736F663C 
 34971      7374643A 
 34971      3A706169 
 34972              	.LASF325:
 34973 02b2 5F5F6465 		.string	"__detail"
 34973      7461696C 
 34973      00
 34974              	.LASF350:
 34975 02bb 786F725F 		.string	"xor_mask"
 34975      6D61736B 
 34975      00
 34976              	.LASF194:
 34977 02c4 5F5A4E53 		.string	"_ZNSsixEm"
 34977      73697845 
 34977      6D00
 34978              	.LASF925:
 34979 02ce 5F446573 		.string	"_Destroy<unsigned char*, unsigned char>"
GAS LISTING /tmp/ccKUqHDa.s 			page 913


 34979      74726F79 
 34979      3C756E73 
 34979      69676E65 
 34979      64206368 
 34980              	.LASF571:
 34981 02f6 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE4rendEv"
 34981      74367665 
 34981      63746F72 
 34981      49665361 
 34981      49664545 
 34982              	.LASF1478:
 34983 0312 706F696E 		.string	"points"
 34983      747300
 34984              	.LASF316:
 34985 0319 696E6974 		.string	"initializer_list"
 34985      69616C69 
 34985      7A65725F 
 34985      6C697374 
 34985      00
 34986              	.LASF981:
 34987 032a 5F56616C 		.string	"_Value"
 34987      756500
 34988              	.LASF280:
 34989 0331 5F5A4E4B 		.string	"_ZNKSs13find_first_ofERKSsm"
 34989      53733133 
 34989      66696E64 
 34989      5F666972 
 34989      73745F6F 
 34990              	.LASF182:
 34991 034d 73687269 		.string	"shrink_to_fit"
 34991      6E6B5F74 
 34991      6F5F6669 
 34991      7400
 34992              	.LASF317:
 34993 035b 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE4sizeEv"
 34993      53743136 
 34993      696E6974 
 34993      69616C69 
 34993      7A65725F 
 34994              	.LASF920:
 34995 037e 666C7573 		.string	"flush<char, std::char_traits<char> >"
 34995      683C6368 
 34995      61722C20 
 34995      7374643A 
 34995      3A636861 
 34996              	.LASF727:
 34997 03a3 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<unsigned char*, std::vector<unsigned char, 
 34997      7273655F 
 34997      69746572 
 34997      61746F72 
 34997      3C5F5F67 
 34998              	.LASF686:
 34999 0420 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6resizeEm"
 34999      74367665 
 34999      63746F72 
 34999      49685361 
 34999      49684545 
GAS LISTING /tmp/ccKUqHDa.s 			page 914


 35000              	.LASF28:
 35001 043e 6E6F7468 		.string	"nothrow_t"
 35001      726F775F 
 35001      7400
 35002              	.LASF348:
 35003 0448 6D61736B 		.string	"mask_bits"
 35003      5F626974 
 35003      7300
 35004              	.LASF186:
 35005 0452 72657365 		.string	"reserve"
 35005      72766500 
 35006              	.LASF848:
 35007 045a 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE4sizeEv"
 35007      53743676 
 35007      6563746F 
 35007      72495374 
 35007      34706169 
 35008              	.LASF131:
 35009 0483 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7not_eofERKi"
 35009      74313163 
 35009      6861725F 
 35009      74726169 
 35009      74734963 
 35010              	.LASF1484:
 35011 04a5 66696C65 		.string	"filename"
 35011      6E616D65 
 35011      00
 35012              	.LASF1530:
 35013 04ae 68656174 		.string	"heatmap_stamp_gen"
 35013      6D61705F 
 35013      7374616D 
 35013      705F6765 
 35013      6E00
 35014              	.LASF1081:
 35015 04c0 5F5F6E6F 		.string	"__normal_iterator<unsigned char const*, std::vector<unsigned char, std::allocator<unsigne
 35015      726D616C 
 35015      5F697465 
 35015      7261746F 
 35015      723C756E 
 35016              	.LASF721:
 35017 0525 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE15_M_erase_at_endEPh"
 35017      74367665 
 35017      63746F72 
 35017      49685361 
 35017      49684545 
 35018              	.LASF1429:
 35019 054e 5F5F6D65 		.string	"__mean"
 35019      616E00
 35020              	.LASF636:
 35021 0555 5F5A4E4B 		.string	"_ZNKSt16initializer_listIfE3endEv"
 35021      53743136 
 35021      696E6974 
 35021      69616C69 
 35021      7A65725F 
 35022              	.LASF1316:
 35023 0577 67726F75 		.string	"grouping"
 35023      70696E67 
GAS LISTING /tmp/ccKUqHDa.s 			page 915


 35023      00
 35024              	.LASF170:
 35025 0580 63726265 		.string	"crbegin"
 35025      67696E00 
 35026              	.LASF647:
 35027 0588 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE25_S_difference_type_helperEz"
 35027      74313661 
 35027      6C6C6F63 
 35027      61746F72 
 35027      5F747261 
 35028              	.LASF463:
 35029 05c4 75707065 		.string	"uppercase"
 35029      72636173 
 35029      6500
 35030              	.LASF1536:
 35031 05ce 6578616D 		.string	"examples/customstamp_heatmaps.cpp"
 35031      706C6573 
 35031      2F637573 
 35031      746F6D73 
 35031      74616D70 
 35032              	.LASF1513:
 35033 05f0 6D656D73 		.string	"memset"
 35033      657400
 35034              	.LASF1308:
 35035 05f7 75696E74 		.string	"uintptr_t"
 35035      7074725F 
 35035      7400
 35036              	.LASF994:
 35037 0601 5F5F6E6F 		.string	"__normal_iterator"
 35037      726D616C 
 35037      5F697465 
 35037      7261746F 
 35037      7200
 35038              	.LASF230:
 35039 0613 5F5A4E53 		.string	"_ZNSs6insertEmPKc"
 35039      7336696E 
 35039      73657274 
 35039      456D504B 
 35039      6300
 35040              	.LASF823:
 35041 0625 5F5A4E53 		.string	"_ZNSt12_Vector_baseISt4pairIffESaIS1_EE12_Vector_impl12_M_swap_dataERS4_"
 35041      7431325F 
 35041      56656374 
 35041      6F725F62 
 35041      61736549 
 35042              	.LASF192:
 35043 066e 6F706572 		.string	"operator[]"
 35043      61746F72 
 35043      5B5D00
 35044              	.LASF1408:
 35045 0679 6C617A79 		.string	"lazymatching"
 35045      6D617463 
 35045      68696E67 
 35045      00
 35046              	.LASF264:
 35047 0686 635F7374 		.string	"c_str"
 35047      7200
GAS LISTING /tmp/ccKUqHDa.s 			page 916


 35048              	.LASF1036:
 35049 068c 5F5F6E75 		.string	"__numeric_traits_integer<char>"
 35049      6D657269 
 35049      635F7472 
 35049      61697473 
 35049      5F696E74 
 35050              	.LASF1113:
 35051 06ab 5F5F6578 		.string	"__exchange_and_add"
 35051      6368616E 
 35051      67655F61 
 35051      6E645F61 
 35051      646400
 35052              	.LASF1077:
 35053 06be 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE15_S_always_equalEv"
 35053      5F5F676E 
 35053      755F6378 
 35053      7831345F 
 35053      5F616C6C 
 35054              	.LASF255:
 35055 06f6 5F5A4E53 		.string	"_ZNSs14_M_replace_auxEmmmc"
 35055      7331345F 
 35055      4D5F7265 
 35055      706C6163 
 35055      655F6175 
 35056              	.LASF167:
 35057 0711 5F5A4E4B 		.string	"_ZNKSs6cbeginEv"
 35057      53733663 
 35057      62656769 
 35057      6E457600 
 35058              	.LASF294:
 35059 0721 66696E64 		.string	"find_last_not_of"
 35059      5F6C6173 
 35059      745F6E6F 
 35059      745F6F66 
 35059      00
 35060              	.LASF1526:
 35061 0732 5F5F6275 		.string	"__builtin_sqrtf"
 35061      696C7469 
 35061      6E5F7371 
 35061      72746600 
 35062              	.LASF320:
 35063 0742 5F5F756E 		.string	"__uninitialized_fill_n<true>"
 35063      696E6974 
 35063      69616C69 
 35063      7A65645F 
 35063      66696C6C 
 35064              	.LASF977:
 35065 075f 5F5F6D69 		.string	"__min"
 35065      6E00
 35066              	.LASF1432:
 35067 0765 5F5F6669 		.string	"__first"
 35067      72737400 
 35068              	.LASF149:
 35069 076d 7E626173 		.string	"~basic_string"
 35069      69635F73 
 35069      7472696E 
 35069      6700
GAS LISTING /tmp/ccKUqHDa.s 			page 917


 35070              	.LASF859:
 35071 077b 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE2atEm"
 35071      74367665 
 35071      63746F72 
 35071      49537434 
 35071      70616972 
 35072              	.LASF831:
 35073 07a1 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EEaSERKS3_"
 35073      74367665 
 35073      63746F72 
 35073      49537434 
 35073      70616972 
 35074              	.LASF1382:
 35075 07ca 636C6F63 		.string	"clock"
 35075      6B00
 35076              	.LASF1542:
 35077 07d0 5F5A5374 		.string	"_ZSt17__throw_bad_allocv"
 35077      31375F5F 
 35077      7468726F 
 35077      775F6261 
 35077      645F616C 
 35078              	.LASF147:
 35079 07e9 5F5A4E53 		.string	"_ZNSs12_M_leak_hardEv"
 35079      7331325F 
 35079      4D5F6C65 
 35079      616B5F68 
 35079      61726445 
 35080              	.LASF416:
 35081 07ff 5F535F73 		.string	"_S_showpoint"
 35081      686F7770 
 35081      6F696E74 
 35081      00
 35082              	.LASF1472:
 35083 080c 696D6167 		.string	"image"
 35083      6500
 35084              	.LASF422:
 35085 0812 5F535F62 		.string	"_S_basefield"
 35085      61736566 
 35085      69656C64 
 35085      00
 35086              	.LASF1373:
 35087 081f 746D7066 		.string	"tmpfile"
 35087      696C6500 
 35088              	.LASF427:
 35089 0827 5F535F61 		.string	"_S_app"
 35089      707000
 35090              	.LASF1061:
 35091 082e 5F535F6E 		.string	"_S_nothrow_swap"
 35091      6F746872 
 35091      6F775F73 
 35091      77617000 
 35092              	.LASF1313:
 35093 083e 6C636F6E 		.string	"lconv"
 35093      7600
 35094              	.LASF917:
 35095 0844 6D616B65 		.string	"make_pair<float, float>"
 35095      5F706169 
GAS LISTING /tmp/ccKUqHDa.s 			page 918


 35095      723C666C 
 35095      6F61742C 
 35095      20666C6F 
 35096              	.LASF729:
 35097 085c 5F5A4E4B 		.string	"_ZNKSt16initializer_listIhE4sizeEv"
 35097      53743136 
 35097      696E6974 
 35097      69616C69 
 35097      7A65725F 
 35098              	.LASF911:
 35099 087f 5F5A4E4B 		.string	"_ZNKSt9basic_iosIcSt11char_traitsIcEE7rdstateEv"
 35099      53743962 
 35099      61736963 
 35099      5F696F73 
 35099      49635374 
 35100              	.LASF1440:
 35101 08af 5F5F6C68 		.string	"__lhs"
 35101      7300
 35102              	.LASF682:
 35103 08b5 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE7crbeginEv"
 35103      53743676 
 35103      6563746F 
 35103      72496853 
 35103      61496845 
 35104              	.LASF153:
 35105 08d5 5F5A4E53 		.string	"_ZNSsaSEOSs"
 35105      73615345 
 35105      4F537300 
 35106              	.LASF159:
 35107 08e1 5F5A4E4B 		.string	"_ZNKSs3endEv"
 35107      53733365 
 35107      6E644576 
 35107      00
 35108              	.LASF140:
 35109 08ee 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcS_S_"
 35109      7331335F 
 35109      535F636F 
 35109      70795F63 
 35109      68617273 
 35110              	.LASF895:
 35111 090a 5F5A4E4B 		.string	"_ZNKSt16initializer_listISt4pairIffEE3endEv"
 35111      53743136 
 35111      696E6974 
 35111      69616C69 
 35111      7A65725F 
 35112              	.LASF1486:
 35113 0936 5F5F666F 		.string	"__for_begin"
 35113      725F6265 
 35113      67696E00 
 35114              	.LASF100:
 35115 0942 5F5A4E53 		.string	"_ZNSs4_Rep7_M_grabERKSaIcES2_"
 35115      73345F52 
 35115      6570375F 
 35115      4D5F6772 
 35115      61624552 
 35116              	.LASF1406:
 35117 0960 6D696E6D 		.string	"minmatch"
GAS LISTING /tmp/ccKUqHDa.s 			page 919


 35117      61746368 
 35117      00
 35118              	.LASF439:
 35119 0969 5F535F69 		.string	"_S_ios_iostate_end"
 35119      6F735F69 
 35119      6F737461 
 35119      74655F65 
 35119      6E6400
 35120              	.LASF271:
 35121 097c 5F5A4E4B 		.string	"_ZNKSs4findERKSsm"
 35121      53733466 
 35121      696E6445 
 35121      524B5373 
 35121      6D00
 35122              	.LASF1393:
 35123 098e 4C43545F 		.string	"LCT_RGB"
 35123      52474200 
 35124              	.LASF841:
 35125 0996 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE6rbeginEv"
 35125      53743676 
 35125      6563746F 
 35125      72495374 
 35125      34706169 
 35126              	.LASF599:
 35127 09c1 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE8pop_backEv"
 35127      74367665 
 35127      63746F72 
 35127      49665361 
 35127      49664545 
 35128              	.LASF315:
 35129 09e1 5F4D5F6C 		.string	"_M_len"
 35129      656E00
 35130              	.LASF1042:
 35131 09e8 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIfE10deallocateEPfm"
 35131      5F5F676E 
 35131      755F6378 
 35131      7831336E 
 35131      65775F61 
 35132              	.LASF1080:
 35133 0a18 5F5F6E6F 		.string	"__normal_iterator<unsigned char*, std::vector<unsigned char, std::allocator<unsigned char
 35133      726D616C 
 35133      5F697465 
 35133      7261746F 
 35133      723C756E 
 35134              	.LASF649:
 35135 0a77 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE48_S_propagate_on_container_copy_assignment_helperEz"
 35135      74313661 
 35135      6C6C6F63 
 35135      61746F72 
 35135      5F747261 
 35136              	.LASF399:
 35137 0aca 5F517561 		.string	"_Qualified"
 35137      6C696669 
 35137      656400
 35138              	.LASF1149:
 35139 0ad5 6D626C65 		.string	"mblen"
 35139      6E00
GAS LISTING /tmp/ccKUqHDa.s 			page 920


 35140              	.LASF307:
 35141 0adb 5F436861 		.string	"_CharT"
 35141      725400
 35142              	.LASF646:
 35143 0ae2 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE28_S_const_void_pointer_helperEz"
 35143      74313661 
 35143      6C6C6F63 
 35143      61746F72 
 35143      5F747261 
 35144              	.LASF1252:
 35145 0b21 746D5F6D 		.string	"tm_mday"
 35145      64617900 
 35146              	.LASF1008:
 35147 0b29 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEplEl"
 35147      395F5F67 
 35147      6E755F63 
 35147      78783137 
 35147      5F5F6E6F 
 35148              	.LASF17:
 35149 0b55 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr6_M_getEv"
 35149      53743135 
 35149      5F5F6578 
 35149      63657074 
 35149      696F6E5F 
 35150              	.LASF1365:
 35151 0b85 67657463 		.string	"getchar"
 35151      68617200 
 35152              	.LASF536:
 35153 0b8d 5F566563 		.string	"_Vector_impl"
 35153      746F725F 
 35153      696D706C 
 35153      00
 35154              	.LASF1477:
 35155 0b9a 795F6469 		.string	"y_distr"
 35155      73747200 
 35156              	.LASF1289:
 35157 0ba2 75696E74 		.string	"uint32_t"
 35157      33325F74 
 35157      00
 35158              	.LASF62:
 35159 0bab 72656665 		.string	"reference"
 35159      72656E63 
 35159      6500
 35160              	.LASF382:
 35161 0bb5 5F4D5F69 		.string	"_M_init"
 35161      6E697400 
 35162              	.LASF44:
 35163 0bbd 6D6F7665 		.string	"move"
 35163      00
 35164              	.LASF1361:
 35165 0bc2 66736565 		.string	"fseek"
 35165      6B00
 35166              	.LASF658:
 35167 0bc8 5F566563 		.string	"_Vector_base<unsigned char, std::allocator<unsigned char> >"
 35167      746F725F 
 35167      62617365 
 35167      3C756E73 
GAS LISTING /tmp/ccKUqHDa.s 			page 921


 35167      69676E65 
 35168              	.LASF808:
 35169 0c04 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE23_S_const_pointer_helperEz"
 35169      74313661 
 35169      6C6C6F63 
 35169      61746F72 
 35169      5F747261 
 35170              	.LASF1259:
 35171 0c48 746D5F7A 		.string	"tm_zone"
 35171      6F6E6500 
 35172              	.LASF790:
 35173 0c50 6F706572 		.string	"operator()<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567
 35173      61746F72 
 35173      28293C73 
 35173      74643A3A 
 35173      6D657273 
 35174              	.LASF716:
 35175 0d04 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE14_M_fill_assignEmRKh"
 35175      74367665 
 35175      63746F72 
 35175      49685361 
 35175      49684545 
 35176              	.LASF426:
 35177 0d2e 5F496F73 		.string	"_Ios_Openmode"
 35177      5F4F7065 
 35177      6E6D6F64 
 35177      6500
 35178              	.LASF1016:
 35179 0d3c 5F5F6E6F 		.string	"__normal_iterator<char const*, std::basic_string<char, std::char_traits<char>, std::alloc
 35179      726D616C 
 35179      5F697465 
 35179      7261746F 
 35179      723C6368 
 35180              	.LASF700:
 35181 0da4 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE4backEv"
 35181      53743676 
 35181      6563746F 
 35181      72496853 
 35181      61496845 
 35182              	.LASF428:
 35183 0dc1 5F535F61 		.string	"_S_ate"
 35183      746500
 35184              	.LASF165:
 35185 0dc8 5F5A4E4B 		.string	"_ZNKSs4rendEv"
 35185      53733472 
 35185      656E6445 
 35185      7600
 35186              	.LASF1261:
 35187 0dd6 7763736E 		.string	"wcsncat"
 35187      63617400 
 35188              	.LASF458:
 35189 0dde 73686F77 		.string	"showbase"
 35189      62617365 
 35189      00
 35190              	.LASF80:
 35191 0de7 5F4D5F63 		.string	"_M_capacity"
 35191      61706163 
GAS LISTING /tmp/ccKUqHDa.s 			page 922


 35191      69747900 
 35192              	.LASF74:
 35193 0df3 69746572 		.string	"iterator"
 35193      61746F72 
 35193      00
 35194              	.LASF569:
 35195 0dfc 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE6rbeginEv"
 35195      74367665 
 35195      63746F72 
 35195      49665361 
 35195      49664545 
 35196              	.LASF423:
 35197 0e1a 5F535F66 		.string	"_S_floatfield"
 35197      6C6F6174 
 35197      6669656C 
 35197      6400
 35198              	.LASF685:
 35199 0e28 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE8max_sizeEv"
 35199      53743676 
 35199      6563746F 
 35199      72496853 
 35199      61496845 
 35200              	.LASF1117:
 35201 0e49 6C6F6E67 		.string	"long double"
 35201      20646F75 
 35201      626C6500 
 35202              	.LASF338:
 35203 0e55 5F5F6269 		.string	"__big_enough"
 35203      675F656E 
 35203      6F756768 
 35203      00
 35204              	.LASF757:
 35205 0e62 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EEixEm"
 35205      74356172 
 35205      72617949 
 35205      50396865 
 35205      61746D61 
 35206              	.LASF223:
 35207 0e83 5F5A4E53 		.string	"_ZNSs6assignESt16initializer_listIcE"
 35207      73366173 
 35207      7369676E 
 35207      45537431 
 35207      36696E69 
 35208              	.LASF875:
 35209 0ea8 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EES8_"
 35209      74367665 
 35209      63746F72 
 35209      49537434 
 35209      70616972 
 35210              	.LASF421:
 35211 0efc 5F535F61 		.string	"_S_adjustfield"
 35211      646A7573 
 35211      74666965 
 35211      6C6400
 35212              	.LASF1028:
 35213 0f0b 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsE4baseEv"
 35213      395F5F67 
GAS LISTING /tmp/ccKUqHDa.s 			page 923


 35213      6E755F63 
 35213      78783137 
 35213      5F5F6E6F 
 35214              	.LASF1540:
 35215 0f3b 5F5A4E53 		.string	"_ZNSt11char_traitsIcE3eofEv"
 35215      74313163 
 35215      6861725F 
 35215      74726169 
 35215      74734963 
 35216              	.LASF683:
 35217 0f57 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE5crendEv"
 35217      53743676 
 35217      6563746F 
 35217      72496853 
 35217      61496845 
 35218              	.LASF454:
 35219 0f75 696E7465 		.string	"internal"
 35219      726E616C 
 35219      00
 35220              	.LASF144:
 35221 0f7e 5F4D5F6D 		.string	"_M_mutate"
 35221      75746174 
 35221      6500
 35222              	.LASF1218:
 35223 0f88 66676574 		.string	"fgetwc"
 35223      776300
 35224              	.LASF1515:
 35225 0f8f 68656174 		.string	"heatmap_add_point_with_stamp"
 35225      6D61705F 
 35225      6164645F 
 35225      706F696E 
 35225      745F7769 
 35226              	.LASF1043:
 35227 0fac 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIfE8max_sizeEv"
 35227      395F5F67 
 35227      6E755F63 
 35227      78783133 
 35227      6E65775F 
 35228              	.LASF1170:
 35229 0fd8 666C6F61 		.string	"float_t"
 35229      745F7400 
 35230              	.LASF701:
 35231 0fe0 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE4dataEv"
 35231      74367665 
 35231      63746F72 
 35231      49685361 
 35231      49684545 
 35232              	.LASF1219:
 35233 0ffc 66676574 		.string	"fgetws"
 35233      777300
 35234              	.LASF1295:
 35235 1003 75696E74 		.string	"uint_least8_t"
 35235      5F6C6561 
 35235      7374385F 
 35235      7400
 35236              	.LASF359:
 35237 1011 64656661 		.string	"default_seed"
GAS LISTING /tmp/ccKUqHDa.s 			page 924


 35237      756C745F 
 35237      73656564 
 35237      00
 35238              	.LASF217:
 35239 101e 5F5A4E53 		.string	"_ZNSs6assignERKSs"
 35239      73366173 
 35239      7369676E 
 35239      45524B53 
 35239      7300
 35240              	.LASF366:
 35241 1030 64697363 		.string	"discard"
 35241      61726400 
 35242              	.LASF296:
 35243 1038 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEPKcmm"
 35243      53733136 
 35243      66696E64 
 35243      5F6C6173 
 35243      745F6E6F 
 35244              	.LASF390:
 35245 1057 5F4D5F67 		.string	"_M_getval_pretr1"
 35245      65747661 
 35245      6C5F7072 
 35245      65747231 
 35245      00
 35246              	.LASF1092:
 35247 1068 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIffEEE27_S_propagate_on_move_assignEv"
 35247      5F5F676E 
 35247      755F6378 
 35247      7831345F 
 35247      5F616C6C 
 35248              	.LASF973:
 35249 10b6 5F5F6465 		.string	"__debug"
 35249      62756700 
 35250              	.LASF63:
 35251 10be 636F6E73 		.string	"const_reference"
 35251      745F7265 
 35251      66657265 
 35251      6E636500 
 35252              	.LASF779:
 35253 10ce 5F4D5F73 		.string	"_M_saved_available"
 35253      61766564 
 35253      5F617661 
 35253      696C6162 
 35253      6C6500
 35254              	.LASF811:
 35255 10e1 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE25_S_difference_type_helperEz"
 35255      74313661 
 35255      6C6C6F63 
 35255      61746F72 
 35255      5F747261 
 35256              	.LASF913:
 35257 1127 5F5A4E53 		.string	"_ZNSt9basic_iosIcSt11char_traitsIcEE8setstateESt12_Ios_Iostate"
 35257      74396261 
 35257      7369635F 
 35257      696F7349 
 35257      63537431 
 35258              	.LASF346:
GAS LISTING /tmp/ccKUqHDa.s 			page 925


 35259 1166 776F7264 		.string	"word_size"
 35259      5F73697A 
 35259      6500
 35260              	.LASF1512:
 35261 1170 5F5A6E77 		.string	"_Znwm"
 35261      6D00
 35262              	.LASF419:
 35263 1176 5F535F75 		.string	"_S_unitbuf"
 35263      6E697462 
 35263      756600
 35264              	.LASF196:
 35265 1181 5F5A4E53 		.string	"_ZNSs2atEm"
 35265      73326174 
 35265      456D00
 35266              	.LASF572:
 35267 118c 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE4rendEv"
 35267      53743676 
 35267      6563746F 
 35267      72496653 
 35267      61496645 
 35268              	.LASF944:
 35269 11a9 5F5F6E69 		.string	"__niter_base<unsigned char*>"
 35269      7465725F 
 35269      62617365 
 35269      3C756E73 
 35269      69676E65 
 35270              	.LASF629:
 35271 11c6 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE14_M_move_assignEOS1_St17integral_constantIbLb0EE"
 35271      74367665 
 35271      63746F72 
 35271      49665361 
 35271      49664545 
 35272              	.LASF567:
 35273 120c 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE3endEv"
 35273      74367665 
 35273      63746F72 
 35273      49665361 
 35273      49664545 
 35274              	.LASF1122:
 35275 1227 35646976 		.string	"5div_t"
 35275      5F7400
 35276              	.LASF963:
 35277 122e 626F6F6C 		.string	"bool"
 35277      00
 35278              	.LASF417:
 35279 1233 5F535F73 		.string	"_S_showpos"
 35279      686F7770 
 35279      6F7300
 35280              	.LASF163:
 35281 123e 72656E64 		.string	"rend"
 35281      00
 35282              	.LASF1430:
 35283 1243 5F5F7374 		.string	"__stddev"
 35283      64646576 
 35283      00
 35284              	.LASF551:
 35285 124c 5F4D5F61 		.string	"_M_allocate"
GAS LISTING /tmp/ccKUqHDa.s 			page 926


 35285      6C6C6F63 
 35285      61746500 
 35286              	.LASF449:
 35287 1258 666D7466 		.string	"fmtflags"
 35287      6C616773 
 35287      00
 35288              	.LASF191:
 35289 1261 5F5A4E4B 		.string	"_ZNKSs5emptyEv"
 35289      53733565 
 35289      6D707479 
 35289      457600
 35290              	.LASF174:
 35291 1270 73697A65 		.string	"size"
 35291      00
 35292              	.LASF233:
 35293 1275 65726173 		.string	"erase"
 35293      6500
 35294              	.LASF476:
 35295 127b 62617369 		.string	"basic_ostream<char, std::char_traits<char> >"
 35295      635F6F73 
 35295      74726561 
 35295      6D3C6368 
 35295      61722C20 
 35296              	.LASF933:
 35297 12a8 6D61783C 		.string	"max<long unsigned int>"
 35297      6C6F6E67 
 35297      20756E73 
 35297      69676E65 
 35297      6420696E 
 35298              	.LASF402:
 35299 12bf 5F497345 		.string	"_IsEnum"
 35299      6E756D00 
 35300              	.LASF538:
 35301 12c7 5F4D5F66 		.string	"_M_finish"
 35301      696E6973 
 35301      6800
 35302              	.LASF235:
 35303 12d1 5F5A4E53 		.string	"_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEE"
 35303      73356572 
 35303      61736545 
 35303      4E395F5F 
 35303      676E755F 
 35304              	.LASF794:
 35305 1303 66697273 		.string	"first"
 35305      7400
 35306              	.LASF1503:
 35307 1309 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIiE5__maxE"
 35307      5F5F676E 
 35307      755F6378 
 35307      7832345F 
 35307      5F6E756D 
 35308              	.LASF446:
 35309 133b 5F535F73 		.string	"_S_synced_with_stdio"
 35309      796E6365 
 35309      645F7769 
 35309      74685F73 
 35309      7464696F 
GAS LISTING /tmp/ccKUqHDa.s 			page 927


 35310              	.LASF517:
 35311 1350 5F535F73 		.string	"_S_size_type_helper"
 35311      697A655F 
 35311      74797065 
 35311      5F68656C 
 35311      70657200 
 35312              	.LASF142:
 35313 1364 5F535F63 		.string	"_S_compare"
 35313      6F6D7061 
 35313      726500
 35314              	.LASF1154:
 35315 136f 71756963 		.string	"quick_exit"
 35315      6B5F6578 
 35315      697400
 35316              	.LASF391:
 35317 137a 5F5A4E53 		.string	"_ZNSt13random_device16_M_getval_pretr1Ev"
 35317      74313372 
 35317      616E646F 
 35317      6D5F6465 
 35317      76696365 
 35318              	.LASF839:
 35319 13a3 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE3endEv"
 35319      53743676 
 35319      6563746F 
 35319      72495374 
 35319      34706169 
 35320              	.LASF1250:
 35321 13cb 746D5F6D 		.string	"tm_min"
 35321      696E00
 35322              	.LASF259:
 35323 13d2 5F5A4E53 		.string	"_ZNSs18_S_construct_aux_2EmcRKSaIcE"
 35323      7331385F 
 35323      535F636F 
 35323      6E737472 
 35323      7563745F 
 35324              	.LASF1318:
 35325 13f6 63757272 		.string	"currency_symbol"
 35325      656E6379 
 35325      5F73796D 
 35325      626F6C00 
 35326              	.LASF277:
 35327 1406 5F5A4E4B 		.string	"_ZNKSs5rfindEPKcm"
 35327      53733572 
 35327      66696E64 
 35327      45504B63 
 35327      6D00
 35328              	.LASF1222:
 35329 1418 66776964 		.string	"fwide"
 35329      6500
 35330              	.LASF1143:
 35331 141e 61746F66 		.string	"atof"
 35331      00
 35332              	.LASF508:
 35333 1423 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE17_S_pointer_helperEz"
 35333      74313661 
 35333      6C6C6F63 
 35333      61746F72 
GAS LISTING /tmp/ccKUqHDa.s 			page 928


 35333      5F747261 
 35334              	.LASF1145:
 35335 1457 61746F6C 		.string	"atol"
 35335      00
 35336              	.LASF1018:
 35337 145c 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEptEv"
 35337      395F5F67 
 35337      6E755F63 
 35337      78783137 
 35337      5F5F6E6F 
 35338              	.LASF288:
 35339 1489 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEcm"
 35339      53733132 
 35339      66696E64 
 35339      5F6C6173 
 35339      745F6F66 
 35340              	.LASF1202:
 35341 14a1 5F756E75 		.string	"_unused2"
 35341      73656432 
 35341      00
 35342              	.LASF1444:
 35343 14aa 5F5F6974 		.string	"__it"
 35343      00
 35344              	.LASF187:
 35345 14af 5F5A4E53 		.string	"_ZNSs7reserveEm"
 35345      73377265 
 35345      73657276 
 35345      65456D00 
 35346              	.LASF71:
 35347 14bf 7E5F416C 		.string	"~_Alloc_hider"
 35347      6C6F635F 
 35347      68696465 
 35347      7200
 35348              	.LASF506:
 35349 14cd 5F5F7369 		.string	"__size_type"
 35349      7A655F74 
 35349      79706500 
 35350              	.LASF232:
 35351 14d9 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEc"
 35351      7336696E 
 35351      73657274 
 35351      454E395F 
 35351      5F676E75 
 35352              	.LASF57:
 35353 150d 73697A65 		.string	"size_t"
 35353      5F7400
 35354              	.LASF394:
 35355 1514 5F5F7479 		.string	"__type"
 35355      706500
 35356              	.LASF580:
 35357 151b 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE6resizeEmRKf"
 35357      74367665 
 35357      63746F72 
 35357      49665361 
 35357      49664545 
 35358              	.LASF753:
 35359 153c 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE5crendEv"
GAS LISTING /tmp/ccKUqHDa.s 			page 929


 35359      53743561 
 35359      72726179 
 35359      49503968 
 35359      6561746D 
 35360              	.LASF801:
 35361 1562 616C6C6F 		.string	"allocator<std::pair<float, float> >"
 35361      6361746F 
 35361      723C7374 
 35361      643A3A70 
 35361      6169723C 
 35362              	.LASF411:
 35363 1586 5F535F6C 		.string	"_S_left"
 35363      65667400 
 35364              	.LASF483:
 35365 158e 5F56616C 		.string	"_ValueT"
 35365      75655400 
 35366              	.LASF1538:
 35367 1596 6F706572 		.string	"operator bool"
 35367      61746F72 
 35367      20626F6F 
 35367      6C00
 35368              	.LASF1111:
 35369 15a4 5F5F656E 		.string	"__enable_if<true, float*>"
 35369      61626C65 
 35369      5F69663C 
 35369      74727565 
 35369      2C20666C 
 35370              	.LASF698:
 35371 15be 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE5frontEv"
 35371      53743676 
 35371      6563746F 
 35371      72496853 
 35371      61496845 
 35372              	.LASF279:
 35373 15dc 66696E64 		.string	"find_first_of"
 35373      5F666972 
 35373      73745F6F 
 35373      6600
 35374              	.LASF387:
 35375 15ea 5F5A4E53 		.string	"_ZNSt13random_device7_M_finiEv"
 35375      74313372 
 35375      616E646F 
 35375      6D5F6465 
 35375      76696365 
 35376              	.LASF26:
 35377 1609 6E756C6C 		.string	"nullptr_t"
 35377      7074725F 
 35377      7400
 35378              	.LASF237:
 35379 1613 706F705F 		.string	"pop_back"
 35379      6261636B 
 35379      00
 35380              	.LASF514:
 35381 161c 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE28_S_const_void_pointer_helperEz"
 35381      74313661 
 35381      6C6C6F63 
 35381      61746F72 
GAS LISTING /tmp/ccKUqHDa.s 			page 930


 35381      5F747261 
 35382              	.LASF657:
 35383 165b 5F5F616C 		.string	"__alloctr_rebind<std::allocator<unsigned char>, unsigned char, true>"
 35383      6C6F6374 
 35383      725F7265 
 35383      62696E64 
 35383      3C737464 
 35384              	.LASF1135:
 35385 16a0 74696D65 		.string	"time_t"
 35385      5F7400
 35386              	.LASF166:
 35387 16a7 63626567 		.string	"cbegin"
 35387      696E00
 35388              	.LASF1297:
 35389 16ae 75696E74 		.string	"uint_least32_t"
 35389      5F6C6561 
 35389      73743332 
 35389      5F7400
 35390              	.LASF626:
 35391 16bd 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPfS1_EES5_"
 35391      74367665 
 35391      63746F72 
 35391      49665361 
 35391      49664545 
 35392              	.LASF643:
 35393 1705 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE17_S_pointer_helperEz"
 35393      74313661 
 35393      6C6C6F63 
 35393      61746F72 
 35393      5F747261 
 35394              	.LASF164:
 35395 1739 5F5A4E53 		.string	"_ZNSs4rendEv"
 35395      73347265 
 35395      6E644576 
 35395      00
 35396              	.LASF576:
 35397 1746 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE5crendEv"
 35397      53743676 
 35397      6563746F 
 35397      72496653 
 35397      61496645 
 35398              	.LASF632:
 35399 1764 696E6974 		.string	"initializer_list<float>"
 35399      69616C69 
 35399      7A65725F 
 35399      6C697374 
 35399      3C666C6F 
 35400              	.LASF1201:
 35401 177c 5F6D6F64 		.string	"_mode"
 35401      6500
 35402              	.LASF1418:
 35403 1782 74686973 		.string	"this"
 35403      00
 35404              	.LASF1476:
 35405 1787 785F6469 		.string	"x_distr"
 35405      73747200 
 35406              	.LASF955:
GAS LISTING /tmp/ccKUqHDa.s 			page 931


 35407 178f 6E6F7468 		.string	"nothrow"
 35407      726F7700 
 35408              	.LASF162:
 35409 1797 5F5A4E4B 		.string	"_ZNKSs6rbeginEv"
 35409      53733672 
 35409      62656769 
 35409      6E457600 
 35410              	.LASF1520:
 35411 17a7 5F5A3138 		.string	"_Z18lodepng_error_textj"
 35411      6C6F6465 
 35411      706E675F 
 35411      6572726F 
 35411      725F7465 
 35412              	.LASF1094:
 35413 17bf 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIffEEE15_S_always_equalEv"
 35413      5F5F676E 
 35413      755F6378 
 35413      7831345F 
 35413      5F616C6C 
 35414              	.LASF495:
 35415 1801 5F547031 		.string	"_Tp1"
 35415      00
 35416              	.LASF941:
 35417 1806 5F547032 		.string	"_Tp2"
 35417      00
 35418              	.LASF1539:
 35419 180b 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptrcvbEv"
 35419      53743135 
 35419      5F5F6578 
 35419      63657074 
 35419      696F6E5F 
 35420              	.LASF161:
 35421 1837 5F5A4E53 		.string	"_ZNSs6rbeginEv"
 35421      73367262 
 35421      6567696E 
 35421      457600
 35422              	.LASF524:
 35423 1846 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE37_S_propagate_on_container_swap_helperEz"
 35423      74313661 
 35423      6C6C6F63 
 35423      61746F72 
 35423      5F747261 
 35424              	.LASF650:
 35425 188e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE48_S_propagate_on_container_move_assignment_helperEz"
 35425      74313661 
 35425      6C6C6F63 
 35425      61746F72 
 35425      5F747261 
 35426              	.LASF1089:
 35427 18e1 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIffEEE17_S_select_on_copyERKS3_"
 35427      5F5F676E 
 35427      755F6378 
 35427      7831345F 
 35427      5F616C6C 
 35428              	.LASF717:
 35429 1929 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPhS1_EEmRKh"
 35429      74367665 
GAS LISTING /tmp/ccKUqHDa.s 			page 932


 35429      63746F72 
 35429      49685361 
 35429      49684545 
 35430              	.LASF1375:
 35431 1979 756E6765 		.string	"ungetc"
 35431      746300
 35432              	.LASF8:
 35433 1980 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb0EEcvbEv"
 35433      53743137 
 35433      696E7465 
 35433      6772616C 
 35433      5F636F6E 
 35434              	.LASF378:
 35435 19a6 656E7472 		.string	"entropy"
 35435      6F707900 
 35436              	.LASF1419:
 35437 19ae 5F5F6774 		.string	"__gthread_active_p"
 35437      68726561 
 35437      645F6163 
 35437      74697665 
 35437      5F7000
 35438              	.LASF559:
 35439 19c1 7E766563 		.string	"~vector"
 35439      746F7200 
 35440              	.LASF935:
 35441 19c9 5F5F6669 		.string	"__fill_n_a<float*, long unsigned int, float>"
 35441      6C6C5F6E 
 35441      5F613C66 
 35441      6C6F6174 
 35441      2A2C206C 
 35442              	.LASF938:
 35443 19f6 66696C6C 		.string	"fill_n<float*, long unsigned int, float>"
 35443      5F6E3C66 
 35443      6C6F6174 
 35443      2A2C206C 
 35443      6F6E6720 
 35444              	.LASF472:
 35445 1a1f 62696E61 		.string	"binary"
 35445      727900
 35446              	.LASF59:
 35447 1a26 74727565 		.string	"true_type"
 35447      5F747970 
 35447      6500
 35448              	.LASF713:
 35449 1a30 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE5clearEv"
 35449      74367665 
 35449      63746F72 
 35449      49685361 
 35449      49684545 
 35450              	.LASF1336:
 35451 1a4d 696E745F 		.string	"int_p_sign_posn"
 35451      705F7369 
 35451      676E5F70 
 35451      6F736E00 
 35452              	.LASF1120:
 35453 1a5d 71756F74 		.string	"quot"
 35453      00
GAS LISTING /tmp/ccKUqHDa.s 			page 933


 35454              	.LASF1212:
 35455 1a62 5F5F7763 		.string	"__wchb"
 35455      686200
 35456              	.LASF797:
 35457 1a69 5F5A4E53 		.string	"_ZNSt4pairIffEaSERKS0_"
 35457      74347061 
 35457      69724966 
 35457      66456153 
 35457      45524B53 
 35458              	.LASF803:
 35459 1a80 5F5F7074 		.string	"__ptrtr_not_void<std::pair<float, float>, std::pair<float, float> >"
 35459      7274725F 
 35459      6E6F745F 
 35459      766F6964 
 35459      3C737464 
 35460              	.LASF793:
 35461 1ac4 70616972 		.string	"pair<float, float>"
 35461      3C666C6F 
 35461      61742C20 
 35461      666C6F61 
 35461      743E00
 35462              	.LASF47:
 35463 1ad7 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4copyEPcPKcm"
 35463      74313163 
 35463      6861725F 
 35463      74726169 
 35463      74734963 
 35464              	.LASF539:
 35465 1af9 5F4D5F65 		.string	"_M_end_of_storage"
 35465      6E645F6F 
 35465      665F7374 
 35465      6F726167 
 35465      6500
 35466              	.LASF1545:
 35467 1b0b 5F5F7374 		.string	"__static_initialization_and_destruction_0"
 35467      61746963 
 35467      5F696E69 
 35467      7469616C 
 35467      697A6174 
 35468              	.LASF287:
 35469 1b35 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEPKcm"
 35469      53733132 
 35469      66696E64 
 35469      5F6C6173 
 35469      745F6F66 
 35470              	.LASF118:
 35471 1b4f 5F4D5F69 		.string	"_M_iend"
 35471      656E6400 
 35472              	.LASF1390:
 35473 1b57 73747266 		.string	"strftime"
 35473      74696D65 
 35473      00
 35474              	.LASF1253:
 35475 1b60 746D5F6D 		.string	"tm_mon"
 35475      6F6E00
 35476              	.LASF1162:
 35477 1b67 77637374 		.string	"wcstombs"
GAS LISTING /tmp/ccKUqHDa.s 			page 934


 35477      6F6D6273 
 35477      00
 35478              	.LASF1379:
 35479 1b70 746F7763 		.string	"towctrans"
 35479      7472616E 
 35479      7300
 35480              	.LASF523:
 35481 1b7a 5F535F70 		.string	"_S_propagate_on_container_swap_helper"
 35481      726F7061 
 35481      67617465 
 35481      5F6F6E5F 
 35481      636F6E74 
 35482              	.LASF594:
 35483 1ba0 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE4backEv"
 35483      53743676 
 35483      6563746F 
 35483      72496653 
 35483      61496645 
 35484              	.LASF175:
 35485 1bbd 5F5A4E4B 		.string	"_ZNKSs4sizeEv"
 35485      53733473 
 35485      697A6545 
 35485      7600
 35486              	.LASF521:
 35487 1bcb 5F535F70 		.string	"_S_propagate_on_container_move_assignment_helper"
 35487      726F7061 
 35487      67617465 
 35487      5F6F6E5F 
 35487      636F6E74 
 35488              	.LASF1101:
 35489 1bfc 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEppEi"
 35489      5F5F676E 
 35489      755F6378 
 35489      7831375F 
 35489      5F6E6F72 
 35490              	.LASF442:
 35491 1c44 5F535F63 		.string	"_S_cur"
 35491      757200
 35492              	.LASF209:
 35493 1c4b 5F5A4E53 		.string	"_ZNSs6appendERKSs"
 35493      73366170 
 35493      70656E64 
 35493      45524B53 
 35493      7300
 35494              	.LASF1100:
 35495 1c5d 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEppEv"
 35495      5F5F676E 
 35495      755F6378 
 35495      7831375F 
 35495      5F6E6F72 
 35496              	.LASF272:
 35497 1ca5 5F5A4E4B 		.string	"_ZNKSs4findEPKcm"
 35497      53733466 
 35497      696E6445 
 35497      504B636D 
 35497      00
 35498              	.LASF1144:
GAS LISTING /tmp/ccKUqHDa.s 			page 935


 35499 1cb6 61746F69 		.string	"atoi"
 35499      00
 35500              	.LASF893:
 35501 1cbb 5F5A4E4B 		.string	"_ZNKSt16initializer_listISt4pairIffEE4sizeEv"
 35501      53743136 
 35501      696E6974 
 35501      69616C69 
 35501      7A65725F 
 35502              	.LASF363:
 35503 1ce8 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 35503      7432336D 
 35503      65727365 
 35503      6E6E655F 
 35503      74776973 
 35504              	.LASF865:
 35505 1d7b 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE4dataEv"
 35505      74367665 
 35505      63746F72 
 35505      49537434 
 35505      70616972 
 35506              	.LASF327:
 35507 1da3 5F4D5F67 		.string	"_M_g"
 35507      00
 35508              	.LASF314:
 35509 1da8 5F4D5F61 		.string	"_M_array"
 35509      72726179 
 35509      00
 35510              	.LASF69:
 35511 1db1 5F4D5F70 		.string	"_M_p"
 35511      00
 35512              	.LASF360:
 35513 1db6 5F4D5F78 		.string	"_M_x"
 35513      00
 35514              	.LASF436:
 35515 1dbb 5F535F62 		.string	"_S_badbit"
 35515      61646269 
 35515      7400
 35516              	.LASF923:
 35517 1dc5 5F446573 		.string	"_Destroy<float*, float>"
 35517      74726F79 
 35517      3C666C6F 
 35517      61742A2C 
 35517      20666C6F 
 35518              	.LASF493:
 35519 1ddd 72656269 		.string	"rebind<float>"
 35519      6E643C66 
 35519      6C6F6174 
 35519      3E00
 35520              	.LASF1304:
 35521 1deb 75696E74 		.string	"uint_fast16_t"
 35521      5F666173 
 35521      7431365F 
 35521      7400
 35522              	.LASF774:
 35523 1df9 5F5A4E4B 		.string	"_ZNKSt19normal_distributionIfE10param_type4meanEv"
 35523      53743139 
 35523      6E6F726D 
GAS LISTING /tmp/ccKUqHDa.s 			page 936


 35523      616C5F64 
 35523      69737472 
 35524              	.LASF674:
 35525 1e2b 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE3endEv"
 35525      74367665 
 35525      63746F72 
 35525      49685361 
 35525      49684545 
 35526              	.LASF533:
 35527 1e46 72656269 		.string	"rebind_alloc"
 35527      6E645F61 
 35527      6C6C6F63 
 35527      00
 35528              	.LASF762:
 35529 1e53 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE5frontEv"
 35529      53743561 
 35529      72726179 
 35529      49503968 
 35529      6561746D 
 35530              	.LASF748:
 35531 1e79 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EE4rendEv"
 35531      74356172 
 35531      72617949 
 35531      50396865 
 35531      61746D61 
 35532              	.LASF1242:
 35533 1e9d 77637274 		.string	"wcrtomb"
 35533      6F6D6200 
 35534              	.LASF818:
 35535 1ea5 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE10deallocateERS2_PS1_m"
 35535      74313661 
 35535      6C6C6F63 
 35535      61746F72 
 35535      5F747261 
 35536              	.LASF1251:
 35537 1ee4 746D5F68 		.string	"tm_hour"
 35537      6F757200 
 35538              	.LASF1525:
 35539 1eec 5F5F6275 		.string	"__builtin_logf"
 35539      696C7469 
 35539      6E5F6C6F 
 35539      676600
 35540              	.LASF373:
 35541 1efb 5F4D5F66 		.string	"_M_file"
 35541      696C6500 
 35542              	.LASF81:
 35543 1f03 5F4D5F72 		.string	"_M_refcount"
 35543      6566636F 
 35543      756E7400 
 35544              	.LASF765:
 35545 1f0f 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EE4dataEv"
 35545      74356172 
 35545      72617949 
 35545      50396865 
 35545      61746D61 
 35546              	.LASF1511:
 35547 1f33 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIsE5__maxE"
GAS LISTING /tmp/ccKUqHDa.s 			page 937


 35547      5F5F676E 
 35547      755F6378 
 35547      7832345F 
 35547      5F6E756D 
 35548              	.LASF760:
 35549 1f65 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE2atEm"
 35549      53743561 
 35549      72726179 
 35549      49503968 
 35549      6561746D 
 35550              	.LASF1060:
 35551 1f88 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIfEE15_S_nothrow_moveEv"
 35551      5F5F676E 
 35551      755F6378 
 35551      7831345F 
 35551      5F616C6C 
 35552              	.LASF45:
 35553 1fc0 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4moveEPcPKcm"
 35553      74313163 
 35553      6861725F 
 35553      74726169 
 35553      74734963 
 35554              	.LASF789:
 35555 1fe2 5F5A4E4B 		.string	"_ZNKSt19normal_distributionIfE3maxEv"
 35555      53743139 
 35555      6E6F726D 
 35555      616C5F64 
 35555      69737472 
 35556              	.LASF122:
 35557 2007 5F4D5F63 		.string	"_M_check"
 35557      6865636B 
 35557      00
 35558              	.LASF1310:
 35559 2010 75696E74 		.string	"uintmax_t"
 35559      6D61785F 
 35559      7400
 35560              	.LASF635:
 35561 201a 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE3endEv"
 35561      53743136 
 35561      696E6974 
 35561      69616C69 
 35561      7A65725F 
 35562              	.LASF1192:
 35563 203c 5F767461 		.string	"_vtable_offset"
 35563      626C655F 
 35563      6F666673 
 35563      657400
 35564              	.LASF1436:
 35565 204b 5F417267 		.string	"_Args"
 35565      7300
 35566              	.LASF1082:
 35567 2051 6E65775F 		.string	"new_allocator<std::pair<float, float> >"
 35567      616C6C6F 
 35567      6361746F 
 35567      723C7374 
 35567      643A3A70 
 35568              	.LASF1455:
GAS LISTING /tmp/ccKUqHDa.s 			page 938


 35569 2079 5F5F7232 		.string	"__r2"
 35569      00
 35570              	.LASF577:
 35571 207e 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE4sizeEv"
 35571      53743676 
 35571      6563746F 
 35571      72496653 
 35571      61496645 
 35572              	.LASF668:
 35573 209b 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEEaSEOS1_"
 35573      74367665 
 35573      63746F72 
 35573      49685361 
 35573      49684545 
 35574              	.LASF592:
 35575 20b7 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE5frontEv"
 35575      53743676 
 35575      6563746F 
 35575      72496653 
 35575      61496645 
 35576              	.LASF589:
 35577 20d5 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE2atEm"
 35577      74367665 
 35577      63746F72 
 35577      49665361 
 35577      49664545 
 35578              	.LASF783:
 35579 20ef 5F5A4E4B 		.string	"_ZNKSt19normal_distributionIfE4meanEv"
 35579      53743139 
 35579      6E6F726D 
 35579      616C5F64 
 35579      69737472 
 35580              	.LASF952:
 35581 2115 5F5A5374 		.string	"_ZSt18generate_canonicalIfLm24ESt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm25674
 35581      31386765 
 35581      6E657261 
 35581      74655F63 
 35581      616E6F6E 
 35582              	.LASF1483:
 35583 21c4 3C6C616D 		.string	"<lambda>"
 35583      6264613E 
 35583      00
 35584              	.LASF782:
 35585 21cd 5F5A4E53 		.string	"_ZNSt19normal_distributionIfE5resetEv"
 35585      7431396E 
 35585      6F726D61 
 35585      6C5F6469 
 35585      73747269 
 35586              	.LASF1523:
 35587 21f3 68656174 		.string	"heatmap_render_to"
 35587      6D61705F 
 35587      72656E64 
 35587      65725F74 
 35587      6F00
 35588              	.LASF386:
 35589 2205 5F4D5F66 		.string	"_M_fini"
 35589      696E6900 
GAS LISTING /tmp/ccKUqHDa.s 			page 939


 35590              	.LASF1435:
 35591 220d 5F5F7364 		.string	"__sd"
 35591      00
 35592              	.LASF991:
 35593 2212 5F5F6E75 		.string	"__numeric_traits_integer<int>"
 35593      6D657269 
 35593      635F7472 
 35593      61697473 
 35593      5F696E74 
 35594              	.LASF250:
 35595 2230 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcS4_"
 35595      73377265 
 35595      706C6163 
 35595      65454E39 
 35595      5F5F676E 
 35596              	.LASF601:
 35597 226d 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE6insertEN9__gnu_cxx17__normal_iteratorIPKfS1_EEOf"
 35597      74367665 
 35597      63746F72 
 35597      49665361 
 35597      49664545 
 35598              	.LASF87:
 35599 22b3 5F4D5F69 		.string	"_M_is_leaked"
 35599      735F6C65 
 35599      616B6564 
 35599      00
 35600              	.LASF537:
 35601 22c0 5F4D5F73 		.string	"_M_start"
 35601      74617274 
 35601      00
 35602              	.LASF603:
 35603 22c9 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE6insertEN9__gnu_cxx17__normal_iteratorIPKfS1_EEmRS4_"
 35603      74367665 
 35603      63746F72 
 35603      49665361 
 35603      49664545 
 35604              	.LASF1148:
 35605 2312 6C646976 		.string	"ldiv"
 35605      00
 35606              	.LASF1039:
 35607 2317 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIfE7addressERf"
 35607      395F5F67 
 35607      6E755F63 
 35607      78783133 
 35607      6E65775F 
 35608              	.LASF443:
 35609 2343 5F535F65 		.string	"_S_end"
 35609      6E6400
 35610              	.LASF5:
 35611 234a 76616C75 		.string	"value_type"
 35611      655F7479 
 35611      706500
 35612              	.LASF1256:
 35613 2355 746D5F79 		.string	"tm_yday"
 35613      64617900 
 35614              	.LASF1038:
 35615 235d 6E65775F 		.string	"new_allocator<float>"
GAS LISTING /tmp/ccKUqHDa.s 			page 940


 35615      616C6C6F 
 35615      6361746F 
 35615      723C666C 
 35615      6F61743E 
 35616              	.LASF976:
 35617 2372 5F5F6E75 		.string	"__numeric_traits_integer<long int>"
 35617      6D657269 
 35617      635F7472 
 35617      61697473 
 35617      5F696E74 
 35618              	.LASF467:
 35619 2395 62616462 		.string	"badbit"
 35619      697400
 35620              	.LASF769:
 35621 239c 6E6F726D 		.string	"normal_distribution<float>"
 35621      616C5F64 
 35621      69737472 
 35621      69627574 
 35621      696F6E3C 
 35622              	.LASF838:
 35623 23b7 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE3endEv"
 35623      74367665 
 35623      63746F72 
 35623      49537434 
 35623      70616972 
 35624              	.LASF456:
 35625 23de 72696768 		.string	"right"
 35625      7400
 35626              	.LASF1403:
 35627 23e4 62747970 		.string	"btype"
 35627      6500
 35628              	.LASF534:
 35629 23ea 5F5F616C 		.string	"__alloctr_rebind<std::allocator<float>, float, true>"
 35629      6C6F6374 
 35629      725F7265 
 35629      62696E64 
 35629      3C737464 
 35630              	.LASF1358:
 35631 241f 666F7065 		.string	"fopen"
 35631      6E00
 35632              	.LASF13:
 35633 2425 5F4D5F72 		.string	"_M_release"
 35633      656C6561 
 35633      736500
 35634              	.LASF1139:
 35635 2430 696E7436 		.string	"int64_t"
 35635      345F7400 
 35636              	.LASF120:
 35637 2438 5F4D5F6C 		.string	"_M_leak"
 35637      65616B00 
 35638              	.LASF681:
 35639 2440 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE4cendEv"
 35639      53743676 
 35639      6563746F 
 35639      72496853 
 35639      61496845 
 35640              	.LASF1245:
GAS LISTING /tmp/ccKUqHDa.s 			page 941


 35641 245d 77637363 		.string	"wcscoll"
 35641      6F6C6C00 
 35642              	.LASF912:
 35643 2465 73657473 		.string	"setstate"
 35643      74617465 
 35643      00
 35644              	.LASF696:
 35645 246e 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE2atEm"
 35645      53743676 
 35645      6563746F 
 35645      72496853 
 35645      61496845 
 35646              	.LASF611:
 35647 2489 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE21_M_default_initializeEm"
 35647      74367665 
 35647      63746F72 
 35647      49665361 
 35647      49664545 
 35648              	.LASF341:
 35649 24b7 5F5A4E53 		.string	"_ZNSt8__detail4_ModImLm624ELm1ELm0ELb1ELb1EE6__calcEm"
 35649      74385F5F 
 35649      64657461 
 35649      696C345F 
 35649      4D6F6449 
 35650              	.LASF1527:
 35651 24ed 6C6F6766 		.string	"logf"
 35651      00
 35652              	.LASF1427:
 35653 24f2 5F5F6F75 		.string	"__out"
 35653      7400
 35654              	.LASF1067:
 35655 24f8 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIhE7addressERKh"
 35655      395F5F67 
 35655      6E755F63 
 35655      78783133 
 35655      6E65775F 
 35656              	.LASF242:
 35657 2525 5F5A4E53 		.string	"_ZNSs7replaceEmmPKcm"
 35657      73377265 
 35657      706C6163 
 35657      65456D6D 
 35657      504B636D 
 35658              	.LASF861:
 35659 253a 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE5frontEv"
 35659      74367665 
 35659      63746F72 
 35659      49537434 
 35659      70616972 
 35660              	.LASF725:
 35661 2563 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE14_M_move_assignEOS1_St17integral_constantIbLb0EE"
 35661      74367665 
 35661      63746F72 
 35661      49685361 
 35661      49684545 
 35662              	.LASF715:
 35663 25a9 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE21_M_default_initializeEm"
 35663      74367665 
GAS LISTING /tmp/ccKUqHDa.s 			page 942


 35663      63746F72 
 35663      49685361 
 35663      49684545 
 35664              	.LASF262:
 35665 25d7 5F5A4E4B 		.string	"_ZNKSs4copyEPcmm"
 35665      53733463 
 35665      6F707945 
 35665      50636D6D 
 35665      00
 35666              	.LASF1546:
 35667 25e8 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEEC2EmRKS0_"
 35667      74367665 
 35667      63746F72 
 35667      49685361 
 35667      49684545 
 35668              	.LASF845:
 35669 2606 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE4cendEv"
 35669      53743676 
 35669      6563746F 
 35669      72495374 
 35669      34706169 
 35670              	.LASF1062:
 35671 262f 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIfEE15_S_nothrow_swapEv"
 35671      5F5F676E 
 35671      755F6378 
 35671      7831345F 
 35671      5F616C6C 
 35672              	.LASF884:
 35673 2667 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE12_M_check_lenEmPKc"
 35673      53743676 
 35673      6563746F 
 35673      72495374 
 35673      34706169 
 35674              	.LASF633:
 35675 269c 5F5A4E4B 		.string	"_ZNKSt16initializer_listIfE4sizeEv"
 35675      53743136 
 35675      696E6974 
 35675      69616C69 
 35675      7A65725F 
 35676              	.LASF548:
 35677 26bf 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIfSaIfEE13get_allocatorEv"
 35677      53743132 
 35677      5F566563 
 35677      746F725F 
 35677      62617365 
 35678              	.LASF645:
 35679 26ed 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE22_S_void_pointer_helperEz"
 35679      74313661 
 35679      6C6C6F63 
 35679      61746F72 
 35679      5F747261 
 35680              	.LASF1052:
 35681 2726 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIfEE27_S_propagate_on_copy_assignEv"
 35681      5F5F676E 
 35681      755F6378 
 35681      7831345F 
 35681      5F616C6C 
GAS LISTING /tmp/ccKUqHDa.s 			page 943


 35682              	.LASF311:
 35683 276a 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char const*, std::basic_string<char, std::c
 35683      7273655F 
 35683      69746572 
 35683      61746F72 
 35683      3C5F5F67 
 35684              	.LASF1174:
 35685 27f0 5F666C61 		.string	"_flags"
 35685      677300
 35686              	.LASF826:
 35687 27f7 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseISt4pairIffESaIS1_EE13get_allocatorEv"
 35687      53743132 
 35687      5F566563 
 35687      746F725F 
 35687      62617365 
 35688              	.LASF583:
 35689 2831 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE5emptyEv"
 35689      53743676 
 35689      6563746F 
 35689      72496653 
 35689      61496645 
 35690              	.LASF1325:
 35691 284f 66726163 		.string	"frac_digits"
 35691      5F646967 
 35691      69747300 
 35692              	.LASF1532:
 35693 285b 68656174 		.string	"heatmap_stamp_load"
 35693      6D61705F 
 35693      7374616D 
 35693      705F6C6F 
 35693      616400
 35694              	.LASF812:
 35695 286e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE19_S_size_type_helperEz"
 35695      74313661 
 35695      6C6C6F63 
 35695      61746F72 
 35695      5F747261 
 35696              	.LASF1265:
 35697 28ae 77637373 		.string	"wcsspn"
 35697      706E00
 35698              	.LASF370:
 35699 28b5 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 35699      7432336D 
 35699      65727365 
 35699      6E6E655F 
 35699      74776973 
 35700              	.LASF1235:
 35701 2950 756E6765 		.string	"ungetwc"
 35701      74776300 
 35702              	.LASF761:
 35703 2958 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EE5frontEv"
 35703      74356172 
 35703      72617949 
 35703      50396865 
 35703      61746D61 
 35704              	.LASF1118:
 35705 297d 646F7562 		.string	"double"
GAS LISTING /tmp/ccKUqHDa.s 			page 944


 35705      6C6500
 35706              	.LASF393:
 35707 2984 5F5F6376 		.string	"__cv_selector<long unsigned int, false, false>"
 35707      5F73656C 
 35707      6563746F 
 35707      723C6C6F 
 35707      6E672075 
 35708              	.LASF550:
 35709 29b3 7E5F5665 		.string	"~_Vector_base"
 35709      63746F72 
 35709      5F626173 
 35709      6500
 35710              	.LASF1381:
 35711 29c1 77637479 		.string	"wctype"
 35711      706500
 35712              	.LASF1443:
 35713 29c8 5F5F6E69 		.string	"__niter"
 35713      74657200 
 35714              	.LASF369:
 35715 29d0 5F4D5F67 		.string	"_M_gen_rand"
 35715      656E5F72 
 35715      616E6400 
 35716              	.LASF471:
 35717 29dc 6F70656E 		.string	"openmode"
 35717      6D6F6465 
 35717      00
 35718              	.LASF1184:
 35719 29e5 5F494F5F 		.string	"_IO_backup_base"
 35719      6261636B 
 35719      75705F62 
 35719      61736500 
 35720              	.LASF575:
 35721 29f5 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE7crbeginEv"
 35721      53743676 
 35721      6563746F 
 35721      72496653 
 35721      61496645 
 35722              	.LASF1396:
 35723 2a15 4C43545F 		.string	"LCT_RGBA"
 35723      52474241 
 35723      00
 35724              	.LASF854:
 35725 2a1e 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE5emptyEv"
 35725      53743676 
 35725      6563746F 
 35725      72495374 
 35725      34706169 
 35726              	.LASF1142:
 35727 2a48 61745F71 		.string	"at_quick_exit"
 35727      7569636B 
 35727      5F657869 
 35727      7400
 35728              	.LASF984:
 35729 2a56 7E6E6577 		.string	"~new_allocator"
 35729      5F616C6C 
 35729      6F636174 
 35729      6F7200
GAS LISTING /tmp/ccKUqHDa.s 			page 945


 35730              	.LASF1215:
 35731 2a65 5F5F6D62 		.string	"__mbstate_t"
 35731      73746174 
 35731      655F7400 
 35732              	.LASF505:
 35733 2a71 636F6E73 		.string	"const_void_pointer"
 35733      745F766F 
 35733      69645F70 
 35733      6F696E74 
 35733      657200
 35734              	.LASF1210:
 35735 2a84 31315F5F 		.string	"11__mbstate_t"
 35735      6D627374 
 35735      6174655F 
 35735      7400
 35736              	.LASF630:
 35737 2a92 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<float const*, std::vector<float, std::alloc
 35737      7273655F 
 35737      69746572 
 35737      61746F72 
 35737      3C5F5F67 
 35738              	.LASF249:
 35739 2afd 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S1_S1_"
 35739      73377265 
 35739      706C6163 
 35739      65454E39 
 35739      5F5F676E 
 35740              	.LASF1224:
 35741 2b3a 66777363 		.string	"fwscanf"
 35741      616E6600 
 35742              	.LASF34:
 35743 2b42 63686172 		.string	"char_type"
 35743      5F747970 
 35743      6500
 35744              	.LASF712:
 35745 2b4c 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE4swapERS1_"
 35745      74367665 
 35745      63746F72 
 35745      49685361 
 35745      49684545 
 35746              	.LASF66:
 35747 2b6b 62617369 		.string	"basic_string<char, std::char_traits<char>, std::allocator<char> >"
 35747      635F7374 
 35747      72696E67 
 35747      3C636861 
 35747      722C2073 
 35748              	.LASF1433:
 35749 2bad 5F5F6C61 		.string	"__last"
 35749      737400
 35750              	.LASF340:
 35751 2bb4 5F4D6F64 		.string	"_Mod<long unsigned int, 624ul, 1ul, 0ul, true, true>"
 35751      3C6C6F6E 
 35751      6720756E 
 35751      7369676E 
 35751      65642069 
 35752              	.LASF759:
 35753 2be9 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EE2atEm"
GAS LISTING /tmp/ccKUqHDa.s 			page 946


 35753      74356172 
 35753      72617949 
 35753      50396865 
 35753      61746D61 
 35754              	.LASF292:
 35755 2c0b 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEPKcm"
 35755      53733137 
 35755      66696E64 
 35755      5F666972 
 35755      73745F6E 
 35756              	.LASF93:
 35757 2c2a 5F4D5F73 		.string	"_M_set_sharable"
 35757      65745F73 
 35757      68617261 
 35757      626C6500 
 35758              	.LASF1366:
 35759 2c3a 67657473 		.string	"gets"
 35759      00
 35760              	.LASF487:
 35761 2c3f 7461626C 		.string	"table_size"
 35761      655F7369 
 35761      7A6500
 35762              	.LASF1091:
 35763 2c4a 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIffEEE27_S_propagate_on_copy_assignEv"
 35763      5F5F676E 
 35763      755F6378 
 35763      7831345F 
 35763      5F616C6C 
 35764              	.LASF1474:
 35765 2c98 6E706F69 		.string	"npoints"
 35765      6E747300 
 35766              	.LASF1335:
 35767 2ca0 696E745F 		.string	"int_n_sep_by_space"
 35767      6E5F7365 
 35767      705F6279 
 35767      5F737061 
 35767      636500
 35768              	.LASF1012:
 35769 2cb3 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEmiEl"
 35769      395F5F67 
 35769      6E755F63 
 35769      78783137 
 35769      5F5F6E6F 
 35770              	.LASF452:
 35771 2cdf 626F6F6C 		.string	"boolalpha"
 35771      616C7068 
 35771      6100
 35772              	.LASF954:
 35773 2ce9 6F737472 		.string	"ostream"
 35773      65616D00 
 35774              	.LASF634:
 35775 2cf1 5F5A4E4B 		.string	"_ZNKSt16initializer_listIfE5beginEv"
 35775      53743136 
 35775      696E6974 
 35775      69616C69 
 35775      7A65725F 
 35776              	.LASF860:
GAS LISTING /tmp/ccKUqHDa.s 			page 947


 35777 2d15 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE2atEm"
 35777      53743676 
 35777      6563746F 
 35777      72495374 
 35777      34706169 
 35778              	.LASF1492:
 35779 2d3c 73746469 		.string	"stdin"
 35779      6E00
 35780              	.LASF1404:
 35781 2d42 7573655F 		.string	"use_lz77"
 35781      6C7A3737 
 35781      00
 35782              	.LASF500:
 35783 2d4b 72656269 		.string	"rebind"
 35783      6E6400
 35784              	.LASF734:
 35785 2d52 5F535F72 		.string	"_S_ref"
 35785      656600
 35786              	.LASF1409:
 35787 2d59 63757374 		.string	"custom_deflate"
 35787      6F6D5F64 
 35787      65666C61 
 35787      746500
 35788              	.LASF323:
 35789 2d68 5F5F756E 		.string	"__uninitialized_default_n_1<true>"
 35789      696E6974 
 35789      69616C69 
 35789      7A65645F 
 35789      64656661 
 35790              	.LASF148:
 35791 2d8a 62617369 		.string	"basic_string"
 35791      635F7374 
 35791      72696E67 
 35791      00
 35792              	.LASF1431:
 35793 2d97 5F5F6F73 		.string	"__os"
 35793      00
 35794              	.LASF1176:
 35795 2d9c 5F494F5F 		.string	"_IO_read_end"
 35795      72656164 
 35795      5F656E64 
 35795      00
 35796              	.LASF215:
 35797 2da9 70757368 		.string	"push_back"
 35797      5F626163 
 35797      6B00
 35798              	.LASF1030:
 35799 2db3 5F5F6D61 		.string	"__max_digits10"
 35799      785F6469 
 35799      67697473 
 35799      313000
 35800              	.LASF383:
 35801 2dc2 5F5A4E53 		.string	"_ZNSt13random_device7_M_initERKSs"
 35801      74313372 
 35801      616E646F 
 35801      6D5F6465 
 35801      76696365 
GAS LISTING /tmp/ccKUqHDa.s 			page 948


 35802              	.LASF1282:
 35803 2de4 77637373 		.string	"wcsstr"
 35803      747200
 35804              	.LASF777:
 35805 2deb 5F4D5F70 		.string	"_M_param"
 35805      6172616D 
 35805      00
 35806              	.LASF558:
 35807 2df4 76656374 		.string	"vector"
 35807      6F7200
 35808              	.LASF1124:
 35809 2dfb 6C646976 		.string	"ldiv_t"
 35809      5F7400
 35810              	.LASF1465:
 35811 2e02 3C6C616D 		.string	"<lambda(float)>"
 35811      62646128 
 35811      666C6F61 
 35811      74293E00 
 35812              	.LASF890:
 35813 2e12 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<const std::pair<float, float>*, std::vector
 35813      7273655F 
 35813      69746572 
 35813      61746F72 
 35813      3C5F5F67 
 35814              	.LASF896:
 35815 2eb4 69746572 		.string	"iterator_traits<std::pair<float, float>*>"
 35815      61746F72 
 35815      5F747261 
 35815      6974733C 
 35815      7374643A 
 35816              	.LASF499:
 35817 2ede 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPfE10pointer_toERf"
 35817      74313470 
 35817      6F696E74 
 35817      65725F74 
 35817      72616974 
 35818              	.LASF345:
 35819 2f07 6E706F73 		.string	"npos"
 35819      00
 35820              	.LASF464:
 35821 2f0c 61646A75 		.string	"adjustfield"
 35821      73746669 
 35821      656C6400 
 35822              	.LASF530:
 35823 2f18 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE8max_sizeERKS0_"
 35823      74313661 
 35823      6C6C6F63 
 35823      61746F72 
 35823      5F747261 
 35824              	.LASF529:
 35825 2f46 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE10deallocateERS0_Pfm"
 35825      74313661 
 35825      6C6C6F63 
 35825      61746F72 
 35825      5F747261 
 35826              	.LASF595:
 35827 2f79 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE4dataEv"
GAS LISTING /tmp/ccKUqHDa.s 			page 949


 35827      74367665 
 35827      63746F72 
 35827      49665361 
 35827      49664545 
 35828              	.LASF48:
 35829 2f95 61737369 		.string	"assign"
 35829      676E00
 35830              	.LASF1054:
 35831 2f9c 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIfEE27_S_propagate_on_move_assignEv"
 35831      5F5F676E 
 35831      755F6378 
 35831      7831345F 
 35831      5F616C6C 
 35832              	.LASF719:
 35833 2fe0 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE16_M_shrink_to_fitEv"
 35833      74367665 
 35833      63746F72 
 35833      49685361 
 35833      49684545 
 35834              	.LASF916:
 35835 3009 666F7277 		.string	"forward<float>"
 35835      6172643C 
 35835      666C6F61 
 35835      743E00
 35836              	.LASF41:
 35837 3018 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6lengthEPKc"
 35837      74313163 
 35837      6861725F 
 35837      74726169 
 35837      74734963 
 35838              	.LASF408:
 35839 3039 5F535F66 		.string	"_S_fixed"
 35839      69786564 
 35839      00
 35840              	.LASF1498:
 35841 3042 5F5A4E53 		.string	"_ZNSt17integral_constantIbLb0EE5valueE"
 35841      74313769 
 35841      6E746567 
 35841      72616C5F 
 35841      636F6E73 
 35842              	.LASF475:
 35843 3069 696F735F 		.string	"ios_base"
 35843      62617365 
 35843      00
 35844              	.LASF1023:
 35845 3072 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEixEl"
 35845      395F5F67 
 35845      6E755F63 
 35845      78783137 
 35845      5F5F6E6F 
 35846              	.LASF214:
 35847 309f 5F5A4E53 		.string	"_ZNSs6appendESt16initializer_listIcE"
 35847      73366170 
 35847      70656E64 
 35847      45537431 
 35847      36696E69 
 35848              	.LASF1320:
GAS LISTING /tmp/ccKUqHDa.s 			page 950


 35849 30c4 6D6F6E5F 		.string	"mon_thousands_sep"
 35849      74686F75 
 35849      73616E64 
 35849      735F7365 
 35849      7000
 35850              	.LASF119:
 35851 30d6 5F5A4E4B 		.string	"_ZNKSs7_M_iendEv"
 35851      5373375F 
 35851      4D5F6965 
 35851      6E644576 
 35851      00
 35852              	.LASF1180:
 35853 30e7 5F494F5F 		.string	"_IO_write_end"
 35853      77726974 
 35853      655F656E 
 35853      6400
 35854              	.LASF1037:
 35855 30f5 5F5F6E75 		.string	"__numeric_traits_integer<short int>"
 35855      6D657269 
 35855      635F7472 
 35855      61697473 
 35855      5F696E74 
 35856              	.LASF83:
 35857 3119 5F535F6D 		.string	"_S_max_size"
 35857      61785F73 
 35857      697A6500 
 35858              	.LASF470:
 35859 3125 676F6F64 		.string	"goodbit"
 35859      62697400 
 35860              	.LASF1049:
 35861 312d 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIfEE10_S_on_swapERS1_S3_"
 35861      5F5F676E 
 35861      755F6378 
 35861      7831345F 
 35861      5F616C6C 
 35862              	.LASF489:
 35863 3166 64696666 		.string	"difference_type"
 35863      6572656E 
 35863      63655F74 
 35863      79706500 
 35864              	.LASF453:
 35865 3176 66697865 		.string	"fixed"
 35865      6400
 35866              	.LASF1344:
 35867 317c 5F475F66 		.string	"_G_fpos_t"
 35867      706F735F 
 35867      7400
 35868              	.LASF79:
 35869 3186 5F4D5F6C 		.string	"_M_length"
 35869      656E6774 
 35869      6800
 35870              	.LASF1402:
 35871 3190 4C6F6465 		.string	"LodePNGCompressSettings"
 35871      504E4743 
 35871      6F6D7072 
 35871      65737353 
 35871      65747469 
GAS LISTING /tmp/ccKUqHDa.s 			page 951


 35872              	.LASF889:
 35873 31a8 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb0EE"
 35873      74367665 
 35873      63746F72 
 35873      49537434 
 35873      70616972 
 35874              	.LASF257:
 35875 31fa 5F5A4E53 		.string	"_ZNSs15_M_replace_safeEmmPKcm"
 35875      7331355F 
 35875      4D5F7265 
 35875      706C6163 
 35875      655F7361 
 35876              	.LASF301:
 35877 3218 5F5A4E4B 		.string	"_ZNKSs7compareERKSs"
 35877      53733763 
 35877      6F6D7061 
 35877      72654552 
 35877      4B537300 
 35878              	.LASF318:
 35879 322c 5F5A4E4B 		.string	"_ZNKSt16initializer_listIcE5beginEv"
 35879      53743136 
 35879      696E6974 
 35879      69616C69 
 35879      7A65725F 
 35880              	.LASF764:
 35881 3250 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE4backEv"
 35881      53743561 
 35881      72726179 
 35881      49503968 
 35881      6561746D 
 35882              	.LASF50:
 35883 3275 746F5F63 		.string	"to_char_type"
 35883      6861725F 
 35883      74797065 
 35883      00
 35884              	.LASF1181:
 35885 3282 5F494F5F 		.string	"_IO_buf_base"
 35885      6275665F 
 35885      62617365 
 35885      00
 35886              	.LASF942:
 35887 328f 5F5F6669 		.string	"__fill_a<unsigned char>"
 35887      6C6C5F61 
 35887      3C756E73 
 35887      69676E65 
 35887      64206368 
 35888              	.LASF86:
 35889 32a7 5F535F65 		.string	"_S_empty_rep"
 35889      6D707479 
 35889      5F726570 
 35889      00
 35890              	.LASF1195:
 35891 32b4 5F6F6666 		.string	"_offset"
 35891      73657400 
 35892              	.LASF621:
 35893 32bc 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE12_M_check_lenEmPKc"
 35893      53743676 
GAS LISTING /tmp/ccKUqHDa.s 			page 952


 35893      6563746F 
 35893      72496653 
 35893      61496645 
 35894              	.LASF1362:
 35895 32e5 66736574 		.string	"fsetpos"
 35895      706F7300 
 35896              	.LASF1029:
 35897 32ed 5F5F6E75 		.string	"__numeric_traits_floating<float>"
 35897      6D657269 
 35897      635F7472 
 35897      61697473 
 35897      5F666C6F 
 35898              	.LASF676:
 35899 330e 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6rbeginEv"
 35899      74367665 
 35899      63746F72 
 35899      49685361 
 35899      49684545 
 35900              	.LASF832:
 35901 332c 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EEaSEOS3_"
 35901      74367665 
 35901      63746F72 
 35901      49537434 
 35901      70616972 
 35902              	.LASF908:
 35903 3354 5F5A4E53 		.string	"_ZNSt10_Iter_baseIPhLb0EE7_S_baseES0_"
 35903      7431305F 
 35903      49746572 
 35903      5F626173 
 35903      65495068 
 35904              	.LASF30:
 35905 337a 5F466F72 		.string	"_ForwardIterator"
 35905      77617264 
 35905      49746572 
 35905      61746F72 
 35905      00
 35906              	.LASF1260:
 35907 338b 7763736C 		.string	"wcslen"
 35907      656E00
 35908              	.LASF1090:
 35909 3392 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIffEEE10_S_on_swapERS3_S5_"
 35909      5F5F676E 
 35909      755F6378 
 35909      7831345F 
 35909      5F616C6C 
 35910              	.LASF1359:
 35911 33d5 66726561 		.string	"fread"
 35911      6400
 35912              	.LASF73:
 35913 33db 616C6C6F 		.string	"allocator_type"
 35913      6361746F 
 35913      725F7479 
 35913      706500
 35914              	.LASF527:
 35915 33ea 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE8allocateERS0_mPKv"
 35915      74313661 
 35915      6C6C6F63 
GAS LISTING /tmp/ccKUqHDa.s 			page 953


 35915      61746F72 
 35915      5F747261 
 35916              	.LASF1360:
 35917 341b 6672656F 		.string	"freopen"
 35917      70656E00 
 35918              	.LASF16:
 35919 3423 5F4D5F67 		.string	"_M_get"
 35919      657400
 35920              	.LASF1290:
 35921 342a 75696E74 		.string	"uint64_t"
 35921      36345F74 
 35921      00
 35922              	.LASF103:
 35923 3433 5F4D5F64 		.string	"_M_dispose"
 35923      6973706F 
 35923      736500
 35924              	.LASF269:
 35925 343e 5F5A4E4B 		.string	"_ZNKSs13get_allocatorEv"
 35925      53733133 
 35925      6765745F 
 35925      616C6C6F 
 35925      6361746F 
 35926              	.LASF158:
 35927 3456 5F5A4E53 		.string	"_ZNSs3endEv"
 35927      7333656E 
 35927      64457600 
 35928              	.LASF1123:
 35929 3462 366C6469 		.string	"6ldiv_t"
 35929      765F7400 
 35930              	.LASF389:
 35931 346a 5F5A4E53 		.string	"_ZNSt13random_device9_M_getvalEv"
 35931      74313372 
 35931      616E646F 
 35931      6D5F6465 
 35931      76696365 
 35932              	.LASF154:
 35933 348b 5F5A4E53 		.string	"_ZNSsaSESt16initializer_listIcE"
 35933      73615345 
 35933      53743136 
 35933      696E6974 
 35933      69616C69 
 35934              	.LASF1457:
 35935 34ab 5F5F696F 		.string	"__ioinit"
 35935      696E6974 
 35935      00
 35936              	.LASF547:
 35937 34b4 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv"
 35937      53743132 
 35937      5F566563 
 35937      746F725F 
 35937      62617365 
 35938              	.LASF648:
 35939 34e8 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE19_S_size_type_helperEz"
 35939      74313661 
 35939      6C6C6F63 
 35939      61746F72 
 35939      5F747261 
GAS LISTING /tmp/ccKUqHDa.s 			page 954


 35940              	.LASF1278:
 35941 351e 77736361 		.string	"wscanf"
 35941      6E6600
 35942              	.LASF184:
 35943 3525 63617061 		.string	"capacity"
 35943      63697479 
 35943      00
 35944              	.LASF1500:
 35945 352e 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIlE5__minE"
 35945      5F5F676E 
 35945      755F6378 
 35945      7832345F 
 35945      5F6E756D 
 35946              	.LASF749:
 35947 3560 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE4rendEv"
 35947      53743561 
 35947      72726179 
 35947      49503968 
 35947      6561746D 
 35948              	.LASF275:
 35949 3585 5F5A4E4B 		.string	"_ZNKSs5rfindERKSsm"
 35949      53733572 
 35949      66696E64 
 35949      45524B53 
 35949      736D00
 35950              	.LASF886:
 35951 3598 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE"
 35951      74367665 
 35951      63746F72 
 35951      49537434 
 35951      70616972 
 35952              	.LASF958:
 35953 35eb 5F5A5374 		.string	"_ZSt4cout"
 35953      34636F75 
 35953      7400
 35954              	.LASF1240:
 35955 35f5 76777072 		.string	"vwprintf"
 35955      696E7466 
 35955      00
 35956              	.LASF692:
 35957 35fe 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEEixEm"
 35957      74367665 
 35957      63746F72 
 35957      49685361 
 35957      49684545 
 35958              	.LASF1425:
 35959 3617 6F706572 		.string	"operator new"
 35959      61746F72 
 35959      206E6577 
 35959      00
 35960              	.LASF116:
 35961 3624 5F4D5F69 		.string	"_M_ibegin"
 35961      62656769 
 35961      6E00
 35962              	.LASF1345:
 35963 362e 5F494F5F 		.string	"_IO_marker"
 35963      6D61726B 
GAS LISTING /tmp/ccKUqHDa.s 			page 955


 35963      657200
 35964              	.LASF95:
 35965 3639 5F4D5F73 		.string	"_M_set_length_and_sharable"
 35965      65745F6C 
 35965      656E6774 
 35965      685F616E 
 35965      645F7368 
 35966              	.LASF906:
 35967 3654 5F486173 		.string	"_HasBase"
 35967      42617365 
 35967      00
 35968              	.LASF173:
 35969 365d 5F5A4E4B 		.string	"_ZNKSs5crendEv"
 35969      53733563 
 35969      72656E64 
 35969      457600
 35970              	.LASF168:
 35971 366c 63656E64 		.string	"cend"
 35971      00
 35972              	.LASF1064:
 35973 3671 5F5F6E6F 		.string	"__normal_iterator<float const*, std::vector<float, std::allocator<float> > >"
 35973      726D616C 
 35973      5F697465 
 35973      7261746F 
 35973      723C666C 
 35974              	.LASF545:
 35975 36be 5F4D5F67 		.string	"_M_get_Tp_allocator"
 35975      65745F54 
 35975      705F616C 
 35975      6C6F6361 
 35975      746F7200 
 35976              	.LASF503:
 35977 36d2 5F5F706F 		.string	"__pointer"
 35977      696E7465 
 35977      7200
 35978              	.LASF614:
 35979 36dc 5F4D5F66 		.string	"_M_fill_insert"
 35979      696C6C5F 
 35979      696E7365 
 35979      727400
 35980              	.LASF540:
 35981 36eb 5F4D5F73 		.string	"_M_swap_data"
 35981      7761705F 
 35981      64617461 
 35981      00
 35982              	.LASF473:
 35983 36f8 7472756E 		.string	"trunc"
 35983      6300
 35984              	.LASF432:
 35985 36fe 5F535F74 		.string	"_S_trunc"
 35985      72756E63 
 35985      00
 35986              	.LASF76:
 35987 3707 636F6E73 		.string	"const_reverse_iterator"
 35987      745F7265 
 35987      76657273 
 35987      655F6974 
GAS LISTING /tmp/ccKUqHDa.s 			page 956


 35987      65726174 
 35988              	.LASF1417:
 35989 371e 68656174 		.string	"heatmap_colorscheme_t"
 35989      6D61705F 
 35989      636F6C6F 
 35989      72736368 
 35989      656D655F 
 35990              	.LASF1153:
 35991 3734 71736F72 		.string	"qsort"
 35991      7400
 35992              	.LASF31:
 35993 373a 5F5F6465 		.string	"__destroy<float*>"
 35993      7374726F 
 35993      793C666C 
 35993      6F61742A 
 35993      3E00
 35994              	.LASF720:
 35995 374c 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE12_M_check_lenEmPKc"
 35995      53743676 
 35995      6563746F 
 35995      72496853 
 35995      61496845 
 35996              	.LASF586:
 35997 3775 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEEixEm"
 35997      53743676 
 35997      6563746F 
 35997      72496653 
 35997      61496645 
 35998              	.LASF1501:
 35999 378f 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIlE5__maxE"
 35999      5F5F676E 
 35999      755F6378 
 35999      7832345F 
 35999      5F6E756D 
 36000              	.LASF1467:
 36001 37c1 7E3C6C61 		.string	"~<lambda>"
 36001      6D626461 
 36001      3E00
 36002              	.LASF261:
 36003 37cb 5F5A4E53 		.string	"_ZNSs12_S_constructEmcRKSaIcE"
 36003      7331325F 
 36003      535F636F 
 36003      6E737472 
 36003      75637445 
 36004              	.LASF881:
 36005 37e9 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPS1_S3_EE
 36005      74367665 
 36005      63746F72 
 36005      49537434 
 36005      70616972 
 36006              	.LASF3:
 36007 3849 696E7465 		.string	"integral_constant<bool, true>"
 36007      6772616C 
 36007      5F636F6E 
 36007      7374616E 
 36007      743C626F 
 36008              	.LASF114:
GAS LISTING /tmp/ccKUqHDa.s 			page 957


 36009 3867 5F4D5F72 		.string	"_M_rep"
 36009      657000
 36010              	.LASF772:
 36011 386e 70617261 		.string	"param_type"
 36011      6D5F7479 
 36011      706500
 36012              	.LASF525:
 36013 3879 616C6C6F 		.string	"allocate"
 36013      63617465 
 36013      00
 36014              	.LASF1243:
 36015 3882 77637363 		.string	"wcscat"
 36015      617400
 36016              	.LASF1544:
 36017 3889 5F494F5F 		.string	"_IO_lock_t"
 36017      6C6F636B 
 36017      5F7400
 36018              	.LASF379:
 36019 3894 5F5A4E4B 		.string	"_ZNKSt13random_device7entropyEv"
 36019      53743133 
 36019      72616E64 
 36019      6F6D5F64 
 36019      65766963 
 36020              	.LASF368:
 36021 38b4 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 36021      7432336D 
 36021      65727365 
 36021      6E6E655F 
 36021      74776973 
 36022              	.LASF528:
 36023 3944 6465616C 		.string	"deallocate"
 36023      6C6F6361 
 36023      746500
 36024              	.LASF125:
 36025 394f 5F5A4E4B 		.string	"_ZNKSs15_M_check_lengthEmmPKc"
 36025      53733135 
 36025      5F4D5F63 
 36025      6865636B 
 36025      5F6C656E 
 36026              	.LASF1175:
 36027 396d 5F494F5F 		.string	"_IO_read_ptr"
 36027      72656164 
 36027      5F707472 
 36027      00
 36028              	.LASF322:
 36029 397a 5F53697A 		.string	"_Size"
 36029      6500
 36030              	.LASF677:
 36031 3980 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE6rbeginEv"
 36031      53743676 
 36031      6563746F 
 36031      72496853 
 36031      61496845 
 36032              	.LASF241:
 36033 399f 5F5A4E53 		.string	"_ZNSs7replaceEmmRKSsmm"
 36033      73377265 
 36033      706C6163 
GAS LISTING /tmp/ccKUqHDa.s 			page 958


 36033      65456D6D 
 36033      524B5373 
 36034              	.LASF743:
 36035 39b6 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE5beginEv"
 36035      53743561 
 36035      72726179 
 36035      49503968 
 36035      6561746D 
 36036              	.LASF1189:
 36037 39dc 5F666C61 		.string	"_flags2"
 36037      67733200 
 36038              	.LASF130:
 36039 39e4 5F4D5F63 		.string	"_M_copy"
 36039      6F707900 
 36040              	.LASF1370:
 36041 39ec 72657769 		.string	"rewind"
 36041      6E6400
 36042              	.LASF1127:
 36043 39f3 73697A65 		.string	"sizetype"
 36043      74797065 
 36043      00
 36044              	.LASF835:
 36045 39fc 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE6assignESt16initializer_listIS1_E"
 36045      74367665 
 36045      63746F72 
 36045      49537434 
 36045      70616972 
 36046              	.LASF222:
 36047 3a3e 5F5A4E53 		.string	"_ZNSs6assignEmc"
 36047      73366173 
 36047      7369676E 
 36047      456D6300 
 36048              	.LASF616:
 36049 3a4e 5F4D5F64 		.string	"_M_default_append"
 36049      65666175 
 36049      6C745F61 
 36049      7070656E 
 36049      6400
 36050              	.LASF1328:
 36051 3a60 6E5F6373 		.string	"n_cs_precedes"
 36051      5F707265 
 36051      63656465 
 36051      7300
 36052              	.LASF830:
 36053 3a6e 76656374 		.string	"vector<std::pair<float, float>, std::allocator<std::pair<float, float> > >"
 36053      6F723C73 
 36053      74643A3A 
 36053      70616972 
 36053      3C666C6F 
 36054              	.LASF258:
 36055 3ab9 5F535F63 		.string	"_S_construct_aux_2"
 36055      6F6E7374 
 36055      72756374 
 36055      5F617578 
 36055      5F3200
 36056              	.LASF871:
 36057 3acc 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEOS1_"
GAS LISTING /tmp/ccKUqHDa.s 			page 959


 36057      74367665 
 36057      63746F72 
 36057      49537434 
 36057      70616972 
 36058              	.LASF1392:
 36059 3b22 4C43545F 		.string	"LCT_GREY"
 36059      47524559 
 36059      00
 36060              	.LASF24:
 36061 3b2b 5F5F6378 		.string	"__cxa_exception_type"
 36061      615F6578 
 36061      63657074 
 36061      696F6E5F 
 36061      74797065 
 36062              	.LASF1524:
 36063 3b40 68656174 		.string	"heatmap_free"
 36063      6D61705F 
 36063      66726565 
 36063      00
 36064              	.LASF67:
 36065 3b4d 5F416C6C 		.string	"_Alloc_hider"
 36065      6F635F68 
 36065      69646572 
 36065      00
 36066              	.LASF959:
 36067 3b5a 63657272 		.string	"cerr"
 36067      00
 36068              	.LASF1179:
 36069 3b5f 5F494F5F 		.string	"_IO_write_ptr"
 36069      77726974 
 36069      655F7074 
 36069      7200
 36070              	.LASF566:
 36071 3b6d 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE5beginEv"
 36071      53743676 
 36071      6563746F 
 36071      72496653 
 36071      61496645 
 36072              	.LASF19:
 36073 3b8b 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSERKS0_"
 36073      7431355F 
 36073      5F657863 
 36073      65707469 
 36073      6F6E5F70 
 36074              	.LASF726:
 36075 3bb9 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<unsigned char const*, std::vector<unsigned 
 36075      7273655F 
 36075      69746572 
 36075      61746F72 
 36075      3C5F5F67 
 36076              	.LASF511:
 36077 3c3c 5F535F76 		.string	"_S_void_pointer_helper"
 36077      6F69645F 
 36077      706F696E 
 36077      7465725F 
 36077      68656C70 
 36078              	.LASF864:
GAS LISTING /tmp/ccKUqHDa.s 			page 960


 36079 3c53 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE4backEv"
 36079      53743676 
 36079      6563746F 
 36079      72495374 
 36079      34706169 
 36080              	.LASF728:
 36081 3c7c 696E6974 		.string	"initializer_list<unsigned char>"
 36081      69616C69 
 36081      7A65725F 
 36081      6C697374 
 36081      3C756E73 
 36082              	.LASF800:
 36083 3c9c 70616972 		.string	"pair<float, float, void>"
 36083      3C666C6F 
 36083      61742C20 
 36083      666C6F61 
 36083      742C2076 
 36084              	.LASF424:
 36085 3cb5 5F535F69 		.string	"_S_ios_fmtflags_end"
 36085      6F735F66 
 36085      6D74666C 
 36085      6167735F 
 36085      656E6400 
 36086              	.LASF468:
 36087 3cc9 656F6662 		.string	"eofbit"
 36087      697400
 36088              	.LASF876:
 36089 3cd0 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE4swapERS3_"
 36089      74367665 
 36089      63746F72 
 36089      49537434 
 36089      70616972 
 36090              	.LASF563:
 36091 3cfb 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE6assignEmRKf"
 36091      74367665 
 36091      63746F72 
 36091      49665361 
 36091      49664545 
 36092              	.LASF457:
 36093 3d1c 73636965 		.string	"scientific"
 36093      6E746966 
 36093      696300
 36094              	.LASF543:
 36095 3d27 5F54705F 		.string	"_Tp_alloc_type"
 36095      616C6C6F 
 36095      635F7479 
 36095      706500
 36096              	.LASF101:
 36097 3d36 5F535F63 		.string	"_S_create"
 36097      72656174 
 36097      6500
 36098              	.LASF1063:
 36099 3d40 5F5F6E6F 		.string	"__normal_iterator<float*, std::vector<float, std::allocator<float> > >"
 36099      726D616C 
 36099      5F697465 
 36099      7261746F 
 36099      723C666C 
GAS LISTING /tmp/ccKUqHDa.s 			page 961


 36100              	.LASF1103:
 36101 3d87 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEmmEi"
 36101      5F5F676E 
 36101      755F6378 
 36101      7831375F 
 36101      5F6E6F72 
 36102              	.LASF515:
 36103 3dcf 5F535F64 		.string	"_S_difference_type_helper"
 36103      69666665 
 36103      72656E63 
 36103      655F7479 
 36103      70655F68 
 36104              	.LASF1445:
 36105 3de9 5F5F7066 		.string	"__pf"
 36105      00
 36106              	.LASF631:
 36107 3dee 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<float*, std::vector<float, std::allocator<f
 36107      7273655F 
 36107      69746572 
 36107      61746F72 
 36107      3C5F5F67 
 36108              	.LASF1164:
 36109 3e53 6C6C6469 		.string	"lldiv"
 36109      7600
 36110              	.LASF1102:
 36111 3e59 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEmmEv"
 36111      5F5F676E 
 36111      755F6378 
 36111      7831375F 
 36111      5F6E6F72 
 36112              	.LASF564:
 36113 3ea1 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE6assignESt16initializer_listIfE"
 36113      74367665 
 36113      63746F72 
 36113      49665361 
 36113      49664545 
 36114              	.LASF459:
 36115 3ed5 73686F77 		.string	"showpoint"
 36115      706F696E 
 36115      7400
 36116              	.LASF988:
 36117 3edf 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcE8allocateEmPKv"
 36117      5F5F676E 
 36117      755F6378 
 36117      7831336E 
 36117      65775F61 
 36118              	.LASF1464:
 36119 3f0d 7374616D 		.string	"stamps"
 36119      707300
 36120              	.LASF1204:
 36121 3f14 74797065 		.string	"typedef __va_list_tag __va_list_tag"
 36121      64656620 
 36121      5F5F7661 
 36121      5F6C6973 
 36121      745F7461 
 36122              	.LASF581:
 36123 3f38 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE13shrink_to_fitEv"
GAS LISTING /tmp/ccKUqHDa.s 			page 962


 36123      74367665 
 36123      63746F72 
 36123      49665361 
 36123      49664545 
 36124              	.LASF1087:
 36125 3f5e 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorISt4pairIffEE8max_sizeEv"
 36125      395F5F67 
 36125      6E755F63 
 36125      78783133 
 36125      6E65775F 
 36126              	.LASF615:
 36127 3f94 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE14_M_fill_insertEN9__gnu_cxx17__normal_iteratorIPfS1_EEmRKf"
 36127      74367665 
 36127      63746F72 
 36127      49665361 
 36127      49664545 
 36128              	.LASF199:
 36129 3fe4 5F5A4E4B 		.string	"_ZNKSs5frontEv"
 36129      53733566 
 36129      726F6E74 
 36129      457600
 36130              	.LASF178:
 36131 3ff3 5F5A4E4B 		.string	"_ZNKSs8max_sizeEv"
 36131      5373386D 
 36131      61785F73 
 36131      697A6545 
 36131      7600
 36132              	.LASF234:
 36133 4005 5F5A4E53 		.string	"_ZNSs5eraseEmm"
 36133      73356572 
 36133      61736545 
 36133      6D6D00
 36134              	.LASF444:
 36135 4014 5F535F69 		.string	"_S_ios_seekdir_end"
 36135      6F735F73 
 36135      65656B64 
 36135      69725F65 
 36135      6E6400
 36136              	.LASF776:
 36137 4027 5F5A4E4B 		.string	"_ZNKSt19normal_distributionIfE10param_type6stddevEv"
 36137      53743139 
 36137      6E6F726D 
 36137      616C5F64 
 36137      69737472 
 36138              	.LASF319:
 36139 405b 73747269 		.string	"string"
 36139      6E6700
 36140              	.LASF561:
 36141 4062 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEEaSEOS1_"
 36141      74367665 
 36141      63746F72 
 36141      49665361 
 36141      49664545 
 36142              	.LASF1506:
 36143 407e 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIeE16__max_exponent10E"
 36143      5F5F676E 
 36143      755F6378 
GAS LISTING /tmp/ccKUqHDa.s 			page 963


 36143      7832355F 
 36143      5F6E756D 
 36144              	.LASF169:
 36145 40bd 5F5A4E4B 		.string	"_ZNKSs4cendEv"
 36145      53733463 
 36145      656E6445 
 36145      7600
 36146              	.LASF535:
 36147 40cb 5F566563 		.string	"_Vector_base<float, std::allocator<float> >"
 36147      746F725F 
 36147      62617365 
 36147      3C666C6F 
 36147      61742C20 
 36148              	.LASF1307:
 36149 40f7 696E7470 		.string	"intptr_t"
 36149      74725F74 
 36149      00
 36150              	.LASF1543:
 36151 4100 6465636C 		.string	"decltype(nullptr)"
 36151      74797065 
 36151      286E756C 
 36151      6C707472 
 36151      2900
 36152              	.LASF836:
 36153 4112 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE5beginEv"
 36153      74367665 
 36153      63746F72 
 36153      49537434 
 36153      70616972 
 36154              	.LASF1298:
 36155 413b 75696E74 		.string	"uint_least64_t"
 36155      5F6C6561 
 36155      73743634 
 36155      5F7400
 36156              	.LASF1416:
 36157 414a 6E636F6C 		.string	"ncolors"
 36157      6F727300 
 36158              	.LASF1329:
 36159 4152 6E5F7365 		.string	"n_sep_by_space"
 36159      705F6279 
 36159      5F737061 
 36159      636500
 36160              	.LASF440:
 36161 4161 5F496F73 		.string	"_Ios_Seekdir"
 36161      5F536565 
 36161      6B646972 
 36161      00
 36162              	.LASF526:
 36163 416e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE8allocateERS0_m"
 36163      74313661 
 36163      6C6C6F63 
 36163      61746F72 
 36163      5F747261 
 36164              	.LASF562:
 36165 419c 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEEaSESt16initializer_listIfE"
 36165      74367665 
 36165      63746F72 
GAS LISTING /tmp/ccKUqHDa.s 			page 964


 36165      49665361 
 36165      49664545 
 36166              	.LASF70:
 36167 41cb 5F5F6465 		.string	"__destroy<std::pair<float, float>*>"
 36167      7374726F 
 36167      793C7374 
 36167      643A3A70 
 36167      6169723C 
 36168              	.LASF1085:
 36169 41ef 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorISt4pairIffEE8allocateEmPKv"
 36169      5F5F676E 
 36169      755F6378 
 36169      7831336E 
 36169      65775F61 
 36170              	.LASF1541:
 36171 4227 5F5A4E53 		.string	"_ZNSs12_S_empty_repEv"
 36171      7331325F 
 36171      535F656D 
 36171      7074795F 
 36171      72657045 
 36172              	.LASF1473:
 36173 423d 6572726F 		.string	"error"
 36173      7200
 36174              	.LASF1315:
 36175 4243 74686F75 		.string	"thousands_sep"
 36175      73616E64 
 36175      735F7365 
 36175      7000
 36176              	.LASF1066:
 36177 4251 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIhE7addressERh"
 36177      395F5F67 
 36177      6E755F63 
 36177      78783133 
 36177      6E65775F 
 36178              	.LASF858:
 36179 427d 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE14_M_range_checkEm"
 36179      53743676 
 36179      6563746F 
 36179      72495374 
 36179      34706169 
 36180              	.LASF767:
 36181 42b1 72657665 		.string	"reverse_iterator<heatmap_t**>"
 36181      7273655F 
 36181      69746572 
 36181      61746F72 
 36181      3C686561 
 36182              	.LASF1279:
 36183 42cf 77637363 		.string	"wcschr"
 36183      687200
 36184              	.LASF1481:
 36185 42d6 5F5F7072 		.string	"__prng"
 36185      6E6700
 36186              	.LASF195:
 36187 42dd 5F5A4E4B 		.string	"_ZNKSs2atEm"
 36187      53733261 
 36187      74456D00 
 36188              	.LASF1106:
GAS LISTING /tmp/ccKUqHDa.s 			page 965


 36189 42e9 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEplEl"
 36189      395F5F67 
 36189      6E755F63 
 36189      78783137 
 36189      5F5F6E6F 
 36190              	.LASF260:
 36191 4332 5F535F63 		.string	"_S_construct"
 36191      6F6E7374 
 36191      72756374 
 36191      00
 36192              	.LASF1231:
 36193 433f 70757477 		.string	"putwc"
 36193      6300
 36194              	.LASF212:
 36195 4345 5F5A4E53 		.string	"_ZNSs6appendEPKc"
 36195      73366170 
 36195      70656E64 
 36195      45504B63 
 36195      00
 36196              	.LASF738:
 36197 4356 636F6E73 		.string	"const_pointer"
 36197      745F706F 
 36197      696E7465 
 36197      7200
 36198              	.LASF198:
 36199 4364 5F5A4E53 		.string	"_ZNSs5frontEv"
 36199      73356672 
 36199      6F6E7445 
 36199      7600
 36200              	.LASF418:
 36201 4372 5F535F73 		.string	"_S_skipws"
 36201      6B697077 
 36201      7300
 36202              	.LASF773:
 36203 437c 6D65616E 		.string	"mean"
 36203      00
 36204              	.LASF659:
 36205 4381 5F5A4E53 		.string	"_ZNSt12_Vector_baseIhSaIhEE12_Vector_impl12_M_swap_dataERS2_"
 36205      7431325F 
 36205      56656374 
 36205      6F725F62 
 36205      61736549 
 36206              	.LASF251:
 36207 43be 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_S2_S2_"
 36207      73377265 
 36207      706C6163 
 36207      65454E39 
 36207      5F5F676E 
 36208              	.LASF846:
 36209 43fb 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE7crbeginEv"
 36209      53743676 
 36209      6563746F 
 36209      72495374 
 36209      34706169 
 36210              	.LASF377:
 36211 4427 5F5A4E53 		.string	"_ZNSt13random_device3maxEv"
 36211      74313372 
GAS LISTING /tmp/ccKUqHDa.s 			page 966


 36211      616E646F 
 36211      6D5F6465 
 36211      76696365 
 36212              	.LASF1459:
 36213 4442 5F5F7375 		.string	"__sum"
 36213      6D00
 36214              	.LASF742:
 36215 4448 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EE5beginEv"
 36215      74356172 
 36215      72617949 
 36215      50396865 
 36215      61746D61 
 36216              	.LASF673:
 36217 446d 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE5beginEv"
 36217      53743676 
 36217      6563746F 
 36217      72496853 
 36217      61496845 
 36218              	.LASF12:
 36219 448b 5F4D5F61 		.string	"_M_addref"
 36219      64647265 
 36219      6600
 36220              	.LASF281:
 36221 4495 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEPKcmm"
 36221      53733133 
 36221      66696E64 
 36221      5F666972 
 36221      73745F6F 
 36222              	.LASF822:
 36223 44b1 5F566563 		.string	"_Vector_base<std::pair<float, float>, std::allocator<std::pair<float, float> > >"
 36223      746F725F 
 36223      62617365 
 36223      3C737464 
 36223      3A3A7061 
 36224              	.LASF1194:
 36225 4502 5F6C6F63 		.string	"_lock"
 36225      6B00
 36226              	.LASF574:
 36227 4508 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE4cendEv"
 36227      53743676 
 36227      6563746F 
 36227      72496653 
 36227      61496645 
 36228              	.LASF1502:
 36229 4525 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIiE5__minE"
 36229      5F5F676E 
 36229      755F6378 
 36229      7832345F 
 36229      5F6E756D 
 36230              	.LASF874:
 36231 4557 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE5eraseEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EE"
 36231      74367665 
 36231      63746F72 
 36231      49537434 
 36231      70616972 
 36232              	.LASF1069:
 36233 45a8 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIhE10deallocateEPhm"
GAS LISTING /tmp/ccKUqHDa.s 			page 967


 36233      5F5F676E 
 36233      755F6378 
 36233      7831336E 
 36233      65775F61 
 36234              	.LASF283:
 36235 45d8 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEcm"
 36235      53733133 
 36235      66696E64 
 36235      5F666972 
 36235      73745F6F 
 36236              	.LASF1291:
 36237 45f1 696E745F 		.string	"int_least8_t"
 36237      6C656173 
 36237      74385F74 
 36237      00
 36238              	.LASF1158:
 36239 45fe 73747274 		.string	"strtod"
 36239      6F6400
 36240              	.LASF1411:
 36241 4605 68656174 		.string	"heatmap_t"
 36241      6D61705F 
 36241      7400
 36242              	.LASF1168:
 36243 460f 73747274 		.string	"strtof"
 36243      6F6600
 36244              	.LASF1159:
 36245 4616 73747274 		.string	"strtol"
 36245      6F6C00
 36246              	.LASF754:
 36247 461d 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE4sizeEv"
 36247      53743561 
 36247      72726179 
 36247      49503968 
 36247      6561746D 
 36248              	.LASF40:
 36249 4642 5F5A4E53 		.string	"_ZNSt11char_traitsIcE7compareEPKcS2_m"
 36249      74313163 
 36249      6861725F 
 36249      74726169 
 36249      74734963 
 36250              	.LASF740:
 36251 4668 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EE4fillERKS1_"
 36251      74356172 
 36251      72617949 
 36251      50396865 
 36251      61746D61 
 36252              	.LASF1470:
 36253 4690 5F46554E 		.string	"_FUN"
 36253      00
 36254              	.LASF1496:
 36255 4695 68656174 		.string	"heatmap_cs_b2w_opaque"
 36255      6D61705F 
 36255      63735F62 
 36255      32775F6F 
 36255      70617175 
 36256              	.LASF1020:
 36257 46ab 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEi"
GAS LISTING /tmp/ccKUqHDa.s 			page 968


 36257      5F5F676E 
 36257      755F6378 
 36257      7831375F 
 36257      5F6E6F72 
 36258              	.LASF850:
 36259 46d7 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE6resizeEm"
 36259      74367665 
 36259      63746F72 
 36259      49537434 
 36259      70616972 
 36260              	.LASF9:
 36261 4701 5F5A4E4B 		.string	"_ZNKSt17integral_constantIbLb1EEcvbEv"
 36261      53743137 
 36261      696E7465 
 36261      6772616C 
 36261      5F636F6E 
 36262              	.LASF1305:
 36263 4727 75696E74 		.string	"uint_fast32_t"
 36263      5F666173 
 36263      7433325F 
 36263      7400
 36264              	.LASF1019:
 36265 4735 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEppEv"
 36265      5F5F676E 
 36265      755F6378 
 36265      7831375F 
 36265      5F6E6F72 
 36266              	.LASF10:
 36267 4761 5F5F6578 		.string	"__exception_ptr"
 36267      63657074 
 36267      696F6E5F 
 36267      70747200 
 36268              	.LASF1271:
 36269 4771 77637378 		.string	"wcsxfrm"
 36269      66726D00 
 36270              	.LASF842:
 36271 4779 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE4rendEv"
 36271      74367665 
 36271      63746F72 
 36271      49537434 
 36271      70616972 
 36272              	.LASF110:
 36273 47a1 5F4D5F64 		.string	"_M_data"
 36273      61746100 
 36274              	.LASF213:
 36275 47a9 5F5A4E53 		.string	"_ZNSs6appendEmc"
 36275      73366170 
 36275      70656E64 
 36275      456D6300 
 36276              	.LASF1046:
 36277 47b9 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIfEE17_S_select_on_copyERKS1_"
 36277      5F5F676E 
 36277      755F6378 
 36277      7831345F 
 36277      5F616C6C 
 36278              	.LASF934:
 36279 47f7 73717274 		.string	"sqrt"
GAS LISTING /tmp/ccKUqHDa.s 			page 969


 36279      00
 36280              	.LASF1065:
 36281 47fc 6E65775F 		.string	"new_allocator<unsigned char>"
 36281      616C6C6F 
 36281      6361746F 
 36281      723C756E 
 36281      7369676E 
 36282              	.LASF1407:
 36283 4819 6E696365 		.string	"nicematch"
 36283      6D617463 
 36283      6800
 36284              	.LASF1182:
 36285 4823 5F494F5F 		.string	"_IO_buf_end"
 36285      6275665F 
 36285      656E6400 
 36286              	.LASF828:
 36287 482f 5F5A4E53 		.string	"_ZNSt12_Vector_baseISt4pairIffESaIS1_EE13_M_deallocateEPS1_m"
 36287      7431325F 
 36287      56656374 
 36287      6F725F62 
 36287      61736549 
 36288              	.LASF758:
 36289 486c 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EEixEm"
 36289      53743561 
 36289      72726179 
 36289      49503968 
 36289      6561746D 
 36290              	.LASF434:
 36291 488e 5F496F73 		.string	"_Ios_Iostate"
 36291      5F496F73 
 36291      74617465 
 36291      00
 36292              	.LASF747:
 36293 489b 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE6rbeginEv"
 36293      53743561 
 36293      72726179 
 36293      49503968 
 36293      6561746D 
 36294              	.LASF965:
 36295 48c2 73686F72 		.string	"short unsigned int"
 36295      7420756E 
 36295      7369676E 
 36295      65642069 
 36295      6E7400
 36296              	.LASF205:
 36297 48d5 5F5A4E53 		.string	"_ZNSspLEPKc"
 36297      73704C45 
 36297      504B6300 
 36298              	.LASF1519:
 36299 48e1 6C6F6465 		.string	"lodepng_error_text"
 36299      706E675F 
 36299      6572726F 
 36299      725F7465 
 36299      787400
 36300              	.LASF1331:
 36301 48f4 6E5F7369 		.string	"n_sign_posn"
 36301      676E5F70 
GAS LISTING /tmp/ccKUqHDa.s 			page 970


 36301      6F736E00 
 36302              	.LASF1284:
 36303 4900 77637374 		.string	"wcstold"
 36303      6F6C6400 
 36304              	.LASF1292:
 36305 4908 696E745F 		.string	"int_least16_t"
 36305      6C656173 
 36305      7431365F 
 36305      7400
 36306              	.LASF1338:
 36307 4916 7365746C 		.string	"setlocale"
 36307      6F63616C 
 36307      6500
 36308              	.LASF1058:
 36309 4920 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIfEE15_S_always_equalEv"
 36309      5F5F676E 
 36309      755F6378 
 36309      7831345F 
 36309      5F616C6C 
 36310              	.LASF1285:
 36311 4958 77637374 		.string	"wcstoll"
 36311      6F6C6C00 
 36312              	.LASF293:
 36313 4960 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEcm"
 36313      53733137 
 36313      66696E64 
 36313      5F666972 
 36313      73745F6E 
 36314              	.LASF1351:
 36315 497d 66636C6F 		.string	"fclose"
 36315      736500
 36316              	.LASF371:
 36317 4984 5F55496E 		.string	"_UIntType"
 36317      74547970 
 36317      6500
 36318              	.LASF1264:
 36319 498e 77637372 		.string	"wcsrtombs"
 36319      746F6D62 
 36319      7300
 36320              	.LASF796:
 36321 4998 70616972 		.string	"pair"
 36321      00
 36322              	.LASF11:
 36323 499d 65786365 		.string	"exception_ptr"
 36323      7074696F 
 36323      6E5F7074 
 36323      7200
 36324              	.LASF1341:
 36325 49ab 395F475F 		.string	"9_G_fpos_t"
 36325      66706F73 
 36325      5F7400
 36326              	.LASF372:
 36327 49b6 72616E64 		.string	"random_device"
 36327      6F6D5F64 
 36327      65766963 
 36327      6500
 36328              	.LASF461:
GAS LISTING /tmp/ccKUqHDa.s 			page 971


 36329 49c4 736B6970 		.string	"skipws"
 36329      777300
 36330              	.LASF358:
 36331 49cb 696E6974 		.string	"initialization_multiplier"
 36331      69616C69 
 36331      7A617469 
 36331      6F6E5F6D 
 36331      756C7469 
 36332              	.LASF273:
 36333 49e5 5F5A4E4B 		.string	"_ZNKSs4findEcm"
 36333      53733466 
 36333      696E6445 
 36333      636D00
 36334              	.LASF1247:
 36335 49f4 77637363 		.string	"wcscspn"
 36335      73706E00 
 36336              	.LASF590:
 36337 49fc 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE2atEm"
 36337      53743676 
 36337      6563746F 
 36337      72496653 
 36337      61496645 
 36338              	.LASF1105:
 36339 4a17 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEpLEl"
 36339      5F5F676E 
 36339      755F6378 
 36339      7831375F 
 36339      5F6E6F72 
 36340              	.LASF718:
 36341 4a5f 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE17_M_default_appendEm"
 36341      74367665 
 36341      63746F72 
 36341      49685361 
 36341      49684545 
 36342              	.LASF462:
 36343 4a89 756E6974 		.string	"unitbuf"
 36343      62756600 
 36344              	.LASF1177:
 36345 4a91 5F494F5F 		.string	"_IO_read_base"
 36345      72656164 
 36345      5F626173 
 36345      6500
 36346              	.LASF365:
 36347 4a9f 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 36347      7432336D 
 36347      65727365 
 36347      6E6E655F 
 36347      74776973 
 36348              	.LASF930:
 36349 4b31 5F5F756E 		.string	"__uninitialized_default_n<std::pair<float, float>*, long unsigned int>"
 36349      696E6974 
 36349      69616C69 
 36349      7A65645F 
 36349      64656661 
 36350              	.LASF460:
 36351 4b78 73686F77 		.string	"showpos"
 36351      706F7300 
GAS LISTING /tmp/ccKUqHDa.s 			page 972


 36352              	.LASF926:
 36353 4b80 5F446573 		.string	"_Destroy<std::pair<float, float>*>"
 36353      74726F79 
 36353      3C737464 
 36353      3A3A7061 
 36353      69723C66 
 36354              	.LASF939:
 36355 4ba3 756E696E 		.string	"uninitialized_fill_n<float*, long unsigned int, float>"
 36355      69746961 
 36355      6C697A65 
 36355      645F6669 
 36355      6C6C5F6E 
 36356              	.LASF374:
 36357 4bda 5F4D5F6D 		.string	"_M_mt"
 36357      7400
 36358              	.LASF732:
 36359 4be0 5F5F6172 		.string	"__array_traits<heatmap_t*, 5ul>"
 36359      7261795F 
 36359      74726169 
 36359      74733C68 
 36359      6561746D 
 36360              	.LASF226:
 36361 4c00 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEESt16initializer_listIcE"
 36361      7336696E 
 36361      73657274 
 36361      454E395F 
 36361      5F676E75 
 36362              	.LASF606:
 36363 4c4a 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE4swapERS1_"
 36363      74367665 
 36363      63746F72 
 36363      49665361 
 36363      49664545 
 36364              	.LASF1084:
 36365 4c69 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorISt4pairIffEE7addressERKS2_"
 36365      395F5F67 
 36365      6E755F63 
 36365      78783133 
 36365      6E65775F 
 36366              	.LASF813:
 36367 4ca2 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE48_S_propagate_on_container_copy_assignment_helpe
 36367      74313661 
 36367      6C6C6F63 
 36367      61746F72 
 36367      5F747261 
 36368              	.LASF1499:
 36369 4cff 5F5A4E53 		.string	"_ZNSt17integral_constantIbLb1EE5valueE"
 36369      74313769 
 36369      6E746567 
 36369      72616C5F 
 36369      636F6E73 
 36370              	.LASF1485:
 36371 4d26 5F5F666F 		.string	"__for_range"
 36371      725F7261 
 36371      6E676500 
 36372              	.LASF512:
 36373 4d32 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE22_S_void_pointer_helperEz"
GAS LISTING /tmp/ccKUqHDa.s 			page 973


 36373      74313661 
 36373      6C6C6F63 
 36373      61746F72 
 36373      5F747261 
 36374              	.LASF737:
 36375 4d6b 5F4D5F65 		.string	"_M_elems"
 36375      6C656D73 
 36375      00
 36376              	.LASF788:
 36377 4d74 5F5A4E4B 		.string	"_ZNKSt19normal_distributionIfE3minEv"
 36377      53743139 
 36377      6E6F726D 
 36377      616C5F64 
 36377      69737472 
 36378              	.LASF847:
 36379 4d99 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE5crendEv"
 36379      53743676 
 36379      6563746F 
 36379      72495374 
 36379      34706169 
 36380              	.LASF663:
 36381 4dc3 5F5A4E53 		.string	"_ZNSt12_Vector_baseIhSaIhEE11_M_allocateEm"
 36381      7431325F 
 36381      56656374 
 36381      6F725F62 
 36381      61736549 
 36382              	.LASF620:
 36383 4dee 5F4D5F63 		.string	"_M_check_len"
 36383      6865636B 
 36383      5F6C656E 
 36383      00
 36384              	.LASF1013:
 36385 4dfb 62617365 		.string	"base"
 36385      00
 36386              	.LASF985:
 36387 4e00 61646472 		.string	"address"
 36387      65737300 
 36388              	.LASF221:
 36389 4e08 5F5A4E53 		.string	"_ZNSs6assignEPKc"
 36389      73366173 
 36389      7369676E 
 36389      45504B63 
 36389      00
 36390              	.LASF239:
 36391 4e19 7265706C 		.string	"replace"
 36391      61636500 
 36392              	.LASF1330:
 36393 4e21 705F7369 		.string	"p_sign_posn"
 36393      676E5F70 
 36393      6F736E00 
 36394              	.LASF1287:
 36395 4e2d 75696E74 		.string	"uint8_t"
 36395      385F7400 
 36396              	.LASF270:
 36397 4e35 5F5A4E4B 		.string	"_ZNKSs4findEPKcmm"
 36397      53733466 
 36397      696E6445 
GAS LISTING /tmp/ccKUqHDa.s 			page 974


 36397      504B636D 
 36397      6D00
 36398              	.LASF546:
 36399 4e47 5F5A4E53 		.string	"_ZNSt12_Vector_baseIfSaIfEE19_M_get_Tp_allocatorEv"
 36399      7431325F 
 36399      56656374 
 36399      6F725F62 
 36399      61736549 
 36400              	.LASF201:
 36401 4e7a 5F5A4E53 		.string	"_ZNSs4backEv"
 36401      73346261 
 36401      636B4576 
 36401      00
 36402              	.LASF849:
 36403 4e87 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE8max_sizeEv"
 36403      53743676 
 36403      6563746F 
 36403      72495374 
 36403      34706169 
 36404              	.LASF974:
 36405 4eb4 5F5F6F70 		.string	"__ops"
 36405      7300
 36406              	.LASF1203:
 36407 4eba 5F5F4649 		.string	"__FILE"
 36407      4C4500
 36408              	.LASF520:
 36409 4ec1 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE48_S_propagate_on_container_copy_assignment_helperEz"
 36409      74313661 
 36409      6C6C6F63 
 36409      61746F72 
 36409      5F747261 
 36410              	.LASF38:
 36411 4f14 636F6D70 		.string	"compare"
 36411      61726500 
 36412              	.LASF1246:
 36413 4f1c 77637363 		.string	"wcscpy"
 36413      707900
 36414              	.LASF1214:
 36415 4f23 5F5F7661 		.string	"__value"
 36415      6C756500 
 36416              	.LASF1001:
 36417 4f2b 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEi"
 36417      5F5F676E 
 36417      755F6378 
 36417      7831375F 
 36417      5F6E6F72 
 36418              	.LASF1193:
 36419 4f56 5F73686F 		.string	"_shortbuf"
 36419      72746275 
 36419      6600
 36420              	.LASF1347:
 36421 4f60 5F736275 		.string	"_sbuf"
 36421      6600
 36422              	.LASF1000:
 36423 4f66 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEppEv"
 36423      5F5F676E 
 36423      755F6378 
GAS LISTING /tmp/ccKUqHDa.s 			page 975


 36423      7831375F 
 36423      5F6E6F72 
 36424              	.LASF817:
 36425 4f91 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE8allocateERS2_mPKv"
 36425      74313661 
 36425      6C6C6F63 
 36425      61746F72 
 36425      5F747261 
 36426              	.LASF68:
 36427 4fcc 5F4D5F65 		.string	"_M_exception_object"
 36427      78636570 
 36427      74696F6E 
 36427      5F6F626A 
 36427      65637400 
 36428              	.LASF666:
 36429 4fe0 76656374 		.string	"vector<unsigned char, std::allocator<unsigned char> >"
 36429      6F723C75 
 36429      6E736967 
 36429      6E656420 
 36429      63686172 
 36430              	.LASF1272:
 36431 5016 7763746F 		.string	"wctob"
 36431      6200
 36432              	.LASF438:
 36433 501c 5F535F66 		.string	"_S_failbit"
 36433      61696C62 
 36433      697400
 36434              	.LASF689:
 36435 5027 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE8capacityEv"
 36435      53743676 
 36435      6563746F 
 36435      72496853 
 36435      61496845 
 36436              	.LASF549:
 36437 5048 5F566563 		.string	"_Vector_base"
 36437      746F725F 
 36437      62617365 
 36437      00
 36438              	.LASF1521:
 36439 5055 5F5A646C 		.string	"_ZdlPv"
 36439      507600
 36440              	.LASF1035:
 36441 505c 5F5F6E75 		.string	"__numeric_traits_integer<long unsigned int>"
 36441      6D657269 
 36441      635F7472 
 36441      61697473 
 36441      5F696E74 
 36442              	.LASF1533:
 36443 5088 5F5F6275 		.string	"__builtin_unwind_resume"
 36443      696C7469 
 36443      6E5F756E 
 36443      77696E64 
 36443      5F726573 
 36444              	.LASF330:
 36445 50a0 5F5A4E4B 		.string	"_ZNKSt8__detail8_AdaptorISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615E
 36445      5374385F 
 36445      5F646574 
GAS LISTING /tmp/ccKUqHDa.s 			page 976


 36445      61696C38 
 36445      5F416461 
 36446              	.LASF0:
 36447 514a 666C6F61 		.string	"float"
 36447      7400
 36448              	.LASF1405:
 36449 5150 77696E64 		.string	"windowsize"
 36449      6F777369 
 36449      7A6500
 36450              	.LASF1213:
 36451 515b 5F5F636F 		.string	"__count"
 36451      756E7400 
 36452              	.LASF964:
 36453 5163 756E7369 		.string	"unsigned char"
 36453      676E6564 
 36453      20636861 
 36453      7200
 36454              	.LASF321:
 36455 5171 5F5F756E 		.string	"__uninit_fill_n<float*, long unsigned int, float>"
 36455      696E6974 
 36455      5F66696C 
 36455      6C5F6E3C 
 36455      666C6F61 
 36456              	.LASF857:
 36457 51a3 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EEixEm"
 36457      53743676 
 36457      6563746F 
 36457      72495374 
 36457      34706169 
 36458              	.LASF1367:
 36459 51c9 70657272 		.string	"perror"
 36459      6F7200
 36460              	.LASF403:
 36461 51d0 6D616B65 		.string	"make_unsigned<long int>"
 36461      5F756E73 
 36461      69676E65 
 36461      643C6C6F 
 36461      6E672069 
 36462              	.LASF786:
 36463 51e8 5F5A4E4B 		.string	"_ZNKSt19normal_distributionIfE5paramEv"
 36463      53743139 
 36463      6E6F726D 
 36463      616C5F64 
 36463      69737472 
 36464              	.LASF1280:
 36465 520f 77637370 		.string	"wcspbrk"
 36465      62726B00 
 36466              	.LASF225:
 36467 5217 5F5A4E53 		.string	"_ZNSs6insertEN9__gnu_cxx17__normal_iteratorIPcSsEEmc"
 36467      7336696E 
 36467      73657274 
 36467      454E395F 
 36467      5F676E75 
 36468              	.LASF246:
 36469 524c 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKcm"
 36469      73377265 
 36469      706C6163 
GAS LISTING /tmp/ccKUqHDa.s 			page 977


 36469      65454E39 
 36469      5F5F676E 
 36470              	.LASF1438:
 36471 5287 5F5F6173 		.string	"__assignable"
 36471      7369676E 
 36471      61626C65 
 36471      00
 36472              	.LASF824:
 36473 5294 5F5A4E53 		.string	"_ZNSt12_Vector_baseISt4pairIffESaIS1_EE19_M_get_Tp_allocatorEv"
 36473      7431325F 
 36473      56656374 
 36473      6F725F62 
 36473      61736549 
 36474              	.LASF1333:
 36475 52d3 696E745F 		.string	"int_p_sep_by_space"
 36475      705F7365 
 36475      705F6279 
 36475      5F737061 
 36475      636500
 36476              	.LASF1510:
 36477 52e6 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIsE5__minE"
 36477      5F5F676E 
 36477      755F6378 
 36477      7832345F 
 36477      5F6E756D 
 36478              	.LASF310:
 36479 5318 74797065 		.string	"type_info"
 36479      5F696E66 
 36479      6F00
 36480              	.LASF1364:
 36481 5322 67657463 		.string	"getc"
 36481      00
 36482              	.LASF1348:
 36483 5327 5F706F73 		.string	"_pos"
 36483      00
 36484              	.LASF367:
 36485 532c 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 36485      7432336D 
 36485      65727365 
 36485      6E6E655F 
 36485      74776973 
 36486              	.LASF1352:
 36487 53c2 66656F66 		.string	"feof"
 36487      00
 36488              	.LASF1369:
 36489 53c7 72656E61 		.string	"rename"
 36489      6D6500
 36490              	.LASF441:
 36491 53ce 5F535F62 		.string	"_S_beg"
 36491      656700
 36492              	.LASF1317:
 36493 53d5 696E745F 		.string	"int_curr_symbol"
 36493      63757272 
 36493      5F73796D 
 36493      626F6C00 
 36494              	.LASF1229:
 36495 53e5 6D627369 		.string	"mbsinit"
GAS LISTING /tmp/ccKUqHDa.s 			page 978


 36495      6E697400 
 36496              	.LASF361:
 36497 53ed 6D657273 		.string	"mersenne_twister_engine"
 36497      656E6E65 
 36497      5F747769 
 36497      73746572 
 36497      5F656E67 
 36498              	.LASF578:
 36499 5405 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE8max_sizeEv"
 36499      53743676 
 36499      6563746F 
 36499      72496653 
 36499      61496645 
 36500              	.LASF1535:
 36501 5426 474E5520 		.string	"GNU C++ 4.9.2 -mtune=generic -march=x86-64 -g -O3 -std=c++11 -fopenmp -fPIC"
 36501      432B2B20 
 36501      342E392E 
 36501      32202D6D 
 36501      74756E65 
 36502              	.LASF661:
 36503 5472 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv"
 36503      53743132 
 36503      5F566563 
 36503      746F725F 
 36503      62617365 
 36504              	.LASF1380:
 36505 54a6 77637472 		.string	"wctrans"
 36505      616E7300 
 36506              	.LASF84:
 36507 54ae 5F535F74 		.string	"_S_terminal"
 36507      65726D69 
 36507      6E616C00 
 36508              	.LASF554:
 36509 54ba 5F5A4E53 		.string	"_ZNSt12_Vector_baseIfSaIfEE13_M_deallocateEPfm"
 36509      7431325F 
 36509      56656374 
 36509      6F725F62 
 36509      61736549 
 36510              	.LASF481:
 36511 54e9 5F4D5F69 		.string	"_M_insert<long unsigned int>"
 36511      6E736572 
 36511      743C6C6F 
 36511      6E672075 
 36511      6E736967 
 36512              	.LASF1116:
 36513 5506 6F706572 		.string	"operator!=<std::pair<float, float>*, std::vector<std::pair<float, float> > >"
 36513      61746F72 
 36513      213D3C73 
 36513      74643A3A 
 36513      70616972 
 36514              	.LASF282:
 36515 5553 5F5A4E4B 		.string	"_ZNKSs13find_first_ofEPKcm"
 36515      53733133 
 36515      66696E64 
 36515      5F666972 
 36515      73745F6F 
 36516              	.LASF1276:
GAS LISTING /tmp/ccKUqHDa.s 			page 979


 36517 556e 776D656D 		.string	"wmemset"
 36517      73657400 
 36518              	.LASF1248:
 36519 5576 77637366 		.string	"wcsftime"
 36519      74696D65 
 36519      00
 36520              	.LASF400:
 36521 557f 5F5F6D61 		.string	"__make_unsigned_selector<long int, true, false>"
 36521      6B655F75 
 36521      6E736967 
 36521      6E65645F 
 36521      73656C65 
 36522              	.LASF1327:
 36523 55af 705F7365 		.string	"p_sep_by_space"
 36523      705F6279 
 36523      5F737061 
 36523      636500
 36524              	.LASF290:
 36525 55be 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofERKSsm"
 36525      53733137 
 36525      66696E64 
 36525      5F666972 
 36525      73745F6E 
 36526              	.LASF763:
 36527 55de 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EE4backEv"
 36527      74356172 
 36527      72617949 
 36527      50396865 
 36527      61746D61 
 36528              	.LASF1423:
 36529 5602 5F5F6774 		.string	"__gthread_active_ptr"
 36529      68726561 
 36529      645F6163 
 36529      74697665 
 36529      5F707472 
 36530              	.LASF465:
 36531 5617 62617365 		.string	"basefield"
 36531      6669656C 
 36531      6400
 36532              	.LASF75:
 36533 5621 636F6E73 		.string	"const_iterator"
 36533      745F6974 
 36533      65726174 
 36533      6F7200
 36534              	.LASF989:
 36535 5630 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIcE10deallocateEPcm"
 36535      5F5F676E 
 36535      755F6378 
 36535      7831336E 
 36535      65775F61 
 36536              	.LASF107:
 36537 5660 5F4D5F72 		.string	"_M_refcopy"
 36537      6566636F 
 36537      707900
 36538              	.LASF950:
 36539 566b 5F47656E 		.string	"_Generator"
 36539      65726174 
GAS LISTING /tmp/ccKUqHDa.s 			page 980


 36539      6F7200
 36540              	.LASF1491:
 36541 5676 70696563 		.string	"piecewise_construct"
 36541      65776973 
 36541      655F636F 
 36541      6E737472 
 36541      75637400 
 36542              	.LASF1183:
 36543 568a 5F494F5F 		.string	"_IO_save_base"
 36543      73617665 
 36543      5F626173 
 36543      6500
 36544              	.LASF285:
 36545 5698 5F5A4E4B 		.string	"_ZNKSs12find_last_ofERKSsm"
 36545      53733132 
 36545      66696E64 
 36545      5F6C6173 
 36545      745F6F66 
 36546              	.LASF94:
 36547 56b3 5F5A4E53 		.string	"_ZNSs4_Rep15_M_set_sharableEv"
 36547      73345F52 
 36547      65703135 
 36547      5F4D5F73 
 36547      65745F73 
 36548              	.LASF868:
 36549 56d1 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE9push_backEOS1_"
 36549      74367665 
 36549      63746F72 
 36549      49537434 
 36549      70616972 
 36550              	.LASF1350:
 36551 5701 636C6561 		.string	"clearerr"
 36551      72657272 
 36551      00
 36552              	.LASF1270:
 36553 570a 77637374 		.string	"wcstoul"
 36553      6F756C00 
 36554              	.LASF610:
 36555 5712 5F4D5F64 		.string	"_M_default_initialize"
 36555      65666175 
 36555      6C745F69 
 36555      6E697469 
 36555      616C697A 
 36556              	.LASF775:
 36557 5728 73746464 		.string	"stddev"
 36557      657600
 36558              	.LASF862:
 36559 572f 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE5frontEv"
 36559      53743676 
 36559      6563746F 
 36559      72495374 
 36559      34706169 
 36560              	.LASF516:
 36561 5759 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE25_S_difference_type_helperEz"
 36561      74313661 
 36561      6C6C6F63 
 36561      61746F72 
GAS LISTING /tmp/ccKUqHDa.s 			page 981


 36561      5F747261 
 36562              	.LASF781:
 36563 5795 72657365 		.string	"reset"
 36563      7400
 36564              	.LASF155:
 36565 579b 62656769 		.string	"begin"
 36565      6E00
 36566              	.LASF1517:
 36567 57a1 656E636F 		.string	"encode"
 36567      646500
 36568              	.LASF1059:
 36569 57a8 5F535F6E 		.string	"_S_nothrow_move"
 36569      6F746872 
 36569      6F775F6D 
 36569      6F766500 
 36570              	.LASF404:
 36571 57b8 74797065 		.string	"type"
 36571      00
 36572              	.LASF1244:
 36573 57bd 77637363 		.string	"wcscmp"
 36573      6D7000
 36574              	.LASF1239:
 36575 57c4 76737773 		.string	"vswscanf"
 36575      63616E66 
 36575      00
 36576              	.LASF1130:
 36577 57cd 5F5F6F66 		.string	"__off_t"
 36577      665F7400 
 36578              	.LASF128:
 36579 57d5 5F4D5F64 		.string	"_M_disjunct"
 36579      69736A75 
 36579      6E637400 
 36580              	.LASF300:
 36581 57e1 5F5A4E4B 		.string	"_ZNKSs6substrEmm"
 36581      53733673 
 36581      75627374 
 36581      72456D6D 
 36581      00
 36582              	.LASF1314:
 36583 57f2 64656369 		.string	"decimal_point"
 36583      6D616C5F 
 36583      706F696E 
 36583      7400
 36584              	.LASF1255:
 36585 5800 746D5F77 		.string	"tm_wday"
 36585      64617900 
 36586              	.LASF1225:
 36587 5808 67657477 		.string	"getwc"
 36587      6300
 36588              	.LASF552:
 36589 580e 5F5A4E53 		.string	"_ZNSt12_Vector_baseIfSaIfEE11_M_allocateEm"
 36589      7431325F 
 36589      56656374 
 36589      6F725F62 
 36589      61736549 
 36590              	.LASF1368:
 36591 5839 72656D6F 		.string	"remove"
GAS LISTING /tmp/ccKUqHDa.s 			page 982


 36591      766500
 36592              	.LASF204:
 36593 5840 5F5A4E53 		.string	"_ZNSspLERKSs"
 36593      73704C45 
 36593      524B5373 
 36593      00
 36594              	.LASF208:
 36595 584d 61707065 		.string	"append"
 36595      6E6400
 36596              	.LASF745:
 36597 5854 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE3endEv"
 36597      53743561 
 36597      72726179 
 36597      49503968 
 36597      6561746D 
 36598              	.LASF151:
 36599 5878 5F5A4E53 		.string	"_ZNSsaSEPKc"
 36599      73615345 
 36599      504B6300 
 36600              	.LASF429:
 36601 5884 5F535F62 		.string	"_S_bin"
 36601      696E00
 36602              	.LASF1234:
 36603 588b 73777363 		.string	"swscanf"
 36603      616E6600 
 36604              	.LASF968:
 36605 5893 7369676E 		.string	"signed char"
 36605      65642063 
 36605      68617200 
 36606              	.LASF448:
 36607 589f 7E496E69 		.string	"~Init"
 36607      7400
 36608              	.LASF638:
 36609 58a5 72656269 		.string	"rebind<unsigned char>"
 36609      6E643C75 
 36609      6E736967 
 36609      6E656420 
 36609      63686172 
 36610              	.LASF240:
 36611 58bb 5F5A4E53 		.string	"_ZNSs7replaceEmmRKSs"
 36611      73377265 
 36611      706C6163 
 36611      65456D6D 
 36611      524B5373 
 36612              	.LASF254:
 36613 58d0 5F4D5F72 		.string	"_M_replace_aux"
 36613      65706C61 
 36613      63655F61 
 36613      757800
 36614              	.LASF1238:
 36615 58df 76737770 		.string	"vswprintf"
 36615      72696E74 
 36615      6600
 36616              	.LASF834:
 36617 58e9 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE6assignEmRKS1_"
 36617      74367665 
 36617      63746F72 
GAS LISTING /tmp/ccKUqHDa.s 			page 983


 36617      49537434 
 36617      70616972 
 36618              	.LASF1495:
 36619 5918 6C6F6465 		.string	"lodepng_default_compress_settings"
 36619      706E675F 
 36619      64656661 
 36619      756C745F 
 36619      636F6D70 
 36620              	.LASF665:
 36621 593a 5F5A4E53 		.string	"_ZNSt12_Vector_baseIhSaIhEE17_M_create_storageEm"
 36621      7431325F 
 36621      56656374 
 36621      6F725F62 
 36621      61736549 
 36622              	.LASF709:
 36623 596b 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPKhS1_EEmRS4_"
 36623      74367665 
 36623      63746F72 
 36623      49685361 
 36623      49684545 
 36624              	.LASF447:
 36625 59b4 496E6974 		.string	"Init"
 36625      00
 36626              	.LASF342:
 36627 59b9 5F5F6D6F 		.string	"__mod<long unsigned int, 4294967296ul, 1ul, 0ul>"
 36627      643C6C6F 
 36627      6E672075 
 36627      6E736967 
 36627      6E656420 
 36628              	.LASF328:
 36629 59ea 5F416461 		.string	"_Adaptor"
 36629      70746F72 
 36629      00
 36630              	.LASF869:
 36631 59f3 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE8pop_backEv"
 36631      74367665 
 36631      63746F72 
 36631      49537434 
 36631      70616972 
 36632              	.LASF613:
 36633 5a1f 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE14_M_fill_assignEmRKf"
 36633      74367665 
 36633      63746F72 
 36633      49665361 
 36633      49664545 
 36634              	.LASF827:
 36635 5a49 5F5A4E53 		.string	"_ZNSt12_Vector_baseISt4pairIffESaIS1_EE11_M_allocateEm"
 36635      7431325F 
 36635      56656374 
 36635      6F725F62 
 36635      61736549 
 36636              	.LASF188:
 36637 5a80 636C6561 		.string	"clear"
 36637      7200
 36638              	.LASF306:
 36639 5a86 5F5A4E4B 		.string	"_ZNKSs7compareEmmPKcm"
 36639      53733763 
GAS LISTING /tmp/ccKUqHDa.s 			page 984


 36639      6F6D7061 
 36639      7265456D 
 36639      6D504B63 
 36640              	.LASF265:
 36641 5a9c 5F5A4E4B 		.string	"_ZNKSs5c_strEv"
 36641      53733563 
 36641      5F737472 
 36641      457600
 36642              	.LASF1531:
 36643 5aab 68656174 		.string	"heatmap_stamp_gen_nonlinear"
 36643      6D61705F 
 36643      7374616D 
 36643      705F6765 
 36643      6E5F6E6F 
 36644              	.LASF1045:
 36645 5ac7 5F535F73 		.string	"_S_select_on_copy"
 36645      656C6563 
 36645      745F6F6E 
 36645      5F636F70 
 36645      7900
 36646              	.LASF915:
 36647 5ad9 6F706572 		.string	"operator<< <std::char_traits<char> >"
 36647      61746F72 
 36647      3C3C203C 
 36647      7374643A 
 36647      3A636861 
 36648              	.LASF1152:
 36649 5afe 6D62746F 		.string	"mbtowc"
 36649      776300
 36650              	.LASF598:
 36651 5b05 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE9push_backEOf"
 36651      74367665 
 36651      63746F72 
 36651      49665361 
 36651      49664545 
 36652              	.LASF1132:
 36653 5b27 5F5F636C 		.string	"__clock_t"
 36653      6F636B5F 
 36653      7400
 36654              	.LASF1446:
 36655 5b31 5F5F746F 		.string	"__token"
 36655      6B656E00 
 36656              	.LASF1206:
 36657 5b39 66705F6F 		.string	"fp_offset"
 36657      66667365 
 36657      7400
 36658              	.LASF4:
 36659 5b43 76616C75 		.string	"value"
 36659      6500
 36660              	.LASF949:
 36661 5b49 5F464974 		.string	"_FIter"
 36661      657200
 36662              	.LASF1346:
 36663 5b50 5F6E6578 		.string	"_next"
 36663      7400
 36664              	.LASF78:
 36665 5b56 5F526570 		.string	"_Rep_base"
GAS LISTING /tmp/ccKUqHDa.s 			page 985


 36665      5F626173 
 36665      6500
 36666              	.LASF602:
 36667 5b60 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE6insertEN9__gnu_cxx17__normal_iteratorIPKfS1_EESt16initializer_listIf
 36667      74367665 
 36667      63746F72 
 36667      49665361 
 36667      49664545 
 36668              	.LASF1032:
 36669 5bbb 5F5F6D61 		.string	"__max_exponent10"
 36669      785F6578 
 36669      706F6E65 
 36669      6E743130 
 36669      00
 36670              	.LASF1165:
 36671 5bcc 61746F6C 		.string	"atoll"
 36671      6C00
 36672              	.LASF157:
 36673 5bd2 5F5A4E4B 		.string	"_ZNKSs5beginEv"
 36673      53733562 
 36673      6567696E 
 36673      457600
 36674              	.LASF56:
 36675 5be1 6E6F745F 		.string	"not_eof"
 36675      656F6600 
 36676              	.LASF1356:
 36677 5be9 66676574 		.string	"fgetpos"
 36677      706F7300 
 36678              	.LASF664:
 36679 5bf1 5F5A4E53 		.string	"_ZNSt12_Vector_baseIhSaIhEE13_M_deallocateEPhm"
 36679      7431325F 
 36679      56656374 
 36679      6F725F62 
 36679      61736549 
 36680              	.LASF573:
 36681 5c20 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE6cbeginEv"
 36681      53743676 
 36681      6563746F 
 36681      72496653 
 36681      61496645 
 36682              	.LASF951:
 36683 5c3f 67656E65 		.string	"generate_canonical<float, 24ul, std::mersenne_twister_engine<long unsigned int, 32ul, 624
 36683      72617465 
 36683      5F63616E 
 36683      6F6E6963 
 36683      616C3C66 
 36684              	.LASF415:
 36685 5d08 5F535F73 		.string	"_S_showbase"
 36685      686F7762 
 36685      61736500 
 36686              	.LASF238:
 36687 5d14 5F5A4E53 		.string	"_ZNSs8pop_backEv"
 36687      7338706F 
 36687      705F6261 
 36687      636B4576 
 36687      00
 36688              	.LASF420:
GAS LISTING /tmp/ccKUqHDa.s 			page 986


 36689 5d25 5F535F75 		.string	"_S_uppercase"
 36689      70706572 
 36689      63617365 
 36689      00
 36690              	.LASF228:
 36691 5d32 5F5A4E53 		.string	"_ZNSs6insertEmRKSsmm"
 36691      7336696E 
 36691      73657274 
 36691      456D524B 
 36691      53736D6D 
 36692              	.LASF1262:
 36693 5d47 7763736E 		.string	"wcsncmp"
 36693      636D7000 
 36694              	.LASF1384:
 36695 5d4f 6D6B7469 		.string	"mktime"
 36695      6D6500
 36696              	.LASF979:
 36697 5d56 5F5F6973 		.string	"__is_signed"
 36697      5F736967 
 36697      6E656400 
 36698              	.LASF870:
 36699 5d62 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EERS6_"
 36699      74367665 
 36699      63746F72 
 36699      49537434 
 36699      70616972 
 36700              	.LASF1355:
 36701 5db8 66676574 		.string	"fgetc"
 36701      6300
 36702              	.LASF105:
 36703 5dbe 5F4D5F64 		.string	"_M_destroy"
 36703      65737472 
 36703      6F7900
 36704              	.LASF123:
 36705 5dc9 5F5A4E4B 		.string	"_ZNKSs8_M_checkEmPKc"
 36705      5373385F 
 36705      4D5F6368 
 36705      65636B45 
 36705      6D504B63 
 36706              	.LASF1309:
 36707 5dde 696E746D 		.string	"intmax_t"
 36707      61785F74 
 36707      00
 36708              	.LASF1357:
 36709 5de7 66676574 		.string	"fgets"
 36709      7300
 36710              	.LASF1398:
 36711 5ded 69676E6F 		.string	"ignore_adler32"
 36711      72655F61 
 36711      646C6572 
 36711      333200
 36712              	.LASF723:
 36713 5dfc 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EES5_"
 36713      74367665 
 36713      63746F72 
 36713      49685361 
 36713      49684545 
GAS LISTING /tmp/ccKUqHDa.s 			page 987


 36714              	.LASF1376:
 36715 5e44 77637479 		.string	"wctype_t"
 36715      70655F74 
 36715      00
 36716              	.LASF780:
 36717 5e4d 6E6F726D 		.string	"normal_distribution"
 36717      616C5F64 
 36717      69737472 
 36717      69627574 
 36717      696F6E00 
 36718              	.LASF1386:
 36719 5e61 61736374 		.string	"asctime"
 36719      696D6500 
 36720              	.LASF23:
 36721 5e69 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr4swapERS0_"
 36721      7431355F 
 36721      5F657863 
 36721      65707469 
 36721      6F6E5F70 
 36722              	.LASF887:
 36723 5e99 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPS1_S3_EES7_"
 36723      74367665 
 36723      63746F72 
 36723      49537434 
 36723      70616972 
 36724              	.LASF924:
 36725 5eef 5F446573 		.string	"_Destroy<unsigned char*>"
 36725      74726F79 
 36725      3C756E73 
 36725      69676E65 
 36725      64206368 
 36726              	.LASF1508:
 36727 5f08 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerImE8__digitsE"
 36727      5F5F676E 
 36727      755F6378 
 36727      7832345F 
 36727      5F6E756D 
 36728              	.LASF410:
 36729 5f3d 5F535F69 		.string	"_S_internal"
 36729      6E746572 
 36729      6E616C00 
 36730              	.LASF910:
 36731 5f49 72647374 		.string	"rdstate"
 36731      61746500 
 36732              	.LASF992:
 36733 5f51 5F5F6E6F 		.string	"__normal_iterator<char*, std::basic_string<char, std::char_traits<char>, std::allocator<c
 36733      726D616C 
 36733      5F697465 
 36733      7261746F 
 36733      723C6368 
 36734              	.LASF731:
 36735 5fb3 5F5A4E4B 		.string	"_ZNKSt16initializer_listIhE3endEv"
 36735      53743136 
 36735      696E6974 
 36735      69616C69 
 36735      7A65725F 
 36736              	.LASF544:
GAS LISTING /tmp/ccKUqHDa.s 			page 988


 36737 5fd5 5F4D5F69 		.string	"_M_impl"
 36737      6D706C00 
 36738              	.LASF299:
 36739 5fdd 73756273 		.string	"substr"
 36739      747200
 36740              	.LASF522:
 36741 5fe4 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE48_S_propagate_on_container_move_assignment_helperEz"
 36741      74313661 
 36741      6C6C6F63 
 36741      61746F72 
 36741      5F747261 
 36742              	.LASF1453:
 36743 6037 5F5F7265 		.string	"__ret"
 36743      7400
 36744              	.LASF207:
 36745 603d 5F5A4E53 		.string	"_ZNSspLESt16initializer_listIcE"
 36745      73704C45 
 36745      53743136 
 36745      696E6974 
 36745      69616C69 
 36746              	.LASF1109:
 36747 605d 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEE4baseEv"
 36747      395F5F67 
 36747      6E755F63 
 36747      78783137 
 36747      5F5F6E6F 
 36748              	.LASF1323:
 36749 60a9 6E656761 		.string	"negative_sign"
 36749      74697665 
 36749      5F736967 
 36749      6E00
 36750              	.LASF1387:
 36751 60b7 6374696D 		.string	"ctime"
 36751      6500
 36752              	.LASF897:
 36753 60bd 72656D6F 		.string	"remove_reference<float>"
 36753      76655F72 
 36753      65666572 
 36753      656E6365 
 36753      3C666C6F 
 36754              	.LASF1389:
 36755 60d5 6C6F6361 		.string	"localtime"
 36755      6C74696D 
 36755      6500
 36756              	.LASF1211:
 36757 60df 5F5F7763 		.string	"__wch"
 36757      6800
 36758              	.LASF156:
 36759 60e5 5F5A4E53 		.string	"_ZNSs5beginEv"
 36759      73356265 
 36759      67696E45 
 36759      7600
 36760              	.LASF588:
 36761 60f3 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE14_M_range_checkEm"
 36761      53743676 
 36761      6563746F 
 36761      72496653 
GAS LISTING /tmp/ccKUqHDa.s 			page 989


 36761      61496645 
 36762              	.LASF179:
 36763 611b 72657369 		.string	"resize"
 36763      7A6500
 36764              	.LASF1190:
 36765 6122 5F6F6C64 		.string	"_old_offset"
 36765      5F6F6666 
 36765      73657400 
 36766              	.LASF1147:
 36767 612e 67657465 		.string	"getenv"
 36767      6E7600
 36768              	.LASF1230:
 36769 6135 6D627372 		.string	"mbsrtowcs"
 36769      746F7763 
 36769      7300
 36770              	.LASF22:
 36771 613f 73776170 		.string	"swap"
 36771      00
 36772              	.LASF136:
 36773 6144 5F5A4E53 		.string	"_ZNSs9_M_assignEPcmc"
 36773      73395F4D 
 36773      5F617373 
 36773      69676E45 
 36773      50636D63 
 36774              	.LASF736:
 36775 6159 61727261 		.string	"array<heatmap_t*, 5ul>"
 36775      793C6865 
 36775      61746D61 
 36775      705F742A 
 36775      2C203575 
 36776              	.LASF656:
 36777 6170 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE37select_on_container_copy_constructionERKS0_"
 36777      74313661 
 36777      6C6C6F63 
 36777      61746F72 
 36777      5F747261 
 36778              	.LASF628:
 36779 61bc 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE14_M_move_assignEOS1_St17integral_constantIbLb1EE"
 36779      74367665 
 36779      63746F72 
 36779      49665361 
 36779      49664545 
 36780              	.LASF1263:
 36781 6202 7763736E 		.string	"wcsncpy"
 36781      63707900 
 36782              	.LASF97:
 36783 620a 5F4D5F72 		.string	"_M_refdata"
 36783      65666461 
 36783      746100
 36784              	.LASF795:
 36785 6215 7365636F 		.string	"second"
 36785      6E6400
 36786              	.LASF1522:
 36787 621c 68656174 		.string	"heatmap_new"
 36787      6D61705F 
 36787      6E657700 
 36788              	.LASF445:
GAS LISTING /tmp/ccKUqHDa.s 			page 990


 36789 6228 5F535F72 		.string	"_S_refcount"
 36789      6566636F 
 36789      756E7400 
 36790              	.LASF1343:
 36791 6234 5F5F7374 		.string	"__state"
 36791      61746500 
 36792              	.LASF702:
 36793 623c 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE4dataEv"
 36793      53743676 
 36793      6563746F 
 36793      72496853 
 36793      61496845 
 36794              	.LASF866:
 36795 6259 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE4dataEv"
 36795      53743676 
 36795      6563746F 
 36795      72495374 
 36795      34706169 
 36796              	.LASF37:
 36797 6282 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2ltERKcS2_"
 36797      74313163 
 36797      6861725F 
 36797      74726169 
 36797      74734963 
 36798              	.LASF133:
 36799 62a2 5F4D5F6D 		.string	"_M_move"
 36799      6F766500 
 36800              	.LASF27:
 36801 62aa 70696563 		.string	"piecewise_construct_t"
 36801      65776973 
 36801      655F636F 
 36801      6E737472 
 36801      7563745F 
 36802              	.LASF1518:
 36803 62c0 5F5A4E37 		.string	"_ZN7lodepng6encodeERKSsRKSt6vectorIhSaIhEEjj16LodePNGColorTypej"
 36803      6C6F6465 
 36803      706E6736 
 36803      656E636F 
 36803      64654552 
 36804              	.LASF1119:
 36805 6300 5F5F676E 		.string	"__gnu_debug"
 36805      755F6465 
 36805      62756700 
 36806              	.LASF1516:
 36807 630c 6C6F6465 		.string	"lodepng"
 36807      706E6700 
 36808              	.LASF407:
 36809 6314 5F535F64 		.string	"_S_dec"
 36809      656300
 36810              	.LASF1076:
 36811 631b 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE20_S_propagate_on_swapEv"
 36811      5F5F676E 
 36811      755F6378 
 36811      7831345F 
 36811      5F616C6C 
 36812              	.LASF947:
 36813 6358 5F5F756E 		.string	"__uninitialized_default_n_a<unsigned char*, long unsigned int, unsigned char>"
GAS LISTING /tmp/ccKUqHDa.s 			page 991


 36813      696E6974 
 36813      69616C69 
 36813      7A65645F 
 36813      64656661 
 36814              	.LASF135:
 36815 63a6 5F4D5F61 		.string	"_M_assign"
 36815      73736967 
 36815      6E00
 36816              	.LASF72:
 36817 63b0 5F4D5F64 		.string	"_M_dataplus"
 36817      61746170 
 36817      6C757300 
 36818              	.LASF1490:
 36819 63bc 5F474C4F 		.string	"_GLOBAL__sub_I_customstamp_heatmaps.cpp"
 36819      42414C5F 
 36819      5F737562 
 36819      5F495F63 
 36819      7573746F 
 36820              	.LASF885:
 36821 63e4 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE15_M_erase_at_endEPS1_"
 36821      74367665 
 36821      63746F72 
 36821      49537434 
 36821      70616972 
 36822              	.LASF1311:
 36823 641b 63686172 		.string	"char16_t"
 36823      31365F74 
 36823      00
 36824              	.LASF799:
 36825 6424 5F5A4E53 		.string	"_ZNSt4pairIffE4swapERS0_"
 36825      74347061 
 36825      69724966 
 36825      66453473 
 36825      77617045 
 36826              	.LASF1236:
 36827 643d 76667770 		.string	"vfwprintf"
 36827      72696E74 
 36827      6600
 36828              	.LASF312:
 36829 6447 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<char*, std::basic_string<char, std::char_tr
 36829      7273655F 
 36829      69746572 
 36829      61746F72 
 36829      3C5F5F67 
 36830              	.LASF1185:
 36831 64c7 5F494F5F 		.string	"_IO_save_end"
 36831      73617665 
 36831      5F656E64 
 36831      00
 36832              	.LASF331:
 36833 64d4 6F706572 		.string	"operator()"
 36833      61746F72 
 36833      282900
 36834              	.LASF200:
 36835 64df 6261636B 		.string	"back"
 36835      00
 36836              	.LASF1112:
GAS LISTING /tmp/ccKUqHDa.s 			page 992


 36837 64e4 5F5F656E 		.string	"__enable_if<true, unsigned char*>"
 36837      61626C65 
 36837      5F69663C 
 36837      74727565 
 36837      2C20756E 
 36838              	.LASF1529:
 36839 6506 68656174 		.string	"heatmap_stamp_free"
 36839      6D61705F 
 36839      7374616D 
 36839      705F6672 
 36839      656500
 36840              	.LASF1463:
 36841 6519 72686F6D 		.string	"rhomboidal"
 36841      626F6964 
 36841      616C00
 36842              	.LASF202:
 36843 6524 5F5A4E4B 		.string	"_ZNKSs4backEv"
 36843      53733462 
 36843      61636B45 
 36843      7600
 36844              	.LASF560:
 36845 6532 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEEaSERKS1_"
 36845      74367665 
 36845      63746F72 
 36845      49665361 
 36845      49664545 
 36846              	.LASF1005:
 36847 654f 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEixEl"
 36847      395F5F67 
 36847      6E755F63 
 36847      78783137 
 36847      5F5F6E6F 
 36848              	.LASF231:
 36849 657b 5F5A4E53 		.string	"_ZNSs6insertEmmc"
 36849      7336696E 
 36849      73657274 
 36849      456D6D63 
 36849      00
 36850              	.LASF1108:
 36851 658c 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEmiEl"
 36851      395F5F67 
 36851      6E755F63 
 36851      78783137 
 36851      5F5F6E6F 
 36852              	.LASF1537:
 36853 65d5 2F686F6D 		.string	"/home/hshu1/15618/project/15618fp/heatmap"
 36853      652F6873 
 36853      6875312F 
 36853      31353631 
 36853      382F7072 
 36854              	.LASF1426:
 36855 65ff 6F706572 		.string	"operator delete"
 36855      61746F72 
 36855      2064656C 
 36855      65746500 
 36856              	.LASF1141:
 36857 660f 61746578 		.string	"atexit"
GAS LISTING /tmp/ccKUqHDa.s 			page 993


 36857      697400
 36858              	.LASF490:
 36859 6616 706F696E 		.string	"pointer"
 36859      74657200 
 36860              	.LASF1397:
 36861 661e 4C6F6465 		.string	"LodePNGDecompressSettings"
 36861      504E4744 
 36861      65636F6D 
 36861      70726573 
 36861      73536574 
 36862              	.LASF809:
 36863 6638 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE22_S_void_pointer_helperEz"
 36863      74313661 
 36863      6C6C6F63 
 36863      61746F72 
 36863      5F747261 
 36864              	.LASF825:
 36865 667b 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseISt4pairIffESaIS1_EE19_M_get_Tp_allocatorEv"
 36865      53743132 
 36865      5F566563 
 36865      746F725F 
 36865      62617365 
 36866              	.LASF882:
 36867 66bb 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE17_M_default_appendEm"
 36867      74367665 
 36867      63746F72 
 36867      49537434 
 36867      70616972 
 36868              	.LASF766:
 36869 66f1 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE4dataEv"
 36869      53743561 
 36869      72726179 
 36869      49503968 
 36869      6561746D 
 36870              	.LASF60:
 36871 6716 616C6C6F 		.string	"allocator<char>"
 36871      6361746F 
 36871      723C6368 
 36871      61723E00 
 36872              	.LASF1232:
 36873 6726 70757477 		.string	"putwchar"
 36873      63686172 
 36873      00
 36874              	.LASF519:
 36875 672f 5F535F70 		.string	"_S_propagate_on_container_copy_assignment_helper"
 36875      726F7061 
 36875      67617465 
 36875      5F6F6E5F 
 36875      636F6E74 
 36876              	.LASF96:
 36877 6760 5F5A4E53 		.string	"_ZNSs4_Rep26_M_set_length_and_sharableEm"
 36877      73345F52 
 36877      65703236 
 36877      5F4D5F73 
 36877      65745F6C 
 36878              	.LASF691:
 36879 6789 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE7reserveEm"
GAS LISTING /tmp/ccKUqHDa.s 			page 994


 36879      74367665 
 36879      63746F72 
 36879      49685361 
 36879      49684545 
 36880              	.LASF1337:
 36881 67a8 696E745F 		.string	"int_n_sign_posn"
 36881      6E5F7369 
 36881      676E5F70 
 36881      6F736E00 
 36882              	.LASF384:
 36883 67b8 5F4D5F69 		.string	"_M_init_pretr1"
 36883      6E69745F 
 36883      70726574 
 36883      723100
 36884              	.LASF867:
 36885 67c7 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE9push_backERKS1_"
 36885      74367665 
 36885      63746F72 
 36885      49537434 
 36885      70616972 
 36886              	.LASF65:
 36887 67f8 7E616C6C 		.string	"~allocator"
 36887      6F636174 
 36887      6F7200
 36888              	.LASF768:
 36889 6803 72657665 		.string	"reverse_iterator<heatmap_t* const*>"
 36889      7273655F 
 36889      69746572 
 36889      61746F72 
 36889      3C686561 
 36890              	.LASF722:
 36891 6827 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPhS1_EE"
 36891      74367665 
 36891      63746F72 
 36891      49685361 
 36891      49684545 
 36892              	.LASF998:
 36893 686c 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEptEv"
 36893      395F5F67 
 36893      6E755F63 
 36893      78783137 
 36893      5F5F6E6F 
 36894              	.LASF999:
 36895 6898 6F706572 		.string	"operator++"
 36895      61746F72 
 36895      2B2B00
 36896              	.LASF553:
 36897 68a3 5F4D5F64 		.string	"_M_deallocate"
 36897      65616C6C 
 36897      6F636174 
 36897      6500
 36898              	.LASF624:
 36899 68b1 5F4D5F65 		.string	"_M_erase"
 36899      72617365 
 36899      00
 36900              	.LASF253:
 36901 68ba 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_St16initializer_listIcE"
GAS LISTING /tmp/ccKUqHDa.s 			page 995


 36901      73377265 
 36901      706C6163 
 36901      65454E39 
 36901      5F5F676E 
 36902              	.LASF484:
 36903 6908 63747970 		.string	"ctype<char>"
 36903      653C6368 
 36903      61723E00 
 36904              	.LASF203:
 36905 6914 6F706572 		.string	"operator+="
 36905      61746F72 
 36905      2B3D00
 36906              	.LASF667:
 36907 691f 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEEaSERKS1_"
 36907      74367665 
 36907      63746F72 
 36907      49685361 
 36907      49684545 
 36908              	.LASF655:
 36909 693c 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE8max_sizeERKS0_"
 36909      74313661 
 36909      6C6C6F63 
 36909      61746F72 
 36909      5F747261 
 36910              	.LASF1022:
 36911 696a 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEi"
 36911      5F5F676E 
 36911      755F6378 
 36911      7831375F 
 36911      5F6E6F72 
 36912              	.LASF1151:
 36913 6996 77636861 		.string	"wchar_t"
 36913      725F7400 
 36914              	.LASF705:
 36915 699e 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE8pop_backEv"
 36915      74367665 
 36915      63746F72 
 36915      49685361 
 36915      49684545 
 36916              	.LASF1021:
 36917 69be 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmmEv"
 36917      5F5F676E 
 36917      755F6378 
 36917      7831375F 
 36917      5F6E6F72 
 36918              	.LASF877:
 36919 69ea 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE5clearEv"
 36919      74367665 
 36919      63746F72 
 36919      49537434 
 36919      70616972 
 36920              	.LASF1507:
 36921 6a13 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 36921      7432336D 
 36921      65727365 
 36921      6E6E655F 
 36921      74776973 
GAS LISTING /tmp/ccKUqHDa.s 			page 996


 36922              	.LASF309:
 36923 6aac 5F416C6C 		.string	"_Alloc"
 36923      6F6300
 36924              	.LASF1057:
 36925 6ab3 5F535F61 		.string	"_S_always_equal"
 36925      6C776179 
 36925      735F6571 
 36925      75616C00 
 36926              	.LASF852:
 36927 6ac3 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE13shrink_to_fitEv"
 36927      74367665 
 36927      63746F72 
 36927      49537434 
 36927      70616972 
 36928              	.LASF798:
 36929 6af5 5F5A4E53 		.string	"_ZNSt4pairIffEaSEOS0_"
 36929      74347061 
 36929      69724966 
 36929      66456153 
 36929      454F5330 
 36930              	.LASF1415:
 36931 6b0b 636F6C6F 		.string	"colors"
 36931      727300
 36932              	.LASF1471:
 36933 6b12 6E737461 		.string	"nstamps"
 36933      6D707300 
 36934              	.LASF1424:
 36935 6b1a 5F5F7265 		.string	"__result"
 36935      73756C74 
 36935      00
 36936              	.LASF1034:
 36937 6b23 5F5F6E75 		.string	"__numeric_traits_floating<long double>"
 36937      6D657269 
 36937      635F7472 
 36937      61697473 
 36937      5F666C6F 
 36938              	.LASF1286:
 36939 6b4a 77637374 		.string	"wcstoull"
 36939      6F756C6C 
 36939      00
 36940              	.LASF1412:
 36941 6b53 31356865 		.string	"15heatmap_stamp_t"
 36941      61746D61 
 36941      705F7374 
 36941      616D705F 
 36941      7400
 36942              	.LASF1257:
 36943 6b65 746D5F69 		.string	"tm_isdst"
 36943      73647374 
 36943      00
 36944              	.LASF108:
 36945 6b6e 5F4D5F63 		.string	"_M_clone"
 36945      6C6F6E65 
 36945      00
 36946              	.LASF1326:
 36947 6b77 705F6373 		.string	"p_cs_precedes"
 36947      5F707265 
GAS LISTING /tmp/ccKUqHDa.s 			page 997


 36947      63656465 
 36947      7300
 36948              	.LASF1074:
 36949 6b85 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE27_S_propagate_on_copy_assignEv"
 36949      5F5F676E 
 36949      755F6378 
 36949      7831345F 
 36949      5F616C6C 
 36950              	.LASF1547:
 36951 6bc9 5F556E77 		.string	"_Unwind_Resume"
 36951      696E645F 
 36951      52657375 
 36951      6D6500
 36952              	.LASF819:
 36953 6bd8 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE8max_sizeERKS2_"
 36953      74313661 
 36953      6C6C6F63 
 36953      61746F72 
 36953      5F747261 
 36954              	.LASF1002:
 36955 6c10 6F706572 		.string	"operator--"
 36955      61746F72 
 36955      2D2D00
 36956              	.LASF1097:
 36957 6c1b 5F5F6E6F 		.string	"__normal_iterator<std::pair<float, float>*, std::vector<std::pair<float, float>, std::all
 36957      726D616C 
 36957      5F697465 
 36957      7261746F 
 36957      723C7374 
 36958              	.LASF751:
 36959 6c99 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE4cendEv"
 36959      53743561 
 36959      72726179 
 36959      49503968 
 36959      6561746D 
 36960              	.LASF662:
 36961 6cbe 5F5A4E4B 		.string	"_ZNKSt12_Vector_baseIhSaIhEE13get_allocatorEv"
 36961      53743132 
 36961      5F566563 
 36961      746F725F 
 36961      62617365 
 36962              	.LASF1009:
 36963 6cec 6F706572 		.string	"operator-="
 36963      61746F72 
 36963      2D3D00
 36964              	.LASF997:
 36965 6cf7 6F706572 		.string	"operator->"
 36965      61746F72 
 36965      2D3E00
 36966              	.LASF1086:
 36967 6d02 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorISt4pairIffEE10deallocateEPS2_m"
 36967      5F5F676E 
 36967      755F6378 
 36967      7831336E 
 36967      65775F61 
 36968              	.LASF109:
 36969 6d3e 5F5A4E53 		.string	"_ZNSs4_Rep8_M_cloneERKSaIcEm"
GAS LISTING /tmp/ccKUqHDa.s 			page 998


 36969      73345F52 
 36969      6570385F 
 36969      4D5F636C 
 36969      6F6E6545 
 36970              	.LASF660:
 36971 6d5b 5F5A4E53 		.string	"_ZNSt12_Vector_baseIhSaIhEE19_M_get_Tp_allocatorEv"
 36971      7431325F 
 36971      56656374 
 36971      6F725F62 
 36971      61736549 
 36972              	.LASF1300:
 36973 6d8e 696E745F 		.string	"int_fast16_t"
 36973      66617374 
 36973      31365F74 
 36973      00
 36974              	.LASF298:
 36975 6d9b 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEcm"
 36975      53733136 
 36975      66696E64 
 36975      5F6C6173 
 36975      745F6E6F 
 36976              	.LASF1487:
 36977 6db7 5F5F666F 		.string	"__for_end"
 36977      725F656E 
 36977      6400
 36978              	.LASF1107:
 36979 6dc1 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEmIEl"
 36979      5F5F676E 
 36979      755F6378 
 36979      7831375F 
 36979      5F6E6F72 
 36980              	.LASF304:
 36981 6e09 5F5A4E4B 		.string	"_ZNKSs7compareEPKc"
 36981      53733763 
 36981      6F6D7061 
 36981      72654550 
 36981      4B6300
 36982              	.LASF1437:
 36983 6e1c 5F5F6375 		.string	"__cur"
 36983      7200
 36984              	.LASF1400:
 36985 6e22 63757374 		.string	"custom_inflate"
 36985      6F6D5F69 
 36985      6E666C61 
 36985      746500
 36986              	.LASF1268:
 36987 6e31 77637374 		.string	"wcstok"
 36987      6F6B00
 36988              	.LASF1269:
 36989 6e38 77637374 		.string	"wcstol"
 36989      6F6C00
 36990              	.LASF497:
 36991 6e3f 706F696E 		.string	"pointer_traits<float*>"
 36991      7465725F 
 36991      74726169 
 36991      74733C66 
 36991      6C6F6174 
GAS LISTING /tmp/ccKUqHDa.s 			page 999


 36992              	.LASF1489:
 36993 6e56 7374616D 		.string	"stamp"
 36993      7000
 36994              	.LASF969:
 36995 6e5c 73686F72 		.string	"short int"
 36995      7420696E 
 36995      7400
 36996              	.LASF987:
 36997 6e66 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE7addressERKc"
 36997      395F5F67 
 36997      6E755F63 
 36997      78783133 
 36997      6E65775F 
 36998              	.LASF623:
 36999 6e93 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE15_M_erase_at_endEPf"
 36999      74367665 
 36999      63746F72 
 36999      49665361 
 36999      49664545 
 37000              	.LASF644:
 37001 6ebc 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE23_S_const_pointer_helperEz"
 37001      74313661 
 37001      6C6C6F63 
 37001      61746F72 
 37001      5F747261 
 37002              	.LASF784:
 37003 6ef6 5F5A4E4B 		.string	"_ZNKSt19normal_distributionIfE6stddevEv"
 37003      53743139 
 37003      6E6F726D 
 37003      616C5F64 
 37003      69737472 
 37004              	.LASF937:
 37005 6f1e 5F5F6E69 		.string	"__niter_base<float*>"
 37005      7465725F 
 37005      62617365 
 37005      3C666C6F 
 37005      61742A3E 
 37006              	.LASF98:
 37007 6f33 5F5A4E53 		.string	"_ZNSs4_Rep10_M_refdataEv"
 37007      73345F52 
 37007      65703130 
 37007      5F4D5F72 
 37007      65666461 
 37008              	.LASF117:
 37009 6f4c 5F5A4E4B 		.string	"_ZNKSs9_M_ibeginEv"
 37009      5373395F 
 37009      4D5F6962 
 37009      6567696E 
 37009      457600
 37010              	.LASF482:
 37011 6f5f 5F5A4E53 		.string	"_ZNSo9_M_insertImEERSoT_"
 37011      6F395F4D 
 37011      5F696E73 
 37011      65727449 
 37011      6D454552 
 37012              	.LASF1237:
 37013 6f78 76667773 		.string	"vfwscanf"
GAS LISTING /tmp/ccKUqHDa.s 			page 1000


 37013      63616E66 
 37013      00
 37014              	.LASF568:
 37015 6f81 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE3endEv"
 37015      53743676 
 37015      6563746F 
 37015      72496653 
 37015      61496645 
 37016              	.LASF1157:
 37017 6f9d 7372616E 		.string	"srand"
 37017      6400
 37018              	.LASF91:
 37019 6fa3 5F4D5F73 		.string	"_M_set_leaked"
 37019      65745F6C 
 37019      65616B65 
 37019      6400
 37020              	.LASF957:
 37021 6fb1 5F5A5374 		.string	"_ZSt7nothrow"
 37021      376E6F74 
 37021      68726F77 
 37021      00
 37022              	.LASF1505:
 37023 6fbe 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIdE16__max_exponent10E"
 37023      5F5F676E 
 37023      755F6378 
 37023      7832355F 
 37023      5F6E756D 
 37024              	.LASF739:
 37025 6ffd 66696C6C 		.string	"fill"
 37025      00
 37026              	.LASF940:
 37027 7002 5F5F756E 		.string	"__uninitialized_fill_n_a<float*, long unsigned int, float, float>"
 37027      696E6974 
 37027      69616C69 
 37027      7A65645F 
 37027      66696C6C 
 37028              	.LASF1339:
 37029 7044 6C6F6361 		.string	"localeconv"
 37029      6C65636F 
 37029      6E7600
 37030              	.LASF106:
 37031 704f 5F5A4E53 		.string	"_ZNSs4_Rep10_M_destroyERKSaIcE"
 37031      73345F52 
 37031      65703130 
 37031      5F4D5F64 
 37031      65737472 
 37032              	.LASF1186:
 37033 706e 5F6D6172 		.string	"_markers"
 37033      6B657273 
 37033      00
 37034              	.LASF247:
 37035 7077 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_PKc"
 37035      73377265 
 37035      706C6163 
 37035      65454E39 
 37035      5F5F676E 
 37036              	.LASF1188:
GAS LISTING /tmp/ccKUqHDa.s 			page 1001


 37037 70b1 5F66696C 		.string	"_fileno"
 37037      656E6F00 
 37038              	.LASF6:
 37039 70b9 6F706572 		.string	"operator std::integral_constant<bool, false>::value_type"
 37039      61746F72 
 37039      20737464 
 37039      3A3A696E 
 37039      74656772 
 37040              	.LASF1004:
 37041 70f2 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEi"
 37041      5F5F676E 
 37041      755F6378 
 37041      7831375F 
 37041      5F6E6F72 
 37042              	.LASF1449:
 37043 711d 5F5F7072 		.string	"__priority"
 37043      696F7269 
 37043      747900
 37044              	.LASF176:
 37045 7128 5F5A4E4B 		.string	"_ZNKSs6lengthEv"
 37045      5373366C 
 37045      656E6774 
 37045      68457600 
 37046              	.LASF1452:
 37047 7138 5F5F7061 		.string	"__param"
 37047      72616D00 
 37048              	.LASF1493:
 37049 7140 7374646F 		.string	"stdout"
 37049      757400
 37050              	.LASF1003:
 37051 7147 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmmEv"
 37051      5F5F676E 
 37051      755F6378 
 37051      7831375F 
 37051      5F6E6F72 
 37052              	.LASF1083:
 37053 7172 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorISt4pairIffEE7addressERS2_"
 37053      395F5F67 
 37053      6E755F63 
 37053      78783133 
 37053      6E65775F 
 37054              	.LASF1509:
 37055 71aa 5F5A4E39 		.string	"_ZN9__gnu_cxx24__numeric_traits_integerIcE5__maxE"
 37055      5F5F676E 
 37055      755F6378 
 37055      7832345F 
 37055      5F6E756D 
 37056              	.LASF570:
 37057 71dc 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE6rbeginEv"
 37057      53743676 
 37057      6563746F 
 37057      72496653 
 37057      61496645 
 37058              	.LASF1334:
 37059 71fb 696E745F 		.string	"int_n_cs_precedes"
 37059      6E5F6373 
 37059      5F707265 
GAS LISTING /tmp/ccKUqHDa.s 			page 1002


 37059      63656465 
 37059      7300
 37060              	.LASF990:
 37061 720d 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE8max_sizeEv"
 37061      395F5F67 
 37061      6E755F63 
 37061      78783133 
 37061      6E65775F 
 37062              	.LASF1468:
 37063 7239 5F5F636C 		.string	"__closure"
 37063      6F737572 
 37063      6500
 37064              	.LASF42:
 37065 7243 66696E64 		.string	"find"
 37065      00
 37066              	.LASF236:
 37067 7248 5F5A4E53 		.string	"_ZNSs5eraseEN9__gnu_cxx17__normal_iteratorIPcSsEES2_"
 37067      73356572 
 37067      61736545 
 37067      4E395F5F 
 37067      676E755F 
 37068              	.LASF1401:
 37069 727d 63757374 		.string	"custom_context"
 37069      6F6D5F63 
 37069      6F6E7465 
 37069      787400
 37070              	.LASF339:
 37071 728c 5F5F7363 		.string	"__schrage_ok"
 37071      68726167 
 37071      655F6F6B 
 37071      00
 37072              	.LASF837:
 37073 7299 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE5beginEv"
 37073      53743676 
 37073      6563746F 
 37073      72495374 
 37073      34706169 
 37074              	.LASF303:
 37075 72c3 5F5A4E4B 		.string	"_ZNKSs7compareEmmRKSsmm"
 37075      53733763 
 37075      6F6D7061 
 37075      7265456D 
 37075      6D524B53 
 37076              	.LASF1306:
 37077 72db 75696E74 		.string	"uint_fast64_t"
 37077      5F666173 
 37077      7436345F 
 37077      7400
 37078              	.LASF1293:
 37079 72e9 696E745F 		.string	"int_least32_t"
 37079      6C656173 
 37079      7433325F 
 37079      7400
 37080              	.LASF1448:
 37081 72f7 5F5F696E 		.string	"__initialize_p"
 37081      69746961 
 37081      6C697A65 
GAS LISTING /tmp/ccKUqHDa.s 			page 1003


 37081      5F7000
 37082              	.LASF376:
 37083 7306 5F5A4E53 		.string	"_ZNSt13random_device3minEv"
 37083      74313372 
 37083      616E646F 
 37083      6D5F6465 
 37083      76696365 
 37084              	.LASF509:
 37085 7321 5F535F63 		.string	"_S_const_pointer_helper"
 37085      6F6E7374 
 37085      5F706F69 
 37085      6E746572 
 37085      5F68656C 
 37086              	.LASF883:
 37087 7339 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE16_M_shrink_to_fitEv"
 37087      74367665 
 37087      63746F72 
 37087      49537434 
 37087      70616972 
 37088              	.LASF129:
 37089 736e 5F5A4E4B 		.string	"_ZNKSs11_M_disjunctEPKc"
 37089      53733131 
 37089      5F4D5F64 
 37089      69736A75 
 37089      6E637445 
 37090              	.LASF284:
 37091 7386 66696E64 		.string	"find_last_of"
 37091      5F6C6173 
 37091      745F6F66 
 37091      00
 37092              	.LASF970:
 37093 7393 6C6F6E67 		.string	"long int"
 37093      20696E74 
 37093      00
 37094              	.LASF478:
 37095 739c 5F5A4E53 		.string	"_ZNSolsEPFRSoS_E"
 37095      6F6C7345 
 37095      50465253 
 37095      6F535F45 
 37095      00
 37096              	.LASF1129:
 37097 73ad 5F5F696E 		.string	"__int32_t"
 37097      7433325F 
 37097      7400
 37098              	.LASF1275:
 37099 73b7 776D656D 		.string	"wmemmove"
 37099      6D6F7665 
 37099      00
 37100              	.LASF891:
 37101 73c0 72657665 		.string	"reverse_iterator<__gnu_cxx::__normal_iterator<std::pair<float, float>*, std::vector<std::
 37101      7273655F 
 37101      69746572 
 37101      61746F72 
 37101      3C5F5F67 
 37102              	.LASF1048:
 37103 745c 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignERcRKc"
 37103      74313163 
GAS LISTING /tmp/ccKUqHDa.s 			page 1004


 37103      6861725F 
 37103      74726169 
 37103      74734963 
 37104              	.LASF1133:
 37105 747f 5F5F7469 		.string	"__time_t"
 37105      6D655F74 
 37105      00
 37106              	.LASF802:
 37107 7488 72656269 		.string	"rebind<std::pair<float, float> >"
 37107      6E643C73 
 37107      74643A3A 
 37107      70616972 
 37107      3C666C6F 
 37108              	.LASF334:
 37109 74a9 5F44496E 		.string	"_DInputType"
 37109      70757454 
 37109      79706500 
 37110              	.LASF89:
 37111 74b5 5F4D5F69 		.string	"_M_is_shared"
 37111      735F7368 
 37111      61726564 
 37111      00
 37112              	.LASF972:
 37113 74c2 5F5F676E 		.string	"__gnu_cxx"
 37113      755F6378 
 37113      7800
 37114              	.LASF684:
 37115 74cc 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE4sizeEv"
 37115      53743676 
 37115      6563746F 
 37115      72496853 
 37115      61496845 
 37116              	.LASF1126:
 37117 74e9 6C6C6469 		.string	"lldiv_t"
 37117      765F7400 
 37118              	.LASF1047:
 37119 74f1 5F535F6F 		.string	"_S_on_swap"
 37119      6E5F7377 
 37119      617000
 37120              	.LASF1024:
 37121 74fc 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEpLEl"
 37121      5F5F676E 
 37121      755F6378 
 37121      7831375F 
 37121      5F6E6F72 
 37122              	.LASF962:
 37123 7528 5F5A5374 		.string	"_ZSt4endlIcSt11char_traitsIcEERSt13basic_ostreamIT_T0_ES6_"
 37123      34656E64 
 37123      6C496353 
 37123      74313163 
 37123      6861725F 
 37124              	.LASF1233:
 37125 7563 73777072 		.string	"swprintf"
 37125      696E7466 
 37125      00
 37126              	.LASF502:
 37127 756c 616C6C6F 		.string	"allocator_traits<std::allocator<float> >"
GAS LISTING /tmp/ccKUqHDa.s 			page 1005


 37127      6361746F 
 37127      725F7472 
 37127      61697473 
 37127      3C737464 
 37128              	.LASF612:
 37129 7595 5F4D5F66 		.string	"_M_fill_assign"
 37129      696C6C5F 
 37129      61737369 
 37129      676E00
 37130              	.LASF1428:
 37131 75a4 5F5F696E 		.string	"__in_chrg"
 37131      5F636872 
 37131      6700
 37132              	.LASF943:
 37133 75ae 5F5F6669 		.string	"__fill_n_a<long unsigned int, unsigned char>"
 37133      6C6C5F6E 
 37133      5F613C6C 
 37133      6F6E6720 
 37133      756E7369 
 37134              	.LASF791:
 37135 75db 5F556E69 		.string	"_UniformRandomNumberGenerator"
 37135      666F726D 
 37135      52616E64 
 37135      6F6D4E75 
 37135      6D626572 
 37136              	.LASF401:
 37137 75f9 5F497349 		.string	"_IsInt"
 37137      6E7400
 37138              	.LASF541:
 37139 7600 5F5A4E53 		.string	"_ZNSt12_Vector_baseIfSaIfEE12_Vector_impl12_M_swap_dataERS2_"
 37139      7431325F 
 37139      56656374 
 37139      6F725F62 
 37139      61736549 
 37140              	.LASF1458:
 37141 763d 5F5F6C6F 		.string	"__log2r"
 37141      67327200 
 37142              	.LASF993:
 37143 7645 5F4D5F63 		.string	"_M_current"
 37143      75727265 
 37143      6E7400
 37144              	.LASF1447:
 37145 7650 5F5F6765 		.string	"__gen"
 37145      6E00
 37146              	.LASF901:
 37147 7656 69746572 		.string	"iterator_traits<char const*>"
 37147      61746F72 
 37147      5F747261 
 37147      6974733C 
 37147      63686172 
 37148              	.LASF1178:
 37149 7673 5F494F5F 		.string	"_IO_write_base"
 37149      77726974 
 37149      655F6261 
 37149      736500
 37150              	.LASF492:
 37151 7682 616C6C6F 		.string	"allocator<float>"
GAS LISTING /tmp/ccKUqHDa.s 			page 1006


 37151      6361746F 
 37151      723C666C 
 37151      6F61743E 
 37151      00
 37152              	.LASF437:
 37153 7693 5F535F65 		.string	"_S_eofbit"
 37153      6F666269 
 37153      7400
 37154              	.LASF43:
 37155 769d 5F5A4E53 		.string	"_ZNSt11char_traitsIcE4findEPKcmRS1_"
 37155      74313163 
 37155      6861725F 
 37155      74726169 
 37155      74734963 
 37156              	.LASF1383:
 37157 76c1 64696666 		.string	"difftime"
 37157      74696D65 
 37157      00
 37158              	.LASF1056:
 37159 76ca 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIfEE20_S_propagate_on_swapEv"
 37159      5F5F676E 
 37159      755F6378 
 37159      7831345F 
 37159      5F616C6C 
 37160              	.LASF2:
 37161 7707 696E7465 		.string	"integral_constant<bool, false>"
 37161      6772616C 
 37161      5F636F6E 
 37161      7374616E 
 37161      743C626F 
 37162              	.LASF364:
 37163 7726 5F5A4E53 		.string	"_ZNSt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615ELm11ELm4294967295ELm7E
 37163      7432336D 
 37163      65727365 
 37163      6E6E655F 
 37163      74776973 
 37164              	.LASF597:
 37165 77b8 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE9push_backERKf"
 37165      74367665 
 37165      63746F72 
 37165      49665361 
 37165      49664545 
 37166              	.LASF54:
 37167 77db 65715F69 		.string	"eq_int_type"
 37167      6E745F74 
 37167      79706500 
 37168              	.LASF986:
 37169 77e7 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIcE7addressERc"
 37169      395F5F67 
 37169      6E755F63 
 37169      78783133 
 37169      6E65775F 
 37170              	.LASF1137:
 37171 7813 696E7431 		.string	"int16_t"
 37171      365F7400 
 37172              	.LASF1342:
 37173 781b 5F5F706F 		.string	"__pos"
GAS LISTING /tmp/ccKUqHDa.s 			page 1007


 37173      7300
 37174              	.LASF479:
 37175 7821 5F5F6F73 		.string	"__ostream_type"
 37175      74726561 
 37175      6D5F7479 
 37175      706500
 37176              	.LASF504:
 37177 7830 5F5F636F 		.string	"__const_void_pointer"
 37177      6E73745F 
 37177      766F6964 
 37177      5F706F69 
 37177      6E746572 
 37178              	.LASF474:
 37179 7845 7365656B 		.string	"seekdir"
 37179      64697200 
 37180              	.LASF1385:
 37181 784d 74696D65 		.string	"time"
 37181      00
 37182              	.LASF840:
 37183 7852 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE6rbeginEv"
 37183      74367665 
 37183      63746F72 
 37183      49537434 
 37183      70616972 
 37184              	.LASF336:
 37185 787c 5F5F6361 		.string	"__calc"
 37185      6C6300
 37186              	.LASF855:
 37187 7883 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE7reserveEm"
 37187      74367665 
 37187      63746F72 
 37187      49537434 
 37187      70616972 
 37188              	.LASF699:
 37189 78ae 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE4backEv"
 37189      74367665 
 37189      63746F72 
 37189      49685361 
 37189      49684545 
 37190              	.LASF126:
 37191 78ca 5F4D5F6C 		.string	"_M_limit"
 37191      696D6974 
 37191      00
 37192              	.LASF216:
 37193 78d3 5F5A4E53 		.string	"_ZNSs9push_backEc"
 37193      73397075 
 37193      73685F62 
 37193      61636B45 
 37193      6300
 37194              	.LASF333:
 37195 78e5 5F456E67 		.string	"_Engine"
 37195      696E6500 
 37196              	.LASF430:
 37197 78ed 5F535F69 		.string	"_S_in"
 37197      6E00
 37198              	.LASF806:
 37199 78f3 616C6C6F 		.string	"allocator_traits<std::allocator<std::pair<float, float> > >"
GAS LISTING /tmp/ccKUqHDa.s 			page 1008


 37199      6361746F 
 37199      725F7472 
 37199      61697473 
 37199      3C737464 
 37200              	.LASF276:
 37201 792f 5F5A4E4B 		.string	"_ZNKSs5rfindEPKcmm"
 37201      53733572 
 37201      66696E64 
 37201      45504B63 
 37201      6D6D00
 37202              	.LASF1504:
 37203 7942 5F5A4E39 		.string	"_ZN9__gnu_cxx25__numeric_traits_floatingIfE16__max_exponent10E"
 37203      5F5F676E 
 37203      755F6378 
 37203      7832355F 
 37203      5F6E756D 
 37204              	.LASF455:
 37205 7981 6C656674 		.string	"left"
 37205      00
 37206              	.LASF1451:
 37207 7986 5F5F6C6F 		.string	"__lower_mask"
 37207      7765725F 
 37207      6D61736B 
 37207      00
 37208              	.LASF1371:
 37209 7993 73657462 		.string	"setbuf"
 37209      756600
 37210              	.LASF1302:
 37211 799a 696E745F 		.string	"int_fast64_t"
 37211      66617374 
 37211      36345F74 
 37211      00
 37212              	.LASF1434:
 37213 79a7 5F5F7265 		.string	"__res"
 37213      7300
 37214              	.LASF1163:
 37215 79ad 7763746F 		.string	"wctomb"
 37215      6D6200
 37216              	.LASF637:
 37217 79b4 616C6C6F 		.string	"allocator<unsigned char>"
 37217      6361746F 
 37217      723C756E 
 37217      7369676E 
 37217      65642063 
 37218              	.LASF1227:
 37219 79cd 6D62726C 		.string	"mbrlen"
 37219      656E00
 37220              	.LASF1025:
 37221 79d4 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEplEl"
 37221      395F5F67 
 37221      6E755F63 
 37221      78783137 
 37221      5F5F6E6F 
 37222              	.LASF193:
 37223 7a01 5F5A4E4B 		.string	"_ZNKSsixEm"
 37223      53736978 
 37223      456D00
GAS LISTING /tmp/ccKUqHDa.s 			page 1009


 37224              	.LASF953:
 37225 7a0c 5F5F6269 		.string	"__bits"
 37225      747300
 37226              	.LASF1051:
 37227 7a13 5F5A4E53 		.string	"_ZNSs4_Rep12_S_empty_repEv"
 37227      73345F52 
 37227      65703132 
 37227      5F535F65 
 37227      6D707479 
 37228              	.LASF1093:
 37229 7a2e 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIffEEE20_S_propagate_on_swapEv"
 37229      5F5F676E 
 37229      755F6378 
 37229      7831345F 
 37229      5F616C6C 
 37230              	.LASF344:
 37231 7a75 6D657273 		.string	"mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 2567483615ul, 11ul, 
 37231      656E6E65 
 37231      5F747769 
 37231      73746572 
 37231      5F656E67 
 37232              	.LASF600:
 37233 7b17 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE6insertEN9__gnu_cxx17__normal_iteratorIPKfS1_EERS4_"
 37233      74367665 
 37233      63746F72 
 37233      49665361 
 37233      49664545 
 37234              	.LASF627:
 37235 7b5f 5F4D5F6D 		.string	"_M_move_assign"
 37235      6F76655F 
 37235      61737369 
 37235      676E00
 37236              	.LASF395:
 37237 7b6e 5F556E71 		.string	"_Unqualified"
 37237      75616C69 
 37237      66696564 
 37237      00
 37238              	.LASF1006:
 37239 7b7b 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEpLEl"
 37239      5F5F676E 
 37239      755F6378 
 37239      7831375F 
 37239      5F6E6F72 
 37240              	.LASF675:
 37241 7ba6 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE3endEv"
 37241      53743676 
 37241      6563746F 
 37241      72496853 
 37241      61496845 
 37242              	.LASF433:
 37243 7bc2 5F535F69 		.string	"_S_ios_openmode_end"
 37243      6F735F6F 
 37243      70656E6D 
 37243      6F64655F 
 37243      656E6400 
 37244              	.LASF1354:
 37245 7bd6 66666C75 		.string	"fflush"
GAS LISTING /tmp/ccKUqHDa.s 			page 1010


 37245      736800
 37246              	.LASF555:
 37247 7bdd 5F4D5F63 		.string	"_M_create_storage"
 37247      72656174 
 37247      655F7374 
 37247      6F726167 
 37247      6500
 37248              	.LASF451:
 37249 7bef 73746174 		.string	"state_size"
 37249      655F7369 
 37249      7A6500
 37250              	.LASF90:
 37251 7bfa 5F5A4E4B 		.string	"_ZNKSs4_Rep12_M_is_sharedEv"
 37251      5373345F 
 37251      52657031 
 37251      325F4D5F 
 37251      69735F73 
 37252              	.LASF652:
 37253 7c16 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE8allocateERS0_m"
 37253      74313661 
 37253      6C6C6F63 
 37253      61746F72 
 37253      5F747261 
 37254              	.LASF329:
 37255 7c44 5F5A4E4B 		.string	"_ZNKSt8__detail8_AdaptorISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615E
 37255      5374385F 
 37255      5F646574 
 37255      61696C38 
 37255      5F416461 
 37256              	.LASF35:
 37257 7cee 696E745F 		.string	"int_type"
 37257      74797065 
 37257      00
 37258              	.LASF362:
 37259 7cf7 73656564 		.string	"seed"
 37259      00
 37260              	.LASF980:
 37261 7cfc 5F5F6469 		.string	"__digits"
 37261      67697473 
 37261      00
 37262              	.LASF227:
 37263 7d05 5F5A4E53 		.string	"_ZNSs6insertEmRKSs"
 37263      7336696E 
 37263      73657274 
 37263      456D524B 
 37263      537300
 37264              	.LASF99:
 37265 7d18 5F4D5F67 		.string	"_M_grab"
 37265      72616200 
 37266              	.LASF20:
 37267 7d20 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptraSEOS0_"
 37267      7431355F 
 37267      5F657863 
 37267      65707469 
 37267      6F6E5F70 
 37268              	.LASF190:
 37269 7d4d 656D7074 		.string	"empty"
GAS LISTING /tmp/ccKUqHDa.s 			page 1011


 37269      7900
 37270              	.LASF104:
 37271 7d53 5F5A4E53 		.string	"_ZNSs4_Rep10_M_disposeERKSaIcE"
 37271      73345F52 
 37271      65703130 
 37271      5F4D5F64 
 37271      6973706F 
 37272              	.LASF900:
 37273 7d72 5F547269 		.string	"_TrivialValueType"
 37273      7669616C 
 37273      56616C75 
 37273      65547970 
 37273      6500
 37274              	.LASF919:
 37275 7d84 5F466163 		.string	"_Facet"
 37275      657400
 37276              	.LASF431:
 37277 7d8b 5F535F6F 		.string	"_S_out"
 37277      757400
 37278              	.LASF1015:
 37279 7d92 5F436F6E 		.string	"_Container"
 37279      7461696E 
 37279      657200
 37280              	.LASF898:
 37281 7d9d 5F5F756E 		.string	"__uninitialized_default_n_1<false>"
 37281      696E6974 
 37281      69616C69 
 37281      7A65645F 
 37281      64656661 
 37282              	.LASF1321:
 37283 7dc0 6D6F6E5F 		.string	"mon_grouping"
 37283      67726F75 
 37283      70696E67 
 37283      00
 37284              	.LASF733:
 37285 7dcd 5F547970 		.string	"_Type"
 37285      6500
 37286              	.LASF814:
 37287 7dd3 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE48_S_propagate_on_container_move_assignment_helpe
 37287      74313661 
 37287      6C6C6F63 
 37287      61746F72 
 37287      5F747261 
 37288              	.LASF671:
 37289 7e30 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6assignESt16initializer_listIhE"
 37289      74367665 
 37289      63746F72 
 37289      49685361 
 37289      49684545 
 37290              	.LASF697:
 37291 7e64 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE5frontEv"
 37291      74367665 
 37291      63746F72 
 37291      49685361 
 37291      49684545 
 37292              	.LASF785:
 37293 7e81 70617261 		.string	"param"
GAS LISTING /tmp/ccKUqHDa.s 			page 1012


 37293      6D00
 37294              	.LASF1283:
 37295 7e87 776D656D 		.string	"wmemchr"
 37295      63687200 
 37296              	.LASF821:
 37297 7e8f 5F5F616C 		.string	"__alloctr_rebind<std::allocator<std::pair<float, float> >, std::pair<float, float>, true>
 37297      6C6F6374 
 37297      725F7265 
 37297      62696E64 
 37297      3C737464 
 37298              	.LASF115:
 37299 7ee9 5F5A4E4B 		.string	"_ZNKSs6_M_repEv"
 37299      5373365F 
 37299      4D5F7265 
 37299      70457600 
 37300              	.LASF1115:
 37301 7ef9 5F5F6578 		.string	"__exchange_and_add_dispatch"
 37301      6368616E 
 37301      67655F61 
 37301      6E645F61 
 37301      64645F64 
 37302              	.LASF1254:
 37303 7f15 746D5F79 		.string	"tm_year"
 37303      65617200 
 37304              	.LASF1441:
 37305 7f1d 5F5F7268 		.string	"__rhs"
 37305      7300
 37306              	.LASF670:
 37307 7f23 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6assignEmRKh"
 37307      74367665 
 37307      63746F72 
 37307      49685361 
 37307      49684545 
 37308              	.LASF1125:
 37309 7f44 376C6C64 		.string	"7lldiv_t"
 37309      69765F74 
 37309      00
 37310              	.LASF1017:
 37311 7f4d 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEdeEv"
 37311      395F5F67 
 37311      6E755F63 
 37311      78783137 
 37311      5F5F6E6F 
 37312              	.LASF305:
 37313 7f7a 5F5A4E4B 		.string	"_ZNKSs7compareEmmPKc"
 37313      53733763 
 37313      6F6D7061 
 37313      7265456D 
 37313      6D504B63 
 37314              	.LASF669:
 37315 7f8f 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEEaSESt16initializer_listIhE"
 37315      74367665 
 37315      63746F72 
 37315      49685361 
 37315      49684545 
 37316              	.LASF171:
 37317 7fbe 5F5A4E4B 		.string	"_ZNKSs7crbeginEv"
GAS LISTING /tmp/ccKUqHDa.s 			page 1013


 37317      53733763 
 37317      72626567 
 37317      696E4576 
 37317      00
 37318              	.LASF52:
 37319 7fcf 746F5F69 		.string	"to_int_type"
 37319      6E745F74 
 37319      79706500 
 37320              	.LASF477:
 37321 7fdb 6F706572 		.string	"operator<<"
 37321      61746F72 
 37321      3C3C00
 37322              	.LASF1014:
 37323 7fe6 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsE4baseEv"
 37323      395F5F67 
 37323      6E755F63 
 37323      78783137 
 37323      5F5F6E6F 
 37324              	.LASF145:
 37325 8015 5F5A4E53 		.string	"_ZNSs9_M_mutateEmmm"
 37325      73395F4D 
 37325      5F6D7574 
 37325      61746545 
 37325      6D6D6D00 
 37326              	.LASF708:
 37327 8029 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPKhS1_EESt16initializer_listIh
 37327      74367665 
 37327      63746F72 
 37327      49685361 
 37327      49684545 
 37328              	.LASF450:
 37329 8084 696F7374 		.string	"iostate"
 37329      61746500 
 37330              	.LASF112:
 37331 808c 5F5A4E4B 		.string	"_ZNKSs7_M_dataEv"
 37331      5373375F 
 37331      4D5F6461 
 37331      74614576 
 37331      00
 37332              	.LASF1167:
 37333 809d 73747274 		.string	"strtoull"
 37333      6F756C6C 
 37333      00
 37334              	.LASF1494:
 37335 80a6 6C6F6465 		.string	"lodepng_default_decompress_settings"
 37335      706E675F 
 37335      64656661 
 37335      756C745F 
 37335      6465636F 
 37336              	.LASF308:
 37337 80ca 5F547261 		.string	"_Traits"
 37337      69747300 
 37338              	.LASF829:
 37339 80d2 5F5A4E53 		.string	"_ZNSt12_Vector_baseISt4pairIffESaIS1_EE17_M_create_storageEm"
 37339      7431325F 
 37339      56656374 
 37339      6F725F62 
GAS LISTING /tmp/ccKUqHDa.s 			page 1014


 37339      61736549 
 37340              	.LASF1131:
 37341 810f 5F5F6F66 		.string	"__off64_t"
 37341      6636345F 
 37341      7400
 37342              	.LASF1266:
 37343 8119 77637374 		.string	"wcstod"
 37343      6F6400
 37344              	.LASF405:
 37345 8120 66616C73 		.string	"false_type"
 37345      655F7479 
 37345      706500
 37346              	.LASF1267:
 37347 812b 77637374 		.string	"wcstof"
 37347      6F6600
 37348              	.LASF229:
 37349 8132 5F5A4E53 		.string	"_ZNSs6insertEmPKcm"
 37349      7336696E 
 37349      73657274 
 37349      456D504B 
 37349      636D00
 37350              	.LASF579:
 37351 8145 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE6resizeEm"
 37351      74367665 
 37351      63746F72 
 37351      49665361 
 37351      49664545 
 37352              	.LASF1078:
 37353 8163 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE15_S_nothrow_moveEv"
 37353      5F5F676E 
 37353      755F6378 
 37353      7831345F 
 37353      5F616C6C 
 37354              	.LASF622:
 37355 819b 5F4D5F65 		.string	"_M_erase_at_end"
 37355      72617365 
 37355      5F61745F 
 37355      656E6400 
 37356              	.LASF596:
 37357 81ab 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE4dataEv"
 37357      53743676 
 37357      6563746F 
 37357      72496653 
 37357      61496645 
 37358              	.LASF137:
 37359 81c8 5F535F63 		.string	"_S_copy_chars"
 37359      6F70795F 
 37359      63686172 
 37359      7300
 37360              	.LASF1073:
 37361 81d6 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE10_S_on_swapERS1_S3_"
 37361      5F5F676E 
 37361      755F6378 
 37361      7831345F 
 37361      5F616C6C 
 37362              	.LASF693:
 37363 820f 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEEixEm"
GAS LISTING /tmp/ccKUqHDa.s 			page 1015


 37363      53743676 
 37363      6563746F 
 37363      72496853 
 37363      61496845 
 37364              	.LASF15:
 37365 8229 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr10_M_releaseEv"
 37365      7431355F 
 37365      5F657863 
 37365      65707469 
 37365      6F6E5F70 
 37366              	.LASF220:
 37367 825d 5F5A4E53 		.string	"_ZNSs6assignEPKcm"
 37367      73366173 
 37367      7369676E 
 37367      45504B63 
 37367      6D00
 37368              	.LASF380:
 37369 826f 5F5A4E53 		.string	"_ZNSt13random_deviceclEv"
 37369      74313372 
 37369      616E646F 
 37369      6D5F6465 
 37369      76696365 
 37370              	.LASF111:
 37371 8288 5F5A4E53 		.string	"_ZNSs4_Rep10_M_refcopyEv"
 37371      73345F52 
 37371      65703130 
 37371      5F4D5F72 
 37371      6566636F 
 37372              	.LASF243:
 37373 82a1 5F5A4E53 		.string	"_ZNSs7replaceEmmPKc"
 37373      73377265 
 37373      706C6163 
 37373      65456D6D 
 37373      504B6300 
 37374              	.LASF1482:
 37375 82b5 5F5F795F 		.string	"__y_distr"
 37375      64697374 
 37375      7200
 37376              	.LASF1110:
 37377 82bf 5F5F6E6F 		.string	"__normal_iterator<const std::pair<float, float>*, std::vector<std::pair<float, float>, st
 37377      726D616C 
 37377      5F697465 
 37377      7261746F 
 37377      723C636F 
 37378              	.LASF409:
 37379 8343 5F535F68 		.string	"_S_hex"
 37379      657800
 37380              	.LASF642:
 37381 834a 616C6C6F 		.string	"allocator_traits<std::allocator<unsigned char> >"
 37381      6361746F 
 37381      725F7472 
 37381      61697473 
 37381      3C737464 
 37382              	.LASF654:
 37383 837b 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE10deallocateERS0_Phm"
 37383      74313661 
 37383      6C6C6F63 
GAS LISTING /tmp/ccKUqHDa.s 			page 1016


 37383      61746F72 
 37383      5F747261 
 37384              	.LASF185:
 37385 83ae 5F5A4E4B 		.string	"_ZNKSs8capacityEv"
 37385      53733863 
 37385      61706163 
 37385      69747945 
 37385      7600
 37386              	.LASF252:
 37387 83c0 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_NS0_IPKcSsEES5_"
 37387      73377265 
 37387      706C6163 
 37387      65454E39 
 37387      5F5F676E 
 37388              	.LASF1099:
 37389 8406 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEptEv"
 37389      395F5F67 
 37389      6E755F63 
 37389      78783137 
 37389      5F5F6E6F 
 37390              	.LASF688:
 37391 844f 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE13shrink_to_fitEv"
 37391      74367665 
 37391      63746F72 
 37391      49685361 
 37391      49684545 
 37392              	.LASF625:
 37393 8475 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE8_M_eraseEN9__gnu_cxx17__normal_iteratorIPfS1_EE"
 37393      74367665 
 37393      63746F72 
 37393      49665361 
 37393      49664545 
 37394              	.LASF1217:
 37395 84ba 62746F77 		.string	"btowc"
 37395      6300
 37396              	.LASF680:
 37397 84c0 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE6cbeginEv"
 37397      53743676 
 37397      6563746F 
 37397      72496853 
 37397      61496845 
 37398              	.LASF412:
 37399 84df 5F535F6F 		.string	"_S_oct"
 37399      637400
 37400              	.LASF557:
 37401 84e6 76656374 		.string	"vector<float, std::allocator<float> >"
 37401      6F723C66 
 37401      6C6F6174 
 37401      2C207374 
 37401      643A3A61 
 37402              	.LASF918:
 37403 850c 5F5F6368 		.string	"__check_facet<std::ctype<char> >"
 37403      65636B5F 
 37403      66616365 
 37403      743C7374 
 37403      643A3A63 
 37404              	.LASF245:
GAS LISTING /tmp/ccKUqHDa.s 			page 1017


 37405 852d 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_RKSs"
 37405      73377265 
 37405      706C6163 
 37405      65454E39 
 37405      5F5F676E 
 37406              	.LASF92:
 37407 8568 5F5A4E53 		.string	"_ZNSs4_Rep13_M_set_leakedEv"
 37407      73345F52 
 37407      65703133 
 37407      5F4D5F73 
 37407      65745F6C 
 37408              	.LASF406:
 37409 8584 5F535F62 		.string	"_S_boolalpha"
 37409      6F6F6C61 
 37409      6C706861 
 37409      00
 37410              	.LASF531:
 37411 8591 73656C65 		.string	"select_on_container_copy_construction"
 37411      63745F6F 
 37411      6E5F636F 
 37411      6E746169 
 37411      6E65725F 
 37412              	.LASF248:
 37413 85b7 5F5A4E53 		.string	"_ZNSs7replaceEN9__gnu_cxx17__normal_iteratorIPcSsEES2_mc"
 37413      73377265 
 37413      706C6163 
 37413      65454E39 
 37413      5F5F676E 
 37414              	.LASF820:
 37415 85f0 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE37select_on_container_copy_constructionERKS2_"
 37415      74313661 
 37415      6C6C6F63 
 37415      61746F72 
 37415      5F747261 
 37416              	.LASF1475:
 37417 8646 70726E67 		.string	"prng"
 37417      00
 37418              	.LASF14:
 37419 864b 5F5A4E53 		.string	"_ZNSt15__exception_ptr13exception_ptr9_M_addrefEv"
 37419      7431355F 
 37419      5F657863 
 37419      65707469 
 37419      6F6E5F70 
 37420              	.LASF1273:
 37421 867d 776D656D 		.string	"wmemcmp"
 37421      636D7000 
 37422              	.LASF1050:
 37423 8685 5F535F70 		.string	"_S_propagate_on_copy_assign"
 37423      726F7061 
 37423      67617465 
 37423      5F6F6E5F 
 37423      636F7079 
 37424              	.LASF177:
 37425 86a1 6D61785F 		.string	"max_size"
 37425      73697A65 
 37425      00
 37426              	.LASF480:
GAS LISTING /tmp/ccKUqHDa.s 			page 1018


 37427 86aa 5F5A4E53 		.string	"_ZNSolsEj"
 37427      6F6C7345 
 37427      6A00
 37428              	.LASF33:
 37429 86b4 63686172 		.string	"char_traits<char>"
 37429      5F747261 
 37429      6974733C 
 37429      63686172 
 37429      3E00
 37430              	.LASF587:
 37431 86c6 5F4D5F72 		.string	"_M_range_check"
 37431      616E6765 
 37431      5F636865 
 37431      636B00
 37432              	.LASF641:
 37433 86d5 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPhE10pointer_toERh"
 37433      74313470 
 37433      6F696E74 
 37433      65725F74 
 37433      72616974 
 37434              	.LASF1450:
 37435 86fe 5F5F7570 		.string	"__upper_mask"
 37435      7065725F 
 37435      6D61736B 
 37435      00
 37436              	.LASF1395:
 37437 870b 4C43545F 		.string	"LCT_GREY_ALPHA"
 37437      47524559 
 37437      5F414C50 
 37437      484100
 37438              	.LASF32:
 37439 871a 5F5F6465 		.string	"__destroy<unsigned char*>"
 37439      7374726F 
 37439      793C756E 
 37439      7369676E 
 37439      65642063 
 37440              	.LASF124:
 37441 8734 5F4D5F63 		.string	"_M_check_length"
 37441      6865636B 
 37441      5F6C656E 
 37441      67746800 
 37442              	.LASF591:
 37443 8744 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE5frontEv"
 37443      74367665 
 37443      63746F72 
 37443      49665361 
 37443      49664545 
 37444              	.LASF132:
 37445 8761 5F5A4E53 		.string	"_ZNSs7_M_copyEPcPKcm"
 37445      73375F4D 
 37445      5F636F70 
 37445      79455063 
 37445      504B636D 
 37446              	.LASF494:
 37447 8776 6F746865 		.string	"other"
 37447      7200
 37448              	.LASF833:
GAS LISTING /tmp/ccKUqHDa.s 			page 1019


 37449 877c 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EEaSESt16initializer_listIS1_E"
 37449      74367665 
 37449      63746F72 
 37449      49537434 
 37449      70616972 
 37450              	.LASF189:
 37451 87b9 5F5A4E53 		.string	"_ZNSs5clearEv"
 37451      7335636C 
 37451      65617245 
 37451      7600
 37452              	.LASF138:
 37453 87c7 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIS_SsEES2_"
 37453      7331335F 
 37453      535F636F 
 37453      70795F63 
 37453      68617273 
 37454              	.LASF219:
 37455 8807 5F5A4E53 		.string	"_ZNSs6assignERKSsmm"
 37455      73366173 
 37455      7369676E 
 37455      45524B53 
 37455      736D6D00 
 37456              	.LASF1079:
 37457 881b 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE15_S_nothrow_swapEv"
 37457      5F5F676E 
 37457      755F6378 
 37457      7831345F 
 37457      5F616C6C 
 37458              	.LASF1288:
 37459 8853 75696E74 		.string	"uint16_t"
 37459      31365F74 
 37459      00
 37460              	.LASF983:
 37461 885c 6E65775F 		.string	"new_allocator"
 37461      616C6C6F 
 37461      6361746F 
 37461      7200
 37462              	.LASF1070:
 37463 886a 5F5A4E4B 		.string	"_ZNK9__gnu_cxx13new_allocatorIhE8max_sizeEv"
 37463      395F5F67 
 37463      6E755F63 
 37463      78783133 
 37463      6E65775F 
 37464              	.LASF1469:
 37465 8896 6F706572 		.string	"operator float (*)(float)"
 37465      61746F72 
 37465      20666C6F 
 37465      61742028 
 37465      2A292866 
 37466              	.LASF960:
 37467 88b0 5F5A5374 		.string	"_ZSt4cerr"
 37467      34636572 
 37467      7200
 37468              	.LASF584:
 37469 88ba 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE7reserveEm"
 37469      74367665 
 37469      63746F72 
GAS LISTING /tmp/ccKUqHDa.s 			page 1020


 37469      49665361 
 37469      49664545 
 37470              	.LASF863:
 37471 88d9 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE4backEv"
 37471      74367665 
 37471      63746F72 
 37471      49537434 
 37471      70616972 
 37472              	.LASF902:
 37473 8901 5F497465 		.string	"_Iter_base<float*, false>"
 37473      725F6261 
 37473      73653C66 
 37473      6C6F6174 
 37473      2A2C2066 
 37474              	.LASF1374:
 37475 891b 746D706E 		.string	"tmpnam"
 37475      616D00
 37476              	.LASF160:
 37477 8922 72626567 		.string	"rbegin"
 37477      696E00
 37478              	.LASF1134:
 37479 8929 636C6F63 		.string	"clock_t"
 37479      6B5F7400 
 37480              	.LASF967:
 37481 8931 6C6F6E67 		.string	"long long unsigned int"
 37481      206C6F6E 
 37481      6720756E 
 37481      7369676E 
 37481      65642069 
 37482              	.LASF1053:
 37483 8948 5F535F70 		.string	"_S_propagate_on_move_assign"
 37483      726F7061 
 37483      67617465 
 37483      5F6F6E5F 
 37483      6D6F7665 
 37484              	.LASF996:
 37485 8964 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPcSsEdeEv"
 37485      395F5F67 
 37485      6E755F63 
 37485      78783137 
 37485      5F5F6E6F 
 37486              	.LASF469:
 37487 8990 6661696C 		.string	"failbit"
 37487      62697400 
 37488              	.LASF1274:
 37489 8998 776D656D 		.string	"wmemcpy"
 37489      63707900 
 37490              	.LASF274:
 37491 89a0 7266696E 		.string	"rfind"
 37491      6400
 37492              	.LASF244:
 37493 89a6 5F5A4E53 		.string	"_ZNSs7replaceEmmmc"
 37493      73377265 
 37493      706C6163 
 37493      65456D6D 
 37493      6D6300
 37494              	.LASF746:
GAS LISTING /tmp/ccKUqHDa.s 			page 1021


 37495 89b9 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EE6rbeginEv"
 37495      74356172 
 37495      72617949 
 37495      50396865 
 37495      61746D61 
 37496              	.LASF542:
 37497 89df 7E5F5665 		.string	"~_Vector_impl"
 37497      63746F72 
 37497      5F696D70 
 37497      6C00
 37498              	.LASF771:
 37499 89ed 5F4D5F73 		.string	"_M_stddev"
 37499      74646465 
 37499      7600
 37500              	.LASF297:
 37501 89f7 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofEPKcm"
 37501      53733136 
 37501      66696E64 
 37501      5F6C6173 
 37501      745F6E6F 
 37502              	.LASF46:
 37503 8a15 636F7079 		.string	"copy"
 37503      00
 37504              	.LASF922:
 37505 8a1a 5F446573 		.string	"_Destroy<float*>"
 37505      74726F79 
 37505      3C666C6F 
 37505      61742A3E 
 37505      00
 37506              	.LASF183:
 37507 8a2b 5F5A4E53 		.string	"_ZNSs13shrink_to_fitEv"
 37507      73313373 
 37507      6872696E 
 37507      6B5F746F 
 37507      5F666974 
 37508              	.LASF1161:
 37509 8a42 73797374 		.string	"system"
 37509      656D00
 37510              	.LASF816:
 37511 8a49 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE8allocateERS2_m"
 37511      74313661 
 37511      6C6C6F63 
 37511      61746F72 
 37511      5F747261 
 37512              	.LASF1410:
 37513 8a81 39686561 		.string	"9heatmap_t"
 37513      746D6170 
 37513      5F7400
 37514              	.LASF127:
 37515 8a8c 5F5A4E4B 		.string	"_ZNKSs8_M_limitEmm"
 37515      5373385F 
 37515      4D5F6C69 
 37515      6D697445 
 37515      6D6D00
 37516              	.LASF332:
 37517 8a9f 5F5A4E53 		.string	"_ZNSt8__detail8_AdaptorISt23mersenne_twister_engineImLm32ELm624ELm397ELm31ELm2567483615EL
 37517      74385F5F 
GAS LISTING /tmp/ccKUqHDa.s 			page 1022


 37517      64657461 
 37517      696C385F 
 37517      41646170 
 37518              	.LASF1528:
 37519 8b46 68656174 		.string	"heatmap_render_default_to"
 37519      6D61705F 
 37519      72656E64 
 37519      65725F64 
 37519      65666175 
 37520              	.LASF49:
 37521 8b60 5F5A4E53 		.string	"_ZNSt11char_traitsIcE6assignEPcmc"
 37521      74313163 
 37521      6861725F 
 37521      74726169 
 37521      74734963 
 37522              	.LASF1466:
 37523 8b82 67656E65 		.string	"generate<__gnu_cxx::__normal_iterator<std::pair<float, float>*, std::vector<std::pair<flo
 37523      72617465 
 37523      3C5F5F67 
 37523      6E755F63 
 37523      78783A3A 
 37524              	.LASF995:
 37525 8c0b 6F706572 		.string	"operator*"
 37525      61746F72 
 37525      2A00
 37526              	.LASF1007:
 37527 8c15 6F706572 		.string	"operator+"
 37527      61746F72 
 37527      2B00
 37528              	.LASF1011:
 37529 8c1f 6F706572 		.string	"operator-"
 37529      61746F72 
 37529      2D00
 37530              	.LASF134:
 37531 8c29 5F5A4E53 		.string	"_ZNSs7_M_moveEPcPKcm"
 37531      73375F4D 
 37531      5F6D6F76 
 37531      65455063 
 37531      504B636D 
 37532              	.LASF397:
 37533 8c3e 5F497356 		.string	"_IsVol"
 37533      6F6C00
 37534              	.LASF1121:
 37535 8c45 6469765F 		.string	"div_t"
 37535      7400
 37536              	.LASF146:
 37537 8c4b 5F4D5F6C 		.string	"_M_leak_hard"
 37537      65616B5F 
 37537      68617264 
 37537      00
 37538              	.LASF18:
 37539 8c58 6F706572 		.string	"operator="
 37539      61746F72 
 37539      3D00
 37540              	.LASF880:
 37541 8c62 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE14_M_fill_assignEmRKS1_"
 37541      74367665 
GAS LISTING /tmp/ccKUqHDa.s 			page 1023


 37541      63746F72 
 37541      49537434 
 37541      70616972 
 37542              	.LASF388:
 37543 8c9a 5F4D5F67 		.string	"_M_getval"
 37543      65747661 
 37543      6C00
 37544              	.LASF921:
 37545 8ca4 5F5F6164 		.string	"__addressof<heatmap_t*>"
 37545      64726573 
 37545      736F663C 
 37545      68656174 
 37545      6D61705F 
 37546              	.LASF888:
 37547 8cbc 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE14_M_move_assignEOS3_St17integral_constantIbLb1EE"
 37547      74367665 
 37547      63746F72 
 37547      49537434 
 37547      70616972 
 37548              	.LASF1088:
 37549 8d0e 5F5F616C 		.string	"__alloc_traits<std::allocator<std::pair<float, float> > >"
 37549      6C6F635F 
 37549      74726169 
 37549      74733C73 
 37549      74643A3A 
 37550              	.LASF1363:
 37551 8d48 6674656C 		.string	"ftell"
 37551      6C00
 37552              	.LASF413:
 37553 8d4e 5F535F72 		.string	"_S_right"
 37553      69676874 
 37553      00
 37554              	.LASF7:
 37555 8d57 6F706572 		.string	"operator std::integral_constant<bool, true>::value_type"
 37555      61746F72 
 37555      20737464 
 37555      3A3A696E 
 37555      74656772 
 37556              	.LASF1312:
 37557 8d8f 63686172 		.string	"char32_t"
 37557      33325F74 
 37557      00
 37558              	.LASF1156:
 37559 8d98 72616E64 		.string	"rand"
 37559      00
 37560              	.LASF730:
 37561 8d9d 5F5A4E4B 		.string	"_ZNKSt16initializer_listIhE5beginEv"
 37561      53743136 
 37561      696E6974 
 37561      69616C69 
 37561      7A65725F 
 37562              	.LASF1454:
 37563 8dc1 5F5F6175 		.string	"__aurng"
 37563      726E6700 
 37564              	.LASF1479:
 37565 8dc9 3C6C616D 		.string	"<lambda()>"
 37565      62646128 
GAS LISTING /tmp/ccKUqHDa.s 			page 1024


 37565      293E00
 37566              	.LASF113:
 37567 8dd4 5F5A4E53 		.string	"_ZNSs7_M_dataEPc"
 37567      73375F4D 
 37567      5F646174 
 37567      61455063 
 37567      00
 37568              	.LASF507:
 37569 8de5 5F535F70 		.string	"_S_pointer_helper"
 37569      6F696E74 
 37569      65725F68 
 37569      656C7065 
 37569      7200
 37570              	.LASF1413:
 37571 8df7 68656174 		.string	"heatmap_stamp_t"
 37571      6D61705F 
 37571      7374616D 
 37571      705F7400 
 37572              	.LASF1075:
 37573 8e07 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE27_S_propagate_on_move_assignEv"
 37573      5F5F676E 
 37573      755F6378 
 37573      7831345F 
 37573      5F616C6C 
 37574              	.LASF381:
 37575 8e4b 5F5A4E53 		.string	"_ZNSt13random_deviceaSERKS_"
 37575      74313372 
 37575      616E646F 
 37575      6D5F6465 
 37575      76696365 
 37576              	.LASF295:
 37577 8e67 5F5A4E4B 		.string	"_ZNKSs16find_last_not_ofERKSsm"
 37577      53733136 
 37577      66696E64 
 37577      5F6C6173 
 37577      745F6E6F 
 37578              	.LASF710:
 37579 8e86 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPKhS1_EE"
 37579      74367665 
 37579      63746F72 
 37579      49685361 
 37579      49684545 
 37580              	.LASF914:
 37581 8ec9 6F706572 		.string	"operator|"
 37581      61746F72 
 37581      7C00
 37582              	.LASF302:
 37583 8ed3 5F5A4E4B 		.string	"_ZNKSs7compareEmmRKSs"
 37583      53733763 
 37583      6F6D7061 
 37583      7265456D 
 37583      6D524B53 
 37584              	.LASF263:
 37585 8ee9 5F5A4E53 		.string	"_ZNSs4swapERSs"
 37585      73347377 
 37585      61704552 
 37585      537300
GAS LISTING /tmp/ccKUqHDa.s 			page 1025


 37586              	.LASF982:
 37587 8ef8 6E65775F 		.string	"new_allocator<char>"
 37587      616C6C6F 
 37587      6361746F 
 37587      723C6368 
 37587      61723E00 
 37588              	.LASF181:
 37589 8f0c 5F5A4E53 		.string	"_ZNSs6resizeEm"
 37589      73367265 
 37589      73697A65 
 37589      456D00
 37590              	.LASF61:
 37591 8f1b 73697A65 		.string	"size_type"
 37591      5F747970 
 37591      6500
 37592              	.LASF856:
 37593 8f25 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EEixEm"
 37593      74367665 
 37593      63746F72 
 37593      49537434 
 37593      70616972 
 37594              	.LASF810:
 37595 8f4a 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE28_S_const_void_pointer_helperEz"
 37595      74313661 
 37595      6C6C6F63 
 37595      61746F72 
 37595      5F747261 
 37596              	.LASF904:
 37597 8f93 5F535F62 		.string	"_S_base"
 37597      61736500 
 37598              	.LASF1033:
 37599 8f9b 5F5F6E75 		.string	"__numeric_traits_floating<double>"
 37599      6D657269 
 37599      635F7472 
 37599      61697473 
 37599      5F666C6F 
 37600              	.LASF1172:
 37601 8fbd 46494C45 		.string	"FILE"
 37601      00
 37602              	.LASF735:
 37603 8fc2 5F5A4E53 		.string	"_ZNSt14__array_traitsIP9heatmap_tLm5EE6_S_refERA5_KS1_m"
 37603      7431345F 
 37603      5F617272 
 37603      61795F74 
 37603      72616974 
 37604              	.LASF102:
 37605 8ffa 5F5A4E53 		.string	"_ZNSs4_Rep9_S_createEmmRKSaIcE"
 37605      73345F52 
 37605      6570395F 
 37605      535F6372 
 37605      65617465 
 37606              	.LASF337:
 37607 9019 5F5A4E53 		.string	"_ZNSt8__detail4_ModImLm4294967296ELm1ELm0ELb1ELb1EE6__calcEm"
 37607      74385F5F 
 37607      64657461 
 37607      696C345F 
 37607      4D6F6449 
GAS LISTING /tmp/ccKUqHDa.s 			page 1026


 37608              	.LASF609:
 37609 9056 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE18_M_fill_initializeEmRKf"
 37609      74367665 
 37609      63746F72 
 37609      49665361 
 37609      49664545 
 37610              	.LASF1514:
 37611 9084 73717274 		.string	"sqrtf"
 37611      6600
 37612              	.LASF1071:
 37613 908a 5F5F616C 		.string	"__alloc_traits<std::allocator<unsigned char> >"
 37613      6C6F635F 
 37613      74726169 
 37613      74733C73 
 37613      74643A3A 
 37614              	.LASF907:
 37615 90b9 5F497465 		.string	"_Iter_base<unsigned char*, false>"
 37615      725F6261 
 37615      73653C75 
 37615      6E736967 
 37615      6E656420 
 37616              	.LASF853:
 37617 90db 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE8capacityEv"
 37617      53743676 
 37617      6563746F 
 37617      72495374 
 37617      34706169 
 37618              	.LASF1480:
 37619 9108 5F5F785F 		.string	"__x_distr"
 37619      64697374 
 37619      7200
 37620              	.LASF211:
 37621 9112 5F5A4E53 		.string	"_ZNSs6appendEPKcm"
 37621      73366170 
 37621      70656E64 
 37621      45504B63 
 37621      6D00
 37622              	.LASF1128:
 37623 9124 63686172 		.string	"char"
 37623      00
 37624              	.LASF956:
 37625 9129 636F7574 		.string	"cout"
 37625      00
 37626              	.LASF518:
 37627 912e 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE19_S_size_type_helperEz"
 37627      74313661 
 37627      6C6C6F63 
 37627      61746F72 
 37627      5F747261 
 37628              	.LASF975:
 37629 9164 5F5A4E39 		.string	"_ZN9__gnu_cxx3divExx"
 37629      5F5F676E 
 37629      755F6378 
 37629      78336469 
 37629      76457878 
 37630              	.LASF690:
 37631 9179 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE5emptyEv"
GAS LISTING /tmp/ccKUqHDa.s 			page 1027


 37631      53743676 
 37631      6563746F 
 37631      72496853 
 37631      61496845 
 37632              	.LASF714:
 37633 9197 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE18_M_fill_initializeEmRKh"
 37633      74367665 
 37633      63746F72 
 37633      49685361 
 37633      49684545 
 37634              	.LASF711:
 37635 91c5 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE5eraseEN9__gnu_cxx17__normal_iteratorIPKhS1_EES6_"
 37635      74367665 
 37635      63746F72 
 37635      49685361 
 37635      49684545 
 37636              	.LASF354:
 37637 920b 74656D70 		.string	"tempering_b"
 37637      6572696E 
 37637      675F6200 
 37638              	.LASF356:
 37639 9217 74656D70 		.string	"tempering_c"
 37639      6572696E 
 37639      675F6300 
 37640              	.LASF352:
 37641 9223 74656D70 		.string	"tempering_d"
 37641      6572696E 
 37641      675F6400 
 37642              	.LASF357:
 37643 922f 74656D70 		.string	"tempering_l"
 37643      6572696E 
 37643      675F6C00 
 37644              	.LASF1497:
 37645 923b 5F5F6473 		.string	"__dso_handle"
 37645      6F5F6861 
 37645      6E646C65 
 37645      00
 37646              	.LASF1155:
 37647 9248 5F5F7468 		.string	"__throw_bad_alloc"
 37647      726F775F 
 37647      6261645F 
 37647      616C6C6F 
 37647      6300
 37648              	.LASF353:
 37649 925a 74656D70 		.string	"tempering_s"
 37649      6572696E 
 37649      675F7300 
 37650              	.LASF355:
 37651 9266 74656D70 		.string	"tempering_t"
 37651      6572696E 
 37651      675F7400 
 37652              	.LASF351:
 37653 9272 74656D70 		.string	"tempering_u"
 37653      6572696E 
 37653      675F7500 
 37654              	.LASF1378:
 37655 927e 69737763 		.string	"iswctype"
GAS LISTING /tmp/ccKUqHDa.s 			page 1028


 37655      74797065 
 37655      00
 37656              	.LASF851:
 37657 9287 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE6resizeEmRKS1_"
 37657      74367665 
 37657      63746F72 
 37657      49537434 
 37657      70616972 
 37658              	.LASF1456:
 37659 92b6 5F5F6D75 		.string	"__mult"
 37659      6C7400
 37660              	.LASF64:
 37661 92bd 616C6C6F 		.string	"allocator"
 37661      6361746F 
 37661      7200
 37662              	.LASF349:
 37663 92c7 72657375 		.string	"result_type"
 37663      6C745F74 
 37663      79706500 
 37664              	.LASF707:
 37665 92d3 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPKhS1_EEOh"
 37665      74367665 
 37665      63746F72 
 37665      49685361 
 37665      49684545 
 37666              	.LASF873:
 37667 9319 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE6insertEN9__gnu_cxx17__normal_iteratorIPKS1_S3_EEmRS6_"
 37667      74367665 
 37667      63746F72 
 37667      49537434 
 37667      70616972 
 37668              	.LASF741:
 37669 9370 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EE4swapERS2_"
 37669      74356172 
 37669      72617949 
 37669      50396865 
 37669      61746D61 
 37670              	.LASF1258:
 37671 9397 746D5F67 		.string	"tm_gmtoff"
 37671      6D746F66 
 37671      6600
 37672              	.LASF585:
 37673 93a1 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEEixEm"
 37673      74367665 
 37673      63746F72 
 37673      49665361 
 37673      49664545 
 37674              	.LASF1340:
 37675 93ba 5F41746F 		.string	"_Atomic_word"
 37675      6D69635F 
 37675      776F7264 
 37675      00
 37676              	.LASF1241:
 37677 93c7 76777363 		.string	"vwscanf"
 37677      616E6600 
 37678              	.LASF121:
 37679 93cf 5F5A4E53 		.string	"_ZNSs7_M_leakEv"
GAS LISTING /tmp/ccKUqHDa.s 			page 1029


 37679      73375F4D 
 37679      5F6C6561 
 37679      6B457600 
 37680              	.LASF55:
 37681 93df 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11eq_int_typeERKiS2_"
 37681      74313163 
 37681      6861725F 
 37681      74726169 
 37681      74734963 
 37682              	.LASF51:
 37683 9409 5F5A4E53 		.string	"_ZNSt11char_traitsIcE12to_char_typeERKi"
 37683      74313163 
 37683      6861725F 
 37683      74726169 
 37683      74734963 
 37684              	.LASF268:
 37685 9431 6765745F 		.string	"get_allocator"
 37685      616C6C6F 
 37685      6361746F 
 37685      7200
 37686              	.LASF936:
 37687 943f 5F4F7574 		.string	"_OutputIterator"
 37687      70757449 
 37687      74657261 
 37687      746F7200 
 37688              	.LASF931:
 37689 944f 5F5F756E 		.string	"__uninitialized_default_n_a<std::pair<float, float>*, long unsigned int, std::pair<float,
 37689      696E6974 
 37689      69616C69 
 37689      7A65645F 
 37689      64656661 
 37690              	.LASF1301:
 37691 94b2 696E745F 		.string	"int_fast32_t"
 37691      66617374 
 37691      33325F74 
 37691      00
 37692              	.LASF903:
 37693 94bf 69746572 		.string	"iterator_type"
 37693      61746F72 
 37693      5F747970 
 37693      6500
 37694              	.LASF948:
 37695 94cd 6D696E3C 		.string	"min<float>"
 37695      666C6F61 
 37695      743E00
 37696              	.LASF343:
 37697 94d8 5F5F6D6F 		.string	"__mod<long unsigned int, 624ul, 1ul, 0ul>"
 37697      643C6C6F 
 37697      6E672075 
 37697      6E736967 
 37697      6E656420 
 37698              	.LASF1041:
 37699 9502 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIfE8allocateEmPKv"
 37699      5F5F676E 
 37699      755F6378 
 37699      7831336E 
 37699      65775F61 
GAS LISTING /tmp/ccKUqHDa.s 			page 1030


 37700              	.LASF180:
 37701 9530 5F5A4E53 		.string	"_ZNSs6resizeEmc"
 37701      73367265 
 37701      73697A65 
 37701      456D6300 
 37702              	.LASF1442:
 37703 9540 5F5F746D 		.string	"__tmp"
 37703      7000
 37704              	.LASF1422:
 37705 9546 5F5F7661 		.string	"__val"
 37705      6C00
 37706              	.LASF1296:
 37707 954c 75696E74 		.string	"uint_least16_t"
 37707      5F6C6561 
 37707      73743136 
 37707      5F7400
 37708              	.LASF879:
 37709 955b 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE21_M_default_initializeEm"
 37709      74367665 
 37709      63746F72 
 37709      49537434 
 37709      70616972 
 37710              	.LASF1026:
 37711 9595 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPKcSsEmIEl"
 37711      5F5F676E 
 37711      755F6378 
 37711      7831375F 
 37711      5F6E6F72 
 37712              	.LASF679:
 37713 95c1 5F5A4E4B 		.string	"_ZNKSt6vectorIhSaIhEE4rendEv"
 37713      53743676 
 37713      6563746F 
 37713      72496853 
 37713      61496845 
 37714              	.LASF197:
 37715 95de 66726F6E 		.string	"front"
 37715      7400
 37716              	.LASF1095:
 37717 95e4 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIffEEE15_S_nothrow_moveEv"
 37717      5F5F676E 
 37717      755F6378 
 37717      7831345F 
 37717      5F616C6C 
 37718              	.LASF1068:
 37719 9626 5F5A4E39 		.string	"_ZN9__gnu_cxx13new_allocatorIhE8allocateEmPKv"
 37719      5F5F676E 
 37719      755F6378 
 37719      7831336E 
 37719      65775F61 
 37720              	.LASF582:
 37721 9654 5F5A4E4B 		.string	"_ZNKSt6vectorIfSaIfEE8capacityEv"
 37721      53743676 
 37721      6563746F 
 37721      72496653 
 37721      61496645 
 37722              	.LASF278:
 37723 9675 5F5A4E4B 		.string	"_ZNKSs5rfindEcm"
GAS LISTING /tmp/ccKUqHDa.s 			page 1031


 37723      53733572 
 37723      66696E64 
 37723      45636D00 
 37724              	.LASF224:
 37725 9685 696E7365 		.string	"insert"
 37725      727400
 37726              	.LASF946:
 37727 968c 5F5F756E 		.string	"__uninitialized_default_n<unsigned char*, long unsigned int>"
 37727      696E6974 
 37727      69616C69 
 37727      7A65645F 
 37727      64656661 
 37728              	.LASF604:
 37729 96c9 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE5eraseEN9__gnu_cxx17__normal_iteratorIPKfS1_EE"
 37729      74367665 
 37729      63746F72 
 37729      49665361 
 37729      49664545 
 37730              	.LASF878:
 37731 970c 5F5A4E53 		.string	"_ZNSt6vectorISt4pairIffESaIS1_EE18_M_fill_initializeEmRKS1_"
 37731      74367665 
 37731      63746F72 
 37731      49537434 
 37731      70616972 
 37732              	.LASF266:
 37733 9748 64617461 		.string	"data"
 37733      00
 37734              	.LASF945:
 37735 974d 66696C6C 		.string	"fill_n<unsigned char*, long unsigned int, unsigned char>"
 37735      5F6E3C75 
 37735      6E736967 
 37735      6E656420 
 37735      63686172 
 37736              	.LASF25:
 37737 9786 5F5A4E4B 		.string	"_ZNKSt15__exception_ptr13exception_ptr20__cxa_exception_typeEv"
 37737      53743135 
 37737      5F5F6578 
 37737      63657074 
 37737      696F6E5F 
 37738              	.LASF843:
 37739 97c5 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE4rendEv"
 37739      53743676 
 37739      6563746F 
 37739      72495374 
 37739      34706169 
 37740              	.LASF1228:
 37741 97ee 6D627274 		.string	"mbrtowc"
 37741      6F776300 
 37742              	.LASF289:
 37743 97f6 66696E64 		.string	"find_first_not_of"
 37743      5F666972 
 37743      73745F6E 
 37743      6F745F6F 
 37743      6600
 37744              	.LASF513:
 37745 9808 5F535F63 		.string	"_S_const_void_pointer_helper"
 37745      6F6E7374 
GAS LISTING /tmp/ccKUqHDa.s 			page 1032


 37745      5F766F69 
 37745      645F706F 
 37745      696E7465 
 37746              	.LASF619:
 37747 9825 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE16_M_shrink_to_fitEv"
 37747      74367665 
 37747      63746F72 
 37747      49665361 
 37747      49664545 
 37748              	.LASF1319:
 37749 984e 6D6F6E5F 		.string	"mon_decimal_point"
 37749      64656369 
 37749      6D616C5F 
 37749      706F696E 
 37749      7400
 37750              	.LASF139:
 37751 9860 5F5A4E53 		.string	"_ZNSs13_S_copy_charsEPcN9__gnu_cxx17__normal_iteratorIPKcSsEES4_"
 37751      7331335F 
 37751      535F636F 
 37751      70795F63 
 37751      68617273 
 37752              	.LASF36:
 37753 98a1 5F5A4E53 		.string	"_ZNSt11char_traitsIcE2eqERKcS2_"
 37753      74313163 
 37753      6861725F 
 37753      74726169 
 37753      74734963 
 37754              	.LASF687:
 37755 98c1 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6resizeEmRKh"
 37755      74367665 
 37755      63746F72 
 37755      49685361 
 37755      49684545 
 37756              	.LASF1187:
 37757 98e2 5F636861 		.string	"_chain"
 37757      696E00
 37758              	.LASF510:
 37759 98e9 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE23_S_const_pointer_helperEz"
 37759      74313661 
 37759      6C6C6F63 
 37759      61746F72 
 37759      5F747261 
 37760              	.LASF608:
 37761 9923 5F4D5F66 		.string	"_M_fill_initialize"
 37761      696C6C5F 
 37761      696E6974 
 37761      69616C69 
 37761      7A6500
 37762              	.LASF1140:
 37763 9936 5F5F636F 		.string	"__compar_fn_t"
 37763      6D706172 
 37763      5F666E5F 
 37763      7400
 37764              	.LASF932:
 37765 9944 6D696E3C 		.string	"min<long unsigned int>"
 37765      6C6F6E67 
 37765      20756E73 
GAS LISTING /tmp/ccKUqHDa.s 			page 1033


 37765      69676E65 
 37765      6420696E 
 37766              	.LASF651:
 37767 995b 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIhEE37_S_propagate_on_container_swap_helperEz"
 37767      74313661 
 37767      6C6C6F63 
 37767      61746F72 
 37767      5F747261 
 37768              	.LASF1349:
 37769 99a3 66706F73 		.string	"fpos_t"
 37769      5F7400
 37770              	.LASF1303:
 37771 99aa 75696E74 		.string	"uint_fast8_t"
 37771      5F666173 
 37771      74385F74 
 37771      00
 37772              	.LASF927:
 37773 99b7 5F446573 		.string	"_Destroy<std::pair<float, float>*, std::pair<float, float> >"
 37773      74726F79 
 37773      3C737464 
 37773      3A3A7061 
 37773      69723C66 
 37774              	.LASF744:
 37775 99f4 5F5A4E53 		.string	"_ZNSt5arrayIP9heatmap_tLm5EE3endEv"
 37775      74356172 
 37775      72617949 
 37775      50396865 
 37775      61746D61 
 37776              	.LASF291:
 37777 9a17 5F5A4E4B 		.string	"_ZNKSs17find_first_not_ofEPKcmm"
 37777      53733137 
 37777      66696E64 
 37777      5F666972 
 37777      73745F6E 
 37778              	.LASF498:
 37779 9a37 706F696E 		.string	"pointer_to"
 37779      7465725F 
 37779      746F00
 37780              	.LASF206:
 37781 9a42 5F5A4E53 		.string	"_ZNSspLEc"
 37781      73704C45 
 37781      6300
 37782              	.LASF593:
 37783 9a4c 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE4backEv"
 37783      74367665 
 37783      63746F72 
 37783      49665361 
 37783      49664545 
 37784              	.LASF756:
 37785 9a68 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE5emptyEv"
 37785      53743561 
 37785      72726179 
 37785      49503968 
 37785      6561746D 
 37786              	.LASF1420:
 37787 9a8e 5F5F6E70 		.string	"__nptr"
 37787      747200
GAS LISTING /tmp/ccKUqHDa.s 			page 1034


 37788              	.LASF1207:
 37789 9a95 6F766572 		.string	"overflow_arg_area"
 37789      666C6F77 
 37789      5F617267 
 37789      5F617265 
 37789      6100
 37790              	.LASF1208:
 37791 9aa7 7265675F 		.string	"reg_save_area"
 37791      73617665 
 37791      5F617265 
 37791      6100
 37792              	.LASF286:
 37793 9ab5 5F5A4E4B 		.string	"_ZNKSs12find_last_ofEPKcmm"
 37793      53733132 
 37793      66696E64 
 37793      5F6C6173 
 37793      745F6F66 
 37794              	.LASF1414:
 37795 9ad0 32316865 		.string	"21heatmap_colorscheme_t"
 37795      61746D61 
 37795      705F636F 
 37795      6C6F7273 
 37795      6368656D 
 37796              	.LASF267:
 37797 9ae8 5F5A4E4B 		.string	"_ZNKSs4dataEv"
 37797      53733464 
 37797      61746145 
 37797      7600
 37798              	.LASF706:
 37799 9af6 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE6insertEN9__gnu_cxx17__normal_iteratorIPKhS1_EERS4_"
 37799      74367665 
 37799      63746F72 
 37799      49685361 
 37799      49684545 
 37800              	.LASF256:
 37801 9b3e 5F4D5F72 		.string	"_M_replace_safe"
 37801      65706C61 
 37801      63655F73 
 37801      61666500 
 37802              	.LASF640:
 37803 9b4e 706F696E 		.string	"pointer_traits<unsigned char*>"
 37803      7465725F 
 37803      74726169 
 37803      74733C75 
 37803      6E736967 
 37804              	.LASF1044:
 37805 9b6d 5F5F616C 		.string	"__alloc_traits<std::allocator<float> >"
 37805      6C6F635F 
 37805      74726169 
 37805      74733C73 
 37805      74643A3A 
 37806              	.LASF1166:
 37807 9b94 73747274 		.string	"strtoll"
 37807      6F6C6C00 
 37808              	.LASF672:
 37809 9b9c 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE5beginEv"
 37809      74367665 
GAS LISTING /tmp/ccKUqHDa.s 			page 1035


 37809      63746F72 
 37809      49685361 
 37809      49684545 
 37810              	.LASF971:
 37811 9bb9 6C6F6E67 		.string	"long long int"
 37811      206C6F6E 
 37811      6720696E 
 37811      7400
 37812              	.LASF703:
 37813 9bc7 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE9push_backERKh"
 37813      74367665 
 37813      63746F72 
 37813      49685361 
 37813      49684545 
 37814              	.LASF1223:
 37815 9bea 66777072 		.string	"fwprintf"
 37815      696E7466 
 37815      00
 37816              	.LASF496:
 37817 9bf3 5F5F7074 		.string	"__ptrtr_not_void<float, float>"
 37817      7274725F 
 37817      6E6F745F 
 37817      766F6964 
 37817      3C666C6F 
 37818              	.LASF617:
 37819 9c12 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE17_M_default_appendEm"
 37819      74367665 
 37819      63746F72 
 37819      49665361 
 37819      49664545 
 37820              	.LASF435:
 37821 9c3c 5F535F67 		.string	"_S_goodbit"
 37821      6F6F6462 
 37821      697400
 37822              	.LASF605:
 37823 9c47 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE5eraseEN9__gnu_cxx17__normal_iteratorIPKfS1_EES6_"
 37823      74367665 
 37823      63746F72 
 37823      49665361 
 37823      49664545 
 37824              	.LASF1460:
 37825 9c8d 6D61696E 		.string	"main"
 37825      00
 37826              	.LASF347:
 37827 9c92 73686966 		.string	"shift_size"
 37827      745F7369 
 37827      7A6500
 37828              	.LASF844:
 37829 9c9d 5F5A4E4B 		.string	"_ZNKSt6vectorISt4pairIffESaIS1_EE6cbeginEv"
 37829      53743676 
 37829      6563746F 
 37829      72495374 
 37829      34706169 
 37830              	.LASF21:
 37831 9cc8 7E657863 		.string	"~exception_ptr"
 37831      65707469 
 37831      6F6E5F70 
GAS LISTING /tmp/ccKUqHDa.s 			page 1036


 37831      747200
 37832              	.LASF724:
 37833 9cd7 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE14_M_move_assignEOS1_St17integral_constantIbLb1EE"
 37833      74367665 
 37833      63746F72 
 37833      49685361 
 37833      49684545 
 37834              	.LASF375:
 37835 9d1d 7E72616E 		.string	"~random_device"
 37835      646F6D5F 
 37835      64657669 
 37835      636500
 37836              	.LASF1294:
 37837 9d2c 696E745F 		.string	"int_least64_t"
 37837      6C656173 
 37837      7436345F 
 37837      7400
 37838              	.LASF1324:
 37839 9d3a 696E745F 		.string	"int_frac_digits"
 37839      66726163 
 37839      5F646967 
 37839      69747300 
 37840              	.LASF466:
 37841 9d4a 666C6F61 		.string	"floatfield"
 37841      74666965 
 37841      6C6400
 37842              	.LASF704:
 37843 9d55 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE9push_backEOh"
 37843      74367665 
 37843      63746F72 
 37843      49685361 
 37843      49684545 
 37844              	.LASF961:
 37845 9d77 656E646C 		.string	"endl<char, std::char_traits<char> >"
 37845      3C636861 
 37845      722C2073 
 37845      74643A3A 
 37845      63686172 
 37846              	.LASF792:
 37847 9d9b 5F526561 		.string	"_RealType"
 37847      6C547970 
 37847      6500
 37848              	.LASF1027:
 37849 9da5 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPKcSsEmiEl"
 37849      395F5F67 
 37849      6E755F63 
 37849      78783137 
 37849      5F5F6E6F 
 37850              	.LASF485:
 37851 9dd2 77696465 		.string	"widen"
 37851      6E00
 37852              	.LASF770:
 37853 9dd8 5F4D5F6D 		.string	"_M_mean"
 37853      65616E00 
 37854              	.LASF755:
 37855 9de0 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE8max_sizeEv"
 37855      53743561 
GAS LISTING /tmp/ccKUqHDa.s 			page 1037


 37855      72726179 
 37855      49503968 
 37855      6561746D 
 37856              	.LASF313:
 37857 9e09 696E6974 		.string	"initializer_list<char>"
 37857      69616C69 
 37857      7A65725F 
 37857      6C697374 
 37857      3C636861 
 37858              	.LASF1372:
 37859 9e20 73657476 		.string	"setvbuf"
 37859      62756600 
 37860              	.LASF1096:
 37861 9e28 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaISt4pairIffEEE15_S_nothrow_swapEv"
 37861      5F5F676E 
 37861      755F6378 
 37861      7831345F 
 37861      5F616C6C 
 37862              	.LASF804:
 37863 9e6a 706F696E 		.string	"pointer_traits<std::pair<float, float>*>"
 37863      7465725F 
 37863      74726169 
 37863      74733C73 
 37863      74643A3A 
 37864              	.LASF1072:
 37865 9e93 5F5A4E39 		.string	"_ZN9__gnu_cxx14__alloc_traitsISaIhEE17_S_select_on_copyERKS1_"
 37865      5F5F676E 
 37865      755F6378 
 37865      7831345F 
 37865      5F616C6C 
 37866              	.LASF326:
 37867 9ed1 5F416461 		.string	"_Adaptor<std::mersenne_twister_engine<long unsigned int, 32ul, 624ul, 397ul, 31ul, 256748
 37867      70746F72 
 37867      3C737464 
 37867      3A3A6D65 
 37867      7273656E 
 37868              	.LASF425:
 37869 9f89 5F496F73 		.string	"_Ios_Fmtflags"
 37869      5F466D74 
 37869      666C6167 
 37869      7300
 37870              	.LASF1010:
 37871 9f97 5F5A4E39 		.string	"_ZN9__gnu_cxx17__normal_iteratorIPcSsEmIEl"
 37871      5F5F676E 
 37871      755F6378 
 37871      7831375F 
 37871      5F6E6F72 
 37872              	.LASF486:
 37873 9fc2 5F5A4E4B 		.string	"_ZNKSt5ctypeIcE5widenEc"
 37873      53743563 
 37873      74797065 
 37873      49634535 
 37873      77696465 
 37874              	.LASF1200:
 37875 9fda 5F5F7061 		.string	"__pad5"
 37875      643500
 37876              	.LASF815:
GAS LISTING /tmp/ccKUqHDa.s 			page 1038


 37877 9fe1 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE37_S_propagate_on_container_swap_helperEz"
 37877      74313661 
 37877      6C6C6F63 
 37877      61746F72 
 37877      5F747261 
 37878              	.LASF1055:
 37879 a033 5F535F70 		.string	"_S_propagate_on_swap"
 37879      726F7061 
 37879      67617465 
 37879      5F6F6E5F 
 37879      73776170 
 37880              	.LASF1169:
 37881 a048 73747274 		.string	"strtold"
 37881      6F6C6400 
 37882              	.LASF1332:
 37883 a050 696E745F 		.string	"int_p_cs_precedes"
 37883      705F6373 
 37883      5F707265 
 37883      63656465 
 37883      7300
 37884              	.LASF85:
 37885 a062 5F535F65 		.string	"_S_empty_rep_storage"
 37885      6D707479 
 37885      5F726570 
 37885      5F73746F 
 37885      72616765 
 37886              	.LASF396:
 37887 a077 5F497343 		.string	"_IsConst"
 37887      6F6E7374 
 37887      00
 37888              	.LASF1277:
 37889 a080 77707269 		.string	"wprintf"
 37889      6E746600 
 37890              	.LASF1098:
 37891 a088 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEdeEv"
 37891      395F5F67 
 37891      6E755F63 
 37891      78783137 
 37891      5F5F6E6F 
 37892              	.LASF1173:
 37893 a0d1 5F494F5F 		.string	"_IO_FILE"
 37893      46494C45 
 37893      00
 37894              	.LASF899:
 37895 a0da 5F5F756E 		.string	"__uninit_default_n<std::pair<float, float>*, long unsigned int>"
 37895      696E6974 
 37895      5F646566 
 37895      61756C74 
 37895      5F6E3C73 
 37896              	.LASF532:
 37897 a11a 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaIfEE37select_on_container_copy_constructionERKS0_"
 37897      74313661 
 37897      6C6C6F63 
 37897      61746F72 
 37897      5F747261 
 37898              	.LASF929:
 37899 a166 5F436F6E 		.string	"_Construct<std::pair<float, float> >"
GAS LISTING /tmp/ccKUqHDa.s 			page 1039


 37899      73747275 
 37899      63743C73 
 37899      74643A3A 
 37899      70616972 
 37900              	.LASF58:
 37901 a18b 70747264 		.string	"ptrdiff_t"
 37901      6966665F 
 37901      7400
 37902              	.LASF1031:
 37903 a195 5F5F6469 		.string	"__digits10"
 37903      67697473 
 37903      313000
 37904              	.LASF1104:
 37905 a1a0 5F5A4E4B 		.string	"_ZNK9__gnu_cxx17__normal_iteratorIPSt4pairIffESt6vectorIS2_SaIS2_EEEixEl"
 37905      395F5F67 
 37905      6E755F63 
 37905      78783137 
 37905      5F5F6E6F 
 37906              	.LASF491:
 37907 a1e9 5F497465 		.string	"_Iterator"
 37907      7261746F 
 37907      7200
 37908              	.LASF787:
 37909 a1f3 5F5A4E53 		.string	"_ZNSt19normal_distributionIfE5paramERKNS0_10param_typeE"
 37909      7431396E 
 37909      6F726D61 
 37909      6C5F6469 
 37909      73747269 
 37910              	.LASF1226:
 37911 a22b 67657477 		.string	"getwchar"
 37911      63686172 
 37911      00
 37912              	.LASF1205:
 37913 a234 67705F6F 		.string	"gp_offset"
 37913      66667365 
 37913      7400
 37914              	.LASF324:
 37915 a23e 5F5F756E 		.string	"__uninit_default_n<unsigned char*, long unsigned int>"
 37915      696E6974 
 37915      5F646566 
 37915      61756C74 
 37915      5F6E3C75 
 37916              	.LASF172:
 37917 a274 6372656E 		.string	"crend"
 37917      6400
 37918              	.LASF778:
 37919 a27a 5F4D5F73 		.string	"_M_saved"
 37919      61766564 
 37919      00
 37920              	.LASF607:
 37921 a283 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE5clearEv"
 37921      74367665 
 37921      63746F72 
 37921      49665361 
 37921      49664545 
 37922              	.LASF905:
 37923 a2a0 5F5A4E53 		.string	"_ZNSt10_Iter_baseIPfLb0EE7_S_baseES0_"
GAS LISTING /tmp/ccKUqHDa.s 			page 1040


 37923      7431305F 
 37923      49746572 
 37923      5F626173 
 37923      65495066 
 37924              	.LASF1114:
 37925 a2c6 5F5F6578 		.string	"__exchange_and_add_single"
 37925      6368616E 
 37925      67655F61 
 37925      6E645F61 
 37925      64645F73 
 37926              	.LASF752:
 37927 a2e0 5F5A4E4B 		.string	"_ZNKSt5arrayIP9heatmap_tLm5EE7crbeginEv"
 37927      53743561 
 37927      72726179 
 37927      49503968 
 37927      6561746D 
 37928              	.LASF1191:
 37929 a308 5F637572 		.string	"_cur_column"
 37929      5F636F6C 
 37929      756D6E00 
 37930              	.LASF1461:
 37931 a314 61726763 		.string	"argc"
 37931      00
 37932              	.LASF639:
 37933 a319 5F5F7074 		.string	"__ptrtr_not_void<unsigned char, unsigned char>"
 37933      7274725F 
 37933      6E6F745F 
 37933      766F6964 
 37933      3C756E73 
 37934              	.LASF1353:
 37935 a348 66657272 		.string	"ferror"
 37935      6F7200
 37936              	.LASF805:
 37937 a34f 5F5A4E53 		.string	"_ZNSt14pointer_traitsIPSt4pairIffEE10pointer_toERS1_"
 37937      74313470 
 37937      6F696E74 
 37937      65725F74 
 37937      72616974 
 37938              	.LASF618:
 37939 a384 5F4D5F73 		.string	"_M_shrink_to_fit"
 37939      6872696E 
 37939      6B5F746F 
 37939      5F666974 
 37939      00
 37940              	.LASF1462:
 37941 a395 61726776 		.string	"argv"
 37941      00
 37942              	.LASF894:
 37943 a39a 5F5A4E4B 		.string	"_ZNKSt16initializer_listISt4pairIffEE5beginEv"
 37943      53743136 
 37943      696E6974 
 37943      69616C69 
 37943      7A65725F 
 37944              	.LASF53:
 37945 a3c8 5F5A4E53 		.string	"_ZNSt11char_traitsIcE11to_int_typeERKc"
 37945      74313163 
 37945      6861725F 
GAS LISTING /tmp/ccKUqHDa.s 			page 1041


 37945      74726169 
 37945      74734963 
 37946              	.LASF978:
 37947 a3ef 5F5F6D61 		.string	"__max"
 37947      7800
 37948              	.LASF392:
 37949 a3f5 6D743139 		.string	"mt19937"
 37949      39333700 
 37950              	.LASF807:
 37951 a3fd 5F5A4E53 		.string	"_ZNSt16allocator_traitsISaISt4pairIffEEE17_S_pointer_helperEz"
 37951      74313661 
 37951      6C6C6F63 
 37951      61746F72 
 37951      5F747261 
 37952              	.LASF414:
 37953 a43b 5F535F73 		.string	"_S_scientific"
 37953      6369656E 
 37953      74696669 
 37953      6300
 37954              	.LASF1138:
 37955 a449 696E7433 		.string	"int32_t"
 37955      325F7400 
 37956              	.LASF1249:
 37957 a451 746D5F73 		.string	"tm_sec"
 37957      656300
 37958              	.LASF909:
 37959 a458 62617369 		.string	"basic_ios<char, std::char_traits<char> >"
 37959      635F696F 
 37959      733C6368 
 37959      61722C20 
 37959      7374643A 
 37960              	.LASF143:
 37961 a481 5F5A4E53 		.string	"_ZNSs10_S_compareEmm"
 37961      7331305F 
 37961      535F636F 
 37961      6D706172 
 37961      65456D6D 
 37962              	.LASF39:
 37963 a496 6C656E67 		.string	"length"
 37963      746800
 37964              	.LASF1299:
 37965 a49d 696E745F 		.string	"int_fast8_t"
 37965      66617374 
 37965      385F7400 
 37966              	.LASF1171:
 37967 a4a9 646F7562 		.string	"double_t"
 37967      6C655F74 
 37967      00
 37968              	.LASF1281:
 37969 a4b2 77637372 		.string	"wcsrchr"
 37969      63687200 
 37970              	.LASF1220:
 37971 a4ba 66707574 		.string	"fputwc"
 37971      776300
 37972              	.LASF82:
 37973 a4c1 5F526570 		.string	"_Rep"
 37973      00
GAS LISTING /tmp/ccKUqHDa.s 			page 1042


 37974              	.LASF1136:
 37975 a4c6 696E7438 		.string	"int8_t"
 37975      5F7400
 37976              	.LASF1221:
 37977 a4cd 66707574 		.string	"fputws"
 37977      777300
 37978              	.LASF1534:
 37979 a4d4 5F5F6378 		.string	"__cxa_atexit"
 37979      615F6174 
 37979      65786974 
 37979      00
 37980              	.LASF1391:
 37981 a4e1 4C6F6465 		.string	"LodePNGColorType"
 37981      504E4743 
 37981      6F6C6F72 
 37981      54797065 
 37981      00
 37982              	.LASF1394:
 37983 a4f2 4C43545F 		.string	"LCT_PALETTE"
 37983      50414C45 
 37983      54544500 
 37984              	.LASF488:
 37985 a4fe 69746572 		.string	"iterator_traits<char*>"
 37985      61746F72 
 37985      5F747261 
 37985      6974733C 
 37985      63686172 
 37986              	.LASF152:
 37987 a515 5F5A4E53 		.string	"_ZNSsaSEc"
 37987      73615345 
 37987      6300
 37988              	.LASF1216:
 37989 a51f 6D627374 		.string	"mbstate_t"
 37989      6174655F 
 37989      7400
 37990              	.LASF695:
 37991 a529 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE2atEm"
 37991      74367665 
 37991      63746F72 
 37991      49685361 
 37991      49684545 
 37992              	.LASF892:
 37993 a543 696E6974 		.string	"initializer_list<std::pair<float, float> >"
 37993      69616C69 
 37993      7A65725F 
 37993      6C697374 
 37993      3C737464 
 37994              	.LASF1209:
 37995 a56e 77696E74 		.string	"wint_t"
 37995      5F7400
 37996              	.LASF1377:
 37997 a575 77637472 		.string	"wctrans_t"
 37997      616E735F 
 37997      7400
 37998              	.LASF678:
 37999 a57f 5F5A4E53 		.string	"_ZNSt6vectorIhSaIhEE4rendEv"
 37999      74367665 
GAS LISTING /tmp/ccKUqHDa.s 			page 1043


 37999      63746F72 
 37999      49685361 
 37999      49684545 
 38000              	.LASF218:
 38001 a59b 5F5A4E53 		.string	"_ZNSs6assignEOSs"
 38001      73366173 
 38001      7369676E 
 38001      454F5373 
 38001      00
 38002              	.LASF966:
 38003 a5ac 756E7369 		.string	"unsigned int"
 38003      676E6564 
 38003      20696E74 
 38003      00
 38004              	.LASF77:
 38005 a5b9 72657665 		.string	"reverse_iterator"
 38005      7273655F 
 38005      69746572 
 38005      61746F72 
 38005      00
 38006              	.LASF29:
 38007 a5ca 5F446573 		.string	"_Destroy_aux<true>"
 38007      74726F79 
 38007      5F617578 
 38007      3C747275 
 38007      653E00
 38008              	.LASF1146:
 38009 a5dd 62736561 		.string	"bsearch"
 38009      72636800 
 38010              	.LASF385:
 38011 a5e5 5F5A4E53 		.string	"_ZNSt13random_device14_M_init_pretr1ERKSs"
 38011      74313372 
 38011      616E646F 
 38011      6D5F6465 
 38011      76696365 
 38012              	.LASF150:
 38013 a60f 5F5A4E53 		.string	"_ZNSsaSERKSs"
 38013      73615345 
 38013      524B5373 
 38013      00
 38014              	.LASF565:
 38015 a61c 5F5A4E53 		.string	"_ZNSt6vectorIfSaIfEE5beginEv"
 38015      74367665 
 38015      63746F72 
 38015      49665361 
 38015      49664545 
 38016              		.hidden	DW.ref.__gxx_personality_v0
 38017              		.weak	DW.ref.__gxx_personality_v0
 38018              		.section	.data.DW.ref.__gxx_personality_v0,"awG",@progbits,DW.ref.__gxx_personality_v0,comdat
 38019              		.align 8
 38020              		.type	DW.ref.__gxx_personality_v0, @object
 38021              		.size	DW.ref.__gxx_personality_v0, 8
 38022              	DW.ref.__gxx_personality_v0:
 38023 0000 00000000 		.quad	__gxx_personality_v0
 38023      00000000 
 38024              		.hidden	__dso_handle
 38025              		.ident	"GCC: (GNU) 4.9.2"
GAS LISTING /tmp/ccKUqHDa.s 			page 1044


 38026              		.section	.note.GNU-stack,"",@progbits
